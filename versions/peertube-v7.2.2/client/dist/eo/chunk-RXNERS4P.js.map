{
  "version": 3,
  "sources": ["src/app/shared/shared-main/video/video-chapter.service.ts"],
  "sourcesContent": ["import { HttpClient } from '@angular/common/http'\nimport { Injectable, inject } from '@angular/core'\nimport { RestExtractor } from '@app/core'\nimport { VideoChapter, VideoChapterUpdate } from '@peertube/peertube-models'\nimport { catchError } from 'rxjs/operators'\nimport { VideoChaptersEdit } from '../../../+videos-publish-manage/shared-manage/common/video-chapters-edit.model'\nimport { VideoPasswordService } from './video-password.service'\nimport { VideoService } from './video.service'\n\n@Injectable()\nexport class VideoChapterService {\n  private authHttp = inject(HttpClient)\n  private restExtractor = inject(RestExtractor)\n\n  getChapters (options: { videoId: string, videoPassword?: string }) {\n    const headers = VideoPasswordService.buildVideoPasswordHeader(options.videoPassword)\n\n    return this.authHttp.get<{ chapters: VideoChapter[] }>(`${VideoService.BASE_VIDEO_URL}/${options.videoId}/chapters`, { headers })\n      .pipe(catchError(err => this.restExtractor.handleError(err)))\n  }\n\n  updateChapters (videoId: string, chaptersEdit: VideoChaptersEdit) {\n    const body = { chapters: chaptersEdit.getChaptersForUpdate() } as VideoChapterUpdate\n\n    return this.authHttp.put(`${VideoService.BASE_VIDEO_URL}/${videoId}/chapters`, body)\n      .pipe(catchError(err => this.restExtractor.handleError(err)))\n  }\n}\n"],
  "mappings": "yJAUA,IAAaA,GAAmB,IAAA,CAA1B,IAAOA,EAAP,MAAOA,CAAmB,CACtBC,SAAWC,EAAOC,CAAU,EAC5BC,cAAgBF,EAAOG,CAAa,EAE5CC,YAAaC,EAAoD,CAC/D,IAAMC,EAAUC,EAAqBC,yBAAyBH,EAAQI,aAAa,EAEnF,OAAO,KAAKV,SAASW,IAAkC,GAAGC,EAAaC,cAAc,IAAIP,EAAQQ,OAAO,YAAa,CAAEP,QAAAA,CAAO,CAAE,EAC7HQ,KAAKC,EAAWC,GAAO,KAAKd,cAAce,YAAYD,CAAG,CAAC,CAAC,CAChE,CAEAE,eAAgBL,EAAiBM,EAA+B,CAC9D,IAAMC,EAAO,CAAEC,SAAUF,EAAaG,qBAAoB,CAAE,EAE5D,OAAO,KAAKvB,SAASwB,IAAI,GAAGZ,EAAaC,cAAc,IAAIC,CAAO,YAAaO,CAAI,EAChFN,KAAKC,EAAWC,GAAO,KAAKd,cAAce,YAAYD,CAAG,CAAC,CAAC,CAChE,KAhBWlB,wCAAAA,EAAmB,KAAnBA,wBAAAA,EAAmB0B,QAAnB1B,EAAmB2B,SAAA,CAAA,GAA1B,IAAO3B,EAAP4B,SAAO5B,CAAmB,GAAA",
  "names": ["VideoChapterService", "authHttp", "inject", "HttpClient", "restExtractor", "RestExtractor", "getChapters", "options", "headers", "VideoPasswordService", "buildVideoPasswordHeader", "videoPassword", "get", "VideoService", "BASE_VIDEO_URL", "videoId", "pipe", "catchError", "err", "handleError", "updateChapters", "chaptersEdit", "body", "chapters", "getChaptersForUpdate", "put", "factory", "\u0275fac", "_VideoChapterService"]
}
