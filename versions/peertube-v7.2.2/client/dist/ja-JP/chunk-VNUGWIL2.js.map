{"version":3,"mappings":"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","names":["CommentsOnMyVideosComponent","f","selectors","decls","vars","consts","template","rf","ctx","ɵɵelement","dependencies","VideoCommentListAdminOwnerComponent","encapsulation","_CommentsOnMyVideosComponent","AutomaticTagService","authHttp","inject","HttpClient","restExtractor","RestExtractor","listAvailable","options","url","BASE_AUTOMATIC_TAGS_URL","accountName","get","pipe","catchError","res","handleError","getCommentPolicies","updateCommentPolicies","put","review","__publicField","environment","apiUrl","factory","ɵfac","providedIn","_AutomaticTagService","ɵɵelementStart","ɵɵtwoWayListener","$event","tag_r2","ɵɵrestoreView","_r1","$implicit","i0","ɵɵtwoWayBindingSet","ɵɵresetView","ɵɵlistener","ctx_r2","ɵɵnextContext","updatePolicies","ɵɵelementEnd","r","n","i","e","$index","t","p","ɵɵadvance","ɵɵproperty","ɵ$index_5_r4","ɵɵtwoWayProperty","getLabelText","MyAutoTagPoliciesComponent","authService","AuthService","autoTagsService","notifier","Notifier","tags","ngOnInit","loadAvailableTags","tag","name","getUser","account","filter","map","subscribe","next","success","error","err","message","forkJoin","resAvailable","policies","available","a","type","includes","i18n_0","$localize","ɵɵi18n","ɵɵrepeaterCreate","MyAutoTagPoliciesComponent_For_3_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","FormsModule","NgControlStatus","NgModel","PeertubeCheckboxComponent","_MyAutoTagPoliciesComponent","MyChannelSpaceComponent","serverService","ServerService","menuEntries","serverConfig","getHTMLConfig","buildMenu","label","routerLink","isDisplayed","isChannelSyncEnabled","config","import","videoChannelSynchronization","enabled","videos","http","torrent","myChannelSpaceContent_r2","ɵɵreference","preventDefault","focus","RouterOutlet","HorizontalMenuComponent","_MyChannelSpaceComponent","vs","ɵɵtext","ɵɵtextInterpolate1","ctx_r0","getTotalTitle","Ms","Es","ɵɵelementContainerStart","L","Is","ɵɵi18nExp","follow_r2","following","pe","Os","ɵɵtemplate","MyFollowersComponent_div_5_ng_container_8_Template","MyFollowersComponent_div_5_ng_container_9_Template","follower","ɵɵsanitizeUrl","ɵɵtextInterpolate","host","isFollowingAccount","MyFollowersComponent","route","ActivatedRoute","auth","userSubscriptionService","UserSubscriptionService","follows","pagination","currentPage","itemsPerPage","totalItems","onDataSubject","Subject","search","inputFilters","snapshot","queryParams","channelFilters","videoChannels","c","value","title","children","onNearOfBottom","loadFollowers","onSearch","resetCurrentPage","follow","getUsername","formatICU","total","more","listFollowers","nameWithHost","concat","data","username","o","s","MyFollowersComponent_span_1_Template","MyFollowersComponent_div_3_Template","MyFollowersComponent_div_5_Template","asObservable","GlobalIconComponent","NgIf","AdvancedInputFilterComponent","InfiniteScrollerDirective","NgFor","ActorAvatarComponent","styles","_MyFollowersComponent","mr","Ps","Ts","bs","Rs","xs","videoChannel_r2","ɵɵpureFunction1","_c0","displayName","followersCount","_c1","ownerBy","ownerAccount","_c2","MySubscriptionsComponent","loadSubscriptions","listSubscriptions","_","MySubscriptionsComponent_span_1_Template","MySubscriptionsComponent_div_3_Template","MySubscriptionsComponent_div_5_Template","RouterLink","SubscribeButtonComponent","_MySubscriptionsComponent","As","ws","noResultMessage","Ns","T","_r2","video_r3","selection","id","Ds","ɵɵelementContainer","Ls","VideosSelectionComponent_div_2_Conditional_3_ng_container_0_Template","rowButtonsTemplate","Ys","VideosSelectionComponent_div_2_div_1_Template","VideosSelectionComponent_div_2_Conditional_3_Template","enableSelection","miniatureDisplayOptions","user","ɵɵconditional","isInSelectionMode","Vs","Fs","_r4","abortSelectionMode","VideosSelectionComponent_div_3_ng_container_3_Template","globalButtonsTemplate","VideosSelectionComponent","input","undefined","titlePage","disabled","getVideosObservableFunction","templates","contentChildren","PeerTubeTemplateDirective","model","sort","hasDoneFirstQuery","lastQueryLength","ngAfterContentInit","find","loadMoreVideos","getVideosObservable","page","update","objectKeysTyped","some","k","videoById","_index","video","reset","length","set","logger","reloadVideos","contentQueries","dirIndex","jn","oe","inputs","outputs","VideosSelectionComponent_div_0_Template","VideosSelectionComponent_div_2_Template","VideosSelectionComponent_div_3_Template","VideoMiniatureComponent","NgTemplateOutlet","_VideosSelectionComponent","$s","ks","ctx_r3","deleteHistoryElement","MyHistoryComponent","userService","UserService","confirmService","ConfirmService","userHistoryService","UserHistoryService","videosSelection","viewChild","videosHistoryEnabled","date","views","by","privacyLabel","bind","constructor","userInformationLoaded","disableForReuse","enabledForReuse","reloadData","newPagination","immutableAssign","list","tap","generateSyndicationList","Error","onVideosHistoryChange","updateMyProfile","refreshUserInformation","deleteElement","v","updatePaginationOnDelete","clearAllHistory","__async","confirm","clearAll","getNoResultMessage","viewQuery","Ce","MyHistoryComponent_ng_template_11_Template","ButtonComponent","InputSwitchComponent","DeleteButtonComponent","_MyHistoryComponent","MyLibraryComponent","myLibraryContent_r2","_MyLibraryComponent","OWNERSHIP_CHANGE_CHANNEL_VALIDATOR","VALIDATORS","Validators","required","MESSAGES","OWNERSHIP_CHANGE_USERNAME_VALIDATOR","localAccountValidator","localAccountOnly","control","Bs","Gs","formErrors","channel","Hs","dismiss_r2","dismiss","MyAcceptOwnershipComponent_ng_template_0_div_10_Template","close_r4","close","form","MyAcceptOwnershipComponent","FormReactive","formReactiveService","FormReactiveService","videoOwnershipService","VideoOwnershipService","modalService","NgbModal","accepted","output","modal","videoChangeOwnership","listUserChannelsForSelect","channels","buildForm","show","patchValue","open","centered","result","then","acceptOwnership","catch","channelId","emit","__ngFactoryType__","features","U","MyAcceptOwnershipComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","NgControlStatusGroup","ReactiveFormsModule","FormGroupDirective","FormControlName","SelectChannelComponent","_MyAcceptOwnershipComponent","Us","Ws","ɵɵi18nStart","ɵɵi18nEnd","ctx_r1","sortTooltip","Xs","_r3","videoChangeOwnership_r4","openAcceptModal","refuse","js","MyOwnershipComponent_ng_template_2_ng_container_2_Template","ue","status","initiatorAccount","ɵɵpipeBind2","createdAt","getStatusClass","Ks","MyOwnershipComponent","RestTable","videoChangeOwnerships","totalRecords","field","order","count","rowsPerPage","start","myAccountAcceptOwnershipComponent","initialize","getIdentifier","VideoChangeOwnershipStatus","ACCEPTED","REFUSED","refuseOwnership","reloadDataInternal","getOwnershipChanges","resultList","change","__spreadProps","__spreadValues","Account","nextOwnerAccount","loadLazy","MyOwnershipComponent_ng_template_1_Template","MyOwnershipComponent_ng_template_2_Template","MyOwnershipComponent_ng_template_3_Template","TableModule","Table","PrimeTemplate","SortableColumn","SortIcon","SharedModule","NgbTooltip","NgClass","AutoColspanDirective","PTDatePipe","VideoCellComponent","_MyOwnershipComponent","Mr","qs","Qs","Zs","ɵɵpropertyInterpolate","getSyncCreateLink","Js","ea","videoChannelSyncActions","videoChannelSync_r3","externalChannelUrl","getSyncStateClass","state","lastSyncAt","ta","ia","MyVideoChannelSyncsComponent_p_table_2_ng_template_1_Template","MyVideoChannelSyncsComponent_p_table_2_ng_template_2_Template","MyVideoChannelSyncsComponent_p_table_2_ng_template_3_Template","MyVideoChannelSyncsComponent_p_table_2_ng_template_4_Template","channelSyncs","rowsPerPageOptions","getPaginationTemplate","expandedRows","MyVideoChannelSyncsComponent","videoChannelsSyncService","VideoChannelSyncService","videoChannelService","VideoChannelService","linkBuilder","queryParamsBuilder","sync","iconName","handler","videoChannelSync","deleteSync","description","fullySynchronize","mergeMap","listAccountVideoChannelsSyncs","syncEnabled","importVideos","stateId","STATE_CLASS_BY_ID","getChannelUrl","VideoChannelSyncState","FAILED","PROCESSING","SYNCED","WAITING_FIRST_RUN","ɵɵInheritDefinitionFeature","m","MyVideoChannelSyncsComponent_my_alert_0_Template","MyVideoChannelSyncsComponent_div_1_Template","MyVideoChannelSyncsComponent_p_table_2_Template","ActionDropdownComponent","AlertComponent","_MyVideoChannelSyncsComponent","ra","sa","videoChannel","VideoChannelSyncEditComponent","router","Router","videoChannelSyncService","userVideoChannels","existingVideosStrategy","VIDEO_CHANNEL_EXTERNAL_URL_VALIDATOR","REQUIRED_VALIDATOR","existingVideoStrategy","getFormButtonTitle","formValidated","body","videoChannelSyncCreate","videoChannelId","importExistingVideos","createSync","Promise","resolve","navigate","VideoChannelSyncEditComponent_my_alert_0_Template","VideoChannelSyncEditComponent_div_12_Template","VideoChannelSyncEditComponent_div_17_Template","valid","ɵNgNoValidate","DefaultValueAccessor","RadioControlValueAccessor","_VideoChannelSyncEditComponent","aa","la","expanded","videoImport_r4","expanded_r3","ca","_r5","cancelImport","da","_r6","deleteImport","_a","getEditVideoUrl","pa","targetUrl","ma","torrentName","magnetUri","ua","ha","getVideoUrl","ga","fa","Ca","MyVideoImportsComponent_ng_template_4_my_table_expander_icon_2_Template","MyVideoImportsComponent_ng_template_4_my_button_4_Template","MyVideoImportsComponent_ng_template_4_my_delete_button_5_Template","MyVideoImportsComponent_ng_template_4_my_edit_button_6_Template","MyVideoImportsComponent_ng_template_4_a_8_Template","MyVideoImportsComponent_ng_template_4_ng_template_9_Template","MyVideoImportsComponent_ng_template_4_ng_container_12_Template","MyVideoImportsComponent_ng_template_4_ng_container_13_Template","MyVideoImportsComponent_ng_template_4_ng_container_14_Template","MyVideoImportsComponent_ng_template_4_ng_container_15_Template","me","isVideoImportPending","isVideoImportFailed","isVideoImportCancelled","isVideoImportSuccess","torrent_r7","getVideoImportStateClass","Sa","videoImport_r8","ya","MyVideoImportsComponent_ng_template_5_tr_0_Template","MyVideoImportsComponent","videoImportService","VideoImportService","videoImports","VideoImportState","REJECTED","PENDING","videoImport","SUCCESS","CANCELLED","Video","buildWatchUrl","buildUpdateUrl","deleteVideoImport","cancelVideoImport","getMyVideoImports","MyVideoImportsComponent_ng_template_3_Template","MyVideoImportsComponent_ng_template_4_Template","MyVideoImportsComponent_ng_template_5_Template","RowToggler","TableExpanderIconComponent","EditButtonComponent","_MyVideoImportsComponent","MyVideoPlaylistEdit","videoPlaylistToUpdate","videoPlaylistPrivacies","va","Ma","Ea","Ia","Oa","shortUUID","Pa","MyVideoPlaylistCreateComponent_Conditional_9_a_3_Template","Ta","ba","Ra","xa","privacy","Aa","MyVideoPlaylistCreateComponent","videoPlaylistService","VideoPlaylistService","VIDEO_PLAYLIST_DISPLAY_NAME_VALIDATOR","VIDEO_PLAYLIST_PRIVACY_VALIDATOR","VIDEO_PLAYLIST_DESCRIPTION_VALIDATOR","VIDEO_PLAYLIST_CHANNEL_ID_VALIDATOR","thumbnailfile","valueChanges","setPlaylistChannelValidator","getVideoPlaylistPrivacies","VideoPlaylistPrivacy","PRIVATE","videoPlaylistCreate","createVideoPlaylist","isCreation","MyVideoPlaylistCreateComponent_my_alert_0_Template","MyVideoPlaylistCreateComponent_Conditional_8_Template","MyVideoPlaylistCreateComponent_Conditional_9_Template","MyVideoPlaylistCreateComponent_Conditional_10_Template","MyVideoPlaylistCreateComponent_Conditional_11_Template","MyVideoPlaylistCreateComponent_div_22_Template","MyVideoPlaylistCreateComponent_div_32_Template","MyVideoPlaylistCreateComponent_div_37_Template","PreviewUploadComponent","HelpComponent","MarkdownTextareaComponent","SelectOptionsComponent","_MyVideoPlaylistCreateComponent","DEFAULT_SCROLL_TIME","ScrollDispatcher","_ScrollDispatcher","_ngZone","NgZone","_platform","Platform","_renderer","RendererFactory2","createRenderer","_cleanupGlobalListener","_scrolled","_scrolledCount","scrollContainers","Map","register","scrollable","has","elementScrolled","deregister","scrollableReference","unsubscribe","delete","scrolled","auditTimeInMs","isBrowser","Observable","observer","runOutsideAngular","listen","subscription","auditTime","of","ngOnDestroy","forEach","container","complete","ancestorScrolled","elementOrElementRef","ancestors","getAncestorScrollContainers","target","indexOf","scrollingContainers","_subscription","_scrollableContainsElement","push","element","coerceElement","scrollableElement","getElementRef","nativeElement","parentElement","ɵɵdefineInjectable","token","DEFAULT_RESIZE_TIME","ViewportRuler","_ViewportRuler","_listeners","_viewportSize","_change","_document","DOCUMENT","optional","ngZone","renderer","changeListener","event","cleanup","getViewportSize","_updateViewportSize","width","height","getViewportRect","scrollPosition","getViewportScrollPosition","top","left","bottom","right","document","window","_getWindow","documentElement","documentRect","getBoundingClientRect","scrollTop","scrollY","scrollLeft","scrollX","throttleTime","defaultView","innerWidth","innerHeight","deepCloneNode","node","clone","cloneNode","descendantsWithId","querySelectorAll","nodeName","toLowerCase","removeAttribute","transferCanvasData","transferInputData","transferData","selector","callback","descendantElements","cloneElements","cloneUniqueId","source","context","getContext","drawImage","getMutableClientRect","rect","x","y","isInsideClientRect","clientRect","adjustDomRect","domRect","isPointerNearDomRect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","positions","clear","cache","elements","handleScroll","_getEventTarget","cachedPosition","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","position","contains","getRootNode","viewRef","rootNodes","nodeType","ELEMENT_NODE","wrapper","createElement","appendChild","extendStyles","dest","importantProperties","key","hasOwnProperty","setProperty","removeProperty","toggleNativeDragInteractions","enable","userSelect","style","toggleVisibility","opacity","combineTransforms","transform","initialTransform","matchElementSize","sourceRect","getTransform","Math","round","parseCssTimeUnitsToMs","multiplier","parseFloat","getTransformTransitionDurationInMs","computedStyle","getComputedStyle","transitionedProperties","parseCssPropertyValue","property","prop","propertyIndex","rawDurations","rawDelays","getPropertyValue","split","part","trim","Set","PreviewRef","_rootElement","_direction","_initialDomRect","_previewTemplate","_previewClass","_pickupPositionOnPage","_initialTransform","_zIndex","_previewEmbeddedView","_preview","attach","parent","_createPreview","supportsPopover","showPopover","destroy","remove","setTransform","addClass","className","classList","add","getTransitionDuration","addEventListener","previewConfig","previewClass","previewTemplate","preview","rootRect","matchSize","viewContainer","createEmbeddedView","detectChanges","margin","setAttribute","Array","isArray","passiveEventListenerOptions","passive","activeEventListenerOptions","activeCapturingEventOptions$1","capture","MOUSE_EVENT_IGNORE_TIME","dragImportantProperties","DragRef","_config","_viewportRuler","_dragDropRegistry","_rootElementCleanups","_cleanupShadowRootSelectStart","_previewContainer","_placeholderRef","_placeholder","_pickupPositionInElement","_anchor","_passiveTransform","_activeTransform","_hasStartedDragging","signal","_hasMoved","_initialContainer","_initialIndex","_parentPositions","_moveEvents","_pointerDirectionDelta","_pointerPositionAtLastDirectionChange","_lastKnownPointerPosition","_ownerSVGElement","_rootElementTapHighlight","_pointerMoveSubscription","Subscription","EMPTY","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_lastTouchEventTime","_dragStartTime","_boundaryElement","_nativeInteractionsEnabled","_previewRect","_boundaryRect","_placeholderTemplate","_handles","_disabledHandles","_dropContainer","_parentDragRef","_cachedShadowRoot","lockAxis","dragStartDelay","scale","_disabled","_toggleNativeDragInteractions","handle","beforeStarted","started","released","ended","entered","exited","dropped","moved","constrainPosition","withRootElement","withParent","parentDragRef","registerDragItem","getPlaceholderElement","getRootElement","getVisibleElement","isDragging","withHandles","handles","disabledHandles","withPreviewTemplate","withPlaceholderTemplate","rootElement","_removeRootElementListeners","_bindEventWithOptions","_pointerDown","_nativeDragStart","SVGElement","ownerSVGElement","withBoundaryElement","boundaryElement","_containInsideBoundaryOnResize","dispose","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeListeners","disableHandle","enableHandle","withDirection","direction","_withDropContainer","getFreeDragPosition","setFreeDragPosition","_applyRootElementTransform","withPreviewContainer","_sortFromLastPointerPosition","_updateActiveDropContainer","_getConstrainedPointerPosition","targetHandle","_getTargetHandle","_initializeDragSequence","_pointerMove","pointerPosition","_getPointerPositionOnPage","distanceX","abs","distanceY","dragStartThreshold","isDelayElapsed","Date","now","_getDragStartDelay","_endDragSequence","isReceiving","cancelable","run","_startDragSequence","constrainedPointerPosition","_updatePointerDirectionDelta","offset","activeTransform","observers","distance","_getDragDistance","delta","_pointerUp","stopDragging","webkitTapHighlightColor","_stopScrolling","_animatePreviewToPlaceholder","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","shadowRoot","_getShadowRoot","dropContainer","shadowDomSelectStart","parentNode","placeholder","_createPlaceholderElement","anchor","createComment","insertBefore","zIndex","_getPreviewInsertionPoint","replaceChild","getItemIndex","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","isFakeEvent","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","draggable","rootStyles","pointerMove","pointerUp","scrollEvent","_updateOnScroll","_getPointerPositionInElement","startDragging","currentIndex","isPointerOverContainer","_isOverContainer","item","previousIndex","previousContainer","drop","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","placeholderRect","duration","propertyName","cleanupListener","clearTimeout","timeout","setTimeout","placeholderConfig","placeholderTemplate","pointerEvents","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","touches","changedTouches","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","_getPreviewRect","minY","maxY","minX","maxX","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","touch","mouse","scrollDifference","initialParent","previewContainer","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","min","max","moveItemInArray","array","fromIndex","toIndex","from","clamp","to","SingleAxisSortStrategy","_element","_sortPredicate","_itemPositions","_activeDraggables","orientation","_previousSwap","drag","overlaps","items","withItems","pointerDelta","siblings","newIndex","_getItemIndexFromPointerPosition","isHorizontal","findIndex","currentItem","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","slice","sibling","index","isDraggedItem","elementToOffset","transformAmount","activeDraggables","newPositionReference","_shouldEnterAsFirstChild","splice","_cacheItemPositions","withSortPredicate","predicate","getActiveItemsSnapshot","reverse","updateOnScroll","withElementContainer","elementToMeasure","b","immediateSibling","end","itemPositions","lastItemRect","firstItemRect","floor","MixedSortStrategy","_rootNode","_activeItems","deltaX","deltaY","_relatedNodes","childNodes","nextSibling","previousSwap","toSwapWith","current","overlapElement","after","before","newOverlapElement","_getRootNode","elementFromPoint","enterIndex","_getClosestItemIndexToPointer","targetItem","root","elementAtPoint","minDistance","minIndex","hypot","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","AutoScrollVerticalDirection","NONE","UP","DOWN","AutoScrollHorizontalDirection","LEFT","RIGHT","DropListRef","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","receivingStarted","receivingStopped","_container","_isDragging","_sortStrategy","_domRect","_draggables","_siblings","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_scrollNode","_stopScrollTimers","_scrollableElements","_initialScrollSnap","coercedElement","withOrientation","registerDropContainer","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","_cacheParentPositions","_reset","previousItems","every","connectedTo","strategy","withScrollableParents","oldContainerIndex","newContainerIndex","unshift","size","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","getVerticalScrollDirection","getHorizontalScrollDirection","_startScrollInterval","msScrollSnapType","scrollSnapType","_listenToScrollEvents","_stopReceiving","interval","animationFrameScheduler","takeUntil","scrollStep","scrollBy","_canReceive","_startReceiving","activeSiblings","initiator","receiver","draggedItems","computedVertical","computedHorizontal","scrollHeight","clientHeight","scrollWidth","clientWidth","capturingEventOptions","activeCapturingEventOptions","_ResetsLoader","__ResetsLoader","ɵɵdefineComponent","hostAttrs","changeDetection","DragDropRegistry","_DragDropRegistry","_styleLoader","_CdkPrivateStyleLoader","_cleanupDocumentTouchmove","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","_domNodesToDirectives","scroll","_persistentTouchmoveListener","load","instances","startsWith","endEventHandler","toBind","_preventDefaultWhileDragging","_clearGlobalListeners","streams","merge","registerDirectiveNode","dragRef","WeakMap","removeDirectiveNode","getDragDirectiveForNode","instance","DEFAULT_CONFIG","DragDrop","_DragDrop","createDrag","createDropList","CDK_DRAG_PARENT","InjectionToken","CDK_DRAG_HANDLE","CDK_DRAG_CONFIG","CDK_DROP_LIST","CdkDrag","_CdkDrag","ElementRef","skipSelf","_viewContainerRef","ViewContainerRef","_dir","Directionality","_changeDetectorRef","ChangeDetectorRef","_selfHandle","self","_parentDrag","_destroyed","BehaviorSubject","_dragRef","rootElementSelector","freeDragPosition","EventEmitter","movedEvent","_injector","Injector","dragDrop","_assignDefaults","_dropListRef","addItem","_syncInputs","_handleEvents","ngAfterViewInit","afterNextRender","_updateRootElement","_setupHandlesListener","injector","ngOnChanges","changes","rootSelectorChange","positionChange","firstChange","removeItem","_addHandle","getValue","_removeHandle","_setPreviewTemplate","_resetPreviewTemplate","_setPlaceholderTemplate","_resetPlaceholderTemplate","closest","_getBoundaryElement","boundary","ref","dir","templateRef","coerceNumberProperty","take","parentDrag","startEvent","markForCheck","releaseEvent","endEvent","enterEvent","exitEvent","dropEvent","draggingDisabled","handleElements","switchMap","_stateChanges","startWith","handleInstance","ɵɵdefineDirective","hostVars","hostBindings","ɵɵclassProp","booleanAttribute","numberAttribute","exportAs","ɵɵProvidersFeature","provide","useExisting","ɵɵNgOnChangesFeature","CDK_DROP_LIST_GROUP","CdkDropList","_CdkDropList","_scrollDispatcher","_group","_latestSortedRefs","_scrollableParentsResolved","_IdGenerator","getId","elementContainerSelector","_unsortedItems","_setupInputSyncSubscription","_dropLists","_items","_syncItemsWithRef","getSortedItems","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","coerceArray","correspondingDropList","scrollableParents","querySelector","listAutoScrollDisabled","listOrientation","ɵɵattribute","useValue","Wa","Xa","playlist","ja","playlistActions","Ka","qa","onElementRemoved","getDragStartDelay","playlistElement_r4","MyVideoPlaylistElementsComponent","hooks","HooksService","screenService","ScreenService","videoShareModal","playlistElements","videoPlaylistId","paramsSub","deleteVideoPlaylist","params","routeParams","loadElements","loadPlaylistInfo","oldPosition","insertAfter","reorderPlaylist","reorderClientPositions","oldFirst","findFirst","trackByFn","elem","isRegularPlaylist","VideoPlaylistType","REGULAR","showShareModal","videoPlaylist","removeVideoPlaylist","isInTouchScreen","wrapObsFun","getPlaylistVideos","componentPagination","getVideoPlaylist","first","newFirst","MyVideoPlaylistElementsComponent_my_video_playlist_miniature_2_Template","MyVideoPlaylistElementsComponent_my_action_dropdown_6_Template","MyVideoPlaylistElementsComponent_div_8_Template","MyVideoPlaylistElementsComponent_div_10_Template","VideoPlaylistMiniatureComponent","VideoPlaylistElementMiniatureComponent","VideoShareComponent","_MyVideoPlaylistElementsComponent","Qa","Za","Ja","el","tl","il","MyVideoPlaylistUpdateComponent_Conditional_9_a_3_Template","nl","ol","rl","sl","al","MyVideoPlaylistUpdateComponent","hydrateFormFromPlaylist","videoPlaylistUpdate","updateVideoPlaylist","fetch","thumbnailUrl","response","blob","MyVideoPlaylistUpdateComponent_my_alert_0_Template","MyVideoPlaylistUpdateComponent_Conditional_8_Template","MyVideoPlaylistUpdateComponent_Conditional_9_Template","MyVideoPlaylistUpdateComponent_Conditional_10_Template","MyVideoPlaylistUpdateComponent_Conditional_11_Template","MyVideoPlaylistUpdateComponent_div_22_Template","MyVideoPlaylistUpdateComponent_div_32_Template","MyVideoPlaylistUpdateComponent_div_37_Template","_MyVideoPlaylistUpdateComponent","ll","cl","dl","playlist_r3","_l","MyVideoPlaylistsComponent_div_8_div_2_Template","MyVideoPlaylistsComponent","videoPlaylists","loadVideoPlaylists","listAccountPlaylists","MyVideoPlaylistsComponent_span_2_Template","MyVideoPlaylistsComponent_div_8_Template","_MyVideoPlaylistsComponent","MyVideoSpaceComponent","isVideoImportEnabled","myVideoSpaceContent_r2","_MyVideoSpaceComponent","pl","active","ChannelToggleComponent","checked","inputName","propagateChange","writeValue","registerOnChange","fn","registerOnTouched","toggle","NG_VALUE_ACCESSOR","forwardRef","multi","CommonModule","_ChannelToggleComponent","import_debug","Cs","Ss","ml","badgeClass","VideoStateBadgeComponent","states","VideoState","PUBLISHED","TO_TRANSCODE","TO_IMPORT","WAITING_FOR_LIVE","LIVE_ENDED","TO_MOVE_TO_EXTERNAL_STORAGE","TRANSCODING_FAILED","TO_MOVE_TO_EXTERNAL_STORAGE_FAILED","TO_EDIT","TO_MOVE_TO_FILE_SYSTEM","TO_MOVE_TO_FILE_SYSTEM_FAILED","buildBadgeAndLabel","VideoPrivacy","INTERNAL","waitTranscoding","VideoStateBadgeComponent_span_0_Template","_VideoStateBadgeComponent","_c3","_c4","_c5","_c6","_c7","_c8","a0","_c9","_c10","_c11","ls","a1","_c12","_c13","Il","_c14","Ol","a2","_c15","Pl","AutoComplete_input_2_Template","ɵɵgetCurrentView","onInput","onKeyDown","onInputChange","onInputFocus","onInputBlur","onInputPaste","onInputKeyUp","tmp_24_0","ɵɵclassMap","inputStyleClass","autofocus","inputClass","inputStyle","autocomplete","tabindex","readonly","inputValue","inputId","maxlength","ariaLabel","ariaLabelledBy","overlayVisible","focused","focusedOptionId","AutoComplete_ng_container_3_TimesIcon_1_Template","AutoComplete_ng_container_3_span_2_1_ng_template_0_Template","AutoComplete_ng_container_3_span_2_1_Template","AutoComplete_ng_container_3_span_2_Template","clearIconTemplate","AutoComplete_ng_container_3_Template","ɵɵelementContainerEnd","AutoComplete_ul_4_li_2_ng_container_2_Template","AutoComplete_ul_4_li_2_span_3_Template","option_r8","getMultipleLabel","AutoComplete_ul_4_li_2_TimesCircleIcon_5_Template","AutoComplete_ul_4_li_2_span_6_1_ng_template_0_Template","AutoComplete_ul_4_li_2_span_6_1_Template","AutoComplete_ul_4_li_2_span_6_Template","removeIconTemplate","AutoComplete_ul_4_li_2_Template","_r7","i_r9","removeOption","focusedMultipleOptionIndex","getOptionLabel","modelValue","selectedItemTemplate","AutoComplete_ul_4_Template","onMultipleContainerFocus","onMultipleContainerBlur","onMultipleContainerKeyDown","tmp_29_0","multiContainerClass","focusedMultipleOptionId","filled","AutoComplete_ng_container_5_SpinnerIcon_1_Template","AutoComplete_ng_container_5_span_2_1_ng_template_0_Template","AutoComplete_ng_container_5_span_2_1_Template","AutoComplete_ng_container_5_span_2_Template","loadingIconTemplate","AutoComplete_ng_container_5_Template","AutoComplete_button_6_span_2_Template","dropdownIcon","AutoComplete_button_6_ng_container_3_ChevronDownIcon_1_Template","AutoComplete_button_6_ng_container_3_2_ng_template_0_Template","AutoComplete_button_6_ng_container_3_2_Template","AutoComplete_button_6_ng_container_3_Template","dropdownIconTemplate","AutoComplete_button_6_Template","_r10","handleDropdownClick","dropdownAriaLabel","AutoComplete_ng_container_10_Template","AutoComplete_p_scroller_11_ng_template_2_ng_container_0_Template","AutoComplete_p_scroller_11_ng_template_2_Template","items_r12","scrollerOptions_r13","buildInItems_r14","ɵɵpureFunction2","AutoComplete_p_scroller_11_ng_container_3_ng_template_1_ng_container_0_Template","AutoComplete_p_scroller_11_ng_container_3_ng_template_1_Template","scrollerOptions_r15","loaderTemplate","AutoComplete_p_scroller_11_ng_container_3_Template","AutoComplete_p_scroller_11_Template","_r11","onLazyLoad","ɵɵstyleMap","visibleOptions","virtualScrollItemSize","_itemSize","lazy","virtualScrollOptions","AutoComplete_ng_container_12_ng_container_1_Template","AutoComplete_ng_container_12_Template","ɵɵpureFunction0","AutoComplete_ng_template_13_ng_template_2_ng_container_0_span_2_Template","option_r16","getOptionGroupLabel","optionGroup","AutoComplete_ng_template_13_ng_template_2_ng_container_0_ng_container_3_Template","AutoComplete_ng_template_13_ng_template_2_ng_container_0_Template","ctx_r16","i_r18","scrollerOptions_r19","itemSize","getOptionIndex","groupTemplate","AutoComplete_ng_template_13_ng_template_2_ng_container_1_span_2_Template","AutoComplete_ng_template_13_ng_template_2_ng_container_1_ng_container_3_Template","AutoComplete_ng_template_13_ng_template_2_ng_container_1_Template","_r20","onOptionSelect","onOptionMouseEnter","ɵɵpureFunction3","isSelected","focusedOptionIndex","isOptionDisabled","ariaSetSize","getAriaPosInset","itemTemplate","getOptions","AutoComplete_ng_template_13_ng_template_2_Template","isOptionGroup","AutoComplete_ng_template_13_li_3_ng_container_1_Template","searchResultMessageText","AutoComplete_ng_template_13_li_3_ng_container_2_Template","AutoComplete_ng_template_13_li_3_Template","emptyTemplate","empty","AutoComplete_ng_template_13_Template","items_r21","contentStyle","contentStyleClass","listLabel","showEmptyMessage","AutoComplete_ng_container_15_Template","AUTOCOMPLETE_VALUE_ACCESSOR","AutoComplete","_AutoComplete","cd","overlayService","zone","minLength","delay","panelStyle","styleClass","panelStyleClass","virtualScroll","appendTo","autoHighlight","forceSelection","autoZIndex","baseZIndex","unique","group","completeOnFocus","showClear","dropdown","dropdownMode","multiple","dataKey","emptyMessage","showTransitionOptions","hideTransitionOptions","optionGroupChildren","optionGroupLabel","overlayOptions","suggestions","_suggestions","handleSuggestionsChange","val","console","warn","optionLabel","optionValue","searchMessage","emptySelectionMessage","selectionMessage","autoOptionFocus","selectOnFocus","searchLocale","optionDisabled","focusOnHover","variant","completeMethod","onSelect","onUnselect","onFocus","onBlur","onDropdownClick","onClear","onKeyUp","onShow","onHide","containerEL","inputEL","multiInputEl","multiContainerEL","dropdownButton","itemsViewChild","scroller","overlayViewChild","itemsWrapper","headerTemplate","footerTemplate","onModelChange","onModelTouched","suggestionsUpdated","highlightOption","highlightOptionChanged","_filled","loading","scrollHandler","listId","searchTimeout","dirty","computed","flatOptions","selectedOption","getSelectedOption","containerClass","panelClass","ripple","panelStyles","ObjectUtils","isNotEmpty","searchMessageText","replaceAll","emptySearchMessageText","translation","emptySearchMessage","selectionMessageText","emptySelectionMessageText","selectedMessageText","hasSelectedOption","option","getTranslation","TranslationKeys","ARIA","virtualScrollerDisabled","optionValueSelected","isVisibleClearIcon","effect","UniqueComponentId","ngAfterViewChecked","alignOverlay","getType","hide","findFirstFocusedOptionIndex","reduce","getOptionGroupChildren","findFirstOptionIndex","isValidOption","findLastOptionIndex","findLastIndex","selectedIndex","findSelectedOptionIndex","findLastFocusedOptionIndex","isValidSelectedOption","findNextOptionIndex","matchedOptionIndex","findPrevOptionIndex","resolveFieldData","equals","getOptionValue","equalityKey","isOptionMatched","toLocaleLowerCase","isInputClicked","isDropdownClicked","onContainerClick","DomHandler","query","originalEvent","join","updateModel","matchedValue","scrollInView","code","onArrowLeftKeyOnMultiple","onArrowRightKeyOnMultiple","onBackspaceKeyOnMultiple","onArrowDownKey","onArrowUpKey","onArrowLeftKey","onArrowRightKey","onHomeKey","onEndKey","onPageDownKey","onPageUpKey","onEnterKey","onEscapeKey","onTabKey","onBackspaceKey","optionIndex","changeFocusedOptionIndex","altKey","currentTarget","isEmpty","len","setSelectionRange","shiftKey","removedValue","newValue","isHide","removedOption","updateInputValue","autoUpdateModel","findSingle","scrollIntoView","block","inline","scrollToIndex","isFocus","_hide","onScrollChange","scrollerOptions","getItemOptions","selected","setDisabledState","onOverlayAnimationStart","toState","setContentEl","viewInit","selectedListItem","ɵɵdirectiveInject","Renderer2","PrimeNGConfig","OverlayService","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","standalone","NgForOf","NgStyle","Overlay","ButtonDirective","Ripple","Scroller","AutoFocus","TimesCircleIcon","SpinnerIcon","TimesIcon","ChevronDownIcon","AutoCompleteModule","_AutoCompleteModule","ɵɵdefineNgModule","ɵɵdefineInjector","imports","OverlayModule","InputTextModule","ButtonModule","RippleModule","ScrollerModule","AutoFocusModule","vc","Mc","Ec","VideoChangeOwnershipComponent_ng_template_0_div_10_Template","usernamePropositions","VideoChangeOwnershipComponent","changeOwnership","usernames","VideoChangeOwnershipComponent_ng_template_0_Template","_VideoChangeOwnershipComponent","Ic","Oc","Pc","Tc","bc","Rc","xc","Ac","channel_r3","onFilter","wc","bulkActions","selectedRows","Nc","ɵɵpipeBind1","Dc","MyVideosComponent_ng_template_6_Conditional_2_Template","MyVideosComponent_ng_template_6_Conditional_3_Template","selectedFilterItems","filterItems","Lc","Yc","Vc","Fc","MyVideosComponent_ng_template_7_Conditional_0_Template","MyVideosComponent_ng_template_7_Conditional_1_Template","MyVideosComponent_ng_template_7_Conditional_2_Template","sortOrder_r6","$c","kc","getColumn","zc","Bc","Gc","Hc","Uc","Wc","Xc","jc","Kc","column_r8","saveSelectedColumns","qc","MyVideosComponent_ng_template_9_th_3_Template","MyVideosComponent_ng_template_9_th_4_Template","MyVideosComponent_ng_template_9_th_5_Template","MyVideosComponent_ng_template_9_th_6_Template","MyVideosComponent_ng_template_9_th_7_Template","MyVideosComponent_ng_template_9_th_8_Template","MyVideosComponent_ng_template_9_th_9_Template","MyVideosComponent_ng_template_9_th_10_Template","MyVideosComponent_ng_template_9_th_11_Template","MyVideosComponent_ng_template_9_For_25_Template","columnsDropdown_r9","isOpen","columns","Qc","video_r11","Zc","Jc","blacklistedReason","ed","MyVideosComponent_ng_template_10_td_5_span_3_Template","blacklisted","td","playlist_r12","playlistShortUUID","playlistDisplayName","nd","MyVideosComponent_ng_template_10_td_7_a_2_Template","videosContainedInPlaylists","od","viewers","rd","MyVideosComponent_ng_template_10_td_8_Conditional_6_Template","isLive","sd","comments","ad","publishedAt","ld","MyVideosComponent_ng_template_10_td_3_Template","MyVideosComponent_ng_template_10_td_4_Template","MyVideosComponent_ng_template_10_td_5_Template","MyVideosComponent_ng_template_10_td_6_Template","MyVideosComponent_ng_template_10_td_7_Template","MyVideosComponent_ng_template_10_td_8_Template","MyVideosComponent_ng_template_10_td_9_Template","MyVideosComponent_ng_template_10_td_10_Template","MyVideosComponent_ng_template_10_td_11_Template","fetchVideosContainedInPlaylists","videoActionsOptions","moreVideoActions","dd","_d","pd","MyVideosComponent_ng_template_11_ng_container_3_Template","MyVideosComponent_ng_template_11_ng_container_4_Template","debugLogger","debug","MyVideosComponent","videoService","VideoService","playlistService","server","peertubeLocalStorage","LocalStorageService","peertubeRouter","PeerTubeRouterService","headerService","HeaderService","videoChangeOwnershipModal","download","blacklist","report","duplicate","mute","liveInfo","removeFiles","transcoding","setSearchHidden","subscribeToQueryChanges","buildActions","loadSelectedColumns","parseQueryParams","enabledChannels","channelNameOneOf","arrayify","videoType","enabledPrivacies","privacyOneOf","parseInt","PUBLIC","UNLISTED","PASSWORD_PROTECTED","sortOrder","sortField","parseLazy","updateUrl","saveSort","enabledString","getItem","LS_SELECTED_COLUMNS_KEY","JSON","parse","column","setItem","stringify","resetPagination","newParams","pick","buildCommonVideoFilters","silentNavigate","selectedFilterSet","listMyVideos","restPagination","finalize","doVideosExistInPlaylist","Object","keys","acc","videoId","uniqBy","playlistId","removeVideos","removeVideo","i18n_6","J","MyVideosComponent_For_4_Template","_forTrack0","MyVideosComponent_ng_template_6_Template","MyVideosComponent_ng_template_7_Template","MyVideosComponent_ng_template_8_Template","MyVideosComponent_ng_template_9_Template","MyVideosComponent_ng_template_10_Template","MyVideosComponent_ng_template_11_Template","SelectableRow","TableCheckbox","TableHeaderCheckbox","VideoActionsDropdownComponent","NumberFormatterPipe","VideoPrivacyBadgeComponent","NgbDropdownModule","NgbDropdown","NgbDropdownToggle","NgbDropdownMenu","SelectCheckboxComponent","VideoNSFWBadgeComponent","_MyVideosComponent","MyWatchedWordsListComponent","WatchedWordsListAdminOwnerComponent","_MyWatchedWordsListComponent","commonConfig","path","providers","BlocklistService","VideoBlockService","AbuseService","LiveVideoService","WatchedWordsListService","BulkService","VideoCommentService","userResolver","canActivateChild","LoginGuard","videoSpaceRoutes","redirectTo","pathMatch","component","meta","channelSpaceRoutes","loadChildren","libraryRoutes","reuse","isVideoSpaceRoute","segments","rootPath","isChannelSpaceRoute","routes_default","canMatch","_route","A0","default"],"ignoreList":[31,32,45],"sources":["src/app/+my-library/comments-on-my-videos/comments-on-my-videos.component.ts","src/app/+my-library/comments-on-my-videos/comments-on-my-videos.component.html","src/app/+my-library/my-auto-tag-policies/automatic-tag.service.ts","src/app/+my-library/my-auto-tag-policies/my-auto-tag-policies.component.html","src/app/+my-library/my-auto-tag-policies/my-auto-tag-policies.component.ts","src/app/+my-library/my-channel-space.component.ts","src/app/+my-library/my-channel-space.component.html","src/app/+my-library/my-follows/my-followers.component.html","src/app/+my-library/my-follows/my-followers.component.ts","src/app/+my-library/my-follows/my-subscriptions.component.html","src/app/+my-library/my-follows/my-subscriptions.component.ts","src/app/shared/shared-video-miniature/videos-selection.component.html","src/app/shared/shared-video-miniature/videos-selection.component.ts","src/app/+my-library/my-history/my-history.component.html","src/app/+my-library/my-history/my-history.component.ts","src/app/+my-library/my-library.component.ts","src/app/+my-library/my-library.component.html","src/app/shared/form-validators/video-ownership-change-validators.ts","src/app/+my-library/my-ownership/my-accept-ownership/my-accept-ownership.component.html","src/app/+my-library/my-ownership/my-accept-ownership/my-accept-ownership.component.ts","src/app/+my-library/my-ownership/my-ownership.component.html","src/app/+my-library/my-ownership/my-ownership.component.ts","src/app/+my-library/my-video-channel-syncs/my-video-channel-syncs.component.html","src/app/+my-library/my-video-channel-syncs/my-video-channel-syncs.component.ts","src/app/+my-library/my-video-channel-syncs/video-channel-sync-edit/video-channel-sync-edit.component.html","src/app/+my-library/my-video-channel-syncs/video-channel-sync-edit/video-channel-sync-edit.component.ts","src/app/+my-library/my-video-imports/my-video-imports.component.html","src/app/+my-library/my-video-imports/my-video-imports.component.ts","src/app/+my-library/my-video-playlists/my-video-playlist-edit.ts","src/app/+my-library/my-video-playlists/my-video-playlist-edit.component.html","src/app/+my-library/my-video-playlists/my-video-playlist-create.component.ts","node_modules/@angular/cdk/fesm2022/scrolling.mjs","node_modules/@angular/cdk/fesm2022/drag-drop.mjs","src/app/+my-library/my-video-playlists/my-video-playlist-elements.component.html","src/app/+my-library/my-video-playlists/my-video-playlist-elements.component.ts","src/app/+my-library/my-video-playlists/my-video-playlist-update.component.ts","src/app/+my-library/my-video-playlists/my-video-playlists.component.html","src/app/+my-library/my-video-playlists/my-video-playlists.component.ts","src/app/+my-library/my-video-space.component.ts","src/app/+my-library/my-video-space.component.html","src/app/shared/standalone-channels/channel-toggle.component.ts","src/app/shared/standalone-channels/channel-toggle.component.html","src/app/+my-library/my-videos/my-videos.component.ts","src/app/shared/shared-video/video-state-badge.component.html","src/app/shared/shared-video/video-state-badge.component.ts","node_modules/primeng/fesm2022/primeng-autocomplete.mjs","src/app/+my-library/my-videos/modals/video-change-ownership.component.html","src/app/+my-library/my-videos/modals/video-change-ownership.component.ts","src/app/+my-library/my-videos/my-videos.component.html","src/app/+my-library/my-watched-words-list/my-watched-words-list.component.ts","src/app/+my-library/my-watched-words-list/my-watched-words-list.component.html","src/app/+my-library/routes.ts"],"sourcesContent":["import { Component } from '@angular/core'\n\nimport { VideoCommentListAdminOwnerComponent } from '../../shared/shared-video-comment/video-comment-list-admin-owner.component'\n\n@Component({\n  templateUrl: './comments-on-my-videos.component.html',\n  imports: [\n    VideoCommentListAdminOwnerComponent\n  ]\n})\nexport class CommentsOnMyVideosComponent {\n}\n","<my-video-comment-list-admin-owner mode=\"user\"></my-video-comment-list-admin-owner>\n\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable, inject } from '@angular/core'\nimport { RestExtractor } from '@app/core'\nimport { AutomaticTagAvailable, CommentAutomaticTagPolicies } from '@peertube/peertube-models'\nimport { catchError } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\n\n@Injectable({ providedIn: 'root' })\nexport class AutomaticTagService {\n  private authHttp = inject(HttpClient)\n  private restExtractor = inject(RestExtractor)\n\n  private static BASE_AUTOMATIC_TAGS_URL = environment.apiUrl + '/api/v1/automatic-tags/'\n\n  listAvailable (options: {\n    accountName: string\n  }) {\n    const url = AutomaticTagService.BASE_AUTOMATIC_TAGS_URL + 'accounts/' + options.accountName + '/available'\n\n    return this.authHttp.get<AutomaticTagAvailable>(url)\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  getCommentPolicies (options: {\n    accountName: string\n  }) {\n    const url = AutomaticTagService.BASE_AUTOMATIC_TAGS_URL + 'policies/accounts/' + options.accountName + '/comments'\n\n    return this.authHttp.get<CommentAutomaticTagPolicies>(url)\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  updateCommentPolicies (options: {\n    accountName: string\n    review: string[]\n  }) {\n    const url = AutomaticTagService.BASE_AUTOMATIC_TAGS_URL + 'policies/accounts/' + options.accountName + '/comments'\n\n    return this.authHttp.put(url, { review: options.review })\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n}\n","<strong class=\"d-block mb-3\" i18n>Automatically block comments:</strong>\n\n@for (tag of tags; track tag; let i = $index) {\n  <div class=\"form-group ms-3\">\n    <my-peertube-checkbox\n      [inputName]=\"'tag-' + i\" [(ngModel)]=\"tag.review\" [labelText]=\"getLabelText(tag)\"\n      (ngModelChange)=\"updatePolicies()\"\n    ></my-peertube-checkbox>\n  </div>\n}\n","import { Component, OnInit, inject } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { AuthService, Notifier } from '@app/core'\nimport { PeertubeCheckboxComponent } from '@app/shared/shared-forms/peertube-checkbox.component'\n\nimport { AutomaticTagAvailableType } from '@peertube/peertube-models'\nimport { forkJoin } from 'rxjs'\nimport { AutomaticTagService } from './automatic-tag.service'\n\n@Component({\n  templateUrl: './my-auto-tag-policies.component.html',\n  imports: [\n    FormsModule,\n    PeertubeCheckboxComponent\n  ]\n})\nexport class MyAutoTagPoliciesComponent implements OnInit {\n  private authService = inject(AuthService)\n  private autoTagsService = inject(AutomaticTagService)\n  private notifier = inject(Notifier)\n\n  tags: { name: string, review: boolean, type: AutomaticTagAvailableType }[] = []\n\n  ngOnInit () {\n    this.loadAvailableTags()\n  }\n\n  getLabelText (tag: { name: string, type: AutomaticTagAvailableType }) {\n    if (tag.name === 'external-link') {\n      return $localize`That contain an external link`\n    }\n\n    return $localize`That contain any word from your \"${tag.name}\" watched word list`\n  }\n\n  updatePolicies () {\n    const accountName = this.authService.getUser().account.name\n\n    this.autoTagsService.updateCommentPolicies({\n      accountName,\n      review: this.tags.filter(t => t.review).map(t => t.name)\n    }).subscribe({\n      next: () => {\n        this.notifier.success($localize`Comment policies updated`)\n      },\n\n      error: err => this.notifier.error(err.message)\n    })\n  }\n\n  private loadAvailableTags () {\n    const accountName = this.authService.getUser().account.name\n\n    forkJoin([\n      this.autoTagsService.listAvailable({ accountName }),\n      this.autoTagsService.getCommentPolicies({ accountName })\n    ]).subscribe(([ resAvailable, policies ]) => {\n      this.tags = resAvailable.available\n        .map(a => ({ name: a.name, type: a.type, review: policies.review.includes(a.name) }))\n    })\n  }\n}\n","import { Component, OnInit, inject } from '@angular/core'\nimport { RouterOutlet } from '@angular/router'\nimport { ServerService } from '@app/core'\nimport { HorizontalMenuComponent, HorizontalMenuEntry } from '@app/shared/shared-main/menu/horizontal-menu.component'\nimport { HTMLServerConfig } from '@peertube/peertube-models'\n\n@Component({\n  templateUrl: './my-channel-space.component.html',\n  imports: [ RouterOutlet, HorizontalMenuComponent ]\n})\nexport class MyChannelSpaceComponent implements OnInit {\n  private serverService = inject(ServerService)\n\n  menuEntries: HorizontalMenuEntry[] = []\n\n  private serverConfig: HTMLServerConfig\n\n  ngOnInit (): void {\n    this.serverConfig = this.serverService.getHTMLConfig()\n\n    this.buildMenu()\n  }\n\n  private buildMenu () {\n    this.menuEntries = [\n      {\n        label: $localize`Manage my channels`,\n        routerLink: '/my-library/video-channels'\n      },\n      {\n        label: $localize`Followers`,\n        routerLink: '/my-library/followers'\n      },\n      {\n        label: $localize`Synchronizations`,\n        routerLink: '/my-library/video-channel-syncs',\n        isDisplayed: () => this.isChannelSyncEnabled()\n      }\n    ]\n  }\n\n  private isChannelSyncEnabled () {\n    const config = this.serverConfig.import\n\n    return this.serverConfig.import.videoChannelSynchronization.enabled &&\n      (config.videos.http.enabled || config.videos.torrent.enabled)\n  }\n}\n","<div class=\"root\">\n\n  <div class=\"margin-content\">\n    <a i18n class=\"visually-hidden-focusable skip-to-content-sub-menu\" href=\"#my-channel-space-content\" (click)=\"$event.preventDefault(); myChannelSpaceContent.focus()\">Skip the sub menu</a>\n\n    <my-horizontal-menu h1Icon=\"channel\" i18n-h1 h1=\"My channels\" [menuEntries]=\"menuEntries\"></my-horizontal-menu>\n  </div>\n\n  <div #myChannelSpaceContent tabindex=\"-1\" id=\"my-channel-space-content\" class=\"margin-content pb-5 outline-0\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","<div class=\"followers-header d-flex justify-content-between align-items-end gap-2 flex-wrap\">\n  <span class=\"total-items\" *ngIf=\"pagination.totalItems\"> {{ getTotalTitle() }}</span>\n\n  <my-advanced-input-filter [filters]=\"inputFilters\" (search)=\"onSearch($event)\"></my-advanced-input-filter>\n</div>\n\n<div class=\"no-results\" i18n *ngIf=\"pagination.totalItems === 0\">No follower found.</div>\n\n<div class=\"actors\" myInfiniteScroller (nearOfBottom)=\"onNearOfBottom()\" [dataObservable]=\"onDataSubject.asObservable()\">\n  <div *ngFor=\"let follow of follows\" class=\"actor\">\n    <my-actor-avatar [actor]=\"follow.follower\" actorType=\"account\" [href]=\"follow.follower.url\" size=\"40\"></my-actor-avatar>\n\n    <div class=\"actor-info\">\n      <a [href]=\"follow.follower.url\" class=\"actor-names\" rel=\"noopener noreferrer\" target=\"_blank\" i18n-title title=\"Follower page\">\n        <div class=\"actor-display-name\">{{ follow.follower.name + '@' + follow.follower.host }}</div>\n        <my-global-icon iconName=\"external-link\"></my-global-icon>\n      </a>\n\n      <div class=\"small muted\">\n        <ng-container *ngIf=\"isFollowingAccount(follow)\" i18n>Is following all your channels</ng-container>\n        <ng-container *ngIf=\"!isFollowingAccount(follow)\" i18n>Is following your channel {{ follow.following.name }}</ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgFor, NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { AuthService, ComponentPagination, Notifier, resetCurrentPage } from '@app/core'\nimport { formatICU } from '@app/helpers'\nimport { UserSubscriptionService } from '@app/shared/shared-user-subscription/user-subscription.service'\nimport { ActorFollow } from '@peertube/peertube-models'\nimport { Subject } from 'rxjs'\nimport { ActorAvatarComponent } from '../../shared/shared-actor-image/actor-avatar.component'\nimport { AdvancedInputFilter, AdvancedInputFilterComponent } from '../../shared/shared-forms/advanced-input-filter.component'\nimport { GlobalIconComponent } from '../../shared/shared-icons/global-icon.component'\nimport { InfiniteScrollerDirective } from '../../shared/shared-main/common/infinite-scroller.directive'\n\n@Component({\n  templateUrl: './my-followers.component.html',\n  styleUrls: [ './my-followers.component.scss' ],\n  imports: [ GlobalIconComponent, NgIf, AdvancedInputFilterComponent, InfiniteScrollerDirective, NgFor, ActorAvatarComponent ]\n})\nexport class MyFollowersComponent implements OnInit {\n  private route = inject(ActivatedRoute)\n  private auth = inject(AuthService)\n  private userSubscriptionService = inject(UserSubscriptionService)\n  private notifier = inject(Notifier)\n\n  follows: ActorFollow[] = []\n\n  pagination: ComponentPagination = {\n    currentPage: 1,\n    itemsPerPage: 10,\n    totalItems: null\n  }\n\n  onDataSubject = new Subject<any[]>()\n  search: string\n\n  inputFilters: AdvancedInputFilter[]\n\n  ngOnInit () {\n    if (this.route.snapshot.queryParams['search']) {\n      this.search = this.route.snapshot.queryParams['search']\n    }\n\n    const channelFilters = this.auth.getUser().videoChannels.map(c => {\n      return {\n        value: 'channel:' + c.name,\n        label: c.name\n      }\n    })\n\n    this.inputFilters = [\n      {\n        title: $localize`Channel filters`,\n        children: channelFilters\n      }\n    ]\n  }\n\n  onNearOfBottom () {\n    // Last page\n    if (this.pagination.totalItems <= (this.pagination.currentPage * this.pagination.itemsPerPage)) return\n\n    this.pagination.currentPage += 1\n    this.loadFollowers()\n  }\n\n  onSearch (search: string) {\n    this.search = search\n    resetCurrentPage(this.pagination)\n\n    this.loadFollowers(false)\n  }\n\n  isFollowingAccount (follow: ActorFollow) {\n    return follow.following.name === this.getUsername()\n  }\n\n  getTotalTitle () {\n    return formatICU(\n      $localize`${this.pagination.totalItems} {total, plural, =1 {follower} other {followers}}`,\n      { total: this.pagination.totalItems }\n    )\n  }\n\n  private loadFollowers (more = true) {\n    this.userSubscriptionService.listFollowers({\n      pagination: this.pagination,\n      nameWithHost: this.getUsername(),\n      search: this.search\n    }).subscribe({\n      next: res => {\n        this.follows = more\n          ? this.follows.concat(res.data)\n          : res.data\n        this.pagination.totalItems = res.total\n\n        this.onDataSubject.next(res.data)\n      },\n\n      error: err => this.notifier.error(err.message)\n    })\n  }\n\n  private getUsername () {\n    return this.auth.getUser().username\n  }\n}\n","<div class=\"mb-4 d-flex justify-content-between align-items-end gap-2 flex-wrap\">\n  <span class=\"total-items\" *ngIf=\"pagination.totalItems\"> {{ getTotalTitle() }}</span>\n\n  <my-advanced-input-filter (search)=\"onSearch($event)\"></my-advanced-input-filter>\n</div>\n\n<div class=\"no-results\" i18n *ngIf=\"pagination.totalItems === 0\">You don't have any subscription yet.</div>\n\n<div class=\"actors\" myInfiniteScroller (nearOfBottom)=\"onNearOfBottom()\" [dataObservable]=\"onDataSubject.asObservable()\">\n  <div *ngFor=\"let videoChannel of videoChannels\" class=\"actor\">\n    <my-actor-avatar [actor]=\"videoChannel\" actorType=\"channel\" [internalHref]=\"[ '/c', videoChannel.nameWithHost ]\" size=\"80\"></my-actor-avatar>\n\n    <div class=\"actor-info\">\n      <a [routerLink]=\"[ '/c', videoChannel.nameWithHost ]\" class=\"actor-names\" i18n-title title=\"Channel page\">\n        <div class=\"actor-display-name\">{{ videoChannel.displayName }}</div>\n        <div class=\"actor-name\">{{ videoChannel.nameWithHost }}</div>\n      </a>\n\n      <div i18n class=\"actor-followers\">{{ videoChannel.followersCount }} subscribers</div>\n\n      <a [routerLink]=\"[ '/a', videoChannel.ownerBy ]\" i18n-title title=\"Owner account page\" class=\"actor-owner\">\n        <span i18n>Created by {{ videoChannel.ownerBy }}</span>\n\n        <my-actor-avatar [actor]=\"videoChannel.ownerAccount\" actorType=\"account\" size=\"18\"></my-actor-avatar>\n      </a>\n    </div>\n\n    <my-subscribe-button [videoChannels]=\"[videoChannel]\"></my-subscribe-button>\n  </div>\n</div>\n","import { NgFor, NgIf } from '@angular/common'\nimport { Component, inject } from '@angular/core'\nimport { RouterLink } from '@angular/router'\nimport { ComponentPagination, Notifier, resetCurrentPage } from '@app/core'\nimport { formatICU } from '@app/helpers'\nimport { VideoChannel } from '@app/shared/shared-main/channel/video-channel.model'\nimport { UserSubscriptionService } from '@app/shared/shared-user-subscription/user-subscription.service'\nimport { Subject } from 'rxjs'\nimport { ActorAvatarComponent } from '../../shared/shared-actor-image/actor-avatar.component'\nimport { AdvancedInputFilterComponent } from '../../shared/shared-forms/advanced-input-filter.component'\n\nimport { InfiniteScrollerDirective } from '../../shared/shared-main/common/infinite-scroller.directive'\nimport { SubscribeButtonComponent } from '../../shared/shared-user-subscription/subscribe-button.component'\n\n@Component({\n  templateUrl: './my-subscriptions.component.html',\n  styleUrls: [ './my-subscriptions.component.scss' ],\n  imports: [\n    NgIf,\n    AdvancedInputFilterComponent,\n    InfiniteScrollerDirective,\n    NgFor,\n    ActorAvatarComponent,\n    RouterLink,\n    SubscribeButtonComponent\n  ]\n})\nexport class MySubscriptionsComponent {\n  private userSubscriptionService = inject(UserSubscriptionService)\n  private notifier = inject(Notifier)\n\n  videoChannels: VideoChannel[] = []\n\n  pagination: ComponentPagination = {\n    currentPage: 1,\n    itemsPerPage: 10,\n    totalItems: null\n  }\n\n  onDataSubject = new Subject<any[]>()\n\n  search: string\n\n  onNearOfBottom () {\n    // Last page\n    if (this.pagination.totalItems <= (this.pagination.currentPage * this.pagination.itemsPerPage)) return\n\n    this.pagination.currentPage += 1\n    this.loadSubscriptions()\n  }\n\n  onSearch (search: string) {\n    this.search = search\n    resetCurrentPage(this.pagination)\n\n    this.loadSubscriptions(false)\n  }\n\n  getTotalTitle () {\n    return formatICU(\n      $localize`${this.pagination.totalItems} {total, plural, =1 {subscription} other {subscriptions}}`,\n      { total: this.pagination.totalItems }\n    )\n  }\n\n  private loadSubscriptions (more = true) {\n    this.userSubscriptionService.listSubscriptions({ pagination: this.pagination, search: this.search })\n      .subscribe({\n        next: res => {\n          this.videoChannels = more\n            ? this.videoChannels.concat(res.data)\n            : res.data\n          this.pagination.totalItems = res.total\n\n          this.onDataSubject.next(res.data)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n}\n","<div class=\"no-results\" i18n *ngIf=\"hasDoneFirstQuery && videos().length === 0\">{{ noResultMessage() }}</div>\n\n<div\n  class=\"videos\"\n  myInfiniteScroller (nearOfBottom)=\"onNearOfBottom()\" [dataObservable]=\"onDataSubject.asObservable()\"\n>\n  <div class=\"video\" *ngFor=\"let video of videos(); let i = index; trackBy: videoById\">\n\n    <div class=\"checkbox-container\" *ngIf=\"enableSelection()\">\n      <my-peertube-checkbox [inputName]=\"'video-check-' + video.id\" [(ngModel)]=\"selection()[video.id]\"></my-peertube-checkbox>\n    </div>\n\n    <my-video-miniature\n      [video]=\"video\" [displayAsRow]=\"true\" [displayOptions]=\"miniatureDisplayOptions()\"\n      [displayVideoActions]=\"false\" [user]=\"user()\"\n    ></my-video-miniature>\n\n    @if (isInSelectionMode() === false) {\n      <ng-container *ngTemplateOutlet=\"rowButtonsTemplate; context: {$implicit: video}\"></ng-container>\n    }\n  </div>\n</div>\n\n<div class=\"action-selection-mode\" *ngIf=\"isInSelectionMode() === true\">\n  <button i18n class=\"cancel-selection peertube-button secondary-button me-2\" (click)=\"abortSelectionMode()\">\n    Cancel\n  </button>\n\n  <ng-container *ngTemplateOutlet=\"globalButtonsTemplate\"></ng-container>\n</div>\n","import { NgFor, NgIf, NgTemplateOutlet } from '@angular/common'\nimport { AfterContentInit, Component, contentChildren, inject, input, model, TemplateRef } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { ComponentPagination, Notifier, resetCurrentPage, User } from '@app/core'\nimport { objectKeysTyped } from '@peertube/peertube-core-utils'\nimport { ResultList, VideoSortField } from '@peertube/peertube-models'\nimport { logger } from '@root-helpers/logger'\nimport { Observable, Subject } from 'rxjs'\nimport { PeertubeCheckboxComponent } from '../shared-forms/peertube-checkbox.component'\nimport { InfiniteScrollerDirective } from '../shared-main/common/infinite-scroller.directive'\nimport { PeerTubeTemplateDirective } from '../shared-main/common/peertube-template.directive'\nimport { Video } from '../shared-main/video/video.model'\nimport { MiniatureDisplayOptions, VideoMiniatureComponent } from './video-miniature.component'\n\nexport type SelectionType = { [id: number]: boolean }\n\n@Component({\n  selector: 'my-videos-selection',\n  templateUrl: './videos-selection.component.html',\n  styleUrls: [ './videos-selection.component.scss' ],\n  imports: [ NgIf, InfiniteScrollerDirective, NgFor, PeertubeCheckboxComponent, FormsModule, VideoMiniatureComponent, NgTemplateOutlet ]\n})\nexport class VideosSelectionComponent implements AfterContentInit {\n  private notifier = inject(Notifier)\n\n  readonly user = input<User>(undefined)\n  readonly pagination = input<ComponentPagination>(undefined)\n\n  readonly titlePage = input<string>(undefined)\n\n  readonly miniatureDisplayOptions = input<MiniatureDisplayOptions>(undefined)\n\n  readonly noResultMessage = input($localize`No results.`)\n  readonly enableSelection = input(true)\n\n  readonly disabled = input(false)\n\n  readonly getVideosObservableFunction = input<(page: number, sort?: VideoSortField) => Observable<ResultList<Video>>>(undefined)\n\n  readonly templates = contentChildren(PeerTubeTemplateDirective)\n\n  readonly selection = model<SelectionType>({})\n  readonly videos = model<Video[]>([])\n\n  rowButtonsTemplate: TemplateRef<any>\n  globalButtonsTemplate: TemplateRef<any>\n\n  sort: VideoSortField = '-publishedAt'\n\n  onDataSubject = new Subject<any[]>()\n\n  hasDoneFirstQuery = false\n\n  private lastQueryLength: number\n\n  ngAfterContentInit () {\n    {\n      const t = this.templates().find(t => t.name() === 'rowButtons')\n      if (t) this.rowButtonsTemplate = t.template\n    }\n\n    {\n      const t = this.templates().find(t => t.name() === 'globalButtons')\n      if (t) this.globalButtonsTemplate = t.template\n    }\n\n    this.loadMoreVideos()\n  }\n\n  getVideosObservable (page: number) {\n    return this.getVideosObservableFunction()(page, this.sort)\n  }\n\n  abortSelectionMode () {\n    this.selection.update(() => ({}))\n  }\n\n  isInSelectionMode () {\n    return objectKeysTyped(this.selection())\n      .some(k => this.selection()[k] === true)\n  }\n\n  videoById (_index: number, video: Video) {\n    return video.id\n  }\n\n  onNearOfBottom () {\n    if (this.disabled()) return\n\n    // No more results\n    if (this.lastQueryLength !== undefined && this.lastQueryLength < this.pagination().itemsPerPage) return\n\n    this.pagination().currentPage += 1\n\n    this.loadMoreVideos()\n  }\n\n  loadMoreVideos (reset = false) {\n    if (reset) this.hasDoneFirstQuery = false\n\n    this.getVideosObservable(this.pagination().currentPage)\n      .subscribe({\n        next: ({ data }) => {\n          this.hasDoneFirstQuery = true\n          this.lastQueryLength = data.length\n\n          if (reset) this.videos.set([])\n          this.videos.update(videos => videos.concat(data))\n\n          this.onDataSubject.next(data)\n        },\n\n        error: err => {\n          const message = $localize`Cannot load more videos. Try again later.`\n\n          logger.error(message, err)\n          this.notifier.error(message)\n        }\n      })\n  }\n\n  reloadVideos () {\n    resetCurrentPage(this.pagination())\n    this.loadMoreVideos(true)\n  }\n}\n","<div class=\"top-buttons\">\n  <div class=\"search-wrapper\">\n    <my-advanced-input-filter [emitOnInit]=\"false\" (search)=\"onSearch($event)\"></my-advanced-input-filter>\n  </div>\n\n  <div class=\"history-switch\">\n    <my-input-switch inputName=\"track-watch-history\" [(ngModel)]=\"videosHistoryEnabled\" (ngModelChange)=\"onVideosHistoryChange()\"></my-input-switch>\n    <label for=\"track-watch-history\" i18n>Track watch history</label>\n  </div>\n\n  <my-button icon=\"delete\" (click)=\"clearAllHistory()\" i18n>Clear all history</my-button>\n</div>\n\n<my-videos-selection\n  [pagination]=\"pagination\"\n  [(videos)]=\"videos\"\n  [miniatureDisplayOptions]=\"miniatureDisplayOptions\"\n  [titlePage]=\"titlePage\"\n  [getVideosObservableFunction]=\"getVideosObservableFunction\"\n  [user]=\"user\"\n  [noResultMessage]=\"getNoResultMessage()\"\n  [enableSelection]=\"false\"\n  [disabled]=\"disabled\"\n  #videosSelection\n>\n  <ng-template ptTemplate=\"rowButtons\" let-video>\n    <div class=\"action-button\">\n      <my-delete-button i18n-label label=\"Delete from history\" (click)=\"deleteHistoryElement(video)\"></my-delete-button>\n    </div>\n  </ng-template>\n</my-videos-selection>\n","import { Component, OnInit, inject, viewChild } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport {\n  AuthService,\n  ComponentPagination,\n  ConfirmService,\n  DisableForReuseHook,\n  Notifier,\n  updatePaginationOnDelete,\n  User,\n  UserService\n} from '@app/core'\nimport { immutableAssign } from '@app/helpers'\nimport { ButtonComponent } from '@app/shared/shared-main/buttons/button.component'\nimport { UserHistoryService } from '@app/shared/shared-main/users/user-history.service'\nimport { Video } from '@app/shared/shared-main/video/video.model'\nimport { MiniatureDisplayOptions } from '@app/shared/shared-video-miniature/video-miniature.component'\nimport { VideosSelectionComponent } from '@app/shared/shared-video-miniature/videos-selection.component'\nimport { tap } from 'rxjs/operators'\nimport { AdvancedInputFilterComponent } from '../../shared/shared-forms/advanced-input-filter.component'\nimport { InputSwitchComponent } from '../../shared/shared-forms/input-switch.component'\nimport { DeleteButtonComponent } from '../../shared/shared-main/buttons/delete-button.component'\nimport { PeerTubeTemplateDirective } from '../../shared/shared-main/common/peertube-template.directive'\n\n@Component({\n  templateUrl: './my-history.component.html',\n  styleUrls: [ './my-history.component.scss' ],\n  imports: [\n    ButtonComponent,\n    AdvancedInputFilterComponent,\n    InputSwitchComponent,\n    FormsModule,\n    VideosSelectionComponent,\n    PeerTubeTemplateDirective,\n    DeleteButtonComponent\n  ]\n})\nexport class MyHistoryComponent implements OnInit, DisableForReuseHook {\n  private authService = inject(AuthService)\n  private userService = inject(UserService)\n  private notifier = inject(Notifier)\n  private confirmService = inject(ConfirmService)\n  private userHistoryService = inject(UserHistoryService)\n\n  readonly videosSelection = viewChild<VideosSelectionComponent>('videosSelection')\n\n  titlePage: string\n  pagination: ComponentPagination = {\n    currentPage: 1,\n    itemsPerPage: 5,\n    totalItems: null\n  }\n\n  videosHistoryEnabled: boolean\n\n  miniatureDisplayOptions: MiniatureDisplayOptions = {\n    date: true,\n    views: true,\n    by: true,\n    privacyLabel: false\n  }\n\n  getVideosObservableFunction = this.getVideosObservable.bind(this)\n\n  user: User\n\n  videos: Video[] = []\n  search: string\n\n  disabled = false\n\n  constructor () {\n    this.titlePage = $localize`My watch history`\n  }\n\n  ngOnInit () {\n    this.user = this.authService.getUser()\n\n    this.authService.userInformationLoaded\n      .subscribe(() => this.videosHistoryEnabled = this.user.videosHistoryEnabled)\n  }\n\n  disableForReuse () {\n    this.disabled = true\n  }\n\n  enabledForReuse () {\n    this.disabled = false\n  }\n\n  reloadData () {\n    this.videosSelection().reloadVideos()\n  }\n\n  onSearch (search: string) {\n    this.search = search\n    this.reloadData()\n  }\n\n  getVideosObservable (page: number) {\n    const newPagination = immutableAssign(this.pagination, { currentPage: page })\n\n    return this.userHistoryService.list(newPagination, this.search)\n      .pipe(\n        tap(res => this.pagination.totalItems = res.total)\n      )\n  }\n\n  generateSyndicationList () {\n    /* method disabled */\n    throw new Error('Method not implemented.')\n  }\n\n  onVideosHistoryChange () {\n    this.userService.updateMyProfile({ videosHistoryEnabled: this.videosHistoryEnabled })\n      .subscribe({\n        next: () => {\n          const message = this.videosHistoryEnabled === true\n            ? $localize`Video history is enabled`\n            : $localize`Video history is disabled`\n\n          this.notifier.success(message)\n\n          this.authService.refreshUserInformation()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  deleteHistoryElement (video: Video) {\n    this.userHistoryService.deleteElement(video)\n      .subscribe({\n        next: () => {\n          this.videos = this.videos.filter(v => v.id !== video.id)\n          updatePaginationOnDelete(this.pagination)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  async clearAllHistory () {\n    const title = $localize`Delete video history`\n    const message = $localize`Are you sure you want to delete all your video history?`\n\n    const res = await this.confirmService.confirm(message, title)\n    if (res !== true) return\n\n    this.userHistoryService.clearAll()\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Video history deleted`)\n\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  getNoResultMessage () {\n    if (this.search) {\n      return $localize`No videos found for \"${this.search}\".`\n    }\n\n    return $localize`You don't have any video in your watch history yet.`\n  }\n}\n","import { Component, OnInit } from '@angular/core'\nimport { RouterOutlet } from '@angular/router'\nimport { HorizontalMenuComponent, HorizontalMenuEntry } from '@app/shared/shared-main/menu/horizontal-menu.component'\n\n@Component({\n  templateUrl: './my-library.component.html',\n  imports: [ RouterOutlet, HorizontalMenuComponent ]\n})\nexport class MyLibraryComponent implements OnInit {\n  menuEntries: HorizontalMenuEntry[] = []\n\n  ngOnInit (): void {\n    this.buildMenu()\n  }\n\n  private buildMenu () {\n    this.menuEntries = [\n      {\n        label: $localize`Playlists`,\n        routerLink: '/my-library/video-playlists'\n      },\n\n      {\n        label: $localize`Subscriptions`,\n        routerLink: '/my-library/subscriptions'\n      },\n\n      {\n        label: $localize`History`,\n        routerLink: '/my-library/history/videos'\n      }\n    ]\n  }\n}\n","<div class=\"root\">\n\n  <div class=\"margin-content\">\n    <a i18n class=\"visually-hidden-focusable skip-to-content-sub-menu\" href=\"#my-library-content-content\" (click)=\"$event.preventDefault(); myLibraryContent.focus()\">Skip the sub menu</a>\n\n    <my-horizontal-menu i18n-h1 h1=\"My library\" [menuEntries]=\"menuEntries\"></my-horizontal-menu>\n  </div>\n\n  <div #myLibraryContent tabindex=\"-1\" id=\"my-library-content\" class=\"margin-content pb-5 outline-0\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { AbstractControl, ValidationErrors, Validators } from '@angular/forms'\nimport { BuildFormValidator } from './form-validator.model'\n\nexport const OWNERSHIP_CHANGE_CHANNEL_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required ],\n  MESSAGES: {\n    required: $localize`The channel is required.`\n  }\n}\n\nexport const OWNERSHIP_CHANGE_USERNAME_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, localAccountValidator ],\n  MESSAGES: {\n    required: $localize`The username is required.`,\n    localAccountOnly: $localize`You can only transfer ownership to a local account`\n  }\n}\n\nfunction localAccountValidator (control: AbstractControl): ValidationErrors {\n  if (control.value.includes('@')) {\n    return { localAccountOnly: true }\n  }\n\n  return null\n}\n","<ng-template #modal let-close=\"close\" let-dismiss=\"dismiss\">\n  <div class=\"modal-header\">\n    <h1 i18n class=\"modal-title\">Accept ownership</h1>\n\n    <button class=\"border-0 p-0\" title=\"Close this modal\" i18n-title (click)=\"dismiss()\">\n      <my-global-icon iconName=\"cross\"></my-global-icon>\n    </button>\n  </div>\n\n  <div class=\"modal-body\" [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label i18n for=\"channel\">Select a channel to receive the video</label>\n      <my-select-channel class=\"d-block\" inputId=\"channel\" formControlName=\"channel\" [items]=\"videoChannels\"></my-select-channel>\n\n      <div *ngIf=\"formErrors.channel\" class=\"form-error\" role=\"alert\">{{ formErrors.channel }}</div>\n    </div>\n  </div>\n\n  <div class=\"modal-footer inputs\">\n    <div class=\"inputs\">\n      <input\n        type=\"button\" role=\"button\" i18n-value value=\"Cancel\" class=\"peertube-button secondary-button\"\n        (click)=\"dismiss()\" (key.enter)=\"dismiss()\"\n      >\n\n      <input\n        type=\"submit\" i18n-value value=\"Accept\" class=\"peertube-button primary-button\"\n        (click)=\"close()\"\n      >\n    </div>\n  </div>\n</ng-template>\n","import { SelectChannelItem } from 'src/types/select-options-item.model'\nimport { Component, ElementRef, OnInit, inject, output, viewChild } from '@angular/core'\nimport { AuthService, Notifier } from '@app/core'\nimport { listUserChannelsForSelect } from '@app/helpers'\nimport { OWNERSHIP_CHANGE_CHANNEL_VALIDATOR } from '@app/shared/form-validators/video-ownership-change-validators'\nimport { FormReactive } from '@app/shared/shared-forms/form-reactive'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { VideoChangeOwnership } from '@peertube/peertube-models'\nimport { NgIf } from '@angular/common'\nimport { SelectChannelComponent } from '../../../shared/shared-forms/select/select-channel.component'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { GlobalIconComponent } from '../../../shared/shared-icons/global-icon.component'\nimport { VideoOwnershipService } from '@app/shared/shared-main/video/video-ownership.service'\n\n@Component({\n  selector: 'my-accept-ownership',\n  templateUrl: './my-accept-ownership.component.html',\n  styleUrls: [ './my-accept-ownership.component.scss' ],\n  imports: [ GlobalIconComponent, FormsModule, ReactiveFormsModule, SelectChannelComponent, NgIf ]\n})\nexport class MyAcceptOwnershipComponent extends FormReactive implements OnInit {\n  protected formReactiveService = inject(FormReactiveService)\n  private videoOwnershipService = inject(VideoOwnershipService)\n  private notifier = inject(Notifier)\n  private authService = inject(AuthService)\n  private modalService = inject(NgbModal)\n\n  readonly accepted = output()\n\n  readonly modal = viewChild<ElementRef>('modal')\n\n  videoChangeOwnership: VideoChangeOwnership | undefined = undefined\n  videoChannels: SelectChannelItem[]\n\n  error: string = null\n\n  ngOnInit () {\n    this.videoChannels = []\n\n    listUserChannelsForSelect(this.authService)\n      .subscribe(channels => this.videoChannels = channels)\n\n    this.buildForm({\n      channel: OWNERSHIP_CHANGE_CHANNEL_VALIDATOR\n    })\n  }\n\n  show (videoChangeOwnership: VideoChangeOwnership) {\n    // Select the first available channel by default\n    this.form.patchValue({\n      channel: this.videoChannels[0].id\n    })\n\n    this.videoChangeOwnership = videoChangeOwnership\n    this.modalService\n      .open(this.modal(), { centered: true })\n      .result\n      .then(() => this.acceptOwnership())\n      .catch(() => {\n        this.videoChangeOwnership = undefined\n      })\n  }\n\n  acceptOwnership () {\n    const channel = this.form.value['channel']\n\n    const videoChangeOwnership = this.videoChangeOwnership\n    this.videoOwnershipService\n      .acceptOwnership(videoChangeOwnership.id, { channelId: channel })\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Ownership accepted`)\n          if (this.accepted) this.accepted.emit()\n          this.videoChangeOwnership = undefined\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n}\n","<p-table\n  [value]=\"videoChangeOwnerships\" [lazy]=\"true\" [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\" [rows]=\"rowsPerPage\"\n  [first]=\"pagination.start\" [sortField]=\"sort.field\" [sortOrder]=\"sort.order\" (onLazyLoad)=\"loadLazy($event)\"\n>\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th scope=\"col\" style=\"width: 150px;\" i18n>Actions</th>\n      <th scope=\"col\" style=\"width: 35%;\" i18n>Initiator</th>\n      <th scope=\"col\" style=\"width: 65%;\" i18n>Video</th>\n      <th scope=\"col\" style=\"width: 150px;\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"createdAt\">\n        Created\n        <p-sortIcon field=\"createdAt\"></p-sortIcon>\n      </th>\n      <th scope=\"col\" style=\"width: 100px;\" i18n>Status</th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-videoChangeOwnership>\n    <tr>\n      <td class=\"action-cell\">\n        <ng-container *ngIf=\"videoChangeOwnership.status === 'WAITING'\">\n          <my-button i18n-title title=\"Accept\" icon=\"tick\" (click)=\"openAcceptModal(videoChangeOwnership)\"></my-button>\n          <my-button i18n-title title=\"Refuse\" icon=\"cross\" (click)=\"refuse(videoChangeOwnership)\"></my-button>\n        </ng-container>\n      </td>\n      <td>\n        <a [href]=\"videoChangeOwnership.initiatorAccount.url\" i18n-title title=\"Open account in a new tab\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <div class=\"chip two-lines\">\n            <my-actor-avatar [actor]=\"videoChangeOwnership.initiatorAccount\" actorType=\"account\" size=\"32\"></my-actor-avatar>\n            <div>\n              {{ videoChangeOwnership.initiatorAccount.displayName }}\n              <span class=\"muted\">{{ videoChangeOwnership.initiatorAccount.nameWithHost }}</span>\n            </div>\n          </div>\n        </a>\n      </td>\n\n      <td>\n        <my-video-cell [video]=\"videoChangeOwnership.video\" size=\"small\"></my-video-cell>\n      </td>\n\n      <td>{{ videoChangeOwnership.createdAt | ptDate: 'short' }}</td>\n\n      <td>\n        <span class=\"pt-badge\"\n          [ngClass]=\"getStatusClass(videoChangeOwnership.status)\">{{ videoChangeOwnership.status }}</span>\n      </td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\">\n    <tr>\n      <td myAutoColspan>\n        <div class=\"no-results\">\n          <ng-container i18n>No ownership change request found.</ng-container>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n\n<my-accept-ownership #myAcceptOwnershipComponent (accepted)=\"accepted()\"></my-accept-ownership>\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnInit, inject, viewChild } from '@angular/core'\nimport { Notifier, RestPagination, RestTable } from '@app/core'\nimport { Account } from '@app/shared/shared-main/account/account.model'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { VideoOwnershipService } from '@app/shared/shared-main/video/video-ownership.service'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { VideoChangeOwnership, VideoChangeOwnershipStatus, VideoChangeOwnershipStatusType } from '@peertube/peertube-models'\nimport { SharedModule, SortMeta } from 'primeng/api'\nimport { TableModule } from 'primeng/table'\nimport { ActorAvatarComponent } from '../../shared/shared-actor-image/actor-avatar.component'\nimport { ButtonComponent } from '../../shared/shared-main/buttons/button.component'\nimport { AutoColspanDirective } from '../../shared/shared-main/common/auto-colspan.directive'\nimport { VideoCellComponent } from '../../shared/shared-tables/video-cell.component'\nimport { MyAcceptOwnershipComponent } from './my-accept-ownership/my-accept-ownership.component'\n\n@Component({\n  templateUrl: './my-ownership.component.html',\n  imports: [\n    TableModule,\n    SharedModule,\n    NgbTooltip,\n    NgIf,\n    ButtonComponent,\n    ActorAvatarComponent,\n    NgClass,\n    AutoColspanDirective,\n    MyAcceptOwnershipComponent,\n    PTDatePipe,\n    VideoCellComponent\n  ]\n})\nexport class MyOwnershipComponent extends RestTable implements OnInit {\n  private notifier = inject(Notifier)\n  private videoOwnershipService = inject(VideoOwnershipService)\n\n  videoChangeOwnerships: VideoChangeOwnership[] = []\n  totalRecords = 0\n  sort: SortMeta = { field: 'createdAt', order: -1 }\n  pagination: RestPagination = { count: this.rowsPerPage, start: 0 }\n\n  readonly myAccountAcceptOwnershipComponent = viewChild<MyAcceptOwnershipComponent>('myAcceptOwnershipComponent')\n\n  ngOnInit () {\n    this.initialize()\n  }\n\n  getIdentifier () {\n    return 'MyOwnershipComponent'\n  }\n\n  getStatusClass (status: VideoChangeOwnershipStatusType) {\n    switch (status) {\n      case VideoChangeOwnershipStatus.ACCEPTED:\n        return 'badge-green'\n      case VideoChangeOwnershipStatus.REFUSED:\n        return 'badge-red'\n      default:\n        return 'badge-yellow'\n    }\n  }\n\n  openAcceptModal (videoChangeOwnership: VideoChangeOwnership) {\n    this.myAccountAcceptOwnershipComponent().show(videoChangeOwnership)\n  }\n\n  accepted () {\n    this.reloadData()\n  }\n\n  refuse (videoChangeOwnership: VideoChangeOwnership) {\n    this.videoOwnershipService.refuseOwnership(videoChangeOwnership.id)\n      .subscribe({\n        next: () => this.reloadData(),\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  protected reloadDataInternal () {\n    return this.videoOwnershipService.getOwnershipChanges(this.pagination, this.sort)\n      .subscribe({\n        next: resultList => {\n          this.videoChangeOwnerships = resultList.data.map(change => ({\n            ...change,\n            initiatorAccount: new Account(change.initiatorAccount),\n            nextOwnerAccount: new Account(change.nextOwnerAccount)\n          }))\n          this.totalRecords = resultList.total\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n}\n","<my-alert *ngIf=\"error\" type=\"danger\">{{ error }}</my-alert>\n\n<div *ngIf=\"!syncEnabled()\">\n  <p class=\"muted\" i18n>⚠️ The instance doesn't allow channel synchronization</p>\n</div>\n\n<p-table\n  *ngIf=\"syncEnabled()\" [value]=\"channelSyncs\" [lazy]=\"true\"\n  [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\" [rows]=\"rowsPerPage\" [rowsPerPageOptions]=\"rowsPerPageOptions\"\n  [first]=\"pagination.start\" [sortField]=\"sort.field\" [sortOrder]=\"sort.order\" (onLazyLoad)=\"loadLazy($event)\" dataKey=\"id\"\n  [showCurrentPageReport]=\"true\" [currentPageReportTemplate]=\"getPaginationTemplate()\"\n  [expandedRowKeys]=\"expandedRows\"\n>\n  <ng-template pTemplate=\"caption\">\n    <div class=\"caption\">\n      <div class=\"left-buttons\">\n        <a class=\"peertube-create-button\" routerLink=\"{{ getSyncCreateLink() }}\">\n          <my-global-icon iconName=\"add\" aria-hidden=\"true\"></my-global-icon>\n          <ng-container i18n>Add synchronization</ng-container>\n        </a>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th scope=\"col\" style=\"width: 10%;\">\n        <span i18n class=\"visually-hidden\">Actions</span>\n      </th>\n      <th scope=\"col\" style=\"width: 25%\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"externalChannelUrl\">External Channel <p-sortIcon field=\"externalChannelUrl\"></p-sortIcon></th>\n      <th scope=\"col\" style=\"width: 25%\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"videoChannel\">Channel <p-sortIcon field=\"videoChannel\"></p-sortIcon></th>\n      <th scope=\"col\" style=\"width: 10%\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"state\">State <p-sortIcon field=\"state\"></p-sortIcon></th>\n      <th scope=\"col\" style=\"width: 10%\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"createdAt\">Created <p-sortIcon field=\"createdAt\"></p-sortIcon></th>\n      <th scope=\"col\" style=\"width: 10%\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"lastSyncAt\">Last synchronization at <p-sortIcon field=\"lastSyncAt\"></p-sortIcon></th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-expanded=\"expanded\" let-videoChannelSync>\n    <tr>\n      <td class=\"action-cell\">\n        <my-action-dropdown\n          container=\"body\" [actions]=\"videoChannelSyncActions\" [entry]=\"videoChannelSync\"\n          buttonSize=\"small\"\n        ></my-action-dropdown>\n      </td>\n\n      <td>\n        <a [href]=\"videoChannelSync.externalChannelUrl\" target=\"_blank\" rel=\"noopener noreferrer\">{{ videoChannelSync.externalChannelUrl }}</a>\n      </td>\n\n      <td>\n        <a [routerLink]=\"[ '/c', videoChannelSync.channel.name ]\" i18n-title title=\"Channel page\">\n          <div class=\"chip two-lines\">\n            <my-actor-avatar\n              [actor]=\"videoChannelSync.channel\" actorType=\"channel\"\n              [internalHref]=\"[ '/c', videoChannelSync.channel.name ]\" size=\"32\"\n            ></my-actor-avatar>\n\n            <div>\n              <span class=\"fw-semibold\">{{ videoChannelSync.channel.displayName }}</span>\n              <span class=\"muted\">{{ videoChannelSync.channel.name }}</span>\n            </div>\n          </div>\n        </a>\n      </td>\n\n      <td>\n        <span [ngClass]=\"getSyncStateClass(videoChannelSync.state.id)\">\n          {{ videoChannelSync.state.label }}\n        </span>\n      </td>\n\n      <td>{{ videoChannelSync.createdAt | ptDate: 'short' }}</td>\n      <td>{{ videoChannelSync.lastSyncAt | ptDate: 'short' }}</td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\">\n    <tr>\n      <td myAutoColspan>\n        <div class=\"no-results\">\n          <ng-container i18n>You don't have channel synchronisation configured.</ng-container>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { RouterLink } from '@angular/router'\nimport { AuthService, Notifier, RestPagination, RestTable, ServerService } from '@app/core'\nimport { VideoChannelSyncService } from '@app/shared/shared-main/channel/video-channel-sync.service'\nimport { VideoChannelService } from '@app/shared/shared-main/channel/video-channel.service'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport { AutoColspanDirective } from '@app/shared/shared-main/common/auto-colspan.directive'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { HTMLServerConfig, VideoChannelSync, VideoChannelSyncState, VideoChannelSyncStateType } from '@peertube/peertube-models'\nimport { SharedModule, SortMeta } from 'primeng/api'\nimport { TableModule } from 'primeng/table'\nimport { mergeMap } from 'rxjs'\nimport { ActorAvatarComponent } from '../../shared/shared-actor-image/actor-avatar.component'\nimport { GlobalIconComponent } from '../../shared/shared-icons/global-icon.component'\nimport { ActionDropdownComponent, DropdownAction } from '../../shared/shared-main/buttons/action-dropdown.component'\n\n@Component({\n  templateUrl: './my-video-channel-syncs.component.html',\n  imports: [\n    NgIf,\n    GlobalIconComponent,\n    TableModule,\n    SharedModule,\n    RouterLink,\n    NgbTooltip,\n    ActionDropdownComponent,\n    ActorAvatarComponent,\n    NgClass,\n    PTDatePipe,\n    AlertComponent,\n    AutoColspanDirective\n  ]\n})\nexport class MyVideoChannelSyncsComponent extends RestTable implements OnInit {\n  private videoChannelsSyncService = inject(VideoChannelSyncService)\n  private serverService = inject(ServerService)\n  private notifier = inject(Notifier)\n  private authService = inject(AuthService)\n  private videoChannelService = inject(VideoChannelService)\n\n  error: string\n\n  channelSyncs: VideoChannelSync[] = []\n  totalRecords = 0\n\n  videoChannelSyncActions: DropdownAction<VideoChannelSync>[][] = []\n  sort: SortMeta = { field: 'createdAt', order: 1 }\n  pagination: RestPagination = { count: this.rowsPerPage, start: 0 }\n\n  private static STATE_CLASS_BY_ID = {\n    [VideoChannelSyncState.FAILED]: 'badge-red',\n    [VideoChannelSyncState.PROCESSING]: 'badge-blue',\n    [VideoChannelSyncState.SYNCED]: 'badge-green',\n    [VideoChannelSyncState.WAITING_FIRST_RUN]: 'badge-yellow'\n  }\n\n  private serverConfig: HTMLServerConfig\n\n  ngOnInit () {\n    this.serverConfig = this.serverService.getHTMLConfig()\n    this.initialize()\n\n    this.videoChannelSyncActions = [\n      [\n        {\n          label: $localize`List imports`,\n          linkBuilder: () => [ '/my-library/video-imports' ],\n          queryParamsBuilder: sync => ({ search: `videoChannelSyncId:${sync.id}` }),\n          iconName: 'cloud-download'\n        }\n      ],\n      [\n        {\n          label: $localize`Delete`,\n          iconName: 'delete',\n          handler: videoChannelSync => this.deleteSync(videoChannelSync)\n        },\n        {\n          label: $localize`Fully synchronize the channel`,\n          description: $localize`This fetches any missing videos on the local channel`,\n          iconName: 'refresh',\n          handler: videoChannelSync => this.fullySynchronize(videoChannelSync)\n        }\n      ]\n    ]\n  }\n\n  protected reloadDataInternal () {\n    this.error = undefined\n\n    this.authService.userInformationLoaded\n      .pipe(mergeMap(() => {\n        const user = this.authService.getUser()\n        return this.videoChannelsSyncService.listAccountVideoChannelsSyncs({\n          sort: this.sort,\n          account: user.account,\n          pagination: this.pagination\n        })\n      }))\n      .subscribe({\n        next: res => {\n          this.channelSyncs = res.data\n          this.totalRecords = res.total\n        },\n        error: err => {\n          this.error = err.message\n        }\n      })\n  }\n\n  syncEnabled () {\n    return this.serverConfig.import.videoChannelSynchronization.enabled\n  }\n\n  deleteSync (videoChannelSync: VideoChannelSync) {\n    this.videoChannelsSyncService.deleteSync(videoChannelSync.id)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Synchronization removed successfully for ${videoChannelSync.channel.displayName}.`)\n          this.reloadData()\n        },\n        error: err => {\n          this.error = err.message\n        }\n      })\n  }\n\n  fullySynchronize (videoChannelSync: VideoChannelSync) {\n    this.videoChannelService.importVideos(videoChannelSync.channel.name, videoChannelSync.externalChannelUrl, videoChannelSync.id)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Full synchronization requested successfully for ${videoChannelSync.channel.displayName}.`)\n        },\n        error: err => {\n          this.error = err.message\n        }\n      })\n  }\n\n  getSyncCreateLink () {\n    return '/my-library/video-channel-syncs/create'\n  }\n\n  getSyncStateClass (stateId: VideoChannelSyncStateType) {\n    return [ 'pt-badge', MyVideoChannelSyncsComponent.STATE_CLASS_BY_ID[stateId] ]\n  }\n\n  getIdentifier () {\n    return 'MyVideoChannelsSyncComponent'\n  }\n\n  getChannelUrl (name: string) {\n    return '/c/' + name\n  }\n}\n","<my-alert *ngIf=\"error\" type=\"danger\">{{ error }}</my-alert>\n\n<div class=\"pt-two-cols\">\n\n  <div class=\"title-col\">\n    <h2 i18n>NEW SYNCHRONIZATION</h2>\n  </div>\n\n  <div class=\"content-col\">\n    <form (ngSubmit)=\"formValidated()\" [formGroup]=\"form\">\n\n      <div class=\"form-group\">\n        <label i18n for=\"externalChannelUrl\">Remote channel URL</label>\n\n        <div class=\"input-group\">\n          <input\n            type=\"text\"\n            id=\"externalChannelUrl\"\n            i18n-placeholder\n            placeholder=\"Example: https://youtube.com/channel/UC_fancy_channel\"\n            formControlName=\"externalChannelUrl\"\n            [ngClass]=\"{ 'input-error': formErrors['externalChannelUrl'] }\"\n            class=\"form-control\"\n          >\n        </div>\n\n        <div *ngIf=\"formErrors['externalChannelUrl']\" class=\"form-error\" role=\"alert\">\n          {{ formErrors['externalChannelUrl'] }}\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label i18n for=\"videoChannel\">Video channel</label>\n        <my-select-channel inputId=\"videoChannel\" [items]=\"userVideoChannels\" formControlName=\"videoChannel\"></my-select-channel>\n\n        <div *ngIf=\"formErrors['videoChannel']\" class=\"form-error\" role=\"alert\">\n          {{ formErrors['videoChannel'] }}\n        </div>\n      </div>\n\n      <div class=\"form-group\" role=\"radiogroup\">\n        <label for=\"existingVideoStrategy\" i18n>Options for existing videos on remote channel:</label>\n\n        <div class=\"peertube-radio-container\">\n          <input type=\"radio\" name=\"existingVideoStrategy\" id=\"import\" value=\"import\" formControlName=\"existingVideoStrategy\" />\n          <label for=\"import\" i18n>Import all and watch for new publications</label>\n        </div>\n\n        <div class=\"peertube-radio-container\">\n          <input type=\"radio\" name=\"existingVideoStrategy\" id=\"doNothing\" value=\"nothing\" formControlName=\"existingVideoStrategy\" />\n          <label for=\"doNothing\" i18n>Only watch for new publications</label>\n        </div>\n      </div>\n\n      <input type=\"submit\" class=\"peertube-button primary-button\" value=\"{{ getFormButtonTitle() }}\" [disabled]=\"!form.valid\">\n    </form>\n  </div>\n</div>\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { AuthService, Notifier } from '@app/core'\nimport { listUserChannelsForSelect } from '@app/helpers'\nimport { VIDEO_CHANNEL_EXTERNAL_URL_VALIDATOR } from '@app/shared/form-validators/video-channel-validators'\nimport { FormReactive } from '@app/shared/shared-forms/form-reactive'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { VideoChannelSyncService } from '@app/shared/shared-main/channel/video-channel-sync.service'\nimport { VideoChannelService } from '@app/shared/shared-main/channel/video-channel.service'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport { VideoChannelSyncCreate } from '@peertube/peertube-models'\nimport { mergeMap } from 'rxjs'\nimport { SelectChannelItem } from 'src/types'\nimport { SelectChannelComponent } from '../../../shared/shared-forms/select/select-channel.component'\nimport { REQUIRED_VALIDATOR } from '@app/shared/form-validators/common-validators'\n\n@Component({\n  selector: 'my-video-channel-sync-edit',\n  templateUrl: './video-channel-sync-edit.component.html',\n  styleUrls: [ './video-channel-sync-edit.component.scss' ],\n  imports: [ NgIf, FormsModule, ReactiveFormsModule, NgClass, SelectChannelComponent, AlertComponent ]\n})\nexport class VideoChannelSyncEditComponent extends FormReactive implements OnInit {\n  protected formReactiveService = inject(FormReactiveService)\n  private authService = inject(AuthService)\n  private router = inject(Router)\n  private notifier = inject(Notifier)\n  private videoChannelSyncService = inject(VideoChannelSyncService)\n  private videoChannelService = inject(VideoChannelService)\n\n  error: string\n  userVideoChannels: SelectChannelItem[] = []\n  existingVideosStrategy: string\n\n  ngOnInit () {\n    this.buildForm({\n      externalChannelUrl: VIDEO_CHANNEL_EXTERNAL_URL_VALIDATOR,\n      videoChannel: REQUIRED_VALIDATOR,\n      existingVideoStrategy: REQUIRED_VALIDATOR\n    })\n\n    listUserChannelsForSelect(this.authService)\n      .subscribe(channels => this.userVideoChannels = channels)\n  }\n\n  getFormButtonTitle () {\n    return $localize`Create`\n  }\n\n  formValidated () {\n    this.error = undefined\n\n    const body = this.form.value\n    const videoChannelSyncCreate: VideoChannelSyncCreate = {\n      externalChannelUrl: body.externalChannelUrl,\n      videoChannelId: body.videoChannel\n    }\n\n    const importExistingVideos = body['existingVideoStrategy'] === 'import'\n\n    this.videoChannelSyncService.createSync(videoChannelSyncCreate)\n      .pipe(mergeMap(({ videoChannelSync }) => {\n        return importExistingVideos\n          ? this.videoChannelService.importVideos(videoChannelSync.channel.name, videoChannelSync.externalChannelUrl, videoChannelSync.id)\n          : Promise.resolve(null)\n      }))\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Synchronization created successfully.`)\n          this.router.navigate([ '/my-library', 'video-channel-syncs' ])\n        },\n\n        error: err => {\n          this.error = err.message\n        }\n      })\n  }\n}\n","<div class=\"mb-4 d-flex justify-content-between\">\n  <my-advanced-input-filter (search)=\"onSearch($event)\"></my-advanced-input-filter>\n</div>\n\n<p-table\n  [value]=\"videoImports\" [lazy]=\"true\" [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\" [rows]=\"rowsPerPage\" [first]=\"pagination.start\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\" [sortField]=\"sort.field\" [sortOrder]=\"sort.order\" (onLazyLoad)=\"loadLazy($event)\" [lazyLoadOnInit]=\"false\" dataKey=\"id\"\n  [showCurrentPageReport]=\"true\" [currentPageReportTemplate]=\"getPaginationTemplate()\"\n  [expandedRowKeys]=\"expandedRows\"\n>\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th scope=\"col\" style=\"width: 40px;\">\n        <span i18n class=\"visually-hidden\">More information</span>\n      </th>\n      <th scope=\"col\" style=\"width: 200px\">Action</th>\n      <th scope=\"col\" style=\"width: 45%\" i18n>Target</th>\n      <th scope=\"col\" style=\"width: 55%\" i18n>Video</th>\n      <th scope=\"col\" style=\"width: 150px\" i18n>State</th>\n      <th scope=\"col\" style=\"width: 150px\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"createdAt\">Created <p-sortIcon field=\"createdAt\"></p-sortIcon></th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-expanded=\"expanded\" let-videoImport>\n    <tr>\n      <td class=\"expand-cell\">\n        <my-table-expander-icon *ngIf=\"videoImport.error\" [pRowToggler]=\"videoImport\" [expanded]=\"expanded\"></my-table-expander-icon>\n      </td>\n\n      <td class=\"action-cell\">\n        <my-button *ngIf=\"isVideoImportPending(videoImport)\" i18n-label label=\"Cancel\" icon=\"no\" (click)=\"cancelImport(videoImport)\"></my-button>\n        <my-delete-button *ngIf=\"isVideoImportFailed(videoImport) || isVideoImportCancelled(videoImport) || !videoImport.video\" (click)=\"deleteImport(videoImport)\"></my-delete-button>\n        <my-edit-button *ngIf=\"isVideoImportSuccess(videoImport) && videoImport.video\" [ptRouterLink]=\"getEditVideoUrl(videoImport.video)\"></my-edit-button>\n      </td>\n\n      <td>\n        <a *ngIf=\"videoImport.targetUrl; else torrent\" [href]=\"videoImport.targetUrl\" target=\"_blank\" rel=\"noopener noreferrer\">{{ videoImport.targetUrl }}</a>\n        <ng-template #torrent>\n          <span [title]=\"videoImport.torrentName || videoImport.magnetUri\">{{ videoImport.torrentName || videoImport.magnetUri }}</span>\n        </ng-template>\n      </td>\n\n      <td>\n        <ng-container *ngIf=\"isVideoImportPending(videoImport)\">{{ videoImport.video?.name }}</ng-container>\n        <ng-container *ngIf=\"isVideoImportSuccess(videoImport) && videoImport.video\">\n          <a [href]=\"getVideoUrl(videoImport.video)\" target=\"_blank\" rel=\"noopener noreferrer\">{{ videoImport.video?.name }}</a>\n        </ng-container>\n        <ng-container *ngIf=\"isVideoImportSuccess(videoImport) && !videoImport.video\" i18n>This video was deleted</ng-container>\n        <ng-container *ngIf=\"isVideoImportFailed(videoImport)\"></ng-container>\n      </td>\n\n      <td>\n        <span class=\"pt-badge\" [ngClass]=\"getVideoImportStateClass(videoImport.state.id)\">\n          {{ videoImport.state.label }}\n        </span>\n      </td>\n\n      <td>{{ videoImport.createdAt | ptDate: 'short' }}</td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"rowexpansion\" let-videoImport>\n    <tr class=\"video-import-error\" *ngIf=\"videoImport.error\">\n      <td myAutoColspan>\n        <pre>{{ videoImport.error }}</pre>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { Notifier, RestPagination, RestTable } from '@app/core'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { VideoImportService } from '@app/shared/shared-main/video/video-import.service'\nimport { Video } from '@app/shared/shared-main/video/video.model'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { VideoImport, VideoImportState, VideoImportStateType } from '@peertube/peertube-models'\nimport { SharedModule, SortMeta } from 'primeng/api'\nimport { TableModule } from 'primeng/table'\nimport { AdvancedInputFilterComponent } from '../../shared/shared-forms/advanced-input-filter.component'\nimport { ButtonComponent } from '../../shared/shared-main/buttons/button.component'\nimport { DeleteButtonComponent } from '../../shared/shared-main/buttons/delete-button.component'\nimport { EditButtonComponent } from '../../shared/shared-main/buttons/edit-button.component'\nimport { AutoColspanDirective } from '../../shared/shared-main/common/auto-colspan.directive'\nimport { TableExpanderIconComponent } from '../../shared/shared-tables/table-expander-icon.component'\n\n@Component({\n  templateUrl: './my-video-imports.component.html',\n  styleUrls: [ './my-video-imports.component.scss' ],\n  imports: [\n    AdvancedInputFilterComponent,\n    TableModule,\n    SharedModule,\n    NgbTooltip,\n    NgIf,\n    TableExpanderIconComponent,\n    ButtonComponent,\n    DeleteButtonComponent,\n    EditButtonComponent,\n    NgClass,\n    AutoColspanDirective,\n    PTDatePipe\n  ]\n})\nexport class MyVideoImportsComponent extends RestTable implements OnInit {\n  private notifier = inject(Notifier)\n  private videoImportService = inject(VideoImportService)\n\n  videoImports: VideoImport[] = []\n  totalRecords = 0\n  sort: SortMeta = { field: 'createdAt', order: 1 }\n  pagination: RestPagination = { count: this.rowsPerPage, start: 0 }\n\n  ngOnInit () {\n    this.initialize()\n  }\n\n  getIdentifier () {\n    return 'MyVideoImportsComponent'\n  }\n\n  getVideoImportStateClass (state: VideoImportStateType) {\n    switch (state) {\n      case VideoImportState.FAILED:\n        return 'badge-red'\n\n      case VideoImportState.REJECTED:\n        return 'badge-banned'\n\n      case VideoImportState.PENDING:\n        return 'badge-yellow'\n\n      case VideoImportState.PROCESSING:\n        return 'badge-blue'\n\n      default:\n        return 'badge-green'\n    }\n  }\n\n  isVideoImportSuccess (videoImport: VideoImport) {\n    return videoImport.state.id === VideoImportState.SUCCESS\n  }\n\n  isVideoImportPending (videoImport: VideoImport) {\n    return videoImport.state.id === VideoImportState.PENDING\n  }\n\n  isVideoImportFailed (videoImport: VideoImport) {\n    return videoImport.state.id === VideoImportState.FAILED\n  }\n\n  isVideoImportCancelled (videoImport: VideoImport) {\n    return videoImport.state.id === VideoImportState.CANCELLED\n  }\n\n  getVideoUrl (video: { uuid: string }) {\n    return Video.buildWatchUrl(video)\n  }\n\n  getEditVideoUrl (video: { uuid: string }) {\n    return Video.buildUpdateUrl(video)\n  }\n\n  deleteImport (videoImport: VideoImport) {\n    this.videoImportService.deleteVideoImport(videoImport)\n      .subscribe({\n        next: () => this.reloadData(),\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  cancelImport (videoImport: VideoImport) {\n    this.videoImportService.cancelVideoImport(videoImport)\n      .subscribe({\n        next: () => this.reloadData(),\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  protected reloadDataInternal () {\n    this.videoImportService.getMyVideoImports(this.pagination, this.sort, this.search)\n      .subscribe({\n        next: resultList => {\n          this.videoImports = resultList.data\n          this.totalRecords = resultList.total\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n}\n","import { FormReactive } from '@app/shared/shared-forms/form-reactive'\nimport { VideoPlaylist } from '@app/shared/shared-video-playlist/video-playlist.model'\nimport { VideoConstant, VideoPlaylistPrivacyType } from '@peertube/peertube-models'\nimport { SelectChannelItem } from '../../../types/select-options-item.model'\n\nexport abstract class MyVideoPlaylistEdit extends FormReactive {\n  // Declare it here to avoid errors in create template\n  videoPlaylistToUpdate: VideoPlaylist\n  userVideoChannels: SelectChannelItem[] = []\n  videoPlaylistPrivacies: VideoConstant<VideoPlaylistPrivacyType>[] = []\n\n  abstract isCreation (): boolean\n  abstract getFormButtonTitle (): string\n}\n","<my-alert *ngIf=\"error\" type=\"danger\">{{ error }}</my-alert>\n\n<div class=\"pt-two-cols\"> <!-- playlist grid -->\n  <div class=\"title-col\">\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"pt-breadcrumb\">\n        <li class=\"breadcrumb-item\">\n          <a routerLink=\"/my-library/video-playlists\" i18n>My Playlists</a>\n        </li>\n\n        @if (isCreation()) {\n          <li class=\"breadcrumb-item active\" i18n>Create</li>\n        } @else {\n          <li class=\"breadcrumb-item active\" i18n>Edit</li>\n\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            <a *ngIf=\"videoPlaylistToUpdate\" [routerLink]=\"[ '/my-library/video-playlists/update', videoPlaylistToUpdate?.shortUUID]\">\n              {{ videoPlaylistToUpdate?.displayName }}\n            </a>\n          </li>\n        }\n      </ol>\n    </nav>\n\n    @if (isCreation()) {\n      <h2 class=\"visually-hidden\" i18n>NEW PLAYLIST</h2>\n    } @else {\n      <h2 class=\"visually-hidden\" i18n>UPDATE PLAYLIST</h2>\n    }\n  </div>\n\n  <div class=\"content-col\">\n    <form (ngSubmit)=\"formValidated()\" [formGroup]=\"form\">\n\n      <div class=\"form-group\">\n        <label for=\"thumbnailfile\" i18n>Playlist thumbnail</label>\n\n        <my-preview-upload\n          i18n-inputLabel inputLabel=\"Edit\" inputName=\"thumbnailfile\" formControlName=\"thumbnailfile\"\n          previewWidth=\"223px\" previewHeight=\"122px\"\n        ></my-preview-upload>\n      </div>\n\n      <div class=\"form-group\">\n        <label i18n for=\"displayName\">Display name</label>\n        <input\n          type=\"text\" id=\"displayName\" class=\"form-control\"\n          formControlName=\"displayName\" [ngClass]=\"{ 'input-error': formErrors['displayName'] }\"\n        >\n        <div *ngIf=\"formErrors['displayName']\" class=\"form-error\" role=\"alert\">\n          {{ formErrors['displayName'] }}\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label i18n for=\"description\">Description</label><my-help helpType=\"markdownText\"></my-help>\n        <my-markdown-textarea inputId=\"description\" formControlName=\"description\" [formError]=\"formErrors['description']\"></my-markdown-textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label i18n for=\"privacy\">Privacy</label>\n        <my-select-options inputId=\"privacy\" [items]=\"videoPlaylistPrivacies\" formControlName=\"privacy\"></my-select-options>\n\n        <div *ngIf=\"formErrors.privacy\" class=\"form-error\" role=\"alert\">{{ formErrors.privacy }}</div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"videoChannelId\" i18n>Channel</label>\n\n        <my-select-channel inputId=\"videoChannelId\" [items]=\"userVideoChannels\" formControlName=\"videoChannelId\"></my-select-channel>\n\n        <div *ngIf=\"formErrors['videoChannelId']\" class=\"form-error\" role=\"alert\">{{ formErrors['videoChannelId'] }}</div>\n      </div>\n\n      <input type=\"submit\" class=\"peertube-button primary-button\" value=\"{{ getFormButtonTitle() }}\" [disabled]=\"!form.valid\">\n    </form>\n  </div>\n</div>\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { Router, RouterLink } from '@angular/router'\nimport { AuthService, Notifier, ServerService } from '@app/core'\nimport { listUserChannelsForSelect } from '@app/helpers'\nimport {\n  setPlaylistChannelValidator,\n  VIDEO_PLAYLIST_CHANNEL_ID_VALIDATOR,\n  VIDEO_PLAYLIST_DESCRIPTION_VALIDATOR,\n  VIDEO_PLAYLIST_DISPLAY_NAME_VALIDATOR,\n  VIDEO_PLAYLIST_PRIVACY_VALIDATOR\n} from '@app/shared/form-validators/video-playlist-validators'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport { VideoPlaylistService } from '@app/shared/shared-video-playlist/video-playlist.service'\nimport { VideoPlaylistCreate, VideoPlaylistPrivacy } from '@peertube/peertube-models'\nimport { MarkdownTextareaComponent } from '../../shared/shared-forms/markdown-textarea.component'\nimport { PreviewUploadComponent } from '../../shared/shared-forms/preview-upload.component'\nimport { SelectChannelComponent } from '../../shared/shared-forms/select/select-channel.component'\nimport { SelectOptionsComponent } from '../../shared/shared-forms/select/select-options.component'\nimport { HelpComponent } from '../../shared/shared-main/buttons/help.component'\nimport { MyVideoPlaylistEdit } from './my-video-playlist-edit'\n\n@Component({\n  templateUrl: './my-video-playlist-edit.component.html',\n  styleUrls: [ './my-video-playlist-edit.component.scss' ],\n  imports: [\n    NgIf,\n    RouterLink,\n    FormsModule,\n    ReactiveFormsModule,\n    PreviewUploadComponent,\n    NgClass,\n    HelpComponent,\n    MarkdownTextareaComponent,\n    SelectOptionsComponent,\n    SelectChannelComponent,\n    AlertComponent\n  ]\n})\nexport class MyVideoPlaylistCreateComponent extends MyVideoPlaylistEdit implements OnInit {\n  protected formReactiveService = inject(FormReactiveService)\n  private authService = inject(AuthService)\n  private notifier = inject(Notifier)\n  private router = inject(Router)\n  private videoPlaylistService = inject(VideoPlaylistService)\n  private serverService = inject(ServerService)\n\n  error: string\n\n  ngOnInit () {\n    this.buildForm({\n      displayName: VIDEO_PLAYLIST_DISPLAY_NAME_VALIDATOR,\n      privacy: VIDEO_PLAYLIST_PRIVACY_VALIDATOR,\n      description: VIDEO_PLAYLIST_DESCRIPTION_VALIDATOR,\n      videoChannelId: VIDEO_PLAYLIST_CHANNEL_ID_VALIDATOR,\n      thumbnailfile: null\n    })\n\n    this.form.get('privacy').valueChanges.subscribe(privacy => {\n      setPlaylistChannelValidator(this.form.get('videoChannelId'), privacy)\n    })\n\n    listUserChannelsForSelect(this.authService)\n      .subscribe(channels => this.userVideoChannels = channels)\n\n    this.serverService.getVideoPlaylistPrivacies()\n      .subscribe(videoPlaylistPrivacies => {\n        this.videoPlaylistPrivacies = videoPlaylistPrivacies\n\n        this.form.patchValue({\n          privacy: VideoPlaylistPrivacy.PRIVATE\n        })\n      })\n  }\n\n  formValidated () {\n    this.error = undefined\n\n    const body = this.form.value\n    const videoPlaylistCreate: VideoPlaylistCreate = {\n      displayName: body.displayName,\n      privacy: body.privacy,\n      description: body.description || null,\n      videoChannelId: body.videoChannelId || null,\n      thumbnailfile: body.thumbnailfile || null\n    }\n\n    this.videoPlaylistService.createVideoPlaylist(videoPlaylistCreate)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Playlist ${videoPlaylistCreate.displayName} created.`)\n          this.router.navigate([ '/my-library', 'video-playlists' ])\n        },\n\n        error: err => {\n          this.error = err.message\n        }\n      })\n  }\n\n  isCreation () {\n    return true\n  }\n\n  getFormButtonTitle () {\n    return $localize`Create`\n  }\n}\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, inject, NgZone, RendererFactory2, Injectable, ElementRef, Renderer2, ChangeDetectorRef, Injector, afterNextRender, booleanAttribute, Optional, Inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, NgModule } from '@angular/core';\nimport { Subject, of, Observable, Subscription, animationFrameScheduler, asapScheduler, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, startWith, takeUntil, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { c as coerceNumberProperty, a as coerceElement } from './element-x4z00URv.mjs';\nimport { P as Platform } from './platform-DmdVEw_C.mjs';\nimport { D as Directionality } from './directionality-CBXD4hga.mjs';\nimport { g as getRtlScrollAxisType, R as RtlScrollAxisType, s as supportsScrollBehavior } from './scrolling-BkvA05C8.mjs';\nimport { BidiModule } from './bidi.mjs';\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nexport { Dir as ɵɵDir } from './bidi.mjs';\nimport { DOCUMENT } from '@angular/common';\nimport { b as _VIEW_REPEATER_STRATEGY, A as ArrayDataSource, _ as _RecycleViewRepeaterStrategy } from './recycle-view-repeater-strategy-DoWdPqVw.mjs';\nimport { i as isDataSource } from './data-source-D34wiQZj.mjs';\n\n/** The injection token used to specify the virtual scrolling strategy. */\nconst VIRTUAL_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n  _scrolledIndexChange = /*#__PURE__*/new Subject();\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  scrolledIndexChange = /*#__PURE__*/this._scrolledIndexChange.pipe(/*#__PURE__*/distinctUntilChanged());\n  /** The attached viewport. */\n  _viewport = null;\n  /** The size of the items in the virtually scrolling list. */\n  _itemSize;\n  /** The minimum amount of buffer rendered beyond the viewport (in pixels). */\n  _minBufferPx;\n  /** The number of buffer items to render beyond the edge of the viewport (in pixels). */\n  _maxBufferPx;\n  /**\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  constructor(itemSize, minBufferPx, maxBufferPx) {\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n  }\n  /**\n   * Attaches this scroll strategy to a viewport.\n   * @param viewport The viewport to attach this strategy to.\n   */\n  attach(viewport) {\n    this._viewport = viewport;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** Detaches this scroll strategy from the currently attached viewport. */\n  detach() {\n    this._scrolledIndexChange.complete();\n    this._viewport = null;\n  }\n  /**\n   * Update the item size and buffer size.\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n    if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n    }\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentScrolled() {\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onDataLengthChanged() {\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentRendered() {\n    /* no-op */\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onRenderedOffsetChanged() {\n    /* no-op */\n  }\n  /**\n   * Scroll to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling.\n   */\n  scrollToIndex(index, behavior) {\n    if (this._viewport) {\n      this._viewport.scrollToOffset(index * this._itemSize, behavior);\n    }\n  }\n  /** Update the viewport's total content size. */\n  _updateTotalContentSize() {\n    if (!this._viewport) {\n      return;\n    }\n    this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n  }\n  /** Update the viewport's rendered range. */\n  _updateRenderedRange() {\n    if (!this._viewport) {\n      return;\n    }\n    const renderedRange = this._viewport.getRenderedRange();\n    const newRange = {\n      start: renderedRange.start,\n      end: renderedRange.end\n    };\n    const viewportSize = this._viewport.getViewportSize();\n    const dataLength = this._viewport.getDataLength();\n    let scrollOffset = this._viewport.measureScrollOffset();\n    // Prevent NaN as result when dividing by zero.\n    let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n    // If user scrolls to the bottom of the list and data changes to a smaller list\n    if (newRange.end > dataLength) {\n      // We have to recalculate the first visible index based on new data length and viewport size.\n      const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n      const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n      // If first visible index changed we must update scroll offset to handle start/end buffers\n      // Current range must also be adjusted to cover the new position (bottom of new list).\n      if (firstVisibleIndex != newVisibleIndex) {\n        firstVisibleIndex = newVisibleIndex;\n        scrollOffset = newVisibleIndex * this._itemSize;\n        newRange.start = Math.floor(firstVisibleIndex);\n      }\n      newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n    }\n    const startBuffer = scrollOffset - newRange.start * this._itemSize;\n    if (startBuffer < this._minBufferPx && newRange.start != 0) {\n      const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n      newRange.start = Math.max(0, newRange.start - expandStart);\n      newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n    } else {\n      const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n      if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n        const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n        if (expandEnd > 0) {\n          newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n          newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n        }\n      }\n    }\n    this._viewport.setRenderedRange(newRange);\n    this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n    this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n  }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n  return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nlet CdkFixedSizeVirtualScroll = /*#__PURE__*/(() => {\n  class CdkFixedSizeVirtualScroll {\n    /** The size of the items in the list (in pixels). */\n    get itemSize() {\n      return this._itemSize;\n    }\n    set itemSize(value) {\n      this._itemSize = coerceNumberProperty(value);\n    }\n    _itemSize = 20;\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() {\n      return this._minBufferPx;\n    }\n    set minBufferPx(value) {\n      this._minBufferPx = coerceNumberProperty(value);\n    }\n    _minBufferPx = 100;\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() {\n      return this._maxBufferPx;\n    }\n    set maxBufferPx(value) {\n      this._maxBufferPx = coerceNumberProperty(value);\n    }\n    _maxBufferPx = 200;\n    /** The scroll strategy used by this directive. */\n    _scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    ngOnChanges() {\n      this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    static ɵfac = function CdkFixedSizeVirtualScroll_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkFixedSizeVirtualScroll)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkFixedSizeVirtualScroll,\n      selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]],\n      inputs: {\n        itemSize: \"itemSize\",\n        minBufferPx: \"minBufferPx\",\n        maxBufferPx: \"maxBufferPx\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: VIRTUAL_SCROLL_STRATEGY,\n        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n        deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n      }]), i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return CdkFixedSizeVirtualScroll;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nlet ScrollDispatcher = /*#__PURE__*/(() => {\n  class ScrollDispatcher {\n    _ngZone = inject(NgZone);\n    _platform = inject(Platform);\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _cleanupGlobalListener;\n    constructor() {}\n    /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n    _scrolled = new Subject();\n    /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n    _scrolledCount = 0;\n    /**\n     * Map of all the scrollable references that are registered with the service and their\n     * scroll event subscriptions.\n     */\n    scrollContainers = new Map();\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n      if (!this.scrollContainers.has(scrollable)) {\n        this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n      }\n    }\n    /**\n     * De-registers a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n      const scrollableReference = this.scrollContainers.get(scrollable);\n      if (scrollableReference) {\n        scrollableReference.unsubscribe();\n        this.scrollContainers.delete(scrollable);\n      }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n      if (!this._platform.isBrowser) {\n        return of();\n      }\n      return new Observable(observer => {\n        if (!this._cleanupGlobalListener) {\n          this._cleanupGlobalListener = this._ngZone.runOutsideAngular(() => this._renderer.listen('document', 'scroll', () => this._scrolled.next()));\n        }\n        // In the case of a 0ms delay, use an observable without auditTime\n        // since it does add a perceptible delay in processing overhead.\n        const subscription = auditTimeInMs > 0 ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) : this._scrolled.subscribe(observer);\n        this._scrolledCount++;\n        return () => {\n          subscription.unsubscribe();\n          this._scrolledCount--;\n          if (!this._scrolledCount) {\n            this._cleanupGlobalListener?.();\n            this._cleanupGlobalListener = undefined;\n          }\n        };\n      });\n    }\n    ngOnDestroy() {\n      this._cleanupGlobalListener?.();\n      this._cleanupGlobalListener = undefined;\n      this.scrollContainers.forEach((_, container) => this.deregister(container));\n      this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n      const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n      return this.scrolled(auditTimeInMs).pipe(filter(target => !target || ancestors.indexOf(target) > -1));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n      const scrollingContainers = [];\n      this.scrollContainers.forEach((_subscription, scrollable) => {\n        if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n          scrollingContainers.push(scrollable);\n        }\n      });\n      return scrollingContainers;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n      let element = coerceElement(elementOrElementRef);\n      let scrollableElement = scrollable.getElementRef().nativeElement;\n      // Traverse through the element parents until we reach null, checking if any of the elements\n      // are the scrollable's element.\n      do {\n        if (element == scrollableElement) {\n          return true;\n        }\n      } while (element = element.parentElement);\n      return false;\n    }\n    static ɵfac = function ScrollDispatcher_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ScrollDispatcher)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ScrollDispatcher,\n      factory: ScrollDispatcher.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ScrollDispatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nlet CdkScrollable = /*#__PURE__*/(() => {\n  class CdkScrollable {\n    elementRef = inject(ElementRef);\n    scrollDispatcher = inject(ScrollDispatcher);\n    ngZone = inject(NgZone);\n    dir = inject(Directionality, {\n      optional: true\n    });\n    _scrollElement = this.elementRef.nativeElement;\n    _destroyed = new Subject();\n    _renderer = inject(Renderer2);\n    _cleanupScroll;\n    _elementScrolled = new Subject();\n    constructor() {}\n    ngOnInit() {\n      this._cleanupScroll = this.ngZone.runOutsideAngular(() => this._renderer.listen(this._scrollElement, 'scroll', event => this._elementScrolled.next(event)));\n      this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n      this._cleanupScroll?.();\n      this._elementScrolled.complete();\n      this.scrollDispatcher.deregister(this);\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n      return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n      return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n      const el = this.elementRef.nativeElement;\n      const isRtl = this.dir && this.dir.value == 'rtl';\n      // Rewrite start & end offsets as right or left offsets.\n      if (options.left == null) {\n        options.left = isRtl ? options.end : options.start;\n      }\n      if (options.right == null) {\n        options.right = isRtl ? options.start : options.end;\n      }\n      // Rewrite the bottom offset as a top offset.\n      if (options.bottom != null) {\n        options.top = el.scrollHeight - el.clientHeight - options.bottom;\n      }\n      // Rewrite the right offset as a left offset.\n      if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n        if (options.left != null) {\n          options.right = el.scrollWidth - el.clientWidth - options.left;\n        }\n        if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n          options.left = options.right;\n        } else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n          options.left = options.right ? -options.right : options.right;\n        }\n      } else {\n        if (options.right != null) {\n          options.left = el.scrollWidth - el.clientWidth - options.right;\n        }\n      }\n      this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n      const el = this.elementRef.nativeElement;\n      if (supportsScrollBehavior()) {\n        el.scrollTo(options);\n      } else {\n        if (options.top != null) {\n          el.scrollTop = options.top;\n        }\n        if (options.left != null) {\n          el.scrollLeft = options.left;\n        }\n      }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n      const LEFT = 'left';\n      const RIGHT = 'right';\n      const el = this.elementRef.nativeElement;\n      if (from == 'top') {\n        return el.scrollTop;\n      }\n      if (from == 'bottom') {\n        return el.scrollHeight - el.clientHeight - el.scrollTop;\n      }\n      // Rewrite start & end as left or right offsets.\n      const isRtl = this.dir && this.dir.value == 'rtl';\n      if (from == 'start') {\n        from = isRtl ? RIGHT : LEFT;\n      } else if (from == 'end') {\n        from = isRtl ? LEFT : RIGHT;\n      }\n      if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n        // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n        // 0 when scrolled all the way right.\n        if (from == LEFT) {\n          return el.scrollWidth - el.clientWidth - el.scrollLeft;\n        } else {\n          return el.scrollLeft;\n        }\n      } else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n        // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n        // 0 when scrolled all the way right.\n        if (from == LEFT) {\n          return el.scrollLeft + el.scrollWidth - el.clientWidth;\n        } else {\n          return -el.scrollLeft;\n        }\n      } else {\n        // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n        // (scrollWidth - clientWidth) when scrolled all the way right.\n        if (from == LEFT) {\n          return el.scrollLeft;\n        } else {\n          return el.scrollWidth - el.clientWidth - el.scrollLeft;\n        }\n      }\n    }\n    static ɵfac = function CdkScrollable_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkScrollable)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkScrollable,\n      selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]]\n    });\n  }\n  return CdkScrollable;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nlet ViewportRuler = /*#__PURE__*/(() => {\n  class ViewportRuler {\n    _platform = inject(Platform);\n    _listeners;\n    /** Cached viewport dimensions. */\n    _viewportSize;\n    /** Stream of viewport change events. */\n    _change = new Subject();\n    /** Used to reference correct document/window */\n    _document = inject(DOCUMENT, {\n      optional: true\n    });\n    constructor() {\n      const ngZone = inject(NgZone);\n      const renderer = inject(RendererFactory2).createRenderer(null, null);\n      ngZone.runOutsideAngular(() => {\n        if (this._platform.isBrowser) {\n          const changeListener = event => this._change.next(event);\n          this._listeners = [renderer.listen('window', 'resize', changeListener), renderer.listen('window', 'orientationchange', changeListener)];\n        }\n        // Clear the cached position so that the viewport is re-measured next time it is required.\n        // We don't need to keep track of the subscription, because it is completed on destroy.\n        this.change().subscribe(() => this._viewportSize = null);\n      });\n    }\n    ngOnDestroy() {\n      this._listeners?.forEach(cleanup => cleanup());\n      this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n      if (!this._viewportSize) {\n        this._updateViewportSize();\n      }\n      const output = {\n        width: this._viewportSize.width,\n        height: this._viewportSize.height\n      };\n      // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n      if (!this._platform.isBrowser) {\n        this._viewportSize = null;\n      }\n      return output;\n    }\n    /** Gets a DOMRect for the viewport's bounds. */\n    getViewportRect() {\n      // Use the document element's bounding rect rather than the window scroll properties\n      // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n      // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n      // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n      // can disagree when the page is pinch-zoomed (on devices that support touch).\n      // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n      // We use the documentElement instead of the body because, by default (without a css reset)\n      // browsers typically give the document body an 8px margin, which is not included in\n      // getBoundingClientRect().\n      const scrollPosition = this.getViewportScrollPosition();\n      const {\n        width,\n        height\n      } = this.getViewportSize();\n      return {\n        top: scrollPosition.top,\n        left: scrollPosition.left,\n        bottom: scrollPosition.top + height,\n        right: scrollPosition.left + width,\n        height,\n        width\n      };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n      // While we can get a reference to the fake document\n      // during SSR, it doesn't have getBoundingClientRect.\n      if (!this._platform.isBrowser) {\n        return {\n          top: 0,\n          left: 0\n        };\n      }\n      // The top-left-corner of the viewport is determined by the scroll position of the document\n      // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n      // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n      // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n      // `document.documentElement` works consistently, where the `top` and `left` values will\n      // equal negative the scroll position.\n      const document = this._document;\n      const window = this._getWindow();\n      const documentElement = document.documentElement;\n      const documentRect = documentElement.getBoundingClientRect();\n      const top = -documentRect.top || document.body.scrollTop || window.scrollY || documentElement.scrollTop || 0;\n      const left = -documentRect.left || document.body.scrollLeft || window.scrollX || documentElement.scrollLeft || 0;\n      return {\n        top,\n        left\n      };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n      return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n      return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n      const window = this._getWindow();\n      this._viewportSize = this._platform.isBrowser ? {\n        width: window.innerWidth,\n        height: window.innerHeight\n      } : {\n        width: 0,\n        height: 0\n      };\n    }\n    static ɵfac = function ViewportRuler_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ViewportRuler)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ViewportRuler,\n      factory: ViewportRuler.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ViewportRuler;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst VIRTUAL_SCROLLABLE = /*#__PURE__*/new InjectionToken('VIRTUAL_SCROLLABLE');\n/**\n * Extending the {@link CdkScrollable} to be used as scrolling container for virtual scrolling.\n */\nlet CdkVirtualScrollable = /*#__PURE__*/(() => {\n  class CdkVirtualScrollable extends CdkScrollable {\n    constructor() {\n      super();\n    }\n    /**\n     * Measure the viewport size for the provided orientation.\n     *\n     * @param orientation The orientation to measure the size from.\n     */\n    measureViewportSize(orientation) {\n      const viewportEl = this.elementRef.nativeElement;\n      return orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    static ɵfac = function CdkVirtualScrollable_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkVirtualScrollable)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkVirtualScrollable,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return CdkVirtualScrollable;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n  return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nlet CdkVirtualScrollViewport = /*#__PURE__*/(() => {\n  class CdkVirtualScrollViewport extends CdkVirtualScrollable {\n    elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _scrollStrategy = inject(VIRTUAL_SCROLL_STRATEGY, {\n      optional: true\n    });\n    scrollable = inject(VIRTUAL_SCROLLABLE, {\n      optional: true\n    });\n    _platform = inject(Platform);\n    /** Emits when the viewport is detached from a CdkVirtualForOf. */\n    _detachedSubject = new Subject();\n    /** Emits when the rendered range changes. */\n    _renderedRangeSubject = new Subject();\n    /** The direction the viewport scrolls. */\n    get orientation() {\n      return this._orientation;\n    }\n    set orientation(orientation) {\n      if (this._orientation !== orientation) {\n        this._orientation = orientation;\n        this._calculateSpacerSize();\n      }\n    }\n    _orientation = 'vertical';\n    /**\n     * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n     * will be removed.\n     */\n    appendOnly = false;\n    // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n    // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n    // depending on how the strategy calculates the scrolled index, it may come at a cost to\n    // performance.\n    /** Emits when the index of the first element visible in the viewport changes. */\n    scrolledIndexChange = new Observable(observer => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n    /** The element that wraps the rendered content. */\n    _contentWrapper;\n    /** A stream that emits whenever the rendered range changes. */\n    renderedRangeStream = this._renderedRangeSubject;\n    /**\n     * The total size of all content (in pixels), including content that is not currently rendered.\n     */\n    _totalContentSize = 0;\n    /** A string representing the `style.width` property value to be used for the spacer element. */\n    _totalContentWidth = '';\n    /** A string representing the `style.height` property value to be used for the spacer element. */\n    _totalContentHeight = '';\n    /**\n     * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n     * of the visible viewport.\n     */\n    _renderedContentTransform;\n    /** The currently rendered range of indices. */\n    _renderedRange = {\n      start: 0,\n      end: 0\n    };\n    /** The length of the data bound to this viewport (in number of items). */\n    _dataLength = 0;\n    /** The size of the viewport (in pixels). */\n    _viewportSize = 0;\n    /** the currently attached CdkVirtualScrollRepeater. */\n    _forOf;\n    /** The last rendered content offset that was set. */\n    _renderedContentOffset = 0;\n    /**\n     * Whether the last rendered content offset was to the end of the content (and therefore needs to\n     * be rewritten as an offset to the start of the content).\n     */\n    _renderedContentOffsetNeedsRewrite = false;\n    /** Whether there is a pending change detection cycle. */\n    _isChangeDetectionPending = false;\n    /** A list of functions to run after the next change detection cycle. */\n    _runAfterChangeDetection = [];\n    /** Subscription to changes in the viewport size. */\n    _viewportChanges = Subscription.EMPTY;\n    _injector = inject(Injector);\n    _isDestroyed = false;\n    constructor() {\n      super();\n      const viewportRuler = inject(ViewportRuler);\n      if (!this._scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n      }\n      this._viewportChanges = viewportRuler.change().subscribe(() => {\n        this.checkViewportSize();\n      });\n      if (!this.scrollable) {\n        // No scrollable is provided, so the virtual-scroll-viewport needs to become a scrollable\n        this.elementRef.nativeElement.classList.add('cdk-virtual-scrollable');\n        this.scrollable = this;\n      }\n    }\n    ngOnInit() {\n      // Scrolling depends on the element dimensions which we can't get during SSR.\n      if (!this._platform.isBrowser) {\n        return;\n      }\n      if (this.scrollable === this) {\n        super.ngOnInit();\n      }\n      // It's still too early to measure the viewport at this point. Deferring with a promise allows\n      // the Viewport to be rendered with the correct size before we measure. We run this outside the\n      // zone to avoid causing more change detection cycles. We handle the change detection loop\n      // ourselves instead.\n      this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n        this._measureViewportSize();\n        this._scrollStrategy.attach(this);\n        this.scrollable.elementScrolled().pipe(\n        // Start off with a fake scroll event so we properly detect our initial position.\n        startWith(null),\n        // Collect multiple events into one until the next animation frame. This way if\n        // there are multiple scroll events in the same frame we only need to recheck\n        // our layout once.\n        auditTime(0, SCROLL_SCHEDULER),\n        // Usually `elementScrolled` is completed when the scrollable is destroyed, but\n        // that may not be the case if a `CdkVirtualScrollableElement` is used so we have\n        // to unsubscribe here just in case.\n        takeUntil(this._destroyed)).subscribe(() => this._scrollStrategy.onContentScrolled());\n        this._markChangeDetectionNeeded();\n      }));\n    }\n    ngOnDestroy() {\n      this.detach();\n      this._scrollStrategy.detach();\n      // Complete all subjects\n      this._renderedRangeSubject.complete();\n      this._detachedSubject.complete();\n      this._viewportChanges.unsubscribe();\n      this._isDestroyed = true;\n      super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n      if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('CdkVirtualScrollViewport is already attached.');\n      }\n      // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n      // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n      // change detection loop ourselves.\n      this.ngZone.runOutsideAngular(() => {\n        this._forOf = forOf;\n        this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n          const newLength = data.length;\n          if (newLength !== this._dataLength) {\n            this._dataLength = newLength;\n            this._scrollStrategy.onDataLengthChanged();\n          }\n          this._doChangeDetection();\n        });\n      });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n      this._forOf = null;\n      this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n      return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n      return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n      return this._renderedRange;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n      return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n      if (this._totalContentSize !== size) {\n        this._totalContentSize = size;\n        this._calculateSpacerSize();\n        this._markChangeDetectionNeeded();\n      }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n      if (!rangesEqual(this._renderedRange, range)) {\n        if (this.appendOnly) {\n          range = {\n            start: 0,\n            end: Math.max(this._renderedRange.end, range.end)\n          };\n        }\n        this._renderedRangeSubject.next(this._renderedRange = range);\n        this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n      }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n      return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n      // In appendOnly, we always start from the top\n      offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n      // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n      // in the negative direction.\n      const isRtl = this.dir && this.dir.value == 'rtl';\n      const isHorizontal = this.orientation == 'horizontal';\n      const axis = isHorizontal ? 'X' : 'Y';\n      const axisDirection = isHorizontal && isRtl ? -1 : 1;\n      let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n      this._renderedContentOffset = offset;\n      if (to === 'to-end') {\n        transform += ` translate${axis}(-100%)`;\n        // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n        // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n        // expand upward).\n        this._renderedContentOffsetNeedsRewrite = true;\n      }\n      if (this._renderedContentTransform != transform) {\n        // We know this value is safe because we parse `offset` with `Number()` before passing it\n        // into the string.\n        this._renderedContentTransform = transform;\n        this._markChangeDetectionNeeded(() => {\n          if (this._renderedContentOffsetNeedsRewrite) {\n            this._renderedContentOffset -= this.measureRenderedContentSize();\n            this._renderedContentOffsetNeedsRewrite = false;\n            this.setRenderedContentOffset(this._renderedContentOffset);\n          } else {\n            this._scrollStrategy.onRenderedOffsetChanged();\n          }\n        });\n      }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n      const options = {\n        behavior\n      };\n      if (this.orientation === 'horizontal') {\n        options.start = offset;\n      } else {\n        options.top = offset;\n      }\n      this.scrollable.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n      this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the scrollable (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n      // This is to break the call cycle\n      let measureScrollOffset;\n      if (this.scrollable == this) {\n        measureScrollOffset = _from => super.measureScrollOffset(_from);\n      } else {\n        measureScrollOffset = _from => this.scrollable.measureScrollOffset(_from);\n      }\n      return Math.max(0, measureScrollOffset(from ?? (this.orientation === 'horizontal' ? 'start' : 'top')) - this.measureViewportOffset());\n    }\n    /**\n     * Measures the offset of the viewport from the scrolling container\n     * @param from The edge to measure from.\n     */\n    measureViewportOffset(from) {\n      let fromRect;\n      const LEFT = 'left';\n      const RIGHT = 'right';\n      const isRtl = this.dir?.value == 'rtl';\n      if (from == 'start') {\n        fromRect = isRtl ? RIGHT : LEFT;\n      } else if (from == 'end') {\n        fromRect = isRtl ? LEFT : RIGHT;\n      } else if (from) {\n        fromRect = from;\n      } else {\n        fromRect = this.orientation === 'horizontal' ? 'left' : 'top';\n      }\n      const scrollerClientRect = this.scrollable.measureBoundingClientRectWithScrollOffset(fromRect);\n      const viewportClientRect = this.elementRef.nativeElement.getBoundingClientRect()[fromRect];\n      return viewportClientRect - scrollerClientRect;\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n      const contentEl = this._contentWrapper.nativeElement;\n      return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n      if (!this._forOf) {\n        return 0;\n      }\n      return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n      // TODO: Cleanup later when add logic for handling content resize\n      this._measureViewportSize();\n      this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n      this._viewportSize = this.scrollable.measureViewportSize(this.orientation);\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n      if (runAfter) {\n        this._runAfterChangeDetection.push(runAfter);\n      }\n      // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n      // properties sequentially we only have to run `_doChangeDetection` once at the end.\n      if (!this._isChangeDetectionPending) {\n        this._isChangeDetectionPending = true;\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n          this._doChangeDetection();\n        }));\n      }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n      if (this._isDestroyed) {\n        return;\n      }\n      this.ngZone.run(() => {\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this._changeDetectorRef.markForCheck();\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        afterNextRender(() => {\n          this._isChangeDetectionPending = false;\n          const runAfterChangeDetection = this._runAfterChangeDetection;\n          this._runAfterChangeDetection = [];\n          for (const fn of runAfterChangeDetection) {\n            fn();\n          }\n        }, {\n          injector: this._injector\n        });\n      });\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n      this._totalContentHeight = this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n      this._totalContentWidth = this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n    static ɵfac = function CdkVirtualScrollViewport_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkVirtualScrollViewport)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CdkVirtualScrollViewport,\n      selectors: [[\"cdk-virtual-scroll-viewport\"]],\n      viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n        }\n      },\n      hostAttrs: [1, \"cdk-virtual-scroll-viewport\"],\n      hostVars: 4,\n      hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n        }\n      },\n      inputs: {\n        orientation: \"orientation\",\n        appendOnly: [2, \"appendOnly\", \"appendOnly\", booleanAttribute]\n      },\n      outputs: {\n        scrolledIndexChange: \"scrolledIndexChange\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkScrollable,\n        useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n        deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport]\n      }]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c1,\n      decls: 4,\n      vars: 4,\n      consts: [[\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-content-wrapper\"], [1, \"cdk-virtual-scroll-spacer\"]],\n      template: function CdkVirtualScrollViewport_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 1, 0);\n          i0.ɵɵprojection(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(3, \"div\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n        }\n      },\n      styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return CdkVirtualScrollViewport;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n  const el = node;\n  if (!el.getBoundingClientRect) {\n    return 0;\n  }\n  const rect = el.getBoundingClientRect();\n  if (orientation === 'horizontal') {\n    return direction === 'start' ? rect.left : rect.right;\n  }\n  return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nlet CdkVirtualForOf = /*#__PURE__*/(() => {\n  class CdkVirtualForOf {\n    _viewContainerRef = inject(ViewContainerRef);\n    _template = inject(TemplateRef);\n    _differs = inject(IterableDiffers);\n    _viewRepeater = inject(_VIEW_REPEATER_STRATEGY);\n    _viewport = inject(CdkVirtualScrollViewport, {\n      skipSelf: true\n    });\n    /** Emits when the rendered view of the data changes. */\n    viewChange = new Subject();\n    /** Subject that emits when a new DataSource instance is given. */\n    _dataSourceChanges = new Subject();\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n      return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n      this._cdkVirtualForOf = value;\n      if (isDataSource(value)) {\n        this._dataSourceChanges.next(value);\n      } else {\n        // If value is an an NgIterable, convert it to an array.\n        this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n      }\n    }\n    _cdkVirtualForOf;\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n      return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n      this._needsUpdate = true;\n      this._cdkVirtualForTrackBy = fn ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) : undefined;\n    }\n    _cdkVirtualForTrackBy;\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n      if (value) {\n        this._needsUpdate = true;\n        this._template = value;\n      }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n      return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n      this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    /** Emits whenever the data in the current DataSource changes. */\n    dataStream = this._dataSourceChanges.pipe(\n    // Start off with null `DataSource`.\n    startWith(null),\n    // Bundle up the previous and current data sources so we can work with both.\n    pairwise(),\n    // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n    // new one, passing back a stream of data changes which we run through `switchMap` to give\n    // us a data stream that emits the latest data from whatever the current `DataSource` is.\n    switchMap(([prev, cur]) => this._changeDataSource(prev, cur)),\n    // Replay the last emitted data when someone subscribes.\n    shareReplay(1));\n    /** The differ used to calculate changes to the data. */\n    _differ = null;\n    /** The most recent data emitted from the DataSource. */\n    _data;\n    /** The currently rendered items. */\n    _renderedItems;\n    /** The currently rendered range of indices. */\n    _renderedRange;\n    /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n    _needsUpdate = false;\n    _destroyed = new Subject();\n    constructor() {\n      const ngZone = inject(NgZone);\n      this.dataStream.subscribe(data => {\n        this._data = data;\n        this._onRenderedDataChange();\n      });\n      this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n        this._renderedRange = range;\n        if (this.viewChange.observers.length) {\n          ngZone.run(() => this.viewChange.next(this._renderedRange));\n        }\n        this._onRenderedDataChange();\n      });\n      this._viewport.attach(this);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n      if (range.start >= range.end) {\n        return 0;\n      }\n      if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(`Error: attempted to measure an item that isn't rendered.`);\n      }\n      // The index into the list of rendered views for the first item in the range.\n      const renderedStartIndex = range.start - this._renderedRange.start;\n      // The length of the range we're measuring.\n      const rangeLen = range.end - range.start;\n      // Loop over all the views, find the first and land node and compute the size by subtracting\n      // the top of the first node from the bottom of the last one.\n      let firstNode;\n      let lastNode;\n      // Find the first node by starting from the beginning and going forwards.\n      for (let i = 0; i < rangeLen; i++) {\n        const view = this._viewContainerRef.get(i + renderedStartIndex);\n        if (view && view.rootNodes.length) {\n          firstNode = lastNode = view.rootNodes[0];\n          break;\n        }\n      }\n      // Find the last node by starting from the end and going backwards.\n      for (let i = rangeLen - 1; i > -1; i--) {\n        const view = this._viewContainerRef.get(i + renderedStartIndex);\n        if (view && view.rootNodes.length) {\n          lastNode = view.rootNodes[view.rootNodes.length - 1];\n          break;\n        }\n      }\n      return firstNode && lastNode ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode) : 0;\n    }\n    ngDoCheck() {\n      if (this._differ && this._needsUpdate) {\n        // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n        // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n        // changing (need to do this diff).\n        const changes = this._differ.diff(this._renderedItems);\n        if (!changes) {\n          this._updateContext();\n        } else {\n          this._applyChanges(changes);\n        }\n        this._needsUpdate = false;\n      }\n    }\n    ngOnDestroy() {\n      this._viewport.detach();\n      this._dataSourceChanges.next(undefined);\n      this._dataSourceChanges.complete();\n      this.viewChange.complete();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n      if (!this._renderedRange) {\n        return;\n      }\n      this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n      if (!this._differ) {\n        // Use a wrapper function for the `trackBy` so any new values are\n        // picked up automatically without having to recreate the differ.\n        this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n          return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n        });\n      }\n      this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n      if (oldDs) {\n        oldDs.disconnect(this);\n      }\n      this._needsUpdate = true;\n      return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n      const count = this._data.length;\n      let i = this._viewContainerRef.length;\n      while (i--) {\n        const view = this._viewContainerRef.get(i);\n        view.context.index = this._renderedRange.start + i;\n        view.context.count = count;\n        this._updateComputedContextProperties(view.context);\n        view.detectChanges();\n      }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n      this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n      // Update $implicit for any items that had an identity change.\n      changes.forEachIdentityChange(record => {\n        const view = this._viewContainerRef.get(record.currentIndex);\n        view.context.$implicit = record.item;\n      });\n      // Update the context variables on all items.\n      const count = this._data.length;\n      let i = this._viewContainerRef.length;\n      while (i--) {\n        const view = this._viewContainerRef.get(i);\n        view.context.index = this._renderedRange.start + i;\n        view.context.count = count;\n        this._updateComputedContextProperties(view.context);\n      }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n      context.first = context.index === 0;\n      context.last = context.index === context.count - 1;\n      context.even = context.index % 2 === 0;\n      context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n      // Note that it's important that we insert the item directly at the proper index,\n      // rather than inserting it and the moving it in place, because if there's a directive\n      // on the same node that injects the `ViewContainerRef`, Angular will insert another\n      // comment node which can throw off the move when it's being repeated for all items.\n      return {\n        templateRef: this._template,\n        context: {\n          $implicit: record.item,\n          // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n          // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n          cdkVirtualForOf: this._cdkVirtualForOf,\n          index: -1,\n          count: -1,\n          first: false,\n          last: false,\n          odd: false,\n          even: false\n        },\n        index\n      };\n    }\n    static ngTemplateContextGuard(directive, context) {\n      return true;\n    }\n    static ɵfac = function CdkVirtualForOf_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkVirtualForOf)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkVirtualForOf,\n      selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]],\n      inputs: {\n        cdkVirtualForOf: \"cdkVirtualForOf\",\n        cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\",\n        cdkVirtualForTemplate: \"cdkVirtualForTemplate\",\n        cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _RecycleViewRepeaterStrategy\n      }])]\n    });\n  }\n  return CdkVirtualForOf;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Provides a virtual scrollable for the element it is attached to.\n */\nlet CdkVirtualScrollableElement = /*#__PURE__*/(() => {\n  class CdkVirtualScrollableElement extends CdkVirtualScrollable {\n    constructor() {\n      super();\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n      return this.getElementRef().nativeElement.getBoundingClientRect()[from] - this.measureScrollOffset(from);\n    }\n    static ɵfac = function CdkVirtualScrollableElement_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkVirtualScrollableElement)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkVirtualScrollableElement,\n      selectors: [[\"\", \"cdkVirtualScrollingElement\", \"\"]],\n      hostAttrs: [1, \"cdk-virtual-scrollable\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: VIRTUAL_SCROLLABLE,\n        useExisting: CdkVirtualScrollableElement\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return CdkVirtualScrollableElement;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Provides as virtual scrollable for the global / window scrollbar.\n */\nlet CdkVirtualScrollableWindow = /*#__PURE__*/(() => {\n  class CdkVirtualScrollableWindow extends CdkVirtualScrollable {\n    constructor() {\n      super();\n      const document = inject(DOCUMENT);\n      this.elementRef = new ElementRef(document.documentElement);\n      this._scrollElement = document;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n      return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    static ɵfac = function CdkVirtualScrollableWindow_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkVirtualScrollableWindow)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkVirtualScrollableWindow,\n      selectors: [[\"cdk-virtual-scroll-viewport\", \"scrollWindow\", \"\"]],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: VIRTUAL_SCROLLABLE,\n        useExisting: CdkVirtualScrollableWindow\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return CdkVirtualScrollableWindow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet CdkScrollableModule = /*#__PURE__*/(() => {\n  class CdkScrollableModule {\n    static ɵfac = function CdkScrollableModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkScrollableModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: CdkScrollableModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return CdkScrollableModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @docs-primary-export\n */\nlet ScrollingModule = /*#__PURE__*/(() => {\n  class ScrollingModule {\n    static ɵfac = function ScrollingModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ScrollingModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ScrollingModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [BidiModule, CdkScrollableModule, BidiModule, CdkScrollableModule]\n    });\n  }\n  return ScrollingModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollable, CdkVirtualScrollableElement, CdkVirtualScrollableWindow, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLLABLE, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n","import * as i0 from '@angular/core';\nimport { signal, Component, ViewEncapsulation, ChangeDetectionStrategy, inject, NgZone, RendererFactory2, Injectable, InjectionToken, ElementRef, booleanAttribute, Directive, Input, ViewContainerRef, ChangeDetectorRef, EventEmitter, Injector, afterNextRender, numberAttribute, Output, TemplateRef, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge, BehaviorSubject } from 'rxjs';\nimport { _ as _getEventTarget, a as _getShadowRoot } from './shadow-dom-B0oHn41l.mjs';\nimport { a as isFakeTouchstartFromScreenReader, i as isFakeMousedownFromScreenReader } from './fake-event-detection-DWOdFTFz.mjs';\nimport { a as coerceElement, c as coerceNumberProperty } from './element-x4z00URv.mjs';\nimport { _ as _bindEventWithOptions } from './backwards-compatibility-DHR38MsD.mjs';\nimport { takeUntil, map, take, tap, switchMap, startWith } from 'rxjs/operators';\nimport { _ as _CdkPrivateStyleLoader } from './style-loader-Cu9AvjH9.mjs';\nimport { ViewportRuler, ScrollDispatcher, CdkScrollableModule } from './scrolling.mjs';\nexport { CdkScrollable as ɵɵCdkScrollable } from './scrolling.mjs';\nimport { D as Directionality } from './directionality-CBXD4hga.mjs';\nimport { _ as _IdGenerator } from './id-generator-Dw_9dSDu.mjs';\nimport { c as coerceArray } from './array-I1yfCXUO.mjs';\nimport './platform-DmdVEw_C.mjs';\nimport './scrolling-BkvA05C8.mjs';\nimport './bidi.mjs';\nimport './recycle-view-repeater-strategy-DoWdPqVw.mjs';\nimport './data-source-D34wiQZj.mjs';\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n  const clone = node.cloneNode(true);\n  const descendantsWithId = clone.querySelectorAll('[id]');\n  const nodeName = node.nodeName.toLowerCase();\n  // Remove the `id` to avoid having multiple elements with the same id on the page.\n  clone.removeAttribute('id');\n  for (let i = 0; i < descendantsWithId.length; i++) {\n    descendantsWithId[i].removeAttribute('id');\n  }\n  if (nodeName === 'canvas') {\n    transferCanvasData(node, clone);\n  } else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n    transferInputData(node, clone);\n  }\n  transferData('canvas', node, clone, transferCanvasData);\n  transferData('input, textarea, select', node, clone, transferInputData);\n  return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n  const descendantElements = node.querySelectorAll(selector);\n  if (descendantElements.length) {\n    const cloneElements = clone.querySelectorAll(selector);\n    for (let i = 0; i < descendantElements.length; i++) {\n      callback(descendantElements[i], cloneElements[i]);\n    }\n  }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n  // Browsers throw an error when assigning the value of a file input programmatically.\n  if (clone.type !== 'file') {\n    clone.value = source.value;\n  }\n  // Radio button `name` attributes must be unique for radio button groups\n  // otherwise original radio buttons can lose their checked state\n  // once the clone is inserted in the DOM.\n  if (clone.type === 'radio' && clone.name) {\n    clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n  }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n  const context = clone.getContext('2d');\n  if (context) {\n    // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n    // We can't do much about it so just ignore the error.\n    try {\n      context.drawImage(source, 0, 0);\n    } catch {}\n  }\n}\n\n/** Gets a mutable version of an element's bounding `DOMRect`. */\nfunction getMutableClientRect(element) {\n  const rect = element.getBoundingClientRect();\n  // We need to clone the `clientRect` here, because all the values on it are readonly\n  // and we need to be able to update them. Also we can't use a spread here, because\n  // the values on a `DOMRect` aren't own properties. See:\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n  return {\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    left: rect.left,\n    width: rect.width,\n    height: rect.height,\n    x: rect.x,\n    y: rect.y\n  };\n}\n/**\n * Checks whether some coordinates are within a `DOMRect`.\n * @param clientRect DOMRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n  const {\n    top,\n    bottom,\n    left,\n    right\n  } = clientRect;\n  return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `DOMRect`, as well as their bottom/right counterparts.\n * @param domRect `DOMRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustDomRect(domRect, top, left) {\n  domRect.top += top;\n  domRect.bottom = domRect.top + domRect.height;\n  domRect.left += left;\n  domRect.right = domRect.left + domRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a DOMRect.\n * @param rect DOMRect to check against.\n * @param threshold Threshold around the DOMRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearDomRect(rect, threshold, pointerX, pointerY) {\n  const {\n    top,\n    right,\n    bottom,\n    left,\n    width,\n    height\n  } = rect;\n  const xThreshold = width * threshold;\n  const yThreshold = height * threshold;\n  return pointerY > top - yThreshold && pointerY < bottom + yThreshold && pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n  _document;\n  /** Cached positions of the scrollable parent elements. */\n  positions = /*#__PURE__*/new Map();\n  constructor(_document) {\n    this._document = _document;\n  }\n  /** Clears the cached positions. */\n  clear() {\n    this.positions.clear();\n  }\n  /** Caches the positions. Should be called at the beginning of a drag sequence. */\n  cache(elements) {\n    this.clear();\n    this.positions.set(this._document, {\n      scrollPosition: this.getViewportScrollPosition()\n    });\n    elements.forEach(element => {\n      this.positions.set(element, {\n        scrollPosition: {\n          top: element.scrollTop,\n          left: element.scrollLeft\n        },\n        clientRect: getMutableClientRect(element)\n      });\n    });\n  }\n  /** Handles scrolling while a drag is taking place. */\n  handleScroll(event) {\n    const target = _getEventTarget(event);\n    const cachedPosition = this.positions.get(target);\n    if (!cachedPosition) {\n      return null;\n    }\n    const scrollPosition = cachedPosition.scrollPosition;\n    let newTop;\n    let newLeft;\n    if (target === this._document) {\n      const viewportScrollPosition = this.getViewportScrollPosition();\n      newTop = viewportScrollPosition.top;\n      newLeft = viewportScrollPosition.left;\n    } else {\n      newTop = target.scrollTop;\n      newLeft = target.scrollLeft;\n    }\n    const topDifference = scrollPosition.top - newTop;\n    const leftDifference = scrollPosition.left - newLeft;\n    // Go through and update the cached positions of the scroll\n    // parents that are inside the element that was scrolled.\n    this.positions.forEach((position, node) => {\n      if (position.clientRect && target !== node && target.contains(node)) {\n        adjustDomRect(position.clientRect, topDifference, leftDifference);\n      }\n    });\n    scrollPosition.top = newTop;\n    scrollPosition.left = newLeft;\n    return {\n      top: topDifference,\n      left: leftDifference\n    };\n  }\n  /**\n   * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n   * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n   * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n   * if the element is offset by something like the `BlockScrollStrategy`.\n   */\n  getViewportScrollPosition() {\n    return {\n      top: window.scrollY,\n      left: window.scrollX\n    };\n  }\n}\n\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n  const rootNodes = viewRef.rootNodes;\n  if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n    return rootNodes[0];\n  }\n  const wrapper = _document.createElement('div');\n  rootNodes.forEach(node => wrapper.appendChild(node));\n  return wrapper;\n}\n\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) {\n      const value = source[key];\n      if (value) {\n        dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n      } else {\n        dest.removeProperty(key);\n      }\n    }\n  }\n  return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n  const userSelect = enable ? '' : 'none';\n  extendStyles(element.style, {\n    'touch-action': enable ? '' : 'none',\n    '-webkit-user-drag': enable ? '' : 'none',\n    '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n    'user-select': userSelect,\n    '-ms-user-select': userSelect,\n    '-webkit-user-select': userSelect,\n    '-moz-user-select': userSelect\n  });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n  extendStyles(element.style, {\n    position: enable ? '' : 'fixed',\n    top: enable ? '' : '0',\n    opacity: enable ? '' : '0',\n    left: enable ? '' : '-999em'\n  }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n  return initialTransform && initialTransform != 'none' ? transform + ' ' + initialTransform : transform;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n  target.style.width = `${sourceRect.width}px`;\n  target.style.height = `${sourceRect.height}px`;\n  target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n  // Round the transforms since some browsers will\n  // blur the elements for sub-pixel transforms.\n  return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n  // Some browsers will return it in seconds, whereas others will return milliseconds.\n  const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n  return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n  const computedStyle = getComputedStyle(element);\n  const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n  const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n  // If there's no transition for `all` or `transform`, we shouldn't do anything.\n  if (!property) {\n    return 0;\n  }\n  // Get the index of the property that we're interested in and match\n  // it up to the same index in `transition-delay` and `transition-duration`.\n  const propertyIndex = transitionedProperties.indexOf(property);\n  const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n  const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n  return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) + parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n  const value = computedStyle.getPropertyValue(name);\n  return value.split(',').map(part => part.trim());\n}\n\n/** Inline styles to be set as `!important` while dragging. */\nconst importantProperties = /*#__PURE__*/new Set([\n// Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n'position']);\nclass PreviewRef {\n  _document;\n  _rootElement;\n  _direction;\n  _initialDomRect;\n  _previewTemplate;\n  _previewClass;\n  _pickupPositionOnPage;\n  _initialTransform;\n  _zIndex;\n  _renderer;\n  /** Reference to the view of the preview element. */\n  _previewEmbeddedView;\n  /** Reference to the preview element. */\n  _preview;\n  get element() {\n    return this._preview;\n  }\n  constructor(_document, _rootElement, _direction, _initialDomRect, _previewTemplate, _previewClass, _pickupPositionOnPage, _initialTransform, _zIndex, _renderer) {\n    this._document = _document;\n    this._rootElement = _rootElement;\n    this._direction = _direction;\n    this._initialDomRect = _initialDomRect;\n    this._previewTemplate = _previewTemplate;\n    this._previewClass = _previewClass;\n    this._pickupPositionOnPage = _pickupPositionOnPage;\n    this._initialTransform = _initialTransform;\n    this._zIndex = _zIndex;\n    this._renderer = _renderer;\n  }\n  attach(parent) {\n    this._preview = this._createPreview();\n    parent.appendChild(this._preview);\n    // The null check is necessary for browsers that don't support the popover API.\n    // Note that we use a string access for compatibility with Closure.\n    if (supportsPopover(this._preview)) {\n      this._preview['showPopover']();\n    }\n  }\n  destroy() {\n    this._preview.remove();\n    this._previewEmbeddedView?.destroy();\n    this._preview = this._previewEmbeddedView = null;\n  }\n  setTransform(value) {\n    this._preview.style.transform = value;\n  }\n  getBoundingClientRect() {\n    return this._preview.getBoundingClientRect();\n  }\n  addClass(className) {\n    this._preview.classList.add(className);\n  }\n  getTransitionDuration() {\n    return getTransformTransitionDurationInMs(this._preview);\n  }\n  addEventListener(name, handler) {\n    return this._renderer.listen(this._preview, name, handler);\n  }\n  _createPreview() {\n    const previewConfig = this._previewTemplate;\n    const previewClass = this._previewClass;\n    const previewTemplate = previewConfig ? previewConfig.template : null;\n    let preview;\n    if (previewTemplate && previewConfig) {\n      // Measure the element before we've inserted the preview\n      // since the insertion could throw off the measurement.\n      const rootRect = previewConfig.matchSize ? this._initialDomRect : null;\n      const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n      viewRef.detectChanges();\n      preview = getRootNode(viewRef, this._document);\n      this._previewEmbeddedView = viewRef;\n      if (previewConfig.matchSize) {\n        matchElementSize(preview, rootRect);\n      } else {\n        preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n      }\n    } else {\n      preview = deepCloneNode(this._rootElement);\n      matchElementSize(preview, this._initialDomRect);\n      if (this._initialTransform) {\n        preview.style.transform = this._initialTransform;\n      }\n    }\n    extendStyles(preview.style, {\n      // It's important that we disable the pointer events on the preview, because\n      // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n      'pointer-events': 'none',\n      // If the preview has a margin, it can throw off our positioning so we reset it. The reset\n      // value for `margin-right` needs to be `auto` when opened as a popover, because our\n      // positioning is always top/left based, but native popover seems to position itself\n      // to the top/right if `<html>` or `<body>` have `dir=\"rtl\"` (see #29604). Setting it\n      // to `auto` pushed it to the top/left corner in RTL and is a noop in LTR.\n      'margin': supportsPopover(preview) ? '0 auto 0 0' : '0',\n      'position': 'fixed',\n      'top': '0',\n      'left': '0',\n      'z-index': this._zIndex + ''\n    }, importantProperties);\n    toggleNativeDragInteractions(preview, false);\n    preview.classList.add('cdk-drag-preview');\n    preview.setAttribute('popover', 'manual');\n    preview.setAttribute('dir', this._direction);\n    if (previewClass) {\n      if (Array.isArray(previewClass)) {\n        previewClass.forEach(className => preview.classList.add(className));\n      } else {\n        preview.classList.add(previewClass);\n      }\n    }\n    return preview;\n  }\n}\n/** Checks whether a specific element supports the popover API. */\nfunction supportsPopover(element) {\n  return 'showPopover' in element;\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = {\n  passive: true\n};\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = {\n  passive: false\n};\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions$1 = {\n  passive: false,\n  capture: true\n};\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = /*#__PURE__*/new Set([\n// Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n'position']);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n  _config;\n  _document;\n  _ngZone;\n  _viewportRuler;\n  _dragDropRegistry;\n  _renderer;\n  _rootElementCleanups;\n  _cleanupShadowRootSelectStart;\n  /** Element displayed next to the user's pointer while the element is dragged. */\n  _preview;\n  /** Container into which to insert the preview. */\n  _previewContainer;\n  /** Reference to the view of the placeholder element. */\n  _placeholderRef;\n  /** Element that is rendered instead of the draggable item while it is being sorted. */\n  _placeholder;\n  /** Coordinates within the element at which the user picked up the element. */\n  _pickupPositionInElement;\n  /** Coordinates on the page at which the user picked up the element. */\n  _pickupPositionOnPage;\n  /**\n   * Anchor node used to save the place in the DOM where the element was\n   * picked up so that it can be restored at the end of the drag sequence.\n   */\n  _anchor;\n  /**\n   * CSS `transform` applied to the element when it isn't being dragged. We need a\n   * passive transform in order for the dragged element to retain its new position\n   * after the user has stopped dragging and because we need to know the relative\n   * position in case they start dragging again. This corresponds to `element.style.transform`.\n   */\n  _passiveTransform = {\n    x: 0,\n    y: 0\n  };\n  /** CSS `transform` that is applied to the element while it's being dragged. */\n  _activeTransform = {\n    x: 0,\n    y: 0\n  };\n  /** Inline `transform` value that the element had before the first dragging sequence. */\n  _initialTransform;\n  /**\n   * Whether the dragging sequence has been started. Doesn't\n   * necessarily mean that the element has been moved.\n   */\n  _hasStartedDragging = /*#__PURE__*/signal(false);\n  /** Whether the element has moved since the user started dragging it. */\n  _hasMoved;\n  /** Drop container in which the DragRef resided when dragging began. */\n  _initialContainer;\n  /** Index at which the item started in its initial container. */\n  _initialIndex;\n  /** Cached positions of scrollable parent elements. */\n  _parentPositions;\n  /** Emits when the item is being moved. */\n  _moveEvents = /*#__PURE__*/new Subject();\n  /** Keeps track of the direction in which the user is dragging along each axis. */\n  _pointerDirectionDelta;\n  /** Pointer position at which the last change in the delta occurred. */\n  _pointerPositionAtLastDirectionChange;\n  /** Position of the pointer at the last pointer event. */\n  _lastKnownPointerPosition;\n  /**\n   * Root DOM node of the drag instance. This is the element that will\n   * be moved around as the user is dragging.\n   */\n  _rootElement;\n  /**\n   * Nearest ancestor SVG, relative to which coordinates are calculated if dragging SVGElement\n   */\n  _ownerSVGElement;\n  /**\n   * Inline style value of `-webkit-tap-highlight-color` at the time the\n   * dragging was started. Used to restore the value once we're done dragging.\n   */\n  _rootElementTapHighlight;\n  /** Subscription to pointer movement events. */\n  _pointerMoveSubscription = Subscription.EMPTY;\n  /** Subscription to the event that is dispatched when the user lifts their pointer. */\n  _pointerUpSubscription = Subscription.EMPTY;\n  /** Subscription to the viewport being scrolled. */\n  _scrollSubscription = Subscription.EMPTY;\n  /** Subscription to the viewport being resized. */\n  _resizeSubscription = Subscription.EMPTY;\n  /**\n   * Time at which the last touch event occurred. Used to avoid firing the same\n   * events multiple times on touch devices where the browser will fire a fake\n   * mouse event for each touch event, after a certain time.\n   */\n  _lastTouchEventTime;\n  /** Time at which the last dragging sequence was started. */\n  _dragStartTime;\n  /** Cached reference to the boundary element. */\n  _boundaryElement = null;\n  /** Whether the native dragging interactions have been enabled on the root element. */\n  _nativeInteractionsEnabled = true;\n  /** Client rect of the root element when the dragging sequence has started. */\n  _initialDomRect;\n  /** Cached dimensions of the preview element. Should be read via `_getPreviewRect`. */\n  _previewRect;\n  /** Cached dimensions of the boundary element. */\n  _boundaryRect;\n  /** Element that will be used as a template to create the draggable item's preview. */\n  _previewTemplate;\n  /** Template for placeholder element rendered to show where a draggable would be dropped. */\n  _placeholderTemplate;\n  /** Elements that can be used to drag the draggable item. */\n  _handles = [];\n  /** Registered handles that are currently disabled. */\n  _disabledHandles = /*#__PURE__*/new Set();\n  /** Droppable container that the draggable is a part of. */\n  _dropContainer;\n  /** Layout direction of the item. */\n  _direction = 'ltr';\n  /** Ref that the current drag item is nested in. */\n  _parentDragRef;\n  /**\n   * Cached shadow root that the element is placed in. `null` means that the element isn't in\n   * the shadow DOM and `undefined` means that it hasn't been resolved yet. Should be read via\n   * `_getShadowRoot`, not directly.\n   */\n  _cachedShadowRoot;\n  /** Axis along which dragging is locked. */\n  lockAxis;\n  /**\n   * Amount of milliseconds to wait after the user has put their\n   * pointer down before starting to drag the element.\n   */\n  dragStartDelay = 0;\n  /** Class to be added to the preview element. */\n  previewClass;\n  /**\n   * If the parent of the dragged element has a `scale` transform, it can throw off the\n   * positioning when the user starts dragging. Use this input to notify the CDK of the scale.\n   */\n  scale = 1;\n  /** Whether starting to drag this element is disabled. */\n  get disabled() {\n    return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n  }\n  set disabled(value) {\n    if (value !== this._disabled) {\n      this._disabled = value;\n      this._toggleNativeDragInteractions();\n      this._handles.forEach(handle => toggleNativeDragInteractions(handle, value));\n    }\n  }\n  _disabled = false;\n  /** Emits as the drag sequence is being prepared. */\n  beforeStarted = /*#__PURE__*/new Subject();\n  /** Emits when the user starts dragging the item. */\n  started = /*#__PURE__*/new Subject();\n  /** Emits when the user has released a drag item, before any animations have started. */\n  released = /*#__PURE__*/new Subject();\n  /** Emits when the user stops dragging an item in the container. */\n  ended = /*#__PURE__*/new Subject();\n  /** Emits when the user has moved the item into a new container. */\n  entered = /*#__PURE__*/new Subject();\n  /** Emits when the user removes the item its container by dragging it into another container. */\n  exited = /*#__PURE__*/new Subject();\n  /** Emits when the user drops the item inside a container. */\n  dropped = /*#__PURE__*/new Subject();\n  /**\n   * Emits as the user is dragging the item. Use with caution,\n   * because this event will fire for every pixel that the user has dragged.\n   */\n  moved = this._moveEvents;\n  /** Arbitrary data that can be attached to the drag item. */\n  data;\n  /**\n   * Function that can be used to customize the logic of how the position of the drag item\n   * is limited while it's being dragged. Gets called with a point containing the current position\n   * of the user's pointer on the page, a reference to the item being dragged and its dimensions.\n   * Should return a point describing where the item should be rendered.\n   */\n  constrainPosition;\n  constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry, _renderer) {\n    this._config = _config;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    this._dragDropRegistry = _dragDropRegistry;\n    this._renderer = _renderer;\n    this.withRootElement(element).withParent(_config.parentDragRef || null);\n    this._parentPositions = new ParentPositionTracker(_document);\n    _dragDropRegistry.registerDragItem(this);\n  }\n  /**\n   * Returns the element that is being used as a placeholder\n   * while the current element is being dragged.\n   */\n  getPlaceholderElement() {\n    return this._placeholder;\n  }\n  /** Returns the root draggable element. */\n  getRootElement() {\n    return this._rootElement;\n  }\n  /**\n   * Gets the currently-visible element that represents the drag item.\n   * While dragging this is the placeholder, otherwise it's the root element.\n   */\n  getVisibleElement() {\n    return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n  }\n  /** Registers the handles that can be used to drag the element. */\n  withHandles(handles) {\n    this._handles = handles.map(handle => coerceElement(handle));\n    this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n    this._toggleNativeDragInteractions();\n    // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n    // the set, rather than iterate over it and filter out the destroyed handles, because while\n    // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n    // use an array internally which may throw an error.\n    const disabledHandles = new Set();\n    this._disabledHandles.forEach(handle => {\n      if (this._handles.indexOf(handle) > -1) {\n        disabledHandles.add(handle);\n      }\n    });\n    this._disabledHandles = disabledHandles;\n    return this;\n  }\n  /**\n   * Registers the template that should be used for the drag preview.\n   * @param template Template that from which to stamp out the preview.\n   */\n  withPreviewTemplate(template) {\n    this._previewTemplate = template;\n    return this;\n  }\n  /**\n   * Registers the template that should be used for the drag placeholder.\n   * @param template Template that from which to stamp out the placeholder.\n   */\n  withPlaceholderTemplate(template) {\n    this._placeholderTemplate = template;\n    return this;\n  }\n  /**\n   * Sets an alternate drag root element. The root element is the element that will be moved as\n   * the user is dragging. Passing an alternate root element is useful when trying to enable\n   * dragging on an element that you might not have access to.\n   */\n  withRootElement(rootElement) {\n    const element = coerceElement(rootElement);\n    if (element !== this._rootElement) {\n      this._removeRootElementListeners();\n      this._rootElementCleanups = this._ngZone.runOutsideAngular(() => [_bindEventWithOptions(this._renderer, element, 'mousedown', this._pointerDown, activeEventListenerOptions), _bindEventWithOptions(this._renderer, element, 'touchstart', this._pointerDown, passiveEventListenerOptions), _bindEventWithOptions(this._renderer, element, 'dragstart', this._nativeDragStart, activeEventListenerOptions)]);\n      this._initialTransform = undefined;\n      this._rootElement = element;\n    }\n    if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n      this._ownerSVGElement = this._rootElement.ownerSVGElement;\n    }\n    return this;\n  }\n  /**\n   * Element to which the draggable's position will be constrained.\n   */\n  withBoundaryElement(boundaryElement) {\n    this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n    this._resizeSubscription.unsubscribe();\n    if (boundaryElement) {\n      this._resizeSubscription = this._viewportRuler.change(10).subscribe(() => this._containInsideBoundaryOnResize());\n    }\n    return this;\n  }\n  /** Sets the parent ref that the ref is nested in.  */\n  withParent(parent) {\n    this._parentDragRef = parent;\n    return this;\n  }\n  /** Removes the dragging functionality from the DOM element. */\n  dispose() {\n    this._removeRootElementListeners();\n    // Do this check before removing from the registry since it'll\n    // stop being considered as dragged once it is removed.\n    if (this.isDragging()) {\n      // Since we move out the element to the end of the body while it's being\n      // dragged, we have to make sure that it's removed if it gets destroyed.\n      this._rootElement?.remove();\n    }\n    this._anchor?.remove();\n    this._destroyPreview();\n    this._destroyPlaceholder();\n    this._dragDropRegistry.removeDragItem(this);\n    this._removeListeners();\n    this.beforeStarted.complete();\n    this.started.complete();\n    this.released.complete();\n    this.ended.complete();\n    this.entered.complete();\n    this.exited.complete();\n    this.dropped.complete();\n    this._moveEvents.complete();\n    this._handles = [];\n    this._disabledHandles.clear();\n    this._dropContainer = undefined;\n    this._resizeSubscription.unsubscribe();\n    this._parentPositions.clear();\n    this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate = this._previewTemplate = this._anchor = this._parentDragRef = null;\n  }\n  /** Checks whether the element is currently being dragged. */\n  isDragging() {\n    return this._hasStartedDragging() && this._dragDropRegistry.isDragging(this);\n  }\n  /** Resets a standalone drag item to its initial position. */\n  reset() {\n    this._rootElement.style.transform = this._initialTransform || '';\n    this._activeTransform = {\n      x: 0,\n      y: 0\n    };\n    this._passiveTransform = {\n      x: 0,\n      y: 0\n    };\n  }\n  /**\n   * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n   * @param handle Handle element that should be disabled.\n   */\n  disableHandle(handle) {\n    if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n      this._disabledHandles.add(handle);\n      toggleNativeDragInteractions(handle, true);\n    }\n  }\n  /**\n   * Enables a handle, if it has been disabled.\n   * @param handle Handle element to be enabled.\n   */\n  enableHandle(handle) {\n    if (this._disabledHandles.has(handle)) {\n      this._disabledHandles.delete(handle);\n      toggleNativeDragInteractions(handle, this.disabled);\n    }\n  }\n  /** Sets the layout direction of the draggable item. */\n  withDirection(direction) {\n    this._direction = direction;\n    return this;\n  }\n  /** Sets the container that the item is part of. */\n  _withDropContainer(container) {\n    this._dropContainer = container;\n  }\n  /**\n   * Gets the current position in pixels the draggable outside of a drop container.\n   */\n  getFreeDragPosition() {\n    const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n    return {\n      x: position.x,\n      y: position.y\n    };\n  }\n  /**\n   * Sets the current position in pixels the draggable outside of a drop container.\n   * @param value New position to be set.\n   */\n  setFreeDragPosition(value) {\n    this._activeTransform = {\n      x: 0,\n      y: 0\n    };\n    this._passiveTransform.x = value.x;\n    this._passiveTransform.y = value.y;\n    if (!this._dropContainer) {\n      this._applyRootElementTransform(value.x, value.y);\n    }\n    return this;\n  }\n  /**\n   * Sets the container into which to insert the preview element.\n   * @param value Container into which to insert the preview.\n   */\n  withPreviewContainer(value) {\n    this._previewContainer = value;\n    return this;\n  }\n  /** Updates the item's sort order based on the last-known pointer position. */\n  _sortFromLastPointerPosition() {\n    const position = this._lastKnownPointerPosition;\n    if (position && this._dropContainer) {\n      this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n    }\n  }\n  /** Unsubscribes from the global subscriptions. */\n  _removeListeners() {\n    this._pointerMoveSubscription.unsubscribe();\n    this._pointerUpSubscription.unsubscribe();\n    this._scrollSubscription.unsubscribe();\n    this._cleanupShadowRootSelectStart?.();\n    this._cleanupShadowRootSelectStart = undefined;\n  }\n  /** Destroys the preview element and its ViewRef. */\n  _destroyPreview() {\n    this._preview?.destroy();\n    this._preview = null;\n  }\n  /** Destroys the placeholder element and its ViewRef. */\n  _destroyPlaceholder() {\n    this._placeholder?.remove();\n    this._placeholderRef?.destroy();\n    this._placeholder = this._placeholderRef = null;\n  }\n  /** Handler for the `mousedown`/`touchstart` events. */\n  _pointerDown = event => {\n    this.beforeStarted.next();\n    // Delegate the event based on whether it started from a handle or the element itself.\n    if (this._handles.length) {\n      const targetHandle = this._getTargetHandle(event);\n      if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n        this._initializeDragSequence(targetHandle, event);\n      }\n    } else if (!this.disabled) {\n      this._initializeDragSequence(this._rootElement, event);\n    }\n  };\n  /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n  _pointerMove = event => {\n    const pointerPosition = this._getPointerPositionOnPage(event);\n    if (!this._hasStartedDragging()) {\n      const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n      const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n      const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n      // Only start dragging after the user has moved more than the minimum distance in either\n      // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n      // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n      // per pixel of movement (e.g. if the user moves their pointer quickly).\n      if (isOverThreshold) {\n        const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n        const container = this._dropContainer;\n        if (!isDelayElapsed) {\n          this._endDragSequence(event);\n          return;\n        }\n        // Prevent other drag sequences from starting while something in the container is still\n        // being dragged. This can happen while we're waiting for the drop animation to finish\n        // and can cause errors, because some elements might still be moving around.\n        if (!container || !container.isDragging() && !container.isReceiving()) {\n          // Prevent the default action as soon as the dragging sequence is considered as\n          // \"started\" since waiting for the next event can allow the device to begin scrolling.\n          if (event.cancelable) {\n            event.preventDefault();\n          }\n          this._hasStartedDragging.set(true);\n          this._ngZone.run(() => this._startDragSequence(event));\n        }\n      }\n      return;\n    }\n    // We prevent the default action down here so that we know that dragging has started. This is\n    // important for touch devices where doing this too early can unnecessarily block scrolling,\n    // if there's a dragging delay.\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n    this._hasMoved = true;\n    this._lastKnownPointerPosition = pointerPosition;\n    this._updatePointerDirectionDelta(constrainedPointerPosition);\n    if (this._dropContainer) {\n      this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n    } else {\n      // If there's a position constraint function, we want the element's top/left to be at the\n      // specific position on the page. Use the initial position as a reference if that's the case.\n      const offset = this.constrainPosition ? this._initialDomRect : this._pickupPositionOnPage;\n      const activeTransform = this._activeTransform;\n      activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n      activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n      this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n    }\n    // Since this event gets fired for every pixel while dragging, we only\n    // want to fire it if the consumer opted into it. Also we have to\n    // re-enter the zone because we run all of the events on the outside.\n    if (this._moveEvents.observers.length) {\n      this._ngZone.run(() => {\n        this._moveEvents.next({\n          source: this,\n          pointerPosition: constrainedPointerPosition,\n          event,\n          distance: this._getDragDistance(constrainedPointerPosition),\n          delta: this._pointerDirectionDelta\n        });\n      });\n    }\n  };\n  /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n  _pointerUp = event => {\n    this._endDragSequence(event);\n  };\n  /**\n   * Clears subscriptions and stops the dragging sequence.\n   * @param event Browser event object that ended the sequence.\n   */\n  _endDragSequence(event) {\n    // Note that here we use `isDragging` from the service, rather than from `this`.\n    // The difference is that the one from the service reflects whether a dragging sequence\n    // has been initiated, whereas the one on `this` includes whether the user has passed\n    // the minimum dragging threshold.\n    if (!this._dragDropRegistry.isDragging(this)) {\n      return;\n    }\n    this._removeListeners();\n    this._dragDropRegistry.stopDragging(this);\n    this._toggleNativeDragInteractions();\n    if (this._handles) {\n      this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n    }\n    if (!this._hasStartedDragging()) {\n      return;\n    }\n    this.released.next({\n      source: this,\n      event\n    });\n    if (this._dropContainer) {\n      // Stop scrolling immediately, instead of waiting for the animation to finish.\n      this._dropContainer._stopScrolling();\n      this._animatePreviewToPlaceholder().then(() => {\n        this._cleanupDragArtifacts(event);\n        this._cleanupCachedDimensions();\n        this._dragDropRegistry.stopDragging(this);\n      });\n    } else {\n      // Convert the active transform into a passive one. This means that next time\n      // the user starts dragging the item, its position will be calculated relatively\n      // to the new passive transform.\n      this._passiveTransform.x = this._activeTransform.x;\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      this._passiveTransform.y = this._activeTransform.y;\n      this._ngZone.run(() => {\n        this.ended.next({\n          source: this,\n          distance: this._getDragDistance(pointerPosition),\n          dropPoint: pointerPosition,\n          event\n        });\n      });\n      this._cleanupCachedDimensions();\n      this._dragDropRegistry.stopDragging(this);\n    }\n  }\n  /** Starts the dragging sequence. */\n  _startDragSequence(event) {\n    if (isTouchEvent(event)) {\n      this._lastTouchEventTime = Date.now();\n    }\n    this._toggleNativeDragInteractions();\n    // Needs to happen before the root element is moved.\n    const shadowRoot = this._getShadowRoot();\n    const dropContainer = this._dropContainer;\n    if (shadowRoot) {\n      // In some browsers the global `selectstart` that we maintain in the `DragDropRegistry`\n      // doesn't cross the shadow boundary so we have to prevent it at the shadow root (see #28792).\n      this._ngZone.runOutsideAngular(() => {\n        this._cleanupShadowRootSelectStart = _bindEventWithOptions(this._renderer, shadowRoot, 'selectstart', shadowDomSelectStart, activeCapturingEventOptions$1);\n      });\n    }\n    if (dropContainer) {\n      const element = this._rootElement;\n      const parent = element.parentNode;\n      const placeholder = this._placeholder = this._createPlaceholderElement();\n      const anchor = this._anchor = this._anchor || this._document.createComment(typeof ngDevMode === 'undefined' || ngDevMode ? 'cdk-drag-anchor' : '');\n      // Insert an anchor node so that we can restore the element's position in the DOM.\n      parent.insertBefore(anchor, element);\n      // There's no risk of transforms stacking when inside a drop container so\n      // we can keep the initial transform up to date any time dragging starts.\n      this._initialTransform = element.style.transform || '';\n      // Create the preview after the initial transform has\n      // been cached, because it can be affected by the transform.\n      this._preview = new PreviewRef(this._document, this._rootElement, this._direction, this._initialDomRect, this._previewTemplate || null, this.previewClass || null, this._pickupPositionOnPage, this._initialTransform, this._config.zIndex || 1000, this._renderer);\n      this._preview.attach(this._getPreviewInsertionPoint(parent, shadowRoot));\n      // We move the element out at the end of the body and we make it hidden, because keeping it in\n      // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n      // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n      toggleVisibility(element, false, dragImportantProperties);\n      this._document.body.appendChild(parent.replaceChild(placeholder, element));\n      this.started.next({\n        source: this,\n        event\n      }); // Emit before notifying the container.\n      dropContainer.start();\n      this._initialContainer = dropContainer;\n      this._initialIndex = dropContainer.getItemIndex(this);\n    } else {\n      this.started.next({\n        source: this,\n        event\n      });\n      this._initialContainer = this._initialIndex = undefined;\n    }\n    // Important to run after we've called `start` on the parent container\n    // so that it has had time to resolve its scrollable parents.\n    this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n  }\n  /**\n   * Sets up the different variables and subscriptions\n   * that will be necessary for the dragging sequence.\n   * @param referenceElement Element that started the drag sequence.\n   * @param event Browser event object that started the sequence.\n   */\n  _initializeDragSequence(referenceElement, event) {\n    // Stop propagation if the item is inside another\n    // draggable so we don't start multiple drag sequences.\n    if (this._parentDragRef) {\n      event.stopPropagation();\n    }\n    const isDragging = this.isDragging();\n    const isTouchSequence = isTouchEvent(event);\n    const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n    const rootElement = this._rootElement;\n    const target = _getEventTarget(event);\n    const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime && this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n    const isFakeEvent = isTouchSequence ? isFakeTouchstartFromScreenReader(event) : isFakeMousedownFromScreenReader(event);\n    // If the event started from an element with the native HTML drag&drop, it'll interfere\n    // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n    // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n    // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n    // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n    // events from firing on touch devices.\n    if (target && target.draggable && event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Abort if the user is already dragging or is using a mouse button other than the primary one.\n    if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n      return;\n    }\n    // If we've got handles, we need to disable the tap highlight on the entire root element,\n    // otherwise iOS will still add it, even though all the drag interactions on the handle\n    // are disabled.\n    if (this._handles.length) {\n      const rootStyles = rootElement.style;\n      this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n      rootStyles.webkitTapHighlightColor = 'transparent';\n    }\n    this._hasMoved = false;\n    this._hasStartedDragging.set(this._hasMoved);\n    // Avoid multiple subscriptions and memory leaks when multi touch\n    // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n    this._removeListeners();\n    this._initialDomRect = this._rootElement.getBoundingClientRect();\n    this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n    this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n    this._scrollSubscription = this._dragDropRegistry.scrolled(this._getShadowRoot()).subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n    if (this._boundaryElement) {\n      this._boundaryRect = getMutableClientRect(this._boundaryElement);\n    }\n    // If we have a custom preview we can't know ahead of time how large it'll be so we position\n    // it next to the cursor. The exception is when the consumer has opted into making the preview\n    // the same size as the root element, in which case we do know the size.\n    const previewTemplate = this._previewTemplate;\n    this._pickupPositionInElement = previewTemplate && previewTemplate.template && !previewTemplate.matchSize ? {\n      x: 0,\n      y: 0\n    } : this._getPointerPositionInElement(this._initialDomRect, referenceElement, event);\n    const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition = this._getPointerPositionOnPage(event);\n    this._pointerDirectionDelta = {\n      x: 0,\n      y: 0\n    };\n    this._pointerPositionAtLastDirectionChange = {\n      x: pointerPosition.x,\n      y: pointerPosition.y\n    };\n    this._dragStartTime = Date.now();\n    this._dragDropRegistry.startDragging(this, event);\n  }\n  /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n  _cleanupDragArtifacts(event) {\n    // Restore the element's visibility and insert it at its old position in the DOM.\n    // It's important that we maintain the position, because moving the element around in the DOM\n    // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n    // while moving the existing elements in all other cases.\n    toggleVisibility(this._rootElement, true, dragImportantProperties);\n    this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n    this._destroyPreview();\n    this._destroyPlaceholder();\n    this._initialDomRect = this._boundaryRect = this._previewRect = this._initialTransform = undefined;\n    // Re-enter the NgZone since we bound `document` events on the outside.\n    this._ngZone.run(() => {\n      const container = this._dropContainer;\n      const currentIndex = container.getItemIndex(this);\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      const distance = this._getDragDistance(pointerPosition);\n      const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n      this.ended.next({\n        source: this,\n        distance,\n        dropPoint: pointerPosition,\n        event\n      });\n      this.dropped.next({\n        item: this,\n        currentIndex,\n        previousIndex: this._initialIndex,\n        container: container,\n        previousContainer: this._initialContainer,\n        isPointerOverContainer,\n        distance,\n        dropPoint: pointerPosition,\n        event\n      });\n      container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n      this._dropContainer = this._initialContainer;\n    });\n  }\n  /**\n   * Updates the item's position in its drop container, or moves it\n   * into a new one, depending on its current drag position.\n   */\n  _updateActiveDropContainer({\n    x,\n    y\n  }, {\n    x: rawX,\n    y: rawY\n  }) {\n    // Drop container that draggable has been moved into.\n    let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n    // If we couldn't find a new container to move the item into, and the item has left its\n    // initial container, check whether the it's over the initial container. This handles the\n    // case where two containers are connected one way and the user tries to undo dragging an\n    // item into a new container.\n    if (!newContainer && this._dropContainer !== this._initialContainer && this._initialContainer._isOverContainer(x, y)) {\n      newContainer = this._initialContainer;\n    }\n    if (newContainer && newContainer !== this._dropContainer) {\n      this._ngZone.run(() => {\n        // Notify the old container that the item has left.\n        this.exited.next({\n          item: this,\n          container: this._dropContainer\n        });\n        this._dropContainer.exit(this);\n        // Notify the new container that the item has entered.\n        this._dropContainer = newContainer;\n        this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n        // If we're re-entering the initial container and sorting is disabled,\n        // put item the into its starting index to begin with.\n        newContainer.sortingDisabled ? this._initialIndex : undefined);\n        this.entered.next({\n          item: this,\n          container: newContainer,\n          currentIndex: newContainer.getItemIndex(this)\n        });\n      });\n    }\n    // Dragging may have been interrupted as a result of the events above.\n    if (this.isDragging()) {\n      this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n      this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n      if (this.constrainPosition) {\n        this._applyPreviewTransform(x, y);\n      } else {\n        this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n      }\n    }\n  }\n  /**\n   * Animates the preview element from its current position to the location of the drop placeholder.\n   * @returns Promise that resolves when the animation completes.\n   */\n  _animatePreviewToPlaceholder() {\n    // If the user hasn't moved yet, the transitionend event won't fire.\n    if (!this._hasMoved) {\n      return Promise.resolve();\n    }\n    const placeholderRect = this._placeholder.getBoundingClientRect();\n    // Apply the class that adds a transition to the preview.\n    this._preview.addClass('cdk-drag-animating');\n    // Move the preview to the placeholder position.\n    this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n    // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n    // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n    // apply its style, we take advantage of the available info to figure out whether we need to\n    // bind the event in the first place.\n    const duration = this._preview.getTransitionDuration();\n    if (duration === 0) {\n      return Promise.resolve();\n    }\n    return this._ngZone.runOutsideAngular(() => {\n      return new Promise(resolve => {\n        const handler = event => {\n          if (!event || this._preview && _getEventTarget(event) === this._preview.element && event.propertyName === 'transform') {\n            cleanupListener();\n            resolve();\n            clearTimeout(timeout);\n          }\n        };\n        // If a transition is short enough, the browser might not fire the `transitionend` event.\n        // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n        // fire if the transition hasn't completed when it was supposed to.\n        const timeout = setTimeout(handler, duration * 1.5);\n        const cleanupListener = this._preview.addEventListener('transitionend', handler);\n      });\n    });\n  }\n  /** Creates an element that will be shown instead of the current element while dragging. */\n  _createPlaceholderElement() {\n    const placeholderConfig = this._placeholderTemplate;\n    const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n    let placeholder;\n    if (placeholderTemplate) {\n      this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n      this._placeholderRef.detectChanges();\n      placeholder = getRootNode(this._placeholderRef, this._document);\n    } else {\n      placeholder = deepCloneNode(this._rootElement);\n    }\n    // Stop pointer events on the preview so the user can't\n    // interact with it while the preview is animating.\n    placeholder.style.pointerEvents = 'none';\n    placeholder.classList.add('cdk-drag-placeholder');\n    return placeholder;\n  }\n  /**\n   * Figures out the coordinates at which an element was picked up.\n   * @param referenceElement Element that initiated the dragging.\n   * @param event Event that initiated the dragging.\n   */\n  _getPointerPositionInElement(elementRect, referenceElement, event) {\n    const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n    const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n    const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n    const scrollPosition = this._getViewportScrollPosition();\n    const x = point.pageX - referenceRect.left - scrollPosition.left;\n    const y = point.pageY - referenceRect.top - scrollPosition.top;\n    return {\n      x: referenceRect.left - elementRect.left + x,\n      y: referenceRect.top - elementRect.top + y\n    };\n  }\n  /** Determines the point of the page that was touched by the user. */\n  _getPointerPositionOnPage(event) {\n    const scrollPosition = this._getViewportScrollPosition();\n    const point = isTouchEvent(event) ?\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n    // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n    // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n    // throwing an error. The value returned here will be incorrect, but since this only\n    // breaks inside a developer tool and the value is only used for secondary information,\n    // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n    event.touches[0] || event.changedTouches[0] || {\n      pageX: 0,\n      pageY: 0\n    } : event;\n    const x = point.pageX - scrollPosition.left;\n    const y = point.pageY - scrollPosition.top;\n    // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n    // coordinate system\n    if (this._ownerSVGElement) {\n      const svgMatrix = this._ownerSVGElement.getScreenCTM();\n      if (svgMatrix) {\n        const svgPoint = this._ownerSVGElement.createSVGPoint();\n        svgPoint.x = x;\n        svgPoint.y = y;\n        return svgPoint.matrixTransform(svgMatrix.inverse());\n      }\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /** Gets the pointer position on the page, accounting for any position constraints. */\n  _getConstrainedPointerPosition(point) {\n    const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n    let {\n      x,\n      y\n    } = this.constrainPosition ? this.constrainPosition(point, this, this._initialDomRect, this._pickupPositionInElement) : point;\n    if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n      y = this._pickupPositionOnPage.y - (this.constrainPosition ? this._pickupPositionInElement.y : 0);\n    } else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n      x = this._pickupPositionOnPage.x - (this.constrainPosition ? this._pickupPositionInElement.x : 0);\n    }\n    if (this._boundaryRect) {\n      // If not using a custom constrain we need to account for the pickup position in the element\n      // otherwise we do not need to do this, as it has already been accounted for\n      const {\n        x: pickupX,\n        y: pickupY\n      } = !this.constrainPosition ? this._pickupPositionInElement : {\n        x: 0,\n        y: 0\n      };\n      const boundaryRect = this._boundaryRect;\n      const {\n        width: previewWidth,\n        height: previewHeight\n      } = this._getPreviewRect();\n      const minY = boundaryRect.top + pickupY;\n      const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n      const minX = boundaryRect.left + pickupX;\n      const maxX = boundaryRect.right - (previewWidth - pickupX);\n      x = clamp$1(x, minX, maxX);\n      y = clamp$1(y, minY, maxY);\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /** Updates the current drag delta, based on the user's current pointer position on the page. */\n  _updatePointerDirectionDelta(pointerPositionOnPage) {\n    const {\n      x,\n      y\n    } = pointerPositionOnPage;\n    const delta = this._pointerDirectionDelta;\n    const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n    // Amount of pixels the user has dragged since the last time the direction changed.\n    const changeX = Math.abs(x - positionSinceLastChange.x);\n    const changeY = Math.abs(y - positionSinceLastChange.y);\n    // Because we handle pointer events on a per-pixel basis, we don't want the delta\n    // to change for every pixel, otherwise anything that depends on it can look erratic.\n    // To make the delta more consistent, we track how much the user has moved since the last\n    // delta change and we only update it after it has reached a certain threshold.\n    if (changeX > this._config.pointerDirectionChangeThreshold) {\n      delta.x = x > positionSinceLastChange.x ? 1 : -1;\n      positionSinceLastChange.x = x;\n    }\n    if (changeY > this._config.pointerDirectionChangeThreshold) {\n      delta.y = y > positionSinceLastChange.y ? 1 : -1;\n      positionSinceLastChange.y = y;\n    }\n    return delta;\n  }\n  /** Toggles the native drag interactions, based on how many handles are registered. */\n  _toggleNativeDragInteractions() {\n    if (!this._rootElement || !this._handles) {\n      return;\n    }\n    const shouldEnable = this._handles.length > 0 || !this.isDragging();\n    if (shouldEnable !== this._nativeInteractionsEnabled) {\n      this._nativeInteractionsEnabled = shouldEnable;\n      toggleNativeDragInteractions(this._rootElement, shouldEnable);\n    }\n  }\n  /** Removes the manually-added event listeners from the root element. */\n  _removeRootElementListeners() {\n    this._rootElementCleanups?.forEach(cleanup => cleanup());\n    this._rootElementCleanups = undefined;\n  }\n  /**\n   * Applies a `transform` to the root element, taking into account any existing transforms on it.\n   * @param x New transform value along the X axis.\n   * @param y New transform value along the Y axis.\n   */\n  _applyRootElementTransform(x, y) {\n    const scale = 1 / this.scale;\n    const transform = getTransform(x * scale, y * scale);\n    const styles = this._rootElement.style;\n    // Cache the previous transform amount only after the first drag sequence, because\n    // we don't want our own transforms to stack on top of each other.\n    // Should be excluded none because none + translate3d(x, y, x) is invalid css\n    if (this._initialTransform == null) {\n      this._initialTransform = styles.transform && styles.transform != 'none' ? styles.transform : '';\n    }\n    // Preserve the previous `transform` value, if there was one. Note that we apply our own\n    // transform before the user's, because things like rotation can affect which direction\n    // the element will be translated towards.\n    styles.transform = combineTransforms(transform, this._initialTransform);\n  }\n  /**\n   * Applies a `transform` to the preview, taking into account any existing transforms on it.\n   * @param x New transform value along the X axis.\n   * @param y New transform value along the Y axis.\n   */\n  _applyPreviewTransform(x, y) {\n    // Only apply the initial transform if the preview is a clone of the original element, otherwise\n    // it could be completely different and the transform might not make sense anymore.\n    const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n    const transform = getTransform(x, y);\n    this._preview.setTransform(combineTransforms(transform, initialTransform));\n  }\n  /**\n   * Gets the distance that the user has dragged during the current drag sequence.\n   * @param currentPosition Current position of the user's pointer.\n   */\n  _getDragDistance(currentPosition) {\n    const pickupPosition = this._pickupPositionOnPage;\n    if (pickupPosition) {\n      return {\n        x: currentPosition.x - pickupPosition.x,\n        y: currentPosition.y - pickupPosition.y\n      };\n    }\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n  _cleanupCachedDimensions() {\n    this._boundaryRect = this._previewRect = undefined;\n    this._parentPositions.clear();\n  }\n  /**\n   * Checks whether the element is still inside its boundary after the viewport has been resized.\n   * If not, the position is adjusted so that the element fits again.\n   */\n  _containInsideBoundaryOnResize() {\n    let {\n      x,\n      y\n    } = this._passiveTransform;\n    if (x === 0 && y === 0 || this.isDragging() || !this._boundaryElement) {\n      return;\n    }\n    // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n    const elementRect = this._rootElement.getBoundingClientRect();\n    const boundaryRect = this._boundaryElement.getBoundingClientRect();\n    // It's possible that the element got hidden away after dragging (e.g. by switching to a\n    // different tab). Don't do anything in this case so we don't clear the user's position.\n    if (boundaryRect.width === 0 && boundaryRect.height === 0 || elementRect.width === 0 && elementRect.height === 0) {\n      return;\n    }\n    const leftOverflow = boundaryRect.left - elementRect.left;\n    const rightOverflow = elementRect.right - boundaryRect.right;\n    const topOverflow = boundaryRect.top - elementRect.top;\n    const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n    // If the element has become wider than the boundary, we can't\n    // do much to make it fit so we just anchor it to the left.\n    if (boundaryRect.width > elementRect.width) {\n      if (leftOverflow > 0) {\n        x += leftOverflow;\n      }\n      if (rightOverflow > 0) {\n        x -= rightOverflow;\n      }\n    } else {\n      x = 0;\n    }\n    // If the element has become taller than the boundary, we can't\n    // do much to make it fit so we just anchor it to the top.\n    if (boundaryRect.height > elementRect.height) {\n      if (topOverflow > 0) {\n        y += topOverflow;\n      }\n      if (bottomOverflow > 0) {\n        y -= bottomOverflow;\n      }\n    } else {\n      y = 0;\n    }\n    if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n      this.setFreeDragPosition({\n        y,\n        x\n      });\n    }\n  }\n  /** Gets the drag start delay, based on the event type. */\n  _getDragStartDelay(event) {\n    const value = this.dragStartDelay;\n    if (typeof value === 'number') {\n      return value;\n    } else if (isTouchEvent(event)) {\n      return value.touch;\n    }\n    return value ? value.mouse : 0;\n  }\n  /** Updates the internal state of the draggable element when scrolling has occurred. */\n  _updateOnScroll(event) {\n    const scrollDifference = this._parentPositions.handleScroll(event);\n    if (scrollDifference) {\n      const target = _getEventTarget(event);\n      // DOMRect dimensions are based on the scroll position of the page and its parent\n      // node so we have to update the cached boundary DOMRect if the user has scrolled.\n      if (this._boundaryRect && target !== this._boundaryElement && target.contains(this._boundaryElement)) {\n        adjustDomRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n      }\n      this._pickupPositionOnPage.x += scrollDifference.left;\n      this._pickupPositionOnPage.y += scrollDifference.top;\n      // If we're in free drag mode, we have to update the active transform, because\n      // it isn't relative to the viewport like the preview inside a drop list.\n      if (!this._dropContainer) {\n        this._activeTransform.x -= scrollDifference.left;\n        this._activeTransform.y -= scrollDifference.top;\n        this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n      }\n    }\n  }\n  /** Gets the scroll position of the viewport. */\n  _getViewportScrollPosition() {\n    return this._parentPositions.positions.get(this._document)?.scrollPosition || this._parentPositions.getViewportScrollPosition();\n  }\n  /**\n   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n   * than saving it in property directly on init, because we want to resolve it as late as possible\n   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n   */\n  _getShadowRoot() {\n    if (this._cachedShadowRoot === undefined) {\n      this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n    }\n    return this._cachedShadowRoot;\n  }\n  /** Gets the element into which the drag preview should be inserted. */\n  _getPreviewInsertionPoint(initialParent, shadowRoot) {\n    const previewContainer = this._previewContainer || 'global';\n    if (previewContainer === 'parent') {\n      return initialParent;\n    }\n    if (previewContainer === 'global') {\n      const documentRef = this._document;\n      // We can't use the body if the user is in fullscreen mode,\n      // because the preview will render under the fullscreen element.\n      // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n      return shadowRoot || documentRef.fullscreenElement || documentRef.webkitFullscreenElement || documentRef.mozFullScreenElement || documentRef.msFullscreenElement || documentRef.body;\n    }\n    return coerceElement(previewContainer);\n  }\n  /** Lazily resolves and returns the dimensions of the preview. */\n  _getPreviewRect() {\n    // Cache the preview element rect if we haven't cached it already or if\n    // we cached it too early before the element dimensions were computed.\n    if (!this._previewRect || !this._previewRect.width && !this._previewRect.height) {\n      this._previewRect = this._preview ? this._preview.getBoundingClientRect() : this._initialDomRect;\n    }\n    return this._previewRect;\n  }\n  /** Handles a native `dragstart` event. */\n  _nativeDragStart = event => {\n    if (this._handles.length) {\n      const targetHandle = this._getTargetHandle(event);\n      if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n        event.preventDefault();\n      }\n    } else if (!this.disabled) {\n      // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n      // but some cases like dragging of links can slip through (see #24403).\n      event.preventDefault();\n    }\n  };\n  /** Gets a handle that is the target of an event. */\n  _getTargetHandle(event) {\n    return this._handles.find(handle => {\n      return event.target && (event.target === handle || handle.contains(event.target));\n    });\n  }\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n/** Callback invoked for `selectstart` events inside the shadow DOM. */\nfunction shadowDomSelectStart(event) {\n  event.preventDefault();\n}\n\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n  const from = clamp(fromIndex, array.length - 1);\n  const to = clamp(toIndex, array.length - 1);\n  if (from === to) {\n    return;\n  }\n  const target = array[from];\n  const delta = to < from ? -1 : 1;\n  for (let i = from; i !== to; i += delta) {\n    array[i] = array[i + delta];\n  }\n  array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n  const from = clamp(currentIndex, currentArray.length - 1);\n  const to = clamp(targetIndex, targetArray.length);\n  if (currentArray.length) {\n    targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n  }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n  const to = clamp(targetIndex, targetArray.length);\n  if (currentArray.length) {\n    targetArray.splice(to, 0, currentArray[currentIndex]);\n  }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n  return Math.max(0, Math.min(max, value));\n}\n\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n  _dragDropRegistry;\n  /** Root element container of the drop list. */\n  _element;\n  /** Function used to determine if an item can be sorted into a specific index. */\n  _sortPredicate;\n  /** Cache of the dimensions of all the items inside the container. */\n  _itemPositions = [];\n  /**\n   * Draggable items that are currently active inside the container. Includes the items\n   * that were there at the start of the sequence, as well as any items that have been dragged\n   * in, but haven't been dropped yet.\n   */\n  _activeDraggables;\n  /** Direction in which the list is oriented. */\n  orientation = 'vertical';\n  /** Layout direction of the drop list. */\n  direction;\n  constructor(_dragDropRegistry) {\n    this._dragDropRegistry = _dragDropRegistry;\n  }\n  /**\n   * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n   * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n   * overlap with the swapped item after the swapping occurred.\n   */\n  _previousSwap = {\n    drag: null,\n    delta: 0,\n    overlaps: false\n  };\n  /**\n   * To be called when the drag sequence starts.\n   * @param items Items that are currently in the list.\n   */\n  start(items) {\n    this.withItems(items);\n  }\n  /**\n   * To be called when an item is being sorted.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  sort(item, pointerX, pointerY, pointerDelta) {\n    const siblings = this._itemPositions;\n    const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n    if (newIndex === -1 && siblings.length > 0) {\n      return null;\n    }\n    const isHorizontal = this.orientation === 'horizontal';\n    const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n    const siblingAtNewPosition = siblings[newIndex];\n    const currentPosition = siblings[currentIndex].clientRect;\n    const newPosition = siblingAtNewPosition.clientRect;\n    const delta = currentIndex > newIndex ? 1 : -1;\n    // How many pixels the item's placeholder should be offset.\n    const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n    // How many pixels all the other items should be offset.\n    const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n    // Save the previous order of the items before moving the item to its new index.\n    // We use this to check whether an item has been moved as a result of the sorting.\n    const oldOrder = siblings.slice();\n    // Shuffle the array in place.\n    moveItemInArray(siblings, currentIndex, newIndex);\n    siblings.forEach((sibling, index) => {\n      // Don't do anything if the position hasn't changed.\n      if (oldOrder[index] === sibling) {\n        return;\n      }\n      const isDraggedItem = sibling.drag === item;\n      const offset = isDraggedItem ? itemOffset : siblingOffset;\n      const elementToOffset = isDraggedItem ? item.getPlaceholderElement() : sibling.drag.getRootElement();\n      // Update the offset to reflect the new position.\n      sibling.offset += offset;\n      const transformAmount = Math.round(sibling.offset * (1 / sibling.drag.scale));\n      // Since we're moving the items with a `transform`, we need to adjust their cached\n      // client rects to reflect their new position, as well as swap their positions in the cache.\n      // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n      // elements may be mid-animation which will give us a wrong result.\n      if (isHorizontal) {\n        // Round the transforms since some browsers will\n        // blur the elements, for sub-pixel transforms.\n        elementToOffset.style.transform = combineTransforms(`translate3d(${transformAmount}px, 0, 0)`, sibling.initialTransform);\n        adjustDomRect(sibling.clientRect, 0, offset);\n      } else {\n        elementToOffset.style.transform = combineTransforms(`translate3d(0, ${transformAmount}px, 0)`, sibling.initialTransform);\n        adjustDomRect(sibling.clientRect, offset, 0);\n      }\n    });\n    // Note that it's important that we do this after the client rects have been adjusted.\n    this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n    this._previousSwap.drag = siblingAtNewPosition.drag;\n    this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    return {\n      previousIndex: currentIndex,\n      currentIndex: newIndex\n    };\n  }\n  /**\n   * Called when an item is being moved into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    const newIndex = index == null || index < 0 ?\n    // We use the coordinates of where the item entered the drop\n    // zone to figure out at which index it should be inserted.\n    this._getItemIndexFromPointerPosition(item, pointerX, pointerY) : index;\n    const activeDraggables = this._activeDraggables;\n    const currentIndex = activeDraggables.indexOf(item);\n    const placeholder = item.getPlaceholderElement();\n    let newPositionReference = activeDraggables[newIndex];\n    // If the item at the new position is the same as the item that is being dragged,\n    // it means that we're trying to restore the item to its initial position. In this\n    // case we should use the next item from the list as the reference.\n    if (newPositionReference === item) {\n      newPositionReference = activeDraggables[newIndex + 1];\n    }\n    // If we didn't find a new position reference, it means that either the item didn't start off\n    // in this container, or that the item requested to be inserted at the end of the list.\n    if (!newPositionReference && (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) && this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n      newPositionReference = activeDraggables[0];\n    }\n    // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n    // into another container and back again), we have to ensure that it isn't duplicated.\n    if (currentIndex > -1) {\n      activeDraggables.splice(currentIndex, 1);\n    }\n    // Don't use items that are being dragged as a reference, because\n    // their element has been moved down to the bottom of the body.\n    if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n      const element = newPositionReference.getRootElement();\n      element.parentElement.insertBefore(placeholder, element);\n      activeDraggables.splice(newIndex, 0, item);\n    } else {\n      this._element.appendChild(placeholder);\n      activeDraggables.push(item);\n    }\n    // The transform needs to be cleared so it doesn't throw off the measurements.\n    placeholder.style.transform = '';\n    // Note that usually `start` is called together with `enter` when an item goes into a new\n    // container. This will cache item positions, but we need to refresh them since the amount\n    // of items has changed.\n    this._cacheItemPositions();\n  }\n  /** Sets the items that are currently part of the list. */\n  withItems(items) {\n    this._activeDraggables = items.slice();\n    this._cacheItemPositions();\n  }\n  /** Assigns a sort predicate to the strategy. */\n  withSortPredicate(predicate) {\n    this._sortPredicate = predicate;\n  }\n  /** Resets the strategy to its initial state before dragging was started. */\n  reset() {\n    // TODO(crisbeto): may have to wait for the animations to finish.\n    this._activeDraggables?.forEach(item => {\n      const rootElement = item.getRootElement();\n      if (rootElement) {\n        const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n        rootElement.style.transform = initialTransform || '';\n      }\n    });\n    this._itemPositions = [];\n    this._activeDraggables = [];\n    this._previousSwap.drag = null;\n    this._previousSwap.delta = 0;\n    this._previousSwap.overlaps = false;\n  }\n  /**\n   * Gets a snapshot of items currently in the list.\n   * Can include items that we dragged in from another list.\n   */\n  getActiveItemsSnapshot() {\n    return this._activeDraggables;\n  }\n  /** Gets the index of a specific item. */\n  getItemIndex(item) {\n    // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n    // The rest of the logic still stands no matter what orientation we're in, however\n    // we need to invert the array when determining the index.\n    const items = this.orientation === 'horizontal' && this.direction === 'rtl' ? this._itemPositions.slice().reverse() : this._itemPositions;\n    return items.findIndex(currentItem => currentItem.drag === item);\n  }\n  /** Used to notify the strategy that the scroll position has changed. */\n  updateOnScroll(topDifference, leftDifference) {\n    // Since we know the amount that the user has scrolled we can shift all of the\n    // client rectangles ourselves. This is cheaper than re-measuring everything and\n    // we can avoid inconsistent behavior where we might be measuring the element before\n    // its position has changed.\n    this._itemPositions.forEach(({\n      clientRect\n    }) => {\n      adjustDomRect(clientRect, topDifference, leftDifference);\n    });\n    // We need two loops for this, because we want all of the cached\n    // positions to be up-to-date before we re-sort the item.\n    this._itemPositions.forEach(({\n      drag\n    }) => {\n      if (this._dragDropRegistry.isDragging(drag)) {\n        // We need to re-sort the item manually, because the pointer move\n        // events won't be dispatched while the user is scrolling.\n        drag._sortFromLastPointerPosition();\n      }\n    });\n  }\n  withElementContainer(container) {\n    this._element = container;\n  }\n  /** Refreshes the position cache of the items and sibling containers. */\n  _cacheItemPositions() {\n    const isHorizontal = this.orientation === 'horizontal';\n    this._itemPositions = this._activeDraggables.map(drag => {\n      const elementToMeasure = drag.getVisibleElement();\n      return {\n        drag,\n        offset: 0,\n        initialTransform: elementToMeasure.style.transform || '',\n        clientRect: getMutableClientRect(elementToMeasure)\n      };\n    }).sort((a, b) => {\n      return isHorizontal ? a.clientRect.left - b.clientRect.left : a.clientRect.top - b.clientRect.top;\n    });\n  }\n  /**\n   * Gets the offset in pixels by which the item that is being dragged should be moved.\n   * @param currentPosition Current position of the item.\n   * @param newPosition Position of the item where the current item should be moved.\n   * @param delta Direction in which the user is moving.\n   */\n  _getItemOffsetPx(currentPosition, newPosition, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    let itemOffset = isHorizontal ? newPosition.left - currentPosition.left : newPosition.top - currentPosition.top;\n    // Account for differences in the item width/height.\n    if (delta === -1) {\n      itemOffset += isHorizontal ? newPosition.width - currentPosition.width : newPosition.height - currentPosition.height;\n    }\n    return itemOffset;\n  }\n  /**\n   * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n   * @param currentIndex Index of the item currently being dragged.\n   * @param siblings All of the items in the list.\n   * @param delta Direction in which the user is moving.\n   */\n  _getSiblingOffsetPx(currentIndex, siblings, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    const currentPosition = siblings[currentIndex].clientRect;\n    const immediateSibling = siblings[currentIndex + delta * -1];\n    let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n    if (immediateSibling) {\n      const start = isHorizontal ? 'left' : 'top';\n      const end = isHorizontal ? 'right' : 'bottom';\n      // Get the spacing between the start of the current item and the end of the one immediately\n      // after it in the direction in which the user is dragging, or vice versa. We add it to the\n      // offset in order to push the element to where it will be when it's inline and is influenced\n      // by the `margin` of its siblings.\n      if (delta === -1) {\n        siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n      } else {\n        siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n      }\n    }\n    return siblingOffset;\n  }\n  /**\n   * Checks if pointer is entering in the first position\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   */\n  _shouldEnterAsFirstChild(pointerX, pointerY) {\n    if (!this._activeDraggables.length) {\n      return false;\n    }\n    const itemPositions = this._itemPositions;\n    const isHorizontal = this.orientation === 'horizontal';\n    // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n    // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n    const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n    if (reversed) {\n      const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n      return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n    } else {\n      const firstItemRect = itemPositions[0].clientRect;\n      return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n    }\n  }\n  /**\n   * Gets the index of an item in the drop container, based on the position of the user's pointer.\n   * @param item Item that is being sorted.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   * @param delta Direction in which the user is moving their pointer.\n   */\n  _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    const index = this._itemPositions.findIndex(({\n      drag,\n      clientRect\n    }) => {\n      // Skip the item itself.\n      if (drag === item) {\n        return false;\n      }\n      if (delta) {\n        const direction = isHorizontal ? delta.x : delta.y;\n        // If the user is still hovering over the same item as last time, their cursor hasn't left\n        // the item after we made the swap, and they didn't change the direction in which they're\n        // dragging, we don't consider it a direction swap.\n        if (drag === this._previousSwap.drag && this._previousSwap.overlaps && direction === this._previousSwap.delta) {\n          return false;\n        }\n      }\n      return isHorizontal ?\n      // Round these down since most browsers report client rects with\n      // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n      pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n    });\n    return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n  }\n}\n\n/**\n * Strategy that only supports sorting on a list that might wrap.\n * Items are reordered by moving their DOM nodes around.\n * @docs-private\n */\nclass MixedSortStrategy {\n  _document;\n  _dragDropRegistry;\n  /** Root element container of the drop list. */\n  _element;\n  /** Function used to determine if an item can be sorted into a specific index. */\n  _sortPredicate;\n  /** Lazily-resolved root node containing the list. Use `_getRootNode` to read this. */\n  _rootNode;\n  /**\n   * Draggable items that are currently active inside the container. Includes the items\n   * that were there at the start of the sequence, as well as any items that have been dragged\n   * in, but haven't been dropped yet.\n   */\n  _activeItems;\n  /**\n   * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n   * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n   * overlap with the swapped item after the swapping occurred.\n   */\n  _previousSwap = {\n    drag: null,\n    deltaX: 0,\n    deltaY: 0,\n    overlaps: false\n  };\n  /**\n   * Keeps track of the relationship between a node and its next sibling. This information\n   * is used to restore the DOM to the order it was in before dragging started.\n   */\n  _relatedNodes = [];\n  constructor(_document, _dragDropRegistry) {\n    this._document = _document;\n    this._dragDropRegistry = _dragDropRegistry;\n  }\n  /**\n   * To be called when the drag sequence starts.\n   * @param items Items that are currently in the list.\n   */\n  start(items) {\n    const childNodes = this._element.childNodes;\n    this._relatedNodes = [];\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i];\n      this._relatedNodes.push([node, node.nextSibling]);\n    }\n    this.withItems(items);\n  }\n  /**\n   * To be called when an item is being sorted.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  sort(item, pointerX, pointerY, pointerDelta) {\n    const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n    const previousSwap = this._previousSwap;\n    if (newIndex === -1 || this._activeItems[newIndex] === item) {\n      return null;\n    }\n    const toSwapWith = this._activeItems[newIndex];\n    // Prevent too many swaps over the same item.\n    if (previousSwap.drag === toSwapWith && previousSwap.overlaps && previousSwap.deltaX === pointerDelta.x && previousSwap.deltaY === pointerDelta.y) {\n      return null;\n    }\n    const previousIndex = this.getItemIndex(item);\n    const current = item.getPlaceholderElement();\n    const overlapElement = toSwapWith.getRootElement();\n    if (newIndex > previousIndex) {\n      overlapElement.after(current);\n    } else {\n      overlapElement.before(current);\n    }\n    moveItemInArray(this._activeItems, previousIndex, newIndex);\n    const newOverlapElement = this._getRootNode().elementFromPoint(pointerX, pointerY);\n    // Note: it's tempting to save the entire `pointerDelta` object here, however that'll\n    // break this functionality, because the same object is passed for all `sort` calls.\n    previousSwap.deltaX = pointerDelta.x;\n    previousSwap.deltaY = pointerDelta.y;\n    previousSwap.drag = toSwapWith;\n    previousSwap.overlaps = overlapElement === newOverlapElement || overlapElement.contains(newOverlapElement);\n    return {\n      previousIndex,\n      currentIndex: newIndex\n    };\n  }\n  /**\n   * Called when an item is being moved into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    let enterIndex = index == null || index < 0 ? this._getItemIndexFromPointerPosition(item, pointerX, pointerY) : index;\n    // In some cases (e.g. when the container has padding) we might not be able to figure\n    // out which item to insert the dragged item next to, because the pointer didn't overlap\n    // with anything. In that case we find the item that's closest to the pointer.\n    if (enterIndex === -1) {\n      enterIndex = this._getClosestItemIndexToPointer(item, pointerX, pointerY);\n    }\n    const targetItem = this._activeItems[enterIndex];\n    const currentIndex = this._activeItems.indexOf(item);\n    if (currentIndex > -1) {\n      this._activeItems.splice(currentIndex, 1);\n    }\n    if (targetItem && !this._dragDropRegistry.isDragging(targetItem)) {\n      this._activeItems.splice(enterIndex, 0, item);\n      targetItem.getRootElement().before(item.getPlaceholderElement());\n    } else {\n      this._activeItems.push(item);\n      this._element.appendChild(item.getPlaceholderElement());\n    }\n  }\n  /** Sets the items that are currently part of the list. */\n  withItems(items) {\n    this._activeItems = items.slice();\n  }\n  /** Assigns a sort predicate to the strategy. */\n  withSortPredicate(predicate) {\n    this._sortPredicate = predicate;\n  }\n  /** Resets the strategy to its initial state before dragging was started. */\n  reset() {\n    const root = this._element;\n    const previousSwap = this._previousSwap;\n    // Moving elements around in the DOM can break things like the `@for` loop, because it\n    // uses comment nodes to know where to insert elements. To avoid such issues, we restore\n    // the DOM nodes in the list to their original order when the list is reset.\n    // Note that this could be simpler if we just saved all the nodes, cleared the root\n    // and then appended them in the original order. We don't do it, because it can break\n    // down depending on when the snapshot was taken. E.g. we may end up snapshotting the\n    // placeholder element which is removed after dragging.\n    for (let i = this._relatedNodes.length - 1; i > -1; i--) {\n      const [node, nextSibling] = this._relatedNodes[i];\n      if (node.parentNode === root && node.nextSibling !== nextSibling) {\n        if (nextSibling === null) {\n          root.appendChild(node);\n        } else if (nextSibling.parentNode === root) {\n          root.insertBefore(node, nextSibling);\n        }\n      }\n    }\n    this._relatedNodes = [];\n    this._activeItems = [];\n    previousSwap.drag = null;\n    previousSwap.deltaX = previousSwap.deltaY = 0;\n    previousSwap.overlaps = false;\n  }\n  /**\n   * Gets a snapshot of items currently in the list.\n   * Can include items that we dragged in from another list.\n   */\n  getActiveItemsSnapshot() {\n    return this._activeItems;\n  }\n  /** Gets the index of a specific item. */\n  getItemIndex(item) {\n    return this._activeItems.indexOf(item);\n  }\n  /** Used to notify the strategy that the scroll position has changed. */\n  updateOnScroll() {\n    this._activeItems.forEach(item => {\n      if (this._dragDropRegistry.isDragging(item)) {\n        // We need to re-sort the item manually, because the pointer move\n        // events won't be dispatched while the user is scrolling.\n        item._sortFromLastPointerPosition();\n      }\n    });\n  }\n  withElementContainer(container) {\n    if (container !== this._element) {\n      this._element = container;\n      this._rootNode = undefined;\n    }\n  }\n  /**\n   * Gets the index of an item in the drop container, based on the position of the user's pointer.\n   * @param item Item that is being sorted.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   * @param delta Direction in which the user is moving their pointer.\n   */\n  _getItemIndexFromPointerPosition(item, pointerX, pointerY) {\n    const elementAtPoint = this._getRootNode().elementFromPoint(Math.floor(pointerX), Math.floor(pointerY));\n    const index = elementAtPoint ? this._activeItems.findIndex(item => {\n      const root = item.getRootElement();\n      return elementAtPoint === root || root.contains(elementAtPoint);\n    }) : -1;\n    return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n  }\n  /** Lazily resolves the list's root node. */\n  _getRootNode() {\n    // Resolve the root node lazily to ensure that the drop list is in its final place in the DOM.\n    if (!this._rootNode) {\n      this._rootNode = _getShadowRoot(this._element) || this._document;\n    }\n    return this._rootNode;\n  }\n  /**\n   * Finds the index of the item that's closest to the item being dragged.\n   * @param item Item being dragged.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   */\n  _getClosestItemIndexToPointer(item, pointerX, pointerY) {\n    if (this._activeItems.length === 0) {\n      return -1;\n    }\n    if (this._activeItems.length === 1) {\n      return 0;\n    }\n    let minDistance = Infinity;\n    let minIndex = -1;\n    // Find the Euclidean distance (https://en.wikipedia.org/wiki/Euclidean_distance) between each\n    // item and the pointer, and return the smallest one. Note that this is a bit flawed in that DOM\n    // nodes are rectangles, not points, so we use the top/left coordinates. It should be enough\n    // for our purposes.\n    for (let i = 0; i < this._activeItems.length; i++) {\n      const current = this._activeItems[i];\n      if (current !== item) {\n        const {\n          x,\n          y\n        } = current.getRootElement().getBoundingClientRect();\n        const distance = Math.hypot(pointerX - x, pointerY - y);\n        if (distance < minDistance) {\n          minDistance = distance;\n          minIndex = i;\n        }\n      }\n    }\n    return minIndex;\n  }\n}\n\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/** Vertical direction in which we can auto-scroll. */\nvar AutoScrollVerticalDirection = /*#__PURE__*/function (AutoScrollVerticalDirection) {\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"NONE\"] = 0] = \"NONE\";\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"UP\"] = 1] = \"UP\";\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"DOWN\"] = 2] = \"DOWN\";\n  return AutoScrollVerticalDirection;\n}(AutoScrollVerticalDirection || {});\n/** Horizontal direction in which we can auto-scroll. */\nvar AutoScrollHorizontalDirection = /*#__PURE__*/function (AutoScrollHorizontalDirection) {\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"NONE\"] = 0] = \"NONE\";\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"LEFT\"] = 1] = \"LEFT\";\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"RIGHT\"] = 2] = \"RIGHT\";\n  return AutoScrollHorizontalDirection;\n}(AutoScrollHorizontalDirection || {});\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n  _dragDropRegistry;\n  _ngZone;\n  _viewportRuler;\n  /** Element that the drop list is attached to. */\n  element;\n  /** Whether starting a dragging sequence from this container is disabled. */\n  disabled = false;\n  /** Whether sorting items within the list is disabled. */\n  sortingDisabled = false;\n  /** Locks the position of the draggable elements inside the container along the specified axis. */\n  lockAxis;\n  /**\n   * Whether auto-scrolling the view when the user\n   * moves their pointer close to the edges is disabled.\n   */\n  autoScrollDisabled = false;\n  /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n  autoScrollStep = 2;\n  /**\n   * Function that is used to determine whether an item\n   * is allowed to be moved into a drop container.\n   */\n  enterPredicate = () => true;\n  /** Function that is used to determine whether an item can be sorted into a particular index. */\n  sortPredicate = () => true;\n  /** Emits right before dragging has started. */\n  beforeStarted = /*#__PURE__*/new Subject();\n  /**\n   * Emits when the user has moved a new drag item into this container.\n   */\n  entered = /*#__PURE__*/new Subject();\n  /**\n   * Emits when the user removes an item from the container\n   * by dragging it into another container.\n   */\n  exited = /*#__PURE__*/new Subject();\n  /** Emits when the user drops an item inside the container. */\n  dropped = /*#__PURE__*/new Subject();\n  /** Emits as the user is swapping items while actively dragging. */\n  sorted = /*#__PURE__*/new Subject();\n  /** Emits when a dragging sequence is started in a list connected to the current one. */\n  receivingStarted = /*#__PURE__*/new Subject();\n  /** Emits when a dragging sequence is stopped from a list connected to the current one. */\n  receivingStopped = /*#__PURE__*/new Subject();\n  /** Arbitrary data that can be attached to the drop list. */\n  data;\n  /** Element that is the direct parent of the drag items. */\n  _container;\n  /** Whether an item in the list is being dragged. */\n  _isDragging = false;\n  /** Keeps track of the positions of any parent scrollable elements. */\n  _parentPositions;\n  /** Strategy being used to sort items within the list. */\n  _sortStrategy;\n  /** Cached `DOMRect` of the drop list. */\n  _domRect;\n  /** Draggable items in the container. */\n  _draggables = [];\n  /** Drop lists that are connected to the current one. */\n  _siblings = [];\n  /** Connected siblings that currently have a dragged item. */\n  _activeSiblings = /*#__PURE__*/new Set();\n  /** Subscription to the window being scrolled. */\n  _viewportScrollSubscription = Subscription.EMPTY;\n  /** Vertical direction in which the list is currently scrolling. */\n  _verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n  /** Horizontal direction in which the list is currently scrolling. */\n  _horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n  /** Node that is being auto-scrolled. */\n  _scrollNode;\n  /** Used to signal to the current auto-scroll sequence when to stop. */\n  _stopScrollTimers = /*#__PURE__*/new Subject();\n  /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n  _cachedShadowRoot = null;\n  /** Reference to the document. */\n  _document;\n  /** Elements that can be scrolled while the user is dragging. */\n  _scrollableElements = [];\n  /** Initial value for the element's `scroll-snap-type` style. */\n  _initialScrollSnap;\n  /** Direction of the list's layout. */\n  _direction = 'ltr';\n  constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n    this._dragDropRegistry = _dragDropRegistry;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    const coercedElement = this.element = coerceElement(element);\n    this._document = _document;\n    this.withOrientation('vertical').withElementContainer(coercedElement);\n    _dragDropRegistry.registerDropContainer(this);\n    this._parentPositions = new ParentPositionTracker(_document);\n  }\n  /** Removes the drop list functionality from the DOM element. */\n  dispose() {\n    this._stopScrolling();\n    this._stopScrollTimers.complete();\n    this._viewportScrollSubscription.unsubscribe();\n    this.beforeStarted.complete();\n    this.entered.complete();\n    this.exited.complete();\n    this.dropped.complete();\n    this.sorted.complete();\n    this.receivingStarted.complete();\n    this.receivingStopped.complete();\n    this._activeSiblings.clear();\n    this._scrollNode = null;\n    this._parentPositions.clear();\n    this._dragDropRegistry.removeDropContainer(this);\n  }\n  /** Whether an item from this list is currently being dragged. */\n  isDragging() {\n    return this._isDragging;\n  }\n  /** Starts dragging an item. */\n  start() {\n    this._draggingStarted();\n    this._notifyReceivingSiblings();\n  }\n  /**\n   * Attempts to move an item into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    this._draggingStarted();\n    // If sorting is disabled, we want the item to return to its starting\n    // position if the user is returning it to its initial container.\n    if (index == null && this.sortingDisabled) {\n      index = this._draggables.indexOf(item);\n    }\n    this._sortStrategy.enter(item, pointerX, pointerY, index);\n    // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n    // can change when the sort strategy moves the item around inside `enter`.\n    this._cacheParentPositions();\n    // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n    this._notifyReceivingSiblings();\n    this.entered.next({\n      item,\n      container: this,\n      currentIndex: this.getItemIndex(item)\n    });\n  }\n  /**\n   * Removes an item from the container after it was dragged into another container by the user.\n   * @param item Item that was dragged out.\n   */\n  exit(item) {\n    this._reset();\n    this.exited.next({\n      item,\n      container: this\n    });\n  }\n  /**\n   * Drops an item into this container.\n   * @param item Item being dropped into the container.\n   * @param currentIndex Index at which the item should be inserted.\n   * @param previousIndex Index of the item when dragging started.\n   * @param previousContainer Container from which the item got dragged in.\n   * @param isPointerOverContainer Whether the user's pointer was over the\n   *    container when the item was dropped.\n   * @param distance Distance the user has dragged since the start of the dragging sequence.\n   * @param event Event that triggered the dropping sequence.\n   *\n   * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n   */\n  drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n    this._reset();\n    this.dropped.next({\n      item,\n      currentIndex,\n      previousIndex,\n      container: this,\n      previousContainer,\n      isPointerOverContainer,\n      distance,\n      dropPoint,\n      event\n    });\n  }\n  /**\n   * Sets the draggable items that are a part of this list.\n   * @param items Items that are a part of this list.\n   */\n  withItems(items) {\n    const previousItems = this._draggables;\n    this._draggables = items;\n    items.forEach(item => item._withDropContainer(this));\n    if (this.isDragging()) {\n      const draggedItems = previousItems.filter(item => item.isDragging());\n      // If all of the items being dragged were removed\n      // from the list, abort the current drag sequence.\n      if (draggedItems.every(item => items.indexOf(item) === -1)) {\n        this._reset();\n      } else {\n        this._sortStrategy.withItems(this._draggables);\n      }\n    }\n    return this;\n  }\n  /** Sets the layout direction of the drop list. */\n  withDirection(direction) {\n    this._direction = direction;\n    if (this._sortStrategy instanceof SingleAxisSortStrategy) {\n      this._sortStrategy.direction = direction;\n    }\n    return this;\n  }\n  /**\n   * Sets the containers that are connected to this one. When two or more containers are\n   * connected, the user will be allowed to transfer items between them.\n   * @param connectedTo Other containers that the current containers should be connected to.\n   */\n  connectedTo(connectedTo) {\n    this._siblings = connectedTo.slice();\n    return this;\n  }\n  /**\n   * Sets the orientation of the container.\n   * @param orientation New orientation for the container.\n   */\n  withOrientation(orientation) {\n    if (orientation === 'mixed') {\n      this._sortStrategy = new MixedSortStrategy(this._document, this._dragDropRegistry);\n    } else {\n      const strategy = new SingleAxisSortStrategy(this._dragDropRegistry);\n      strategy.direction = this._direction;\n      strategy.orientation = orientation;\n      this._sortStrategy = strategy;\n    }\n    this._sortStrategy.withElementContainer(this._container);\n    this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n    return this;\n  }\n  /**\n   * Sets which parent elements are can be scrolled while the user is dragging.\n   * @param elements Elements that can be scrolled.\n   */\n  withScrollableParents(elements) {\n    const element = this._container;\n    // We always allow the current element to be scrollable\n    // so we need to ensure that it's in the array.\n    this._scrollableElements = elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n    return this;\n  }\n  /**\n   * Configures the drop list so that a different element is used as the container for the\n   * dragged items. This is useful for the cases when one might not have control over the\n   * full DOM that sets up the dragging.\n   * Note that the alternate container needs to be a descendant of the drop list.\n   * @param container New element container to be assigned.\n   */\n  withElementContainer(container) {\n    if (container === this._container) {\n      return this;\n    }\n    const element = coerceElement(this.element);\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && container !== element && !element.contains(container)) {\n      throw new Error('Invalid DOM structure for drop list. Alternate container element must be a descendant of the drop list.');\n    }\n    const oldContainerIndex = this._scrollableElements.indexOf(this._container);\n    const newContainerIndex = this._scrollableElements.indexOf(container);\n    if (oldContainerIndex > -1) {\n      this._scrollableElements.splice(oldContainerIndex, 1);\n    }\n    if (newContainerIndex > -1) {\n      this._scrollableElements.splice(newContainerIndex, 1);\n    }\n    if (this._sortStrategy) {\n      this._sortStrategy.withElementContainer(container);\n    }\n    this._cachedShadowRoot = null;\n    this._scrollableElements.unshift(container);\n    this._container = container;\n    return this;\n  }\n  /** Gets the scrollable parents that are registered with this drop container. */\n  getScrollableParents() {\n    return this._scrollableElements;\n  }\n  /**\n   * Figures out the index of an item in the container.\n   * @param item Item whose index should be determined.\n   */\n  getItemIndex(item) {\n    return this._isDragging ? this._sortStrategy.getItemIndex(item) : this._draggables.indexOf(item);\n  }\n  /**\n   * Whether the list is able to receive the item that\n   * is currently being dragged inside a connected drop list.\n   */\n  isReceiving() {\n    return this._activeSiblings.size > 0;\n  }\n  /**\n   * Sorts an item inside the container based on its position.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  _sortItem(item, pointerX, pointerY, pointerDelta) {\n    // Don't sort the item if sorting is disabled or it's out of range.\n    if (this.sortingDisabled || !this._domRect || !isPointerNearDomRect(this._domRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n      return;\n    }\n    const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n    if (result) {\n      this.sorted.next({\n        previousIndex: result.previousIndex,\n        currentIndex: result.currentIndex,\n        container: this,\n        item\n      });\n    }\n  }\n  /**\n   * Checks whether the user's pointer is close to the edges of either the\n   * viewport or the drop list and starts the auto-scroll sequence.\n   * @param pointerX User's pointer position along the x axis.\n   * @param pointerY User's pointer position along the y axis.\n   */\n  _startScrollingIfNecessary(pointerX, pointerY) {\n    if (this.autoScrollDisabled) {\n      return;\n    }\n    let scrollNode;\n    let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n    let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n    // Check whether we should start scrolling any of the parent containers.\n    this._parentPositions.positions.forEach((position, element) => {\n      // We have special handling for the `document` below. Also this would be\n      // nicer with a  for...of loop, but it requires changing a compiler flag.\n      if (element === this._document || !position.clientRect || scrollNode) {\n        return;\n      }\n      if (isPointerNearDomRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n        [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, this._direction, pointerX, pointerY);\n        if (verticalScrollDirection || horizontalScrollDirection) {\n          scrollNode = element;\n        }\n      }\n    });\n    // Otherwise check if we can start scrolling the viewport.\n    if (!verticalScrollDirection && !horizontalScrollDirection) {\n      const {\n        width,\n        height\n      } = this._viewportRuler.getViewportSize();\n      const domRect = {\n        width,\n        height,\n        top: 0,\n        right: width,\n        bottom: height,\n        left: 0\n      };\n      verticalScrollDirection = getVerticalScrollDirection(domRect, pointerY);\n      horizontalScrollDirection = getHorizontalScrollDirection(domRect, pointerX);\n      scrollNode = window;\n    }\n    if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection || horizontalScrollDirection !== this._horizontalScrollDirection || scrollNode !== this._scrollNode)) {\n      this._verticalScrollDirection = verticalScrollDirection;\n      this._horizontalScrollDirection = horizontalScrollDirection;\n      this._scrollNode = scrollNode;\n      if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n        this._ngZone.runOutsideAngular(this._startScrollInterval);\n      } else {\n        this._stopScrolling();\n      }\n    }\n  }\n  /** Stops any currently-running auto-scroll sequences. */\n  _stopScrolling() {\n    this._stopScrollTimers.next();\n  }\n  /** Starts the dragging sequence within the list. */\n  _draggingStarted() {\n    const styles = this._container.style;\n    this.beforeStarted.next();\n    this._isDragging = true;\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n    // Prevent the check from running on apps not using an alternate container. Ideally we\n    // would always run it, but introducing it at this stage would be a breaking change.\n    this._container !== coerceElement(this.element)) {\n      for (const drag of this._draggables) {\n        if (!drag.isDragging() && drag.getVisibleElement().parentNode !== this._container) {\n          throw new Error('Invalid DOM structure for drop list. All items must be placed directly inside of the element container.');\n        }\n      }\n    }\n    // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n    // scrolling. The browser seems to round the value based on the snapping points which means\n    // that we can't increment/decrement the scroll position.\n    this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n    styles.scrollSnapType = styles.msScrollSnapType = 'none';\n    this._sortStrategy.start(this._draggables);\n    this._cacheParentPositions();\n    this._viewportScrollSubscription.unsubscribe();\n    this._listenToScrollEvents();\n  }\n  /** Caches the positions of the configured scrollable parents. */\n  _cacheParentPositions() {\n    this._parentPositions.cache(this._scrollableElements);\n    // The list element is always in the `scrollableElements`\n    // so we can take advantage of the cached `DOMRect`.\n    this._domRect = this._parentPositions.positions.get(this._container).clientRect;\n  }\n  /** Resets the container to its initial state. */\n  _reset() {\n    this._isDragging = false;\n    const styles = this._container.style;\n    styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n    this._siblings.forEach(sibling => sibling._stopReceiving(this));\n    this._sortStrategy.reset();\n    this._stopScrolling();\n    this._viewportScrollSubscription.unsubscribe();\n    this._parentPositions.clear();\n  }\n  /** Starts the interval that'll auto-scroll the element. */\n  _startScrollInterval = () => {\n    this._stopScrolling();\n    interval(0, animationFrameScheduler).pipe(takeUntil(this._stopScrollTimers)).subscribe(() => {\n      const node = this._scrollNode;\n      const scrollStep = this.autoScrollStep;\n      if (this._verticalScrollDirection === AutoScrollVerticalDirection.UP) {\n        node.scrollBy(0, -scrollStep);\n      } else if (this._verticalScrollDirection === AutoScrollVerticalDirection.DOWN) {\n        node.scrollBy(0, scrollStep);\n      }\n      if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.LEFT) {\n        node.scrollBy(-scrollStep, 0);\n      } else if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.RIGHT) {\n        node.scrollBy(scrollStep, 0);\n      }\n    });\n  };\n  /**\n   * Checks whether the user's pointer is positioned over the container.\n   * @param x Pointer position along the X axis.\n   * @param y Pointer position along the Y axis.\n   */\n  _isOverContainer(x, y) {\n    return this._domRect != null && isInsideClientRect(this._domRect, x, y);\n  }\n  /**\n   * Figures out whether an item should be moved into a sibling\n   * drop container, based on its current position.\n   * @param item Drag item that is being moved.\n   * @param x Position of the item along the X axis.\n   * @param y Position of the item along the Y axis.\n   */\n  _getSiblingContainerFromPosition(item, x, y) {\n    return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n  }\n  /**\n   * Checks whether the drop list can receive the passed-in item.\n   * @param item Item that is being dragged into the list.\n   * @param x Position of the item along the X axis.\n   * @param y Position of the item along the Y axis.\n   */\n  _canReceive(item, x, y) {\n    if (!this._domRect || !isInsideClientRect(this._domRect, x, y) || !this.enterPredicate(item, this)) {\n      return false;\n    }\n    const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n    // If there's no element at the pointer position, then\n    // the client rect is probably scrolled out of the view.\n    if (!elementFromPoint) {\n      return false;\n    }\n    // The `DOMRect`, that we're using to find the container over which the user is\n    // hovering, doesn't give us any information on whether the element has been scrolled\n    // out of the view or whether it's overlapping with other containers. This means that\n    // we could end up transferring the item into a container that's invisible or is positioned\n    // below another one. We use the result from `elementFromPoint` to get the top-most element\n    // at the pointer position and to find whether it's one of the intersecting drop containers.\n    return elementFromPoint === this._container || this._container.contains(elementFromPoint);\n  }\n  /**\n   * Called by one of the connected drop lists when a dragging sequence has started.\n   * @param sibling Sibling in which dragging has started.\n   */\n  _startReceiving(sibling, items) {\n    const activeSiblings = this._activeSiblings;\n    if (!activeSiblings.has(sibling) && items.every(item => {\n      // Note that we have to add an exception to the `enterPredicate` for items that started off\n      // in this drop list. The drag ref has logic that allows an item to return to its initial\n      // container, if it has left the initial container and none of the connected containers\n      // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n      return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n    })) {\n      activeSiblings.add(sibling);\n      this._cacheParentPositions();\n      this._listenToScrollEvents();\n      this.receivingStarted.next({\n        initiator: sibling,\n        receiver: this,\n        items\n      });\n    }\n  }\n  /**\n   * Called by a connected drop list when dragging has stopped.\n   * @param sibling Sibling whose dragging has stopped.\n   */\n  _stopReceiving(sibling) {\n    this._activeSiblings.delete(sibling);\n    this._viewportScrollSubscription.unsubscribe();\n    this.receivingStopped.next({\n      initiator: sibling,\n      receiver: this\n    });\n  }\n  /**\n   * Starts listening to scroll events on the viewport.\n   * Used for updating the internal state of the list.\n   */\n  _listenToScrollEvents() {\n    this._viewportScrollSubscription = this._dragDropRegistry.scrolled(this._getShadowRoot()).subscribe(event => {\n      if (this.isDragging()) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n          this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n        }\n      } else if (this.isReceiving()) {\n        this._cacheParentPositions();\n      }\n    });\n  }\n  /**\n   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n   * than saving it in property directly on init, because we want to resolve it as late as possible\n   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n   */\n  _getShadowRoot() {\n    if (!this._cachedShadowRoot) {\n      const shadowRoot = _getShadowRoot(this._container);\n      this._cachedShadowRoot = shadowRoot || this._document;\n    }\n    return this._cachedShadowRoot;\n  }\n  /** Notifies any siblings that may potentially receive the item. */\n  _notifyReceivingSiblings() {\n    const draggedItems = this._sortStrategy.getActiveItemsSnapshot().filter(item => item.isDragging());\n    this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n  }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n  const {\n    top,\n    bottom,\n    height\n  } = clientRect;\n  const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n  if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n    return AutoScrollVerticalDirection.UP;\n  } else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n    return AutoScrollVerticalDirection.DOWN;\n  }\n  return AutoScrollVerticalDirection.NONE;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n  const {\n    left,\n    right,\n    width\n  } = clientRect;\n  const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n  if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n    return AutoScrollHorizontalDirection.LEFT;\n  } else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n    return AutoScrollHorizontalDirection.RIGHT;\n  }\n  return AutoScrollHorizontalDirection.NONE;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param direction Layout direction of the drop list.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, direction, pointerX, pointerY) {\n  const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n  const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n  let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n  let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n  // Note that we here we do some extra checks for whether the element is actually scrollable in\n  // a certain direction and we only assign the scroll direction if it is. We do this so that we\n  // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n  // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n  if (computedVertical) {\n    const scrollTop = element.scrollTop;\n    if (computedVertical === AutoScrollVerticalDirection.UP) {\n      if (scrollTop > 0) {\n        verticalScrollDirection = AutoScrollVerticalDirection.UP;\n      }\n    } else if (element.scrollHeight - scrollTop > element.clientHeight) {\n      verticalScrollDirection = AutoScrollVerticalDirection.DOWN;\n    }\n  }\n  if (computedHorizontal) {\n    const scrollLeft = element.scrollLeft;\n    if (direction === 'rtl') {\n      if (computedHorizontal === AutoScrollHorizontalDirection.RIGHT) {\n        // In RTL `scrollLeft` will be negative when scrolled.\n        if (scrollLeft < 0) {\n          horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n        }\n      } else if (element.scrollWidth + scrollLeft > element.clientWidth) {\n        horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n      }\n    } else {\n      if (computedHorizontal === AutoScrollHorizontalDirection.LEFT) {\n        if (scrollLeft > 0) {\n          horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n        }\n      } else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n        horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n      }\n    }\n  }\n  return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/** Event options that can be used to bind a capturing event. */\nconst capturingEventOptions = {\n  capture: true\n};\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = {\n  passive: false,\n  capture: true\n};\n/**\n * Component used to load the drag&drop reset styles.\n * @docs-private\n */\nlet _ResetsLoader = /*#__PURE__*/(() => {\n  class _ResetsLoader {\n    static ɵfac = function _ResetsLoader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || _ResetsLoader)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: _ResetsLoader,\n      selectors: [[\"ng-component\"]],\n      hostAttrs: [\"cdk-drag-resets-container\", \"\"],\n      decls: 0,\n      vars: 0,\n      template: function _ResetsLoader_Template(rf, ctx) {},\n      styles: [\"@layer cdk-resets{.cdk-drag-preview{background:none;border:none;padding:0;color:inherit;inset:auto}}.cdk-drag-placeholder *,.cdk-drag-preview *{pointer-events:none !important}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return _ResetsLoader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n// TODO(crisbeto): remove generics when making breaking changes.\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\nlet DragDropRegistry = /*#__PURE__*/(() => {\n  class DragDropRegistry {\n    _ngZone = inject(NgZone);\n    _document = inject(DOCUMENT);\n    _styleLoader = inject(_CdkPrivateStyleLoader);\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _cleanupDocumentTouchmove;\n    /** Registered drop container instances. */\n    _dropInstances = new Set();\n    /** Registered drag item instances. */\n    _dragInstances = new Set();\n    /** Drag item instances that are currently being dragged. */\n    _activeDragInstances = signal([]);\n    /** Keeps track of the event listeners that we've bound to the `document`. */\n    _globalListeners;\n    /**\n     * Predicate function to check if an item is being dragged.  Moved out into a property,\n     * because it'll be called a lot and we don't want to create a new function every time.\n     */\n    _draggingPredicate = item => item.isDragging();\n    /**\n     * Map tracking DOM nodes and their corresponding drag directives. Note that this is different\n     * from looking through the `_dragInstances` and getting their root node, because the root node\n     * isn't necessarily the node that the directive is set on.\n     */\n    _domNodesToDirectives = null;\n    /**\n     * Emits the `touchmove` or `mousemove` events that are dispatched\n     * while the user is dragging a drag item instance.\n     */\n    pointerMove = new Subject();\n    /**\n     * Emits the `touchend` or `mouseup` events that are dispatched\n     * while the user is dragging a drag item instance.\n     */\n    pointerUp = new Subject();\n    /**\n     * Emits when the viewport has been scrolled while the user is dragging an item.\n     * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n     * @breaking-change 13.0.0\n     */\n    scroll = new Subject();\n    constructor() {}\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n      if (!this._dropInstances.has(drop)) {\n        this._dropInstances.add(drop);\n      }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n      this._dragInstances.add(drag);\n      // The `touchmove` event gets bound once, ahead of time, because WebKit\n      // won't preventDefault on a dynamically-added `touchmove` listener.\n      // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n      if (this._dragInstances.size === 1) {\n        this._ngZone.runOutsideAngular(() => {\n          // The event handler has to be explicitly active,\n          // because newer browsers make it passive by default.\n          this._cleanupDocumentTouchmove?.();\n          this._cleanupDocumentTouchmove = _bindEventWithOptions(this._renderer, this._document, 'touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        });\n      }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n      this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n      this._dragInstances.delete(drag);\n      this.stopDragging(drag);\n      if (this._dragInstances.size === 0) {\n        this._cleanupDocumentTouchmove?.();\n      }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n      // Do not process the same drag twice to avoid memory leaks and redundant listeners\n      if (this._activeDragInstances().indexOf(drag) > -1) {\n        return;\n      }\n      this._styleLoader.load(_ResetsLoader);\n      this._activeDragInstances.update(instances => [...instances, drag]);\n      if (this._activeDragInstances().length === 1) {\n        // We explicitly bind __active__ listeners here, because newer browsers will default to\n        // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n        // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n        const isTouchEvent = event.type.startsWith('touch');\n        const endEventHandler = e => this.pointerUp.next(e);\n        const toBind = [\n        // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n        // the document. See https://github.com/angular/components/issues/17144.\n        ['scroll', e => this.scroll.next(e), capturingEventOptions],\n        // Preventing the default action on `mousemove` isn't enough to disable text selection\n        // on Safari so we need to prevent the selection event as well. Alternatively this can\n        // be done by setting `user-select: none` on the `body`, however it has causes a style\n        // recalculation which can be expensive on pages with a lot of elements.\n        ['selectstart', this._preventDefaultWhileDragging, activeCapturingEventOptions]];\n        if (isTouchEvent) {\n          toBind.push(['touchend', endEventHandler, capturingEventOptions], ['touchcancel', endEventHandler, capturingEventOptions]);\n        } else {\n          toBind.push(['mouseup', endEventHandler, capturingEventOptions]);\n        }\n        // We don't have to bind a move event for touch drag sequences, because\n        // we already have a persistent global one bound from `registerDragItem`.\n        if (!isTouchEvent) {\n          toBind.push(['mousemove', e => this.pointerMove.next(e), activeCapturingEventOptions]);\n        }\n        this._ngZone.runOutsideAngular(() => {\n          this._globalListeners = toBind.map(([name, handler, options]) => _bindEventWithOptions(this._renderer, this._document, name, handler, options));\n        });\n      }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n      this._activeDragInstances.update(instances => {\n        const index = instances.indexOf(drag);\n        if (index > -1) {\n          instances.splice(index, 1);\n          return [...instances];\n        }\n        return instances;\n      });\n      if (this._activeDragInstances().length === 0) {\n        this._clearGlobalListeners();\n      }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n      return this._activeDragInstances().indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n      const streams = [this.scroll];\n      if (shadowRoot && shadowRoot !== this._document) {\n        // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n        // because we want to guarantee that the event is bound outside of the `NgZone`. With\n        // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n        streams.push(new Observable(observer => {\n          return this._ngZone.runOutsideAngular(() => {\n            const cleanup = _bindEventWithOptions(this._renderer, shadowRoot, 'scroll', event => {\n              if (this._activeDragInstances().length) {\n                observer.next(event);\n              }\n            }, capturingEventOptions);\n            return () => {\n              cleanup();\n            };\n          });\n        }));\n      }\n      return merge(...streams);\n    }\n    /**\n     * Tracks the DOM node which has a draggable directive.\n     * @param node Node to track.\n     * @param dragRef Drag directive set on the node.\n     */\n    registerDirectiveNode(node, dragRef) {\n      this._domNodesToDirectives ??= new WeakMap();\n      this._domNodesToDirectives.set(node, dragRef);\n    }\n    /**\n     * Stops tracking a draggable directive node.\n     * @param node Node to stop tracking.\n     */\n    removeDirectiveNode(node) {\n      this._domNodesToDirectives?.delete(node);\n    }\n    /**\n     * Gets the drag directive corresponding to a specific DOM node, if any.\n     * @param node Node for which to do the lookup.\n     */\n    getDragDirectiveForNode(node) {\n      return this._domNodesToDirectives?.get(node) || null;\n    }\n    ngOnDestroy() {\n      this._dragInstances.forEach(instance => this.removeDragItem(instance));\n      this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n      this._domNodesToDirectives = null;\n      this._clearGlobalListeners();\n      this.pointerMove.complete();\n      this.pointerUp.complete();\n    }\n    /**\n     * Event listener that will prevent the default browser action while the user is dragging.\n     * @param event Event whose default action should be prevented.\n     */\n    _preventDefaultWhileDragging = event => {\n      if (this._activeDragInstances().length > 0) {\n        event.preventDefault();\n      }\n    };\n    /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n    _persistentTouchmoveListener = event => {\n      if (this._activeDragInstances().length > 0) {\n        // Note that we only want to prevent the default action after dragging has actually started.\n        // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n        // but it could be pushed back if the user has set up a drag delay or threshold.\n        if (this._activeDragInstances().some(this._draggingPredicate)) {\n          event.preventDefault();\n        }\n        this.pointerMove.next(event);\n      }\n    };\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n      this._globalListeners?.forEach(cleanup => cleanup());\n      this._globalListeners = undefined;\n    }\n    static ɵfac = function DragDropRegistry_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DragDropRegistry)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DragDropRegistry,\n      factory: DragDropRegistry.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return DragDropRegistry;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n  dragStartThreshold: 5,\n  pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nlet DragDrop = /*#__PURE__*/(() => {\n  class DragDrop {\n    _document = inject(DOCUMENT);\n    _ngZone = inject(NgZone);\n    _viewportRuler = inject(ViewportRuler);\n    _dragDropRegistry = inject(DragDropRegistry);\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    constructor() {}\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n      return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry, this._renderer);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n      return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n    static ɵfac = function DragDrop_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DragDrop)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DragDrop,\n      factory: DragDrop.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return DragDrop;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = /*#__PURE__*/new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n  if (node.nodeType !== 1) {\n    throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n  }\n}\n\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = /*#__PURE__*/new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nlet CdkDragHandle = /*#__PURE__*/(() => {\n  class CdkDragHandle {\n    element = inject(ElementRef);\n    _parentDrag = inject(CDK_DRAG_PARENT, {\n      optional: true,\n      skipSelf: true\n    });\n    _dragDropRegistry = inject(DragDropRegistry);\n    /** Emits when the state of the handle has changed. */\n    _stateChanges = new Subject();\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n      this._stateChanges.next(this);\n    }\n    _disabled = false;\n    constructor() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        assertElementNode(this.element.nativeElement, 'cdkDragHandle');\n      }\n      this._parentDrag?._addHandle(this);\n    }\n    ngAfterViewInit() {\n      if (!this._parentDrag) {\n        let parent = this.element.nativeElement.parentElement;\n        while (parent) {\n          const ref = this._dragDropRegistry.getDragDirectiveForNode(parent);\n          if (ref) {\n            this._parentDrag = ref;\n            ref._addHandle(this);\n            break;\n          }\n          parent = parent.parentElement;\n        }\n      }\n    }\n    ngOnDestroy() {\n      this._parentDrag?._removeHandle(this);\n      this._stateChanges.complete();\n    }\n    static ɵfac = function CdkDragHandle_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkDragHandle)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkDragHandle,\n      selectors: [[\"\", \"cdkDragHandle\", \"\"]],\n      hostAttrs: [1, \"cdk-drag-handle\"],\n      inputs: {\n        disabled: [2, \"cdkDragHandleDisabled\", \"disabled\", booleanAttribute]\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CDK_DRAG_HANDLE,\n        useExisting: CdkDragHandle\n      }])]\n    });\n  }\n  return CdkDragHandle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = /*#__PURE__*/new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = /*#__PURE__*/new InjectionToken('CdkDropList');\n/** Element that can be moved inside a CdkDropList container. */\nlet CdkDrag = /*#__PURE__*/(() => {\n  class CdkDrag {\n    element = inject(ElementRef);\n    dropContainer = inject(CDK_DROP_LIST, {\n      optional: true,\n      skipSelf: true\n    });\n    _ngZone = inject(NgZone);\n    _viewContainerRef = inject(ViewContainerRef);\n    _dir = inject(Directionality, {\n      optional: true\n    });\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _selfHandle = inject(CDK_DRAG_HANDLE, {\n      optional: true,\n      self: true\n    });\n    _parentDrag = inject(CDK_DRAG_PARENT, {\n      optional: true,\n      skipSelf: true\n    });\n    _dragDropRegistry = inject(DragDropRegistry);\n    _destroyed = new Subject();\n    _handles = new BehaviorSubject([]);\n    _previewTemplate;\n    _placeholderTemplate;\n    /** Reference to the underlying drag instance. */\n    _dragRef;\n    /** Arbitrary data to attach to this drag instance. */\n    data;\n    /** Locks the position of the dragged element along the specified axis. */\n    lockAxis;\n    /**\n     * Selector that will be used to determine the root draggable element, starting from\n     * the `cdkDrag` element and going up the DOM. Passing an alternate root element is useful\n     * when trying to enable dragging on an element that you might not have access to.\n     */\n    rootElementSelector;\n    /**\n     * Node or selector that will be used to determine the element to which the draggable's\n     * position will be constrained. If a string is passed in, it'll be used as a selector that\n     * will be matched starting from the element's parent and going up the DOM until a match\n     * has been found.\n     */\n    boundaryElement;\n    /**\n     * Amount of milliseconds to wait after the user has put their\n     * pointer down before starting to drag the element.\n     */\n    dragStartDelay;\n    /**\n     * Sets the position of a `CdkDrag` that is outside of a drop container.\n     * Can be used to restore the element's position for a returning user.\n     */\n    freeDragPosition;\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n      return this._disabled || !!(this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n      this._disabled = value;\n      this._dragRef.disabled = this._disabled;\n    }\n    _disabled;\n    /**\n     * Function that can be used to customize the logic of how the position of the drag item\n     * is limited while it's being dragged. Gets called with a point containing the current position\n     * of the user's pointer on the page, a reference to the item being dragged and its dimensions.\n     * Should return a point describing where the item should be rendered.\n     */\n    constrainPosition;\n    /** Class to be added to the preview element. */\n    previewClass;\n    /**\n     * Configures the place into which the preview of the item will be inserted. Can be configured\n     * globally through `CDK_DROP_LIST`. Possible values:\n     * - `global` - Preview will be inserted at the bottom of the `<body>`. The advantage is that\n     * you don't have to worry about `overflow: hidden` or `z-index`, but the item won't retain\n     * its inherited styles.\n     * - `parent` - Preview will be inserted into the parent of the drag item. The advantage is that\n     * inherited styles will be preserved, but it may be clipped by `overflow: hidden` or not be\n     * visible due to `z-index`. Furthermore, the preview is going to have an effect over selectors\n     * like `:nth-child` and some flexbox configurations.\n     * - `ElementRef<HTMLElement> | HTMLElement` - Preview will be inserted into a specific element.\n     * Same advantages and disadvantages as `parent`.\n     */\n    previewContainer;\n    /**\n     * If the parent of the dragged element has a `scale` transform, it can throw off the\n     * positioning when the user starts dragging. Use this input to notify the CDK of the scale.\n     */\n    scale = 1;\n    /** Emits when the user starts dragging the item. */\n    started = new EventEmitter();\n    /** Emits when the user has released a drag item, before any animations have started. */\n    released = new EventEmitter();\n    /** Emits when the user stops dragging an item in the container. */\n    ended = new EventEmitter();\n    /** Emits when the user has moved the item into a new container. */\n    entered = new EventEmitter();\n    /** Emits when the user removes the item its container by dragging it into another container. */\n    exited = new EventEmitter();\n    /** Emits when the user drops the item inside a container. */\n    dropped = new EventEmitter();\n    /**\n     * Emits as the user is dragging the item. Use with caution,\n     * because this event will fire for every pixel that the user has dragged.\n     */\n    moved = new Observable(observer => {\n      const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\n        source: this,\n        pointerPosition: movedEvent.pointerPosition,\n        event: movedEvent.event,\n        delta: movedEvent.delta,\n        distance: movedEvent.distance\n      }))).subscribe(observer);\n      return () => {\n        subscription.unsubscribe();\n      };\n    });\n    _injector = inject(Injector);\n    constructor() {\n      const dropContainer = this.dropContainer;\n      const config = inject(CDK_DRAG_CONFIG, {\n        optional: true\n      });\n      const dragDrop = inject(DragDrop);\n      this._dragRef = dragDrop.createDrag(this.element, {\n        dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n        pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ? config.pointerDirectionChangeThreshold : 5,\n        zIndex: config?.zIndex\n      });\n      this._dragRef.data = this;\n      this._dragDropRegistry.registerDirectiveNode(this.element.nativeElement, this);\n      if (config) {\n        this._assignDefaults(config);\n      }\n      // Note that usually the container is assigned when the drop list is picks up the item, but in\n      // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n      // where there are no items on the first change detection pass, but the items get picked up as\n      // soon as the user triggers another pass by dragging. This is a problem, because the item would\n      // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n      // is too late since the two modes save different kinds of information. We work around it by\n      // assigning the drop container both from here and the list.\n      if (dropContainer) {\n        this._dragRef._withDropContainer(dropContainer._dropListRef);\n        dropContainer.addItem(this);\n        // The drop container reads this so we need to sync it here.\n        dropContainer._dropListRef.beforeStarted.pipe(takeUntil(this._destroyed)).subscribe(() => {\n          this._dragRef.scale = this.scale;\n        });\n      }\n      this._syncInputs(this._dragRef);\n      this._handleEvents(this._dragRef);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n      return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n      return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n      this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n      return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n      this._dragRef.setFreeDragPosition(value);\n    }\n    ngAfterViewInit() {\n      // We need to wait until after render, in order for the reference\n      // element to be in the proper place in the DOM. This is mostly relevant\n      // for draggable elements inside portals since they get stamped out in\n      // their original DOM position, and then they get transferred to the portal.\n      afterNextRender(() => {\n        this._updateRootElement();\n        this._setupHandlesListener();\n        this._dragRef.scale = this.scale;\n        if (this.freeDragPosition) {\n          this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n      }, {\n        injector: this._injector\n      });\n    }\n    ngOnChanges(changes) {\n      const rootSelectorChange = changes['rootElementSelector'];\n      const positionChange = changes['freeDragPosition'];\n      // We don't have to react to the first change since it's being\n      // handled in the `afterNextRender` queued up in the constructor.\n      if (rootSelectorChange && !rootSelectorChange.firstChange) {\n        this._updateRootElement();\n      }\n      // Scale affects the free drag position so we need to sync it up here.\n      this._dragRef.scale = this.scale;\n      // Skip the first change since it's being handled in the `afterNextRender` queued up in the\n      // constructor.\n      if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n        this._dragRef.setFreeDragPosition(this.freeDragPosition);\n      }\n    }\n    ngOnDestroy() {\n      if (this.dropContainer) {\n        this.dropContainer.removeItem(this);\n      }\n      this._dragDropRegistry.removeDirectiveNode(this.element.nativeElement);\n      // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n      this._ngZone.runOutsideAngular(() => {\n        this._handles.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n      });\n    }\n    _addHandle(handle) {\n      const handles = this._handles.getValue();\n      handles.push(handle);\n      this._handles.next(handles);\n    }\n    _removeHandle(handle) {\n      const handles = this._handles.getValue();\n      const index = handles.indexOf(handle);\n      if (index > -1) {\n        handles.splice(index, 1);\n        this._handles.next(handles);\n      }\n    }\n    _setPreviewTemplate(preview) {\n      this._previewTemplate = preview;\n    }\n    _resetPreviewTemplate(preview) {\n      if (preview === this._previewTemplate) {\n        this._previewTemplate = null;\n      }\n    }\n    _setPlaceholderTemplate(placeholder) {\n      this._placeholderTemplate = placeholder;\n    }\n    _resetPlaceholderTemplate(placeholder) {\n      if (placeholder === this._placeholderTemplate) {\n        this._placeholderTemplate = null;\n      }\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n      const element = this.element.nativeElement;\n      let rootElement = element;\n      if (this.rootElementSelector) {\n        rootElement = element.closest !== undefined ? element.closest(this.rootElementSelector) :\n        // Comment tag doesn't have closest method, so use parent's one.\n        element.parentElement?.closest(this.rootElementSelector);\n      }\n      if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        assertElementNode(rootElement, 'cdkDrag');\n      }\n      this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n      const boundary = this.boundaryElement;\n      if (!boundary) {\n        return null;\n      }\n      if (typeof boundary === 'string') {\n        return this.element.nativeElement.closest(boundary);\n      }\n      return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n      ref.beforeStarted.subscribe(() => {\n        if (!ref.isDragging()) {\n          const dir = this._dir;\n          const dragStartDelay = this.dragStartDelay;\n          const placeholder = this._placeholderTemplate ? {\n            template: this._placeholderTemplate.templateRef,\n            context: this._placeholderTemplate.data,\n            viewContainer: this._viewContainerRef\n          } : null;\n          const preview = this._previewTemplate ? {\n            template: this._previewTemplate.templateRef,\n            context: this._previewTemplate.data,\n            matchSize: this._previewTemplate.matchSize,\n            viewContainer: this._viewContainerRef\n          } : null;\n          ref.disabled = this.disabled;\n          ref.lockAxis = this.lockAxis;\n          ref.scale = this.scale;\n          ref.dragStartDelay = typeof dragStartDelay === 'object' && dragStartDelay ? dragStartDelay : coerceNumberProperty(dragStartDelay);\n          ref.constrainPosition = this.constrainPosition;\n          ref.previewClass = this.previewClass;\n          ref.withBoundaryElement(this._getBoundaryElement()).withPlaceholderTemplate(placeholder).withPreviewTemplate(preview).withPreviewContainer(this.previewContainer || 'global');\n          if (dir) {\n            ref.withDirection(dir.value);\n          }\n        }\n      });\n      // This only needs to be resolved once.\n      ref.beforeStarted.pipe(take(1)).subscribe(() => {\n        // If we managed to resolve a parent through DI, use it.\n        if (this._parentDrag) {\n          ref.withParent(this._parentDrag._dragRef);\n          return;\n        }\n        // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n        // the item was projected into another item by something like `ngTemplateOutlet`.\n        let parent = this.element.nativeElement.parentElement;\n        while (parent) {\n          const parentDrag = this._dragDropRegistry.getDragDirectiveForNode(parent);\n          if (parentDrag) {\n            ref.withParent(parentDrag._dragRef);\n            break;\n          }\n          parent = parent.parentElement;\n        }\n      });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n      ref.started.subscribe(startEvent => {\n        this.started.emit({\n          source: this,\n          event: startEvent.event\n        });\n        // Since all of these events run outside of change detection,\n        // we need to ensure that everything is marked correctly.\n        this._changeDetectorRef.markForCheck();\n      });\n      ref.released.subscribe(releaseEvent => {\n        this.released.emit({\n          source: this,\n          event: releaseEvent.event\n        });\n      });\n      ref.ended.subscribe(endEvent => {\n        this.ended.emit({\n          source: this,\n          distance: endEvent.distance,\n          dropPoint: endEvent.dropPoint,\n          event: endEvent.event\n        });\n        // Since all of these events run outside of change detection,\n        // we need to ensure that everything is marked correctly.\n        this._changeDetectorRef.markForCheck();\n      });\n      ref.entered.subscribe(enterEvent => {\n        this.entered.emit({\n          container: enterEvent.container.data,\n          item: this,\n          currentIndex: enterEvent.currentIndex\n        });\n      });\n      ref.exited.subscribe(exitEvent => {\n        this.exited.emit({\n          container: exitEvent.container.data,\n          item: this\n        });\n      });\n      ref.dropped.subscribe(dropEvent => {\n        this.dropped.emit({\n          previousIndex: dropEvent.previousIndex,\n          currentIndex: dropEvent.currentIndex,\n          previousContainer: dropEvent.previousContainer.data,\n          container: dropEvent.container.data,\n          isPointerOverContainer: dropEvent.isPointerOverContainer,\n          item: this,\n          distance: dropEvent.distance,\n          dropPoint: dropEvent.dropPoint,\n          event: dropEvent.event\n        });\n      });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n      const {\n        lockAxis,\n        dragStartDelay,\n        constrainPosition,\n        previewClass,\n        boundaryElement,\n        draggingDisabled,\n        rootElementSelector,\n        previewContainer\n      } = config;\n      this.disabled = draggingDisabled == null ? false : draggingDisabled;\n      this.dragStartDelay = dragStartDelay || 0;\n      if (lockAxis) {\n        this.lockAxis = lockAxis;\n      }\n      if (constrainPosition) {\n        this.constrainPosition = constrainPosition;\n      }\n      if (previewClass) {\n        this.previewClass = previewClass;\n      }\n      if (boundaryElement) {\n        this.boundaryElement = boundaryElement;\n      }\n      if (rootElementSelector) {\n        this.rootElementSelector = rootElementSelector;\n      }\n      if (previewContainer) {\n        this.previewContainer = previewContainer;\n      }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n      // Listen for any newly-added handles.\n      this._handles.pipe(\n      // Sync the new handles with the DragRef.\n      tap(handles => {\n        const handleElements = handles.map(handle => handle.element);\n        // Usually handles are only allowed to be a descendant of the drag element, but if\n        // the consumer defined a different drag root, we should allow the drag element\n        // itself to be a handle too.\n        if (this._selfHandle && this.rootElementSelector) {\n          handleElements.push(this.element);\n        }\n        this._dragRef.withHandles(handleElements);\n      }),\n      // Listen if the state of any of the handles changes.\n      switchMap(handles => {\n        return merge(...handles.map(item => item._stateChanges.pipe(startWith(item))));\n      }), takeUntil(this._destroyed)).subscribe(handleInstance => {\n        // Enabled/disable the handle that changed in the DragRef.\n        const dragRef = this._dragRef;\n        const handle = handleInstance.element.nativeElement;\n        handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n      });\n    }\n    static ɵfac = function CdkDrag_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkDrag)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkDrag,\n      selectors: [[\"\", \"cdkDrag\", \"\"]],\n      hostAttrs: [1, \"cdk-drag\"],\n      hostVars: 4,\n      hostBindings: function CdkDrag_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n        }\n      },\n      inputs: {\n        data: [0, \"cdkDragData\", \"data\"],\n        lockAxis: [0, \"cdkDragLockAxis\", \"lockAxis\"],\n        rootElementSelector: [0, \"cdkDragRootElement\", \"rootElementSelector\"],\n        boundaryElement: [0, \"cdkDragBoundary\", \"boundaryElement\"],\n        dragStartDelay: [0, \"cdkDragStartDelay\", \"dragStartDelay\"],\n        freeDragPosition: [0, \"cdkDragFreeDragPosition\", \"freeDragPosition\"],\n        disabled: [2, \"cdkDragDisabled\", \"disabled\", booleanAttribute],\n        constrainPosition: [0, \"cdkDragConstrainPosition\", \"constrainPosition\"],\n        previewClass: [0, \"cdkDragPreviewClass\", \"previewClass\"],\n        previewContainer: [0, \"cdkDragPreviewContainer\", \"previewContainer\"],\n        scale: [2, \"cdkDragScale\", \"scale\", numberAttribute]\n      },\n      outputs: {\n        started: \"cdkDragStarted\",\n        released: \"cdkDragReleased\",\n        ended: \"cdkDragEnded\",\n        entered: \"cdkDragEntered\",\n        exited: \"cdkDragExited\",\n        dropped: \"cdkDragDropped\",\n        moved: \"cdkDragMoved\"\n      },\n      exportAs: [\"cdkDrag\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CDK_DRAG_PARENT,\n        useExisting: CdkDrag\n      }]), i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return CdkDrag;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = /*#__PURE__*/new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nlet CdkDropListGroup = /*#__PURE__*/(() => {\n  class CdkDropListGroup {\n    /** Drop lists registered inside the group. */\n    _items = new Set();\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    disabled = false;\n    ngOnDestroy() {\n      this._items.clear();\n    }\n    static ɵfac = function CdkDropListGroup_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkDropListGroup)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkDropListGroup,\n      selectors: [[\"\", \"cdkDropListGroup\", \"\"]],\n      inputs: {\n        disabled: [2, \"cdkDropListGroupDisabled\", \"disabled\", booleanAttribute]\n      },\n      exportAs: [\"cdkDropListGroup\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CDK_DROP_LIST_GROUP,\n        useExisting: CdkDropListGroup\n      }])]\n    });\n  }\n  return CdkDropListGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Container that wraps a set of draggable items. */\nlet CdkDropList = /*#__PURE__*/(() => {\n  class CdkDropList {\n    element = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _scrollDispatcher = inject(ScrollDispatcher);\n    _dir = inject(Directionality, {\n      optional: true\n    });\n    _group = inject(CDK_DROP_LIST_GROUP, {\n      optional: true,\n      skipSelf: true\n    });\n    /** Refs that have been synced with the drop ref most recently. */\n    _latestSortedRefs;\n    /** Emits when the list has been destroyed. */\n    _destroyed = new Subject();\n    /** Whether the element's scrollable parents have been resolved. */\n    _scrollableParentsResolved;\n    /** Keeps track of the drop lists that are currently on the page. */\n    static _dropLists = [];\n    /** Reference to the underlying drop list instance. */\n    _dropListRef;\n    /**\n     * Other draggable containers that this container is connected to and into which the\n     * container's items can be transferred. Can either be references to other drop containers,\n     * or their unique IDs.\n     */\n    connectedTo = [];\n    /** Arbitrary data to attach to this container. */\n    data;\n    /** Direction in which the list is oriented. */\n    orientation;\n    /**\n     * Unique ID for the drop zone. Can be used as a reference\n     * in the `connectedTo` of another `CdkDropList`.\n     */\n    id = inject(_IdGenerator).getId('cdk-drop-list-');\n    /** Locks the position of the draggable elements inside the container along the specified axis. */\n    lockAxis;\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n      return this._disabled || !!this._group && this._group.disabled;\n    }\n    set disabled(value) {\n      // Usually we sync the directive and ref state right before dragging starts, in order to have\n      // a single point of failure and to avoid having to use setters for everything. `disabled` is\n      // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n      // the user in a disabled state, so we also need to sync it as it's being set.\n      this._dropListRef.disabled = this._disabled = value;\n    }\n    _disabled;\n    /** Whether sorting within this drop list is disabled. */\n    sortingDisabled;\n    /**\n     * Function that is used to determine whether an item\n     * is allowed to be moved into a drop container.\n     */\n    enterPredicate = () => true;\n    /** Functions that is used to determine whether an item can be sorted into a particular index. */\n    sortPredicate = () => true;\n    /** Whether to auto-scroll the view when the user moves their pointer close to the edges. */\n    autoScrollDisabled;\n    /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n    autoScrollStep;\n    /**\n     * Selector that will be used to resolve an alternate element container for the drop list.\n     * Passing an alternate container is useful for the cases where one might not have control\n     * over the parent node of the draggable items within the list (e.g. due to content projection).\n     * This allows for usages like:\n     *\n     * ```\n     * <div cdkDropList cdkDropListElementContainer=\".inner\">\n     *   <div class=\"inner\">\n     *     <div cdkDrag></div>\n     *   </div>\n     * </div>\n     * ```\n     */\n    elementContainerSelector;\n    /** Emits when the user drops an item inside the container. */\n    dropped = new EventEmitter();\n    /**\n     * Emits when the user has moved a new drag item into this container.\n     */\n    entered = new EventEmitter();\n    /**\n     * Emits when the user removes an item from the container\n     * by dragging it into another container.\n     */\n    exited = new EventEmitter();\n    /** Emits as the user is swapping items while actively dragging. */\n    sorted = new EventEmitter();\n    /**\n     * Keeps track of the items that are registered with this container. Historically we used to\n     * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n     * well which means that we can't handle cases like dragging the headers of a `mat-table`\n     * correctly. What we do instead is to have the items register themselves with the container\n     * and then we sort them based on their position in the DOM.\n     */\n    _unsortedItems = new Set();\n    constructor() {\n      const dragDrop = inject(DragDrop);\n      const config = inject(CDK_DRAG_CONFIG, {\n        optional: true\n      });\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        assertElementNode(this.element.nativeElement, 'cdkDropList');\n      }\n      this._dropListRef = dragDrop.createDropList(this.element);\n      this._dropListRef.data = this;\n      if (config) {\n        this._assignDefaults(config);\n      }\n      this._dropListRef.enterPredicate = (drag, drop) => {\n        return this.enterPredicate(drag.data, drop.data);\n      };\n      this._dropListRef.sortPredicate = (index, drag, drop) => {\n        return this.sortPredicate(index, drag.data, drop.data);\n      };\n      this._setupInputSyncSubscription(this._dropListRef);\n      this._handleEvents(this._dropListRef);\n      CdkDropList._dropLists.push(this);\n      if (this._group) {\n        this._group._items.add(this);\n      }\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n      this._unsortedItems.add(item);\n      // Only sync the items while dragging since this method is\n      // called when items are being initialized one-by-one.\n      if (this._dropListRef.isDragging()) {\n        this._syncItemsWithRef(this.getSortedItems().map(item => item._dragRef));\n      }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n      this._unsortedItems.delete(item);\n      // This method might be called on destroy so we always want to sync with the ref.\n      // Note that we reuse the last set of synced items, rather than re-sorting the whole\n      // list, because it can slow down re-renders of large lists (see #30737).\n      if (this._latestSortedRefs) {\n        const index = this._latestSortedRefs.indexOf(item._dragRef);\n        if (index > -1) {\n          this._latestSortedRefs.splice(index, 1);\n          this._syncItemsWithRef(this._latestSortedRefs);\n        }\n      }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n      return Array.from(this._unsortedItems).sort((a, b) => {\n        const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n        // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        // tslint:disable-next-line:no-bitwise\n        return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n      });\n    }\n    ngOnDestroy() {\n      const index = CdkDropList._dropLists.indexOf(this);\n      if (index > -1) {\n        CdkDropList._dropLists.splice(index, 1);\n      }\n      if (this._group) {\n        this._group._items.delete(this);\n      }\n      this._latestSortedRefs = undefined;\n      this._unsortedItems.clear();\n      this._dropListRef.dispose();\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n      if (this._dir) {\n        this._dir.change.pipe(startWith(this._dir.value), takeUntil(this._destroyed)).subscribe(value => ref.withDirection(value));\n      }\n      ref.beforeStarted.subscribe(() => {\n        const siblings = coerceArray(this.connectedTo).map(drop => {\n          if (typeof drop === 'string') {\n            const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n            if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n              console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n            }\n            return correspondingDropList;\n          }\n          return drop;\n        });\n        if (this._group) {\n          this._group._items.forEach(drop => {\n            if (siblings.indexOf(drop) === -1) {\n              siblings.push(drop);\n            }\n          });\n        }\n        // Note that we resolve the scrollable parents here so that we delay the resolution\n        // as long as possible, ensuring that the element is in its final place in the DOM.\n        if (!this._scrollableParentsResolved) {\n          const scrollableParents = this._scrollDispatcher.getAncestorScrollContainers(this.element).map(scrollable => scrollable.getElementRef().nativeElement);\n          this._dropListRef.withScrollableParents(scrollableParents);\n          // Only do this once since it involves traversing the DOM and the parents\n          // shouldn't be able to change without the drop list being destroyed.\n          this._scrollableParentsResolved = true;\n        }\n        if (this.elementContainerSelector) {\n          const container = this.element.nativeElement.querySelector(this.elementContainerSelector);\n          if (!container && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new Error(`CdkDropList could not find an element container matching the selector \"${this.elementContainerSelector}\"`);\n          }\n          ref.withElementContainer(container);\n        }\n        ref.disabled = this.disabled;\n        ref.lockAxis = this.lockAxis;\n        ref.sortingDisabled = this.sortingDisabled;\n        ref.autoScrollDisabled = this.autoScrollDisabled;\n        ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n        ref.connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef)).withOrientation(this.orientation);\n      });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n      ref.beforeStarted.subscribe(() => {\n        this._syncItemsWithRef(this.getSortedItems().map(item => item._dragRef));\n        this._changeDetectorRef.markForCheck();\n      });\n      ref.entered.subscribe(event => {\n        this.entered.emit({\n          container: this,\n          item: event.item.data,\n          currentIndex: event.currentIndex\n        });\n      });\n      ref.exited.subscribe(event => {\n        this.exited.emit({\n          container: this,\n          item: event.item.data\n        });\n        this._changeDetectorRef.markForCheck();\n      });\n      ref.sorted.subscribe(event => {\n        this.sorted.emit({\n          previousIndex: event.previousIndex,\n          currentIndex: event.currentIndex,\n          container: this,\n          item: event.item.data\n        });\n      });\n      ref.dropped.subscribe(dropEvent => {\n        this.dropped.emit({\n          previousIndex: dropEvent.previousIndex,\n          currentIndex: dropEvent.currentIndex,\n          previousContainer: dropEvent.previousContainer.data,\n          container: dropEvent.container.data,\n          item: dropEvent.item.data,\n          isPointerOverContainer: dropEvent.isPointerOverContainer,\n          distance: dropEvent.distance,\n          dropPoint: dropEvent.dropPoint,\n          event: dropEvent.event\n        });\n        // Mark for check since all of these events run outside of change\n        // detection and we're not guaranteed for something else to have triggered it.\n        this._changeDetectorRef.markForCheck();\n      });\n      merge(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n      const {\n        lockAxis,\n        draggingDisabled,\n        sortingDisabled,\n        listAutoScrollDisabled,\n        listOrientation\n      } = config;\n      this.disabled = draggingDisabled == null ? false : draggingDisabled;\n      this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n      this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n      this.orientation = listOrientation || 'vertical';\n      if (lockAxis) {\n        this.lockAxis = lockAxis;\n      }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef(items) {\n      this._latestSortedRefs = items;\n      this._dropListRef.withItems(items);\n    }\n    static ɵfac = function CdkDropList_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkDropList)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkDropList,\n      selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]],\n      hostAttrs: [1, \"cdk-drop-list\"],\n      hostVars: 7,\n      hostBindings: function CdkDropList_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"id\", ctx.id);\n          i0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n        }\n      },\n      inputs: {\n        connectedTo: [0, \"cdkDropListConnectedTo\", \"connectedTo\"],\n        data: [0, \"cdkDropListData\", \"data\"],\n        orientation: [0, \"cdkDropListOrientation\", \"orientation\"],\n        id: \"id\",\n        lockAxis: [0, \"cdkDropListLockAxis\", \"lockAxis\"],\n        disabled: [2, \"cdkDropListDisabled\", \"disabled\", booleanAttribute],\n        sortingDisabled: [2, \"cdkDropListSortingDisabled\", \"sortingDisabled\", booleanAttribute],\n        enterPredicate: [0, \"cdkDropListEnterPredicate\", \"enterPredicate\"],\n        sortPredicate: [0, \"cdkDropListSortPredicate\", \"sortPredicate\"],\n        autoScrollDisabled: [2, \"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\", booleanAttribute],\n        autoScrollStep: [0, \"cdkDropListAutoScrollStep\", \"autoScrollStep\"],\n        elementContainerSelector: [0, \"cdkDropListElementContainer\", \"elementContainerSelector\"]\n      },\n      outputs: {\n        dropped: \"cdkDropListDropped\",\n        entered: \"cdkDropListEntered\",\n        exited: \"cdkDropListExited\",\n        sorted: \"cdkDropListSorted\"\n      },\n      exportAs: [\"cdkDropList\"],\n      features: [i0.ɵɵProvidersFeature([\n      // Prevent child drop lists from picking up the same group as their parent.\n      {\n        provide: CDK_DROP_LIST_GROUP,\n        useValue: undefined\n      }, {\n        provide: CDK_DROP_LIST,\n        useExisting: CdkDropList\n      }])]\n    });\n  }\n  return CdkDropList;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = /*#__PURE__*/new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nlet CdkDragPreview = /*#__PURE__*/(() => {\n  class CdkDragPreview {\n    templateRef = inject(TemplateRef);\n    _drag = inject(CDK_DRAG_PARENT, {\n      optional: true\n    });\n    /** Context data to be added to the preview template instance. */\n    data;\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    matchSize = false;\n    constructor() {\n      this._drag?._setPreviewTemplate(this);\n    }\n    ngOnDestroy() {\n      this._drag?._resetPreviewTemplate(this);\n    }\n    static ɵfac = function CdkDragPreview_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkDragPreview)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkDragPreview,\n      selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]],\n      inputs: {\n        data: \"data\",\n        matchSize: [2, \"matchSize\", \"matchSize\", booleanAttribute]\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CDK_DRAG_PREVIEW,\n        useExisting: CdkDragPreview\n      }])]\n    });\n  }\n  return CdkDragPreview;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = /*#__PURE__*/new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nlet CdkDragPlaceholder = /*#__PURE__*/(() => {\n  class CdkDragPlaceholder {\n    templateRef = inject(TemplateRef);\n    _drag = inject(CDK_DRAG_PARENT, {\n      optional: true\n    });\n    /** Context data to be added to the placeholder template instance. */\n    data;\n    constructor() {\n      this._drag?._setPlaceholderTemplate(this);\n    }\n    ngOnDestroy() {\n      this._drag?._resetPlaceholderTemplate(this);\n    }\n    static ɵfac = function CdkDragPlaceholder_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkDragPlaceholder)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkDragPlaceholder,\n      selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]],\n      inputs: {\n        data: \"data\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CDK_DRAG_PLACEHOLDER,\n        useExisting: CdkDragPlaceholder\n      }])]\n    });\n  }\n  return CdkDragPlaceholder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst DRAG_DROP_DIRECTIVES = [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder];\nlet DragDropModule = /*#__PURE__*/(() => {\n  class DragDropModule {\n    static ɵfac = function DragDropModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DragDropModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: DragDropModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [DragDrop],\n      imports: [CdkScrollableModule]\n    });\n  }\n  return DragDropModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","<div class=\"root\">\n\n  <div class=\"playlist-info\">\n    <my-video-playlist-miniature\n      *ngIf=\"playlist\" [playlist]=\"playlist\" [toManage]=\"false\" [displayChannel]=\"true\"\n      [displayDescription]=\"true\" [displayPrivacy]=\"true\"\n    ></my-video-playlist-miniature>\n\n    <div class=\"playlist-buttons\">\n\n      <my-button class=\"me-3\" (click)=\"showShareModal()\" i18n icon=\"share\">Share</my-button>\n\n      <my-action-dropdown\n        *ngIf=\"isRegularPlaylist(playlist)\"\n        [entry]=\"playlist\" [actions]=\"playlistActions\" label=\"More\"\n      ></my-action-dropdown>\n    </div>\n\n  </div>\n\n  <div class=\"playlist-elements\">\n    <div class=\"no-results\" *ngIf=\"pagination.totalItems === 0\">\n      <div i18n>No videos in this playlist.</div>\n\n      <div i18n>\n        Browse videos on PeerTube to add them in your playlist.\n      </div>\n\n      <div i18n>\n        See the <a target=\"_blank\" href=\"https://docs.joinpeertube.org/use/library#playlist\">documentation</a> for more information.\n      </div>\n    </div>\n\n    <div\n      class=\"videos\" myInfiniteScroller (nearOfBottom)=\"onNearOfBottom()\"\n      cdkDropList (cdkDropListDropped)=\"drop($event)\" [dataObservable]=\"onDataSubject.asObservable()\"\n    >\n      <div class=\"video\" *ngFor=\"let playlistElement of playlistElements; trackBy: trackByFn\" cdkDrag [cdkDragStartDelay]=\"getDragStartDelay()\">\n        <my-video-playlist-element-miniature\n          [playlistElement]=\"playlistElement\" [playlist]=\"playlist\" [owned]=\"true\" (elementRemoved)=\"onElementRemoved($event)\"\n          [position]=\"playlistElement.position\"\n        >\n        </my-video-playlist-element-miniature>\n      </div>\n    </div>\n  </div>\n</div>\n\n<my-video-share #videoShareModal [playlist]=\"playlist\"></my-video-share>\n","import { CdkDrag, CdkDragDrop, CdkDropList } from '@angular/cdk/drag-drop'\nimport { NgFor, NgIf } from '@angular/common'\nimport { Component, OnDestroy, OnInit, inject, viewChild } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { ComponentPagination, ConfirmService, HooksService, Notifier, ScreenService, updatePaginationOnDelete } from '@app/core'\nimport { ButtonComponent } from '@app/shared/shared-main/buttons/button.component'\nimport { VideoShareComponent } from '@app/shared/shared-share-modal/video-share.component'\nimport { VideoPlaylistElement } from '@app/shared/shared-video-playlist/video-playlist-element.model'\nimport { VideoPlaylist } from '@app/shared/shared-video-playlist/video-playlist.model'\nimport { VideoPlaylistService } from '@app/shared/shared-video-playlist/video-playlist.service'\nimport { VideoPlaylistType } from '@peertube/peertube-models'\nimport { Subject, Subscription } from 'rxjs'\n\nimport { ActionDropdownComponent, DropdownAction } from '../../shared/shared-main/buttons/action-dropdown.component'\nimport { InfiniteScrollerDirective } from '../../shared/shared-main/common/infinite-scroller.directive'\nimport { VideoPlaylistElementMiniatureComponent } from '../../shared/shared-video-playlist/video-playlist-element-miniature.component'\nimport { VideoPlaylistMiniatureComponent } from '../../shared/shared-video-playlist/video-playlist-miniature.component'\n\n@Component({\n  templateUrl: './my-video-playlist-elements.component.html',\n  styleUrls: [ './my-video-playlist-elements.component.scss' ],\n  imports: [\n    NgIf,\n    ButtonComponent,\n    VideoPlaylistMiniatureComponent,\n    ActionDropdownComponent,\n    InfiniteScrollerDirective,\n    CdkDropList,\n    NgFor,\n    CdkDrag,\n    VideoPlaylistElementMiniatureComponent,\n    VideoShareComponent\n  ]\n})\nexport class MyVideoPlaylistElementsComponent implements OnInit, OnDestroy {\n  private hooks = inject(HooksService)\n  private notifier = inject(Notifier)\n  private router = inject(Router)\n  private confirmService = inject(ConfirmService)\n  private route = inject(ActivatedRoute)\n  private screenService = inject(ScreenService)\n  private videoPlaylistService = inject(VideoPlaylistService)\n\n  readonly videoShareModal = viewChild<VideoShareComponent>('videoShareModal')\n\n  playlistElements: VideoPlaylistElement[] = []\n  playlist: VideoPlaylist\n\n  playlistActions: DropdownAction<VideoPlaylist>[][] = []\n\n  pagination: ComponentPagination = {\n    currentPage: 1,\n    itemsPerPage: 10,\n    totalItems: null\n  }\n\n  onDataSubject = new Subject<any[]>()\n\n  private videoPlaylistId: string | number\n  private paramsSub: Subscription\n\n  ngOnInit () {\n    this.playlistActions = [\n      [\n        {\n          label: $localize`Update playlist`,\n          iconName: 'edit',\n          linkBuilder: playlist => [ '/my-library', 'video-playlists', 'update', playlist.shortUUID ]\n        },\n        {\n          label: $localize`Delete playlist`,\n          iconName: 'delete',\n          handler: playlist => this.deleteVideoPlaylist(playlist)\n        }\n      ]\n    ]\n\n    this.paramsSub = this.route.params.subscribe(routeParams => {\n      this.videoPlaylistId = routeParams['videoPlaylistId']\n      this.loadElements()\n\n      this.loadPlaylistInfo()\n    })\n  }\n\n  ngOnDestroy () {\n    if (this.paramsSub) this.paramsSub.unsubscribe()\n  }\n\n  drop (event: CdkDragDrop<any>) {\n    const previousIndex = event.previousIndex\n    const newIndex = event.currentIndex\n\n    if (previousIndex === newIndex) return\n\n    const oldPosition = this.playlistElements[previousIndex].position\n    let insertAfter = this.playlistElements[newIndex].position\n\n    if (oldPosition > insertAfter) insertAfter--\n\n    const element = this.playlistElements[previousIndex]\n\n    this.playlistElements.splice(previousIndex, 1)\n    this.playlistElements.splice(newIndex, 0, element)\n\n    this.videoPlaylistService.reorderPlaylist(this.playlist.id, oldPosition, insertAfter)\n      .subscribe({\n        next: () => {\n          this.reorderClientPositions()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  onElementRemoved (element: VideoPlaylistElement) {\n    const oldFirst = this.findFirst()\n\n    this.playlistElements = this.playlistElements.filter(v => v.id !== element.id)\n    updatePaginationOnDelete(this.pagination)\n    this.reorderClientPositions(oldFirst)\n  }\n\n  onNearOfBottom () {\n    // Last page\n    if (this.pagination.totalItems <= (this.pagination.currentPage * this.pagination.itemsPerPage)) return\n\n    this.pagination.currentPage += 1\n    this.loadElements()\n  }\n\n  trackByFn (index: number, elem: VideoPlaylistElement) {\n    return elem.id\n  }\n\n  isRegularPlaylist (playlist: VideoPlaylist) {\n    return playlist?.type.id === VideoPlaylistType.REGULAR\n  }\n\n  showShareModal () {\n    this.videoShareModal().show()\n  }\n\n  async deleteVideoPlaylist (videoPlaylist: VideoPlaylist) {\n    const res = await this.confirmService.confirm(\n      $localize`Do you really want to delete ${videoPlaylist.displayName}?`,\n      $localize`Delete`\n    )\n    if (res === false) return\n\n    this.videoPlaylistService.removeVideoPlaylist(videoPlaylist)\n      .subscribe({\n        next: () => {\n          this.router.navigate([ '/my-library', 'video-playlists' ])\n          this.notifier.success($localize`Playlist ${videoPlaylist.displayName} deleted.`)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  /**\n   * Returns null to not have drag and drop delay.\n   * In small views, where elements are about 100% wide,\n   * we add a delay to prevent unwanted drag&drop.\n   *\n   * @see {@link https://github.com/Chocobozzz/PeerTube/issues/2078}\n   */\n  getDragStartDelay (): null | number {\n    if (this.screenService.isInTouchScreen()) {\n      return 500\n    }\n\n    return null\n  }\n\n  private loadElements () {\n    this.hooks.wrapObsFun(\n      this.videoPlaylistService.getPlaylistVideos.bind(this.videoPlaylistService),\n      { videoPlaylistId: this.videoPlaylistId, componentPagination: this.pagination },\n      'my-library',\n      'filter:api.my-library.video-playlist-elements.list.params',\n      'filter:api.my-library.video-playlist-elements.list.result'\n    ).subscribe(({ total, data }) => {\n      this.playlistElements = this.playlistElements.concat(data)\n      this.pagination.totalItems = total\n\n      this.onDataSubject.next(data)\n    })\n  }\n\n  private loadPlaylistInfo () {\n    this.videoPlaylistService.getVideoPlaylist(this.videoPlaylistId)\n      .subscribe(playlist => {\n        this.playlist = playlist\n      })\n  }\n\n  private reorderClientPositions (first?: VideoPlaylistElement) {\n    if (this.playlistElements.length === 0) return\n\n    const oldFirst = first || this.findFirst()\n    let i = 1\n\n    for (const element of this.playlistElements) {\n      element.position = i\n      i++\n    }\n\n    // Reload playlist thumbnail if the first element changed\n    const newFirst = this.findFirst()\n    if (oldFirst && newFirst && oldFirst.id !== newFirst.id) {\n      this.loadPlaylistInfo()\n    }\n  }\n\n  private findFirst () {\n    return this.playlistElements.find(e => e.position === 1)\n  }\n}\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnDestroy, OnInit, inject } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router'\nimport { AuthService, Notifier, ServerService } from '@app/core'\nimport { listUserChannelsForSelect } from '@app/helpers'\nimport {\n  setPlaylistChannelValidator,\n  VIDEO_PLAYLIST_CHANNEL_ID_VALIDATOR,\n  VIDEO_PLAYLIST_DESCRIPTION_VALIDATOR,\n  VIDEO_PLAYLIST_DISPLAY_NAME_VALIDATOR,\n  VIDEO_PLAYLIST_PRIVACY_VALIDATOR\n} from '@app/shared/form-validators/video-playlist-validators'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport { VideoPlaylistService } from '@app/shared/shared-video-playlist/video-playlist.service'\nimport { VideoPlaylistUpdate } from '@peertube/peertube-models'\nimport { forkJoin, Subscription } from 'rxjs'\nimport { map, switchMap } from 'rxjs/operators'\nimport { MarkdownTextareaComponent } from '../../shared/shared-forms/markdown-textarea.component'\nimport { PreviewUploadComponent } from '../../shared/shared-forms/preview-upload.component'\nimport { SelectChannelComponent } from '../../shared/shared-forms/select/select-channel.component'\nimport { SelectOptionsComponent } from '../../shared/shared-forms/select/select-options.component'\nimport { HelpComponent } from '../../shared/shared-main/buttons/help.component'\nimport { MyVideoPlaylistEdit } from './my-video-playlist-edit'\n\n@Component({\n  templateUrl: './my-video-playlist-edit.component.html',\n  styleUrls: [ './my-video-playlist-edit.component.scss' ],\n  imports: [\n    NgIf,\n    RouterLink,\n    FormsModule,\n    ReactiveFormsModule,\n    PreviewUploadComponent,\n    NgClass,\n    HelpComponent,\n    MarkdownTextareaComponent,\n    SelectOptionsComponent,\n    SelectChannelComponent,\n    AlertComponent\n  ]\n})\nexport class MyVideoPlaylistUpdateComponent extends MyVideoPlaylistEdit implements OnInit, OnDestroy {\n  protected formReactiveService = inject(FormReactiveService)\n  private authService = inject(AuthService)\n  private notifier = inject(Notifier)\n  private router = inject(Router)\n  private route = inject(ActivatedRoute)\n  private videoPlaylistService = inject(VideoPlaylistService)\n  private serverService = inject(ServerService)\n\n  error: string\n\n  private paramsSub: Subscription\n\n  ngOnInit () {\n    this.buildForm({\n      displayName: VIDEO_PLAYLIST_DISPLAY_NAME_VALIDATOR,\n      privacy: VIDEO_PLAYLIST_PRIVACY_VALIDATOR,\n      description: VIDEO_PLAYLIST_DESCRIPTION_VALIDATOR,\n      videoChannelId: VIDEO_PLAYLIST_CHANNEL_ID_VALIDATOR,\n      thumbnailfile: null\n    })\n\n    this.form.get('privacy').valueChanges.subscribe(privacy => {\n      setPlaylistChannelValidator(this.form.get('videoChannelId'), privacy)\n    })\n\n    listUserChannelsForSelect(this.authService)\n      .subscribe(channels => this.userVideoChannels = channels)\n\n    this.paramsSub = this.route.params\n      .pipe(\n        map(routeParams => routeParams['videoPlaylistId']),\n        switchMap(videoPlaylistId => {\n          return forkJoin([\n            this.videoPlaylistService.getVideoPlaylist(videoPlaylistId),\n            this.serverService.getVideoPlaylistPrivacies()\n          ])\n        })\n      )\n      .subscribe({\n        next: ([ videoPlaylistToUpdate, videoPlaylistPrivacies ]) => {\n          this.videoPlaylistToUpdate = videoPlaylistToUpdate\n          this.videoPlaylistPrivacies = videoPlaylistPrivacies\n\n          this.hydrateFormFromPlaylist()\n        },\n\n        error: err => {\n          this.error = err.message\n        }\n      })\n  }\n\n  ngOnDestroy () {\n    if (this.paramsSub) this.paramsSub.unsubscribe()\n  }\n\n  formValidated () {\n    this.error = undefined\n\n    const body = this.form.value\n    const videoPlaylistUpdate: VideoPlaylistUpdate = {\n      displayName: body.displayName,\n      privacy: body.privacy,\n      description: body.description || null,\n      videoChannelId: body.videoChannelId || null,\n      thumbnailfile: body.thumbnailfile || undefined\n    }\n\n    this.videoPlaylistService.updateVideoPlaylist(this.videoPlaylistToUpdate, videoPlaylistUpdate)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Playlist ${videoPlaylistUpdate.displayName} updated.`)\n          this.router.navigate([ '/my-library', 'video-playlists' ])\n        },\n\n        error: err => {\n          this.error = err.message\n        }\n      })\n  }\n\n  isCreation () {\n    return false\n  }\n\n  getFormButtonTitle () {\n    return $localize`Update`\n  }\n\n  private hydrateFormFromPlaylist () {\n    this.form.patchValue({\n      displayName: this.videoPlaylistToUpdate.displayName,\n      privacy: this.videoPlaylistToUpdate.privacy.id,\n      description: this.videoPlaylistToUpdate.description,\n      videoChannelId: this.videoPlaylistToUpdate.videoChannel ? this.videoPlaylistToUpdate.videoChannel.id : null\n    })\n\n    fetch(this.videoPlaylistToUpdate.thumbnailUrl)\n      .then(response => response.blob())\n      .then(data => {\n        this.form.patchValue({\n          thumbnailfile: data\n        })\n      })\n  }\n}\n","<div class=\"video-playlists-header d-flex justify-content-between align-items-end gap-2 flex-wrap\">\n  <my-advanced-input-filter (search)=\"onSearch($event)\"></my-advanced-input-filter>\n\n  <span class=\"total-items\" *ngIf=\"pagination.totalItems\"> {{ getTotalTitle() }}</span>\n\n  <a class=\"peertube-create-button\" routerLink=\"create\">\n    <my-global-icon iconName=\"add\" aria-hidden=\"true\"></my-global-icon>\n    <ng-container i18n>Create playlist</ng-container>\n  </a>\n</div>\n\n<div class=\"video-playlists\" myInfiniteScroller (nearOfBottom)=\"onNearOfBottom()\" [dataObservable]=\"onDataSubject.asObservable()\">\n  <div *ngFor=\"let playlist of videoPlaylists\" class=\"video-playlist\">\n    <my-video-playlist-miniature\n      [playlist]=\"playlist\" [toManage]=\"true\" [displayChannel]=\"true\"\n      [displayDescription]=\"true\" [displayPrivacy]=\"true\" [displayAsRow]=\"true\"\n    ></my-video-playlist-miniature>\n\n    <div *ngIf=\"isRegularPlaylist(playlist)\" class=\"video-playlist-buttons\">\n      <my-delete-button label (click)=\"deleteVideoPlaylist(playlist)\"></my-delete-button>\n\n      <my-edit-button label [ptRouterLink]=\"[ 'update', playlist.shortUUID ]\"></my-edit-button>\n    </div>\n  </div>\n</div>\n","import { NgFor, NgIf } from '@angular/common'\nimport { Component, inject } from '@angular/core'\nimport { RouterLink } from '@angular/router'\nimport { AuthService, ComponentPagination, ConfirmService, Notifier, resetCurrentPage, updatePaginationOnDelete } from '@app/core'\nimport { formatICU } from '@app/helpers'\nimport { VideoPlaylist } from '@app/shared/shared-video-playlist/video-playlist.model'\nimport { VideoPlaylistService } from '@app/shared/shared-video-playlist/video-playlist.service'\nimport { VideoPlaylistType } from '@peertube/peertube-models'\nimport { Subject } from 'rxjs'\nimport { mergeMap } from 'rxjs/operators'\nimport { AdvancedInputFilterComponent } from '../../shared/shared-forms/advanced-input-filter.component'\nimport { GlobalIconComponent } from '../../shared/shared-icons/global-icon.component'\nimport { DeleteButtonComponent } from '../../shared/shared-main/buttons/delete-button.component'\nimport { EditButtonComponent } from '../../shared/shared-main/buttons/edit-button.component'\nimport { InfiniteScrollerDirective } from '../../shared/shared-main/common/infinite-scroller.directive'\nimport { VideoPlaylistMiniatureComponent } from '../../shared/shared-video-playlist/video-playlist-miniature.component'\n\n@Component({\n  templateUrl: './my-video-playlists.component.html',\n  styleUrls: [ './my-video-playlists.component.scss' ],\n  imports: [\n    GlobalIconComponent,\n    NgIf,\n    AdvancedInputFilterComponent,\n    RouterLink,\n    InfiniteScrollerDirective,\n    NgFor,\n    VideoPlaylistMiniatureComponent,\n    DeleteButtonComponent,\n    EditButtonComponent\n  ]\n})\nexport class MyVideoPlaylistsComponent {\n  private authService = inject(AuthService)\n  private notifier = inject(Notifier)\n  private confirmService = inject(ConfirmService)\n  private videoPlaylistService = inject(VideoPlaylistService)\n\n  videoPlaylists: VideoPlaylist[] = []\n\n  pagination: ComponentPagination = {\n    currentPage: 1,\n    itemsPerPage: 5,\n    totalItems: null\n  }\n\n  onDataSubject = new Subject<any[]>()\n\n  search: string\n\n  async deleteVideoPlaylist (videoPlaylist: VideoPlaylist) {\n    const res = await this.confirmService.confirm(\n      $localize`Do you really want to delete ${videoPlaylist.displayName}?`,\n      $localize`Delete`\n    )\n    if (res === false) return\n\n    this.videoPlaylistService.removeVideoPlaylist(videoPlaylist)\n      .subscribe({\n        next: () => {\n          this.videoPlaylists = this.videoPlaylists.filter(p => p.id !== videoPlaylist.id)\n          updatePaginationOnDelete(this.pagination)\n\n          this.notifier.success($localize`Playlist ${videoPlaylist.displayName} deleted.`)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  isRegularPlaylist (playlist: VideoPlaylist) {\n    return playlist.type.id === VideoPlaylistType.REGULAR\n  }\n\n  onNearOfBottom () {\n    // Last page\n    if (this.pagination.totalItems <= (this.pagination.currentPage * this.pagination.itemsPerPage)) return\n\n    this.pagination.currentPage += 1\n    this.loadVideoPlaylists()\n  }\n\n  onSearch (search: string) {\n    this.search = search\n    resetCurrentPage(this.pagination)\n\n    this.loadVideoPlaylists(true)\n  }\n\n  getTotalTitle () {\n    return formatICU(\n      $localize`${this.pagination.totalItems} {total, plural, =1 {playlist} other {playlists}}`,\n      { total: this.pagination.totalItems }\n    )\n  }\n\n  private loadVideoPlaylists (reset = false) {\n    this.authService.userInformationLoaded\n      .pipe(mergeMap(() => {\n        const user = this.authService.getUser()\n\n        return this.videoPlaylistService.listAccountPlaylists(user.account, this.pagination, '-updatedAt', this.search)\n      })).subscribe(res => {\n        if (reset) this.videoPlaylists = []\n\n        this.videoPlaylists = this.videoPlaylists.concat(res.data)\n        this.pagination.totalItems = res.total\n\n        this.onDataSubject.next(res.data)\n      })\n  }\n}\n","import { Component, OnInit, inject } from '@angular/core'\nimport { RouterOutlet } from '@angular/router'\nimport { ServerService } from '@app/core'\nimport { HorizontalMenuComponent, HorizontalMenuEntry } from '@app/shared/shared-main/menu/horizontal-menu.component'\nimport { HTMLServerConfig } from '@peertube/peertube-models'\n\n@Component({\n  templateUrl: './my-video-space.component.html',\n  imports: [ RouterOutlet, HorizontalMenuComponent ]\n})\nexport class MyVideoSpaceComponent implements OnInit {\n  private serverService = inject(ServerService)\n\n  menuEntries: HorizontalMenuEntry[] = []\n\n  private serverConfig: HTMLServerConfig\n\n  ngOnInit (): void {\n    this.serverConfig = this.serverService.getHTMLConfig()\n\n    this.buildMenu()\n  }\n\n  private buildMenu () {\n    this.menuEntries = [\n      {\n        label: $localize`Manage my videos`,\n        routerLink: '/my-library/videos'\n      },\n\n      {\n        label: $localize`Comments`,\n        routerLink: '/my-library/comments-on-my-videos',\n        children: [\n          {\n            label: $localize`Comments on my videos`,\n            routerLink: '/my-library/comments-on-my-videos'\n          },\n          {\n            label: $localize`Watched words`,\n            routerLink: '/my-library/watched-words/list'\n          },\n          {\n            label: $localize`Auto tag policies`,\n            routerLink: '/my-library/auto-tag-policies'\n          }\n        ]\n      },\n\n      {\n        label: $localize`Settings`,\n        routerLink: '/my-library/video-imports',\n        children: [\n          {\n            label: $localize`Imports`,\n            routerLink: '/my-library/video-imports',\n            isDisplayed: () => this.isVideoImportEnabled()\n          },\n          {\n            label: $localize`Ownership changes`,\n            routerLink: '/my-library/ownership'\n          }\n        ]\n      }\n    ]\n  }\n\n  private isVideoImportEnabled () {\n    const config = this.serverConfig.import.videos\n\n    return config.http.enabled || config.torrent.enabled\n  }\n}\n","<div class=\"root\">\n\n  <div class=\"margin-content\">\n    <a i18n class=\"visually-hidden-focusable skip-to-content-sub-menu\" href=\"#my-video-space-content\" (click)=\"$event.preventDefault(); myVideoSpaceContent.focus()\">Skip the sub menu</a>\n\n    <my-horizontal-menu h1Icon=\"videos\" i18n-h1 h1=\"My videos\" [menuEntries]=\"menuEntries\"></my-horizontal-menu>\n  </div>\n\n  <div #myVideoSpaceContent tabindex=\"-1\" id=\"my-video-space-content\" class=\"margin-content pb-5 outline-0\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common'\nimport { Component, forwardRef, input, model } from '@angular/core'\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms'\nimport { VideoChannel } from '@peertube/peertube-models'\nimport { ActorAvatarComponent } from '../shared-actor-image/actor-avatar.component'\n\n@Component({\n  selector: 'my-channel-toggle',\n  styleUrls: [ './channel-toggle.component.scss' ],\n  templateUrl: './channel-toggle.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ChannelToggleComponent),\n      multi: true\n    }\n  ],\n  standalone: true,\n  imports: [\n    CommonModule,\n    ActorAvatarComponent\n  ]\n})\nexport class ChannelToggleComponent implements ControlValueAccessor {\n  readonly checked = model(false)\n  readonly channel = input.required<VideoChannel>()\n  readonly inputName = input<string>(undefined)\n  readonly label = input($localize`Toggle this channel`)\n\n  propagateChange = (_: any) => {\n    // empty\n  }\n\n  writeValue (checked: boolean) {\n    this.checked.set(checked)\n  }\n\n  registerOnChange (fn: (_: any) => void) {\n    this.propagateChange = fn\n  }\n\n  registerOnTouched () {\n    // Unused\n  }\n\n  toggle () {\n    this.checked.set(!this.checked())\n    this.propagateChange(this.checked())\n  }\n}\n","<button class=\"root button-unstyle\" [ngClass]=\"{ active: checked() }\" [title]=\"label()\" (click)=\"toggle()\">\n  <my-actor-avatar [actor]=\"channel()\" actorType=\"channel\" size=\"34\"></my-actor-avatar>\n\n  <div class=\"name\">{{ channel().displayName }}</div>\n</button>\n","import { CommonModule, NgClass, NgIf } from '@angular/common'\nimport { Component, inject, OnDestroy, OnInit, viewChild } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router'\nimport {\n  AuthService,\n  AuthUser,\n  ConfirmService,\n  LocalStorageService,\n  Notifier,\n  PeerTubeRouterService,\n  RestPagination,\n  RestTable,\n  ServerService\n} from '@app/core'\nimport { HeaderService } from '@app/header/header.service'\nimport { formatICU } from '@app/helpers'\nimport { AutoColspanDirective } from '@app/shared/shared-main/common/auto-colspan.directive'\nimport { Video } from '@app/shared/shared-main/video/video.model'\nimport { VideoService } from '@app/shared/shared-main/video/video.service'\nimport { VideoPlaylistService } from '@app/shared/shared-video-playlist/video-playlist.service'\nimport { ChannelToggleComponent } from '@app/shared/standalone-channels/channel-toggle.component'\nimport { NgbDropdownModule, NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { arrayify, pick } from '@peertube/peertube-core-utils'\nimport { VideoChannel, VideoExistInPlaylist, VideoPrivacy, VideoPrivacyType, VideosExistInPlaylists } from '@peertube/peertube-models'\nimport { logger } from '@root-helpers/logger'\nimport debug from 'debug'\nimport uniqBy from 'lodash-es/uniqBy'\nimport { SharedModule, SortMeta } from 'primeng/api'\nimport { TableLazyLoadEvent, TableModule } from 'primeng/table'\nimport { finalize } from 'rxjs/operators'\nimport { SelectOptionsItem } from 'src/types'\nimport { AdvancedInputFilterComponent } from '../../shared/shared-forms/advanced-input-filter.component'\nimport { PeertubeCheckboxComponent } from '../../shared/shared-forms/peertube-checkbox.component'\nimport { SelectCheckboxComponent } from '../../shared/shared-forms/select/select-checkbox.component'\nimport { ActionDropdownComponent, DropdownAction } from '../../shared/shared-main/buttons/action-dropdown.component'\nimport { ButtonComponent } from '../../shared/shared-main/buttons/button.component'\nimport { PTDatePipe } from '../../shared/shared-main/common/date.pipe'\nimport { NumberFormatterPipe } from '../../shared/shared-main/common/number-formatter.pipe'\nimport { VideoCellComponent } from '../../shared/shared-tables/video-cell.component'\nimport {\n  VideoActionsDisplayType,\n  VideoActionsDropdownComponent\n} from '../../shared/shared-video-miniature/video-actions-dropdown.component'\nimport { VideoNSFWBadgeComponent } from '../../shared/shared-video/video-nsfw-badge.component'\nimport { VideoPrivacyBadgeComponent } from '../../shared/shared-video/video-privacy-badge.component'\nimport { VideoStateBadgeComponent } from '../../shared/shared-video/video-state-badge.component'\nimport { VideoChangeOwnershipComponent } from './modals/video-change-ownership.component'\n\nconst debugLogger = debug('peertube:my-videos')\n\ntype Column = 'duration' | 'name' | 'privacy' | 'sensitive' | 'playlists' | 'insights' | 'published' | 'state' | 'comments'\ntype CommonFilter = 'live' | 'vod' | 'private' | 'internal' | 'unlisted' | 'password-protected' | 'public'\ntype VideoType = 'live' | 'vod'\ntype QueryParams = {\n  channelNameOneOf?: string[]\n  privacyOneOf?: string[]\n  start?: number\n  count?: number\n  sortOrder?: number\n  sortField?: string\n  search?: string\n\n  videoType?: VideoType\n}\n\n@Component({\n  selector: 'my-videos',\n  templateUrl: './my-videos.component.html',\n  styleUrls: [ './my-videos.component.scss' ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    TableModule,\n    NgClass,\n    SharedModule,\n    NgIf,\n    ActionDropdownComponent,\n    AdvancedInputFilterComponent,\n    ButtonComponent,\n    NgbTooltip,\n    VideoActionsDropdownComponent,\n    VideoCellComponent,\n    RouterLink,\n    NumberFormatterPipe,\n    VideoChangeOwnershipComponent,\n    VideoPrivacyBadgeComponent,\n    VideoStateBadgeComponent,\n    NgbDropdownModule,\n    PeertubeCheckboxComponent,\n    ChannelToggleComponent,\n    AutoColspanDirective,\n    SelectCheckboxComponent,\n    PTDatePipe,\n    VideoNSFWBadgeComponent\n  ]\n})\nexport class MyVideosComponent extends RestTable<Video> implements OnInit, OnDestroy {\n  protected route = inject(ActivatedRoute)\n  protected router = inject(Router)\n  private confirmService = inject(ConfirmService)\n  private auth = inject(AuthService)\n  private notifier = inject(Notifier)\n  private videoService = inject(VideoService)\n  private playlistService = inject(VideoPlaylistService)\n  private server = inject(ServerService)\n  private peertubeLocalStorage = inject(LocalStorageService)\n  private peertubeRouter = inject(PeerTubeRouterService)\n  private headerService = inject(HeaderService)\n\n  private static readonly LS_SELECTED_COLUMNS_KEY = 'user-my-videos-selected-columns'\n\n  readonly videoChangeOwnershipModal = viewChild<VideoChangeOwnershipComponent>('videoChangeOwnershipModal')\n\n  videos: Video[] = []\n\n  totalRecords = 0\n  sort: SortMeta = { field: 'publishedAt', order: -1 }\n  rowsPerPage = 5\n  pagination: RestPagination = { count: this.rowsPerPage, start: 0 }\n\n  videosContainedInPlaylists: VideosExistInPlaylists = {}\n\n  bulkActions: DropdownAction<Video[]>[][] = []\n\n  videoActionsOptions: VideoActionsDisplayType = {\n    playlist: true,\n    download: true,\n    update: false,\n    blacklist: false,\n    delete: true,\n    report: false,\n    duplicate: false,\n    mute: false,\n    liveInfo: true,\n    removeFiles: false,\n    transcoding: false\n  }\n\n  moreVideoActions: DropdownAction<{ video: Video }>[][] = []\n  loading = true\n\n  user: AuthUser\n  channels: (VideoChannel & { selected: boolean })[] = []\n\n  filterItems: SelectOptionsItem<CommonFilter>[] = []\n  selectedFilterItems: CommonFilter[] = []\n\n  columns: { id: Column, label: string, selected: boolean }[] = []\n\n  get serverConfig () {\n    return this.server.getHTMLConfig()\n  }\n\n  ngOnInit () {\n    this.initialize()\n\n    this.headerService.setSearchHidden(true)\n\n    this.user = this.auth.getUser()\n\n    this.columns = [\n      { id: 'duration', label: $localize`Duration`, selected: true },\n      { id: 'name', label: $localize`Name`, selected: true },\n      { id: 'privacy', label: $localize`Privacy`, selected: true },\n      { id: 'sensitive', label: $localize`Sensitive`, selected: true },\n      { id: 'playlists', label: $localize`Playlists`, selected: true },\n      { id: 'insights', label: $localize`Insights`, selected: true },\n      { id: 'comments', label: $localize`Comments`, selected: true },\n      { id: 'published', label: $localize`Published`, selected: true },\n      { id: 'state', label: $localize`State`, selected: true }\n    ]\n\n    this.filterItems = [\n      {\n        id: 'live',\n        label: $localize`Lives`\n      },\n      {\n        id: 'vod',\n        label: $localize`VOD`\n      },\n      {\n        id: 'public',\n        label: $localize`Public videos`\n      },\n      {\n        id: 'internal',\n        label: $localize`Internal videos`\n      },\n      {\n        id: 'unlisted',\n        label: $localize`Unlisted videos`\n      },\n      {\n        id: 'password-protected',\n        label: $localize`Password protected videos`\n      },\n      {\n        id: 'private',\n        label: $localize`Private videos`\n      }\n    ]\n\n    this.subscribeToQueryChanges()\n    this.buildActions()\n    this.loadSelectedColumns()\n  }\n\n  ngOnDestroy () {\n    this.headerService.setSearchHidden(false)\n  }\n\n  private subscribeToQueryChanges () {\n    this.route.queryParams.subscribe(queryParams => {\n      this.parseQueryParams(queryParams)\n    })\n  }\n\n  private parseQueryParams (queryParams: QueryParams) {\n    debugLogger('Parse query params', { queryParams })\n\n    {\n      const enabledChannels = queryParams.channelNameOneOf\n        ? new Set(arrayify(queryParams.channelNameOneOf))\n        : new Set<string>()\n\n      this.user = this.auth.getUser()\n      this.channels = this.user.videoChannels.map(c => ({\n        ...c,\n\n        selected: enabledChannels.has(c.name)\n      }))\n    }\n\n    {\n      this.selectedFilterItems = []\n      const videoType = arrayify(queryParams.videoType)\n\n      if (videoType.includes('live')) this.selectedFilterItems.push('live')\n      if (videoType.includes('vod')) this.selectedFilterItems.push('vod')\n\n      const enabledPrivacies = queryParams.privacyOneOf\n        ? new Set(arrayify(queryParams.privacyOneOf).map(t => parseInt(t) as VideoPrivacyType))\n        : new Set<VideoPrivacyType>()\n\n      if (enabledPrivacies.has(VideoPrivacy.PUBLIC)) this.selectedFilterItems.push('public')\n      if (enabledPrivacies.has(VideoPrivacy.INTERNAL)) this.selectedFilterItems.push('internal')\n      if (enabledPrivacies.has(VideoPrivacy.UNLISTED)) this.selectedFilterItems.push('unlisted')\n      if (enabledPrivacies.has(VideoPrivacy.PASSWORD_PROTECTED)) this.selectedFilterItems.push('password-protected')\n      if (enabledPrivacies.has(VideoPrivacy.PRIVATE)) this.selectedFilterItems.push('private')\n    }\n\n    if (queryParams.start !== undefined) this.pagination.start = +queryParams.start\n\n    if (queryParams.count !== undefined) {\n      this.pagination.count = this.rowsPerPage = +queryParams.count\n    }\n\n    if (queryParams.sortOrder !== undefined) this.sort.order = +queryParams.sortOrder\n    if (queryParams.sortField !== undefined) this.sort.field = queryParams.sortField\n\n    if (queryParams.search !== undefined) this.search = queryParams.search\n\n    this.reloadData()\n  }\n\n  loadLazy (event: TableLazyLoadEvent) {\n    if (this.parseLazy(event)) {\n      this.updateUrl()\n      this.saveSort()\n    }\n  }\n\n  getIdentifier () {\n    return 'MyVideosComponent'\n  }\n\n  // ---------------------------------------------------------------------------\n\n  isSelected (id: Column) {\n    return this.columns.some(c => c.id === id && c.selected)\n  }\n\n  getColumn (id: Column) {\n    return this.columns.find(c => c.id === id)\n  }\n\n  private loadSelectedColumns () {\n    const enabledString = this.peertubeLocalStorage.getItem(MyVideosComponent.LS_SELECTED_COLUMNS_KEY)\n\n    if (!enabledString) return\n    try {\n      const enabled = JSON.parse(enabledString)\n\n      for (const column of this.columns) {\n        column.selected = enabled.includes(column.id)\n      }\n    } catch (err) {\n      logger.error('Cannot load selected columns.', err)\n    }\n  }\n\n  saveSelectedColumns () {\n    const enabled = this.columns.filter(c => c.selected).map(c => c.id)\n\n    this.peertubeLocalStorage.setItem(MyVideosComponent.LS_SELECTED_COLUMNS_KEY, JSON.stringify(enabled))\n  }\n\n  // ---------------------------------------------------------------------------\n\n  // Override REST table method\n  onSearch (search: string) {\n    this.search = search\n    this.sort = {\n      field: 'match',\n      order: -1\n    }\n\n    this.onFilter()\n  }\n\n  onFilter () {\n    this.resetPagination()\n    this.updateUrl()\n  }\n\n  private updateUrl () {\n    const channelNameOneOf = this.channels.filter(c => c.selected).map(c => c.name)\n\n    const newParams: Record<keyof QueryParams, any> = {\n      ...this.route.snapshot.queryParams,\n\n      ...pick(this.buildCommonVideoFilters(), [ 'privacyOneOf', 'videoType' ]),\n\n      search: this.search,\n      channelNameOneOf,\n      start: this.pagination.start,\n      count: this.pagination.count,\n      sortOrder: this.sort.order,\n      sortField: this.sort.field\n    }\n\n    this.peertubeRouter.silentNavigate([ '.' ], newParams, this.route)\n  }\n\n  private buildCommonVideoFilters () {\n    const selectedFilterSet = new Set(this.selectedFilterItems)\n\n    let isLive: boolean\n    const videoType: VideoType[] = []\n    if (selectedFilterSet.has('live')) {\n      videoType.push('live')\n\n      if (!selectedFilterSet.has('vod')) isLive = true\n    }\n\n    if (selectedFilterSet.has('vod')) {\n      videoType.push('vod')\n\n      if (!selectedFilterSet.has('live')) isLive = false\n    }\n\n    const privacyOneOf: VideoPrivacyType[] = []\n    if (selectedFilterSet.has('public')) privacyOneOf.push(VideoPrivacy.PUBLIC)\n    if (selectedFilterSet.has('internal')) privacyOneOf.push(VideoPrivacy.INTERNAL)\n    if (selectedFilterSet.has('unlisted')) privacyOneOf.push(VideoPrivacy.UNLISTED)\n    if (selectedFilterSet.has('password-protected')) privacyOneOf.push(VideoPrivacy.PASSWORD_PROTECTED)\n    if (selectedFilterSet.has('private')) privacyOneOf.push(VideoPrivacy.PRIVATE)\n\n    return {\n      isLive,\n      videoType,\n      privacyOneOf\n    }\n  }\n\n  // ---------------------------------------------------------------------------\n\n  protected reloadDataInternal () {\n    this.loading = true\n\n    const channelNameOneOf = this.channels.filter(c => c.selected).map(c => c.name)\n\n    return this.videoService.listMyVideos({\n      restPagination: this.pagination,\n      sort: this.sort,\n      search: this.search,\n\n      channelNameOneOf: channelNameOneOf.length !== 0\n        ? channelNameOneOf\n        : undefined,\n\n      ...pick(this.buildCommonVideoFilters(), [ 'isLive', 'privacyOneOf' ])\n    }).pipe(finalize(() => this.loading = false))\n      .subscribe({\n        next: resultList => {\n          this.videos = resultList.data\n          this.totalRecords = resultList.total\n\n          this.fetchVideosContainedInPlaylists(resultList.data)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  fetchVideosContainedInPlaylists (videos: Video[]) {\n    this.playlistService.doVideosExistInPlaylist(videos.map(v => v.id))\n      .subscribe(result => {\n        this.videosContainedInPlaylists = Object.keys(result).reduce((acc, videoId) => ({\n          ...acc,\n          [videoId]: uniqBy(result[+videoId], (p: VideoExistInPlaylist) => p.playlistId)\n        }), this.videosContainedInPlaylists)\n      })\n  }\n\n  async removeVideos (videos: Video[]) {\n    const message = formatICU(\n      $localize`Are you sure you want to delete {count, plural, =1 {this video} other {these {count} videos}}?`,\n      { count: videos.length }\n    )\n\n    const res = await this.confirmService.confirm(message, $localize`Delete`)\n    if (res === false) return\n\n    this.videoService.removeVideo(videos.map(v => v.id))\n      .subscribe({\n        next: () => {\n          this.notifier.success(\n            formatICU(\n              $localize`Deleted {count, plural, =1 {1 video} other {{count} videos}}.`,\n              { count: videos.length }\n            )\n          )\n\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  changeOwnership (video: Video) {\n    this.videoChangeOwnershipModal().show(video)\n  }\n\n  private buildActions () {\n    this.moreVideoActions = [\n      [\n        {\n          label: $localize`Change ownership`,\n          handler: ({ video }) => this.changeOwnership(video),\n          iconName: 'ownership-change'\n        }\n      ]\n    ]\n\n    this.bulkActions = [\n      [\n        {\n          label: $localize`Delete`,\n          handler: videos => this.removeVideos(videos),\n          iconName: 'delete'\n        }\n      ]\n    ]\n  }\n}\n","<span *ngIf=\"label\" [ngClass]=\"badgeClass\" class=\"pt-badge\">{{ label }}</span>\n","import { CommonModule } from '@angular/common'\nimport { Component, input, OnChanges } from '@angular/core'\nimport { Video, VideoPrivacy, VideoState, VideoStateType } from '@peertube/peertube-models'\n\n@Component({\n  selector: 'my-video-state-badge',\n  templateUrl: './video-state-badge.component.html',\n  imports: [ CommonModule ]\n})\nexport class VideoStateBadgeComponent implements OnChanges {\n  readonly video = input.required<Pick<Video, 'privacy' | 'state' | 'waitTranscoding'>>()\n\n  private states: { [id in VideoStateType]: string } = {\n    [VideoState.PUBLISHED]: 'badge-green',\n    [VideoState.TO_TRANSCODE]: 'badge-brown',\n    [VideoState.TO_IMPORT]: 'badge-brown',\n    [VideoState.WAITING_FOR_LIVE]: 'badge-blue',\n    [VideoState.LIVE_ENDED]: 'badge-green',\n    [VideoState.TO_MOVE_TO_EXTERNAL_STORAGE]: 'badge-brown',\n    [VideoState.TRANSCODING_FAILED]: 'badge-red',\n    [VideoState.TO_MOVE_TO_EXTERNAL_STORAGE_FAILED]: 'badge-red',\n    [VideoState.TO_EDIT]: 'badge-brown',\n    [VideoState.TO_MOVE_TO_FILE_SYSTEM]: 'badge-brown',\n    [VideoState.TO_MOVE_TO_FILE_SYSTEM_FAILED]: 'badge-brown'\n  }\n\n  label: string\n  badgeClass: string\n\n  ngOnChanges (): void {\n    this.buildBadgeAndLabel()\n  }\n\n  private buildBadgeAndLabel () {\n    const video = this.video()\n\n    if (!video.state) {\n      this.label = ''\n      return\n    }\n\n    const state = video.state.id\n    this.badgeClass = this.states[video.state.id]\n\n    switch (state) {\n      case VideoState.PUBLISHED:\n        if (video.privacy.id === VideoPrivacy.PRIVATE) {\n          this.label = $localize`In your library`\n          this.badgeClass = 'badge-grey'\n          return\n        }\n\n        if (video.privacy.id === VideoPrivacy.INTERNAL) {\n          this.label = $localize`Internal`\n          this.badgeClass = 'badge-blue'\n          return\n        }\n\n        this.label = $localize`Published`\n        return\n\n      case VideoState.WAITING_FOR_LIVE:\n        this.label = $localize`Waiting live`\n        return\n\n      case VideoState.LIVE_ENDED:\n        this.label = $localize`Live ended`\n        return\n\n      case VideoState.TRANSCODING_FAILED:\n        this.label = $localize`Transcoding failed`\n        return\n\n      case VideoState.TO_MOVE_TO_FILE_SYSTEM:\n        this.label = $localize`Moving to file system`\n        return\n\n      case VideoState.TO_MOVE_TO_FILE_SYSTEM_FAILED:\n        this.label = $localize`Moving to file system failed`\n        return\n\n      case VideoState.TO_MOVE_TO_EXTERNAL_STORAGE:\n        this.label = $localize`Moving to external storage`\n        return\n\n      case VideoState.TO_MOVE_TO_EXTERNAL_STORAGE_FAILED:\n        this.label = $localize`Move to external storage failed`\n        return\n\n      case VideoState.TO_TRANSCODE:\n        this.label = this.video().waitTranscoding === true\n          ? $localize`Waiting transcoding`\n          : $localize`To transcode`\n        return\n\n      case VideoState.TO_IMPORT:\n        this.label = $localize`To import`\n        return\n\n      case VideoState.TO_EDIT:\n        this.label = $localize`To edit`\n        return\n\n      default:\n        return state satisfies never\n    }\n  }\n}\n","import * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, signal, computed, effect, numberAttribute, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as i7 from 'primeng/autofocus';\nimport { AutoFocusModule } from 'primeng/autofocus';\nimport * as i4 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { DomHandler } from 'primeng/dom';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i3 from 'primeng/overlay';\nimport { OverlayModule } from 'primeng/overlay';\nimport * as i5 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i6 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport { ObjectUtils, UniqueComponentId } from 'primeng/utils';\nimport { TimesCircleIcon } from 'primeng/icons/timescircle';\nimport { SpinnerIcon } from 'primeng/icons/spinner';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { ChevronDownIcon } from 'primeng/icons/chevrondown';\nconst _c0 = [\"container\"];\nconst _c1 = [\"focusInput\"];\nconst _c2 = [\"multiIn\"];\nconst _c3 = [\"multiContainer\"];\nconst _c4 = [\"ddBtn\"];\nconst _c5 = [\"items\"];\nconst _c6 = [\"scroller\"];\nconst _c7 = [\"overlay\"];\nconst _c8 = a0 => ({\n  \"p-autocomplete-token\": true,\n  \"p-focus\": a0\n});\nconst _c9 = a0 => ({\n  $implicit: a0\n});\nconst _c10 = a0 => ({\n  height: a0\n});\nconst _c11 = (a0, a1) => ({\n  $implicit: a0,\n  options: a1\n});\nconst _c12 = a0 => ({\n  options: a0\n});\nconst _c13 = () => ({});\nconst _c14 = (a0, a1, a2) => ({\n  \"p-highlight\": a0,\n  \"p-focus\": a1,\n  \"p-disabled\": a2\n});\nconst _c15 = (a0, a1) => ({\n  $implicit: a0,\n  index: a1\n});\nfunction AutoComplete_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 20, 3);\n    i0.ɵɵlistener(\"input\", function AutoComplete_input_2_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onInput($event));\n    })(\"keydown\", function AutoComplete_input_2_Template_input_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onKeyDown($event));\n    })(\"change\", function AutoComplete_input_2_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onInputChange($event));\n    })(\"focus\", function AutoComplete_input_2_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onInputFocus($event));\n    })(\"blur\", function AutoComplete_input_2_Template_input_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onInputBlur($event));\n    })(\"paste\", function AutoComplete_input_2_Template_input_paste_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onInputPaste($event));\n    })(\"keyup\", function AutoComplete_input_2_Template_input_keyup_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onInputKeyUp($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_24_0;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.inputStyleClass);\n    i0.ɵɵproperty(\"autofocus\", ctx_r2.autofocus)(\"ngClass\", ctx_r2.inputClass)(\"ngStyle\", ctx_r2.inputStyle)(\"type\", ctx_r2.type)(\"autocomplete\", ctx_r2.autocomplete)(\"required\", ctx_r2.required)(\"name\", ctx_r2.name)(\"tabindex\", !ctx_r2.disabled ? ctx_r2.tabindex : -1)(\"readonly\", ctx_r2.readonly)(\"disabled\", ctx_r2.disabled);\n    i0.ɵɵattribute(\"value\", ctx_r2.inputValue())(\"id\", ctx_r2.inputId)(\"placeholder\", ctx_r2.placeholder)(\"size\", ctx_r2.size)(\"maxlength\", ctx_r2.maxlength)(\"aria-label\", ctx_r2.ariaLabel)(\"aria-labelledby\", ctx_r2.ariaLabelledBy)(\"aria-required\", ctx_r2.required)(\"aria-expanded\", (tmp_24_0 = ctx_r2.overlayVisible) !== null && tmp_24_0 !== undefined ? tmp_24_0 : false)(\"aria-controls\", ctx_r2.overlayVisible ? ctx_r2.id + \"_list\" : null)(\"aria-activedescendant\", ctx_r2.focused ? ctx_r2.focusedOptionId : undefined);\n  }\n}\nfunction AutoComplete_ng_container_3_TimesIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"TimesIcon\", 23);\n    i0.ɵɵlistener(\"click\", function AutoComplete_ng_container_3_TimesIcon_1_Template_TimesIcon_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.clear());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-autocomplete-clear-icon\");\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\nfunction AutoComplete_ng_container_3_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction AutoComplete_ng_container_3_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_ng_container_3_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction AutoComplete_ng_container_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵlistener(\"click\", function AutoComplete_ng_container_3_span_2_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.clear());\n    });\n    i0.ɵɵtemplate(1, AutoComplete_ng_container_3_span_2_1_Template, 1, 0, null, 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.clearIconTemplate);\n  }\n}\nfunction AutoComplete_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_ng_container_3_TimesIcon_1_Template, 1, 2, \"TimesIcon\", 21)(2, AutoComplete_ng_container_3_span_2_Template, 2, 2, \"span\", 22);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.clearIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.clearIconTemplate);\n  }\n}\nfunction AutoComplete_ul_4_li_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AutoComplete_ul_4_li_2_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r2.getMultipleLabel(option_r8));\n  }\n}\nfunction AutoComplete_ul_4_li_2_TimesCircleIcon_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"TimesCircleIcon\", 36);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-autocomplete-token-icon\");\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\nfunction AutoComplete_ul_4_li_2_span_6_1_ng_template_0_Template(rf, ctx) {}\nfunction AutoComplete_ul_4_li_2_span_6_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_ul_4_li_2_span_6_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction AutoComplete_ul_4_li_2_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 37);\n    i0.ɵɵtemplate(1, AutoComplete_ul_4_li_2_span_6_1_Template, 1, 0, null, 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.removeIconTemplate);\n  }\n}\nfunction AutoComplete_ul_4_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 29, 5);\n    i0.ɵɵtemplate(2, AutoComplete_ul_4_li_2_ng_container_2_Template, 1, 0, \"ng-container\", 30)(3, AutoComplete_ul_4_li_2_span_3_Template, 2, 1, \"span\", 31);\n    i0.ɵɵelementStart(4, \"span\", 32);\n    i0.ɵɵlistener(\"click\", function AutoComplete_ul_4_li_2_Template_span_click_4_listener($event) {\n      const i_r9 = i0.ɵɵrestoreView(_r7).index;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(!ctx_r2.readonly ? ctx_r2.removeOption($event, i_r9) : \"\");\n    });\n    i0.ɵɵtemplate(5, AutoComplete_ul_4_li_2_TimesCircleIcon_5_Template, 1, 2, \"TimesCircleIcon\", 33)(6, AutoComplete_ul_4_li_2_span_6_Template, 2, 2, \"span\", 34);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const option_r8 = ctx.$implicit;\n    const i_r9 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c8, ctx_r2.focusedMultipleOptionIndex() === i_r9));\n    i0.ɵɵattribute(\"id\", ctx_r2.id + \"_multiple_option_\" + i_r9)(\"aria-label\", ctx_r2.getOptionLabel(option_r8))(\"aria-setsize\", ctx_r2.modelValue().length)(\"aria-posinset\", i_r9 + 1)(\"aria-selected\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.selectedItemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(13, _c9, option_r8));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.selectedItemTemplate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.removeIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.removeIconTemplate);\n  }\n}\nfunction AutoComplete_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ul\", 25, 4);\n    i0.ɵɵlistener(\"focus\", function AutoComplete_ul_4_Template_ul_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onMultipleContainerFocus($event));\n    })(\"blur\", function AutoComplete_ul_4_Template_ul_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onMultipleContainerBlur($event));\n    })(\"keydown\", function AutoComplete_ul_4_Template_ul_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onMultipleContainerKeyDown($event));\n    });\n    i0.ɵɵtemplate(2, AutoComplete_ul_4_li_2_Template, 7, 15, \"li\", 26);\n    i0.ɵɵelementStart(3, \"li\", 27)(4, \"input\", 28, 3);\n    i0.ɵɵlistener(\"input\", function AutoComplete_ul_4_Template_input_input_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onInput($event));\n    })(\"keydown\", function AutoComplete_ul_4_Template_input_keydown_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onKeyDown($event));\n    })(\"change\", function AutoComplete_ul_4_Template_input_change_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onInputChange($event));\n    })(\"focus\", function AutoComplete_ul_4_Template_input_focus_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onInputFocus($event));\n    })(\"blur\", function AutoComplete_ul_4_Template_input_blur_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onInputBlur($event));\n    })(\"paste\", function AutoComplete_ul_4_Template_input_paste_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onInputPaste($event));\n    })(\"keyup\", function AutoComplete_ul_4_Template_input_keyup_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onInputKeyUp($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    let tmp_29_0;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.multiContainerClass)(\"tabindex\", -1);\n    i0.ɵɵattribute(\"aria-orientation\", \"horizontal\")(\"aria-activedescendant\", ctx_r2.focused ? ctx_r2.focusedMultipleOptionId : undefined);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.modelValue());\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(ctx_r2.inputStyleClass);\n    i0.ɵɵproperty(\"autofocus\", ctx_r2.autofocus)(\"ngClass\", ctx_r2.inputClass)(\"ngStyle\", ctx_r2.inputStyle)(\"autocomplete\", ctx_r2.autocomplete)(\"required\", ctx_r2.required)(\"tabindex\", !ctx_r2.disabled ? ctx_r2.tabindex : -1)(\"readonly\", ctx_r2.readonly)(\"disabled\", ctx_r2.disabled);\n    i0.ɵɵattribute(\"type\", ctx_r2.type)(\"id\", ctx_r2.inputId)(\"name\", ctx_r2.name)(\"placeholder\", !ctx_r2.filled ? ctx_r2.placeholder : null)(\"size\", ctx_r2.size)(\"maxlength\", ctx_r2.maxlength)(\"aria-label\", ctx_r2.ariaLabel)(\"aria-labelledby\", ctx_r2.ariaLabelledBy)(\"aria-required\", ctx_r2.required)(\"aria-expanded\", (tmp_29_0 = ctx_r2.overlayVisible) !== null && tmp_29_0 !== undefined ? tmp_29_0 : false)(\"aria-controls\", ctx_r2.overlayVisible ? ctx_r2.id + \"_list\" : null)(\"aria-activedescendant\", ctx_r2.focused ? ctx_r2.focusedOptionId : undefined);\n  }\n}\nfunction AutoComplete_ng_container_5_SpinnerIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SpinnerIcon\", 40);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-autocomplete-loader\")(\"spin\", true);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\nfunction AutoComplete_ng_container_5_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction AutoComplete_ng_container_5_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_ng_container_5_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction AutoComplete_ng_container_5_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 41);\n    i0.ɵɵtemplate(1, AutoComplete_ng_container_5_span_2_1_Template, 1, 0, null, 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.loadingIconTemplate);\n  }\n}\nfunction AutoComplete_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_ng_container_5_SpinnerIcon_1_Template, 1, 3, \"SpinnerIcon\", 38)(2, AutoComplete_ng_container_5_span_2_Template, 2, 2, \"span\", 39);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.loadingIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loadingIconTemplate);\n  }\n}\nfunction AutoComplete_button_6_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 44);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.dropdownIcon);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\nfunction AutoComplete_button_6_ng_container_3_ChevronDownIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronDownIcon\");\n  }\n}\nfunction AutoComplete_button_6_ng_container_3_2_ng_template_0_Template(rf, ctx) {}\nfunction AutoComplete_button_6_ng_container_3_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_button_6_ng_container_3_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction AutoComplete_button_6_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_button_6_ng_container_3_ChevronDownIcon_1_Template, 1, 0, \"ChevronDownIcon\", 12)(2, AutoComplete_button_6_ng_container_3_2_Template, 1, 0, null, 17);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.dropdownIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.dropdownIconTemplate);\n  }\n}\nfunction AutoComplete_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 42, 6);\n    i0.ɵɵlistener(\"click\", function AutoComplete_button_6_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.handleDropdownClick($event));\n    });\n    i0.ɵɵtemplate(2, AutoComplete_button_6_span_2_Template, 1, 2, \"span\", 43)(3, AutoComplete_button_6_ng_container_3_Template, 3, 2, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r2.disabled);\n    i0.ɵɵattribute(\"aria-label\", ctx_r2.dropdownAriaLabel)(\"tabindex\", ctx_r2.tabindex);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.dropdownIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.dropdownIcon);\n  }\n}\nfunction AutoComplete_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AutoComplete_p_scroller_11_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AutoComplete_p_scroller_11_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_p_scroller_11_ng_template_2_ng_container_0_Template, 1, 0, \"ng-container\", 30);\n  }\n  if (rf & 2) {\n    const items_r12 = ctx.$implicit;\n    const scrollerOptions_r13 = ctx.options;\n    i0.ɵɵnextContext(2);\n    const buildInItems_r14 = i0.ɵɵreference(14);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", buildInItems_r14)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c11, items_r12, scrollerOptions_r13));\n  }\n}\nfunction AutoComplete_p_scroller_11_ng_container_3_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AutoComplete_p_scroller_11_ng_container_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_p_scroller_11_ng_container_3_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 30);\n  }\n  if (rf & 2) {\n    const scrollerOptions_r15 = ctx.options;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.loaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c12, scrollerOptions_r15));\n  }\n}\nfunction AutoComplete_p_scroller_11_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_p_scroller_11_ng_container_3_ng_template_1_Template, 1, 4, \"ng-template\", 47);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction AutoComplete_p_scroller_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-scroller\", 45, 7);\n    i0.ɵɵlistener(\"onLazyLoad\", function AutoComplete_p_scroller_11_Template_p_scroller_onLazyLoad_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onLazyLoad.emit($event));\n    });\n    i0.ɵɵtemplate(2, AutoComplete_p_scroller_11_ng_template_2_Template, 1, 5, \"ng-template\", 46)(3, AutoComplete_p_scroller_11_ng_container_3_Template, 2, 0, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(8, _c10, ctx_r2.scrollHeight));\n    i0.ɵɵproperty(\"items\", ctx_r2.visibleOptions())(\"itemSize\", ctx_r2.virtualScrollItemSize || ctx_r2._itemSize)(\"autoSize\", true)(\"lazy\", ctx_r2.lazy)(\"options\", ctx_r2.virtualScrollOptions);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loaderTemplate);\n  }\n}\nfunction AutoComplete_ng_container_12_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AutoComplete_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_ng_container_12_ng_container_1_Template, 1, 0, \"ng-container\", 30);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    const buildInItems_r14 = i0.ɵɵreference(14);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", buildInItems_r14)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(3, _c11, ctx_r2.visibleOptions(), i0.ɵɵpureFunction0(2, _c13)));\n  }\n}\nfunction AutoComplete_ng_template_13_ng_template_2_ng_container_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r16 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r2.getOptionGroupLabel(option_r16.optionGroup));\n  }\n}\nfunction AutoComplete_ng_template_13_ng_template_2_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AutoComplete_ng_template_13_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\", 51);\n    i0.ɵɵtemplate(2, AutoComplete_ng_template_13_ng_template_2_ng_container_0_span_2_Template, 2, 1, \"span\", 12)(3, AutoComplete_ng_template_13_ng_template_2_ng_container_0_ng_container_3_Template, 1, 0, \"ng-container\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext();\n    const option_r16 = ctx_r16.$implicit;\n    const i_r18 = ctx_r16.index;\n    const scrollerOptions_r19 = i0.ɵɵnextContext().options;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(5, _c10, scrollerOptions_r19.itemSize + \"px\"));\n    i0.ɵɵattribute(\"id\", ctx_r2.id + \"_\" + ctx_r2.getOptionIndex(i_r18, scrollerOptions_r19));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.groupTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.groupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c9, option_r16.optionGroup));\n  }\n}\nfunction AutoComplete_ng_template_13_ng_template_2_ng_container_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r16 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r2.getOptionLabel(option_r16));\n  }\n}\nfunction AutoComplete_ng_template_13_ng_template_2_ng_container_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AutoComplete_ng_template_13_ng_template_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\", 52);\n    i0.ɵɵlistener(\"mousedown\", function AutoComplete_ng_template_13_ng_template_2_ng_container_1_Template_li_mousedown_1_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const option_r16 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onOptionSelect($event, option_r16));\n    })(\"mouseenter\", function AutoComplete_ng_template_13_ng_template_2_ng_container_1_Template_li_mouseenter_1_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const i_r18 = i0.ɵɵnextContext().index;\n      const scrollerOptions_r19 = i0.ɵɵnextContext().options;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onOptionMouseEnter($event, ctx_r2.getOptionIndex(i_r18, scrollerOptions_r19)));\n    });\n    i0.ɵɵtemplate(2, AutoComplete_ng_template_13_ng_template_2_ng_container_1_span_2_Template, 2, 1, \"span\", 12)(3, AutoComplete_ng_template_13_ng_template_2_ng_container_1_ng_container_3_Template, 1, 0, \"ng-container\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext();\n    const option_r16 = ctx_r16.$implicit;\n    const i_r18 = ctx_r16.index;\n    const scrollerOptions_r19 = i0.ɵɵnextContext().options;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(12, _c10, scrollerOptions_r19.itemSize + \"px\"))(\"ngClass\", i0.ɵɵpureFunction3(14, _c14, ctx_r2.isSelected(option_r16), ctx_r2.focusedOptionIndex() === ctx_r2.getOptionIndex(i_r18, scrollerOptions_r19), ctx_r2.isOptionDisabled(option_r16)));\n    i0.ɵɵattribute(\"id\", ctx_r2.id + \"_\" + ctx_r2.getOptionIndex(i_r18, scrollerOptions_r19))(\"aria-label\", ctx_r2.getOptionLabel(option_r16))(\"aria-selected\", ctx_r2.isSelected(option_r16))(\"aria-disabled\", ctx_r2.isOptionDisabled(option_r16))(\"data-p-focused\", ctx_r2.focusedOptionIndex() === ctx_r2.getOptionIndex(i_r18, scrollerOptions_r19))(\"aria-setsize\", ctx_r2.ariaSetSize)(\"aria-posinset\", ctx_r2.getAriaPosInset(ctx_r2.getOptionIndex(i_r18, scrollerOptions_r19)));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.itemTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(18, _c15, option_r16, scrollerOptions_r19.getOptions ? scrollerOptions_r19.getOptions(i_r18) : i_r18));\n  }\n}\nfunction AutoComplete_ng_template_13_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_ng_template_13_ng_template_2_ng_container_0_Template, 4, 9, \"ng-container\", 12)(1, AutoComplete_ng_template_13_ng_template_2_ng_container_1_Template, 4, 21, \"ng-container\", 12);\n  }\n  if (rf & 2) {\n    const option_r16 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isOptionGroup(option_r16));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isOptionGroup(option_r16));\n  }\n}\nfunction AutoComplete_ng_template_13_li_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.searchResultMessageText, \" \");\n  }\n}\nfunction AutoComplete_ng_template_13_li_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 9);\n  }\n}\nfunction AutoComplete_ng_template_13_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 53);\n    i0.ɵɵtemplate(1, AutoComplete_ng_template_13_li_3_ng_container_1_Template, 2, 1, \"ng-container\", 54)(2, AutoComplete_ng_template_13_li_3_ng_container_2_Template, 2, 0, \"ng-container\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const scrollerOptions_r19 = i0.ɵɵnextContext().options;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c10, scrollerOptions_r19.itemSize + \"px\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.emptyTemplate)(\"ngIfElse\", ctx_r2.empty);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.emptyTemplate);\n  }\n}\nfunction AutoComplete_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 48, 8);\n    i0.ɵɵtemplate(2, AutoComplete_ng_template_13_ng_template_2_Template, 2, 2, \"ng-template\", 49)(3, AutoComplete_ng_template_13_li_3_Template, 3, 6, \"li\", 50);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const items_r21 = ctx.$implicit;\n    const scrollerOptions_r19 = ctx.options;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(scrollerOptions_r19.contentStyle);\n    i0.ɵɵproperty(\"ngClass\", scrollerOptions_r19.contentStyleClass);\n    i0.ɵɵattribute(\"id\", ctx_r2.id + \"_list\")(\"aria-label\", ctx_r2.listLabel);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", items_r21);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !items_r21 || items_r21 && items_r21.length === 0 && ctx_r2.showEmptyMessage);\n  }\n}\nfunction AutoComplete_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst AUTOCOMPLETE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AutoComplete),\n  multi: true\n};\n/**\n * AutoComplete is an input component that provides real-time suggestions when being typed.\n * @group Components\n */\nlet AutoComplete = /*#__PURE__*/(() => {\n  class AutoComplete {\n    document;\n    el;\n    renderer;\n    cd;\n    config;\n    overlayService;\n    zone;\n    /**\n     * Minimum number of characters to initiate a search.\n     * @group Props\n     */\n    minLength = 1;\n    /**\n     * Delay between keystrokes to wait before sending a query.\n     * @group Props\n     */\n    delay = 300;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Inline style of the overlay panel element.\n     * @group Props\n     */\n    panelStyle;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Style class of the overlay panel element.\n     * @group Props\n     */\n    panelStyleClass;\n    /**\n     * Inline style of the input field.\n     * @group Props\n     */\n    inputStyle;\n    /**\n     * Identifier of the focus input to match a label defined for the component.\n     * @group Props\n     */\n    inputId;\n    /**\n     * Inline style of the input field.\n     * @group Props\n     */\n    inputStyleClass;\n    /**\n     * Hint text for the input field.\n     * @group Props\n     */\n    placeholder;\n    /**\n     * When present, it specifies that the input cannot be typed.\n     * @group Props\n     */\n    readonly;\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * Maximum height of the suggestions panel.\n     * @group Props\n     */\n    scrollHeight = '200px';\n    /**\n     * Defines if data is loaded and interacted with in lazy manner.\n     * @group Props\n     */\n    lazy = false;\n    /**\n     * Whether the data should be loaded on demand during scroll.\n     * @group Props\n     */\n    virtualScroll;\n    /**\n     * Height of an item in the list for VirtualScrolling.\n     * @group Props\n     */\n    virtualScrollItemSize;\n    /**\n     * Whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n     * @group Props\n     */\n    virtualScrollOptions;\n    /**\n     * Maximum number of character allows in the input field.\n     * @group Props\n     */\n    maxlength;\n    /**\n     * Name of the input element.\n     * @group Props\n     */\n    name;\n    /**\n     * When present, it specifies that an input field must be filled out before submitting the form.\n     * @group Props\n     */\n    required;\n    /**\n     * Size of the input field.\n     * @group Props\n     */\n    size;\n    /**\n     * Target element to attach the overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n     * @group Props\n     */\n    appendTo;\n    /**\n     * When enabled, highlights the first item in the list by default.\n     * @group Props\n     */\n    autoHighlight;\n    /**\n     * When present, autocomplete clears the manual input if it does not match of the suggestions to force only accepting values from the suggestions.\n     * @group Props\n     */\n    forceSelection;\n    /**\n     * Type of the input, defaults to \"text\".\n     * @group Props\n     */\n    type = 'text';\n    /**\n     * Whether to automatically manage layering.\n     * @group Props\n     */\n    autoZIndex = true;\n    /**\n     * Base zIndex value to use in layering.\n     * @group Props\n     */\n    baseZIndex = 0;\n    /**\n     * Defines a string that labels the input for accessibility.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Defines a string that labels the dropdown button for accessibility.\n     * @group Props\n     */\n    dropdownAriaLabel;\n    /**\n     * Specifies one or more IDs in the DOM that labels the input field.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * Icon class of the dropdown icon.\n     * @group Props\n     */\n    dropdownIcon;\n    /**\n     * Ensures uniqueness of selected items on multiple mode.\n     * @group Props\n     */\n    unique = true;\n    /**\n     * Whether to display options as grouped when nested options are provided.\n     * @group Props\n     */\n    group;\n    /**\n     * Whether to run a query when input receives focus.\n     * @group Props\n     */\n    completeOnFocus = false;\n    /**\n     * When enabled, a clear icon is displayed to clear the value.\n     * @group Props\n     */\n    showClear = false;\n    /**\n     * Field of a suggested object to resolve and display.\n     * @group Props\n     * @deprecated use optionLabel property instead\n     */\n    field;\n    /**\n     * Displays a button next to the input field when enabled.\n     * @group Props\n     */\n    dropdown;\n    /**\n     * Whether to show the empty message or not.\n     * @group Props\n     */\n    showEmptyMessage = true;\n    /**\n     * Specifies the behavior dropdown button. Default \"blank\" mode sends an empty string and \"current\" mode sends the input value.\n     * @group Props\n     */\n    dropdownMode = 'blank';\n    /**\n     * Specifies if multiple values can be selected.\n     * @group Props\n     */\n    multiple;\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex;\n    /**\n     * A property to uniquely identify a value in options.\n     * @group Props\n     */\n    dataKey;\n    /**\n     * Text to display when there is no data. Defaults to global value in i18n translation configuration.\n     * @group Props\n     */\n    emptyMessage;\n    /**\n     * Transition options of the show animation.\n     * @group Props\n     */\n    showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    /**\n     * Transition options of the hide animation.\n     * @group Props\n     */\n    hideTransitionOptions = '.1s linear';\n    /**\n     * When present, it specifies that the component should automatically get focus on load.\n     * @group Props\n     */\n    autofocus;\n    /**\n     * Used to define a string that autocomplete attribute the current element.\n     * @group Props\n     */\n    autocomplete = 'off';\n    /**\n     * Name of the options field of an option group.\n     * @group Props\n     */\n    optionGroupChildren = 'items';\n    /**\n     * Name of the label field of an option group.\n     * @group Props\n     */\n    optionGroupLabel = 'label';\n    /**\n     * Options for the overlay element.\n     * @group Props\n     */\n    overlayOptions;\n    /**\n     * An array of suggestions to display.\n     * @group Props\n     */\n    get suggestions() {\n      return this._suggestions();\n    }\n    set suggestions(value) {\n      this._suggestions.set(value);\n      this.handleSuggestionsChange();\n    }\n    /**\n     * Element dimensions of option for virtual scrolling.\n     * @group Props\n     * @deprecated use virtualScrollItemSize property instead.\n     */\n    get itemSize() {\n      return this._itemSize;\n    }\n    set itemSize(val) {\n      this._itemSize = val;\n      console.warn('The itemSize property is deprecated, use virtualScrollItemSize property instead.');\n    }\n    /**\n     * Property name or getter function to use as the label of an option.\n     * @group Props\n     */\n    optionLabel;\n    /**\n     * Property name or getter function to use as the value of an option.\n     * @group Props\n     */\n    optionValue;\n    /**\n     * Unique identifier of the component.\n     * @group Props\n     */\n    id;\n    /**\n     * Text to display when the search is active. Defaults to global value in i18n translation configuration.\n     * @group Props\n     * @defaultValue '{0} results are available'\n     */\n    searchMessage;\n    /**\n     * Text to display when filtering does not return any results. Defaults to global value in i18n translation configuration.\n     * @group Props\n     * @defaultValue 'No selected item'\n     */\n    emptySelectionMessage;\n    /**\n     * Text to be displayed in hidden accessible field when options are selected. Defaults to global value in i18n translation configuration.\n     * @group Props\n     * @defaultValue '{0} items selected'\n     */\n    selectionMessage;\n    /**\n     * Whether to focus on the first visible or selected element when the overlay panel is shown.\n     * @group Props\n     */\n    autoOptionFocus = false;\n    /**\n     * When enabled, the focused option is selected.\n     * @group Props\n     */\n    selectOnFocus;\n    /**\n     * Locale to use in searching. The default locale is the host environment's current locale.\n     * @group Props\n     */\n    searchLocale;\n    /**\n     * Property name or getter function to use as the disabled flag of an option, defaults to false when not defined.\n     * @group Props\n     */\n    optionDisabled;\n    /**\n     * When enabled, the hovered option will be focused.\n     * @group Props\n     */\n    focusOnHover;\n    /**\n     * Specifies the input variant of the component.\n     * @group Props\n     */\n    variant = 'outlined';\n    /**\n     * Callback to invoke to search for suggestions.\n     * @param {AutoCompleteCompleteEvent} event - Custom complete event.\n     * @group Emits\n     */\n    completeMethod = new EventEmitter();\n    /**\n     * Callback to invoke when a suggestion is selected.\n     * @param {AutoCompleteSelectEvent} event - custom select event.\n     * @group Emits\n     */\n    onSelect = new EventEmitter();\n    /**\n     * Callback to invoke when a selected value is removed.\n     * @param {AutoCompleteUnselectEvent} event - custom unselect event.\n     * @group Emits\n     */\n    onUnselect = new EventEmitter();\n    /**\n     * Callback to invoke when the component receives focus.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onFocus = new EventEmitter();\n    /**\n     * Callback to invoke when the component loses focus.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onBlur = new EventEmitter();\n    /**\n     * Callback to invoke to when dropdown button is clicked.\n     * @param {AutoCompleteDropdownClickEvent} event - custom dropdown click event.\n     * @group Emits\n     */\n    onDropdownClick = new EventEmitter();\n    /**\n     * Callback to invoke when clear button is clicked.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onClear = new EventEmitter();\n    /**\n     * Callback to invoke on input key up.\n     * @param {KeyboardEvent} event - Keyboard event.\n     * @group Emits\n     */\n    onKeyUp = new EventEmitter();\n    /**\n     * Callback to invoke on overlay is shown.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onShow = new EventEmitter();\n    /**\n     * Callback to invoke on overlay is hidden.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onHide = new EventEmitter();\n    /**\n     * Callback to invoke on lazy load data.\n     * @param {AutoCompleteLazyLoadEvent} event - Lazy load event.\n     * @group Emits\n     */\n    onLazyLoad = new EventEmitter();\n    containerEL;\n    inputEL;\n    multiInputEl;\n    multiContainerEL;\n    dropdownButton;\n    itemsViewChild;\n    scroller;\n    overlayViewChild;\n    templates;\n    _itemSize;\n    itemsWrapper;\n    itemTemplate;\n    emptyTemplate;\n    headerTemplate;\n    footerTemplate;\n    selectedItemTemplate;\n    groupTemplate;\n    loaderTemplate;\n    removeIconTemplate;\n    loadingIconTemplate;\n    clearIconTemplate;\n    dropdownIconTemplate;\n    value;\n    _suggestions = signal(null);\n    onModelChange = () => {};\n    onModelTouched = () => {};\n    timeout;\n    overlayVisible;\n    suggestionsUpdated;\n    highlightOption;\n    highlightOptionChanged;\n    focused = false;\n    _filled;\n    get filled() {\n      return this._filled;\n    }\n    set filled(value) {\n      this._filled = value;\n    }\n    loading;\n    scrollHandler;\n    listId;\n    searchTimeout;\n    dirty = false;\n    modelValue = signal(null);\n    focusedMultipleOptionIndex = signal(-1);\n    focusedOptionIndex = signal(-1);\n    visibleOptions = computed(() => {\n      return this.group ? this.flatOptions(this._suggestions()) : this._suggestions() || [];\n    });\n    inputValue = computed(() => {\n      const modelValue = this.modelValue();\n      const selectedOption = this.getSelectedOption(modelValue);\n      if (modelValue) {\n        if (typeof modelValue === 'object' || this.optionValue) {\n          const label = this.getOptionLabel(selectedOption);\n          return label != null ? label : modelValue;\n        } else {\n          return modelValue;\n        }\n      } else {\n        return '';\n      }\n    });\n    get focusedMultipleOptionId() {\n      return this.focusedMultipleOptionIndex() !== -1 ? `${this.id}_multiple_option_${this.focusedMultipleOptionIndex()}` : null;\n    }\n    get focusedOptionId() {\n      return this.focusedOptionIndex() !== -1 ? `${this.id}_${this.focusedOptionIndex()}` : null;\n    }\n    get containerClass() {\n      return {\n        'p-autocomplete p-component p-inputwrapper': true,\n        'p-disabled': this.disabled,\n        'p-focus': this.focused,\n        'p-autocomplete-dd': this.dropdown,\n        'p-autocomplete-multiple': this.multiple,\n        'p-inputwrapper-focus': this.focused,\n        'p-overlay-open': this.overlayVisible\n      };\n    }\n    get multiContainerClass() {\n      return {\n        'p-autocomplete-multiple-container p-component p-inputtext': true,\n        'p-variant-filled': this.variant === 'filled' || this.config.inputStyle() === 'filled'\n      };\n    }\n    get panelClass() {\n      return {\n        'p-autocomplete-panel p-component': true,\n        'p-input-filled': this.config.inputStyle() === 'filled',\n        'p-ripple-disabled': this.config.ripple === false\n      };\n    }\n    get panelStyles() {\n      return {\n        'max-height': this.virtualScroll ? 'auto' : this.scrollHeight,\n        ...this.panelStyle\n      };\n    }\n    get inputClass() {\n      return {\n        'p-autocomplete-input p-inputtext p-component': !this.multiple,\n        'p-autocomplete-dd-input': this.dropdown,\n        'p-variant-filled': this.variant === 'filled' || this.config.inputStyle() === 'filled'\n      };\n    }\n    get searchResultMessageText() {\n      return ObjectUtils.isNotEmpty(this.visibleOptions()) && this.overlayVisible ? this.searchMessageText.replaceAll('{0}', this.visibleOptions().length) : this.emptySearchMessageText;\n    }\n    get searchMessageText() {\n      return this.searchMessage || this.config.translation.searchMessage || '';\n    }\n    get emptySearchMessageText() {\n      return this.emptyMessage || this.config.translation.emptySearchMessage || '';\n    }\n    get selectionMessageText() {\n      return this.selectionMessage || this.config.translation.selectionMessage || '';\n    }\n    get emptySelectionMessageText() {\n      return this.emptySelectionMessage || this.config.translation.emptySelectionMessage || '';\n    }\n    get selectedMessageText() {\n      return this.hasSelectedOption() ? this.selectionMessageText.replaceAll('{0}', this.multiple ? this.modelValue().length : '1') : this.emptySelectionMessageText;\n    }\n    get ariaSetSize() {\n      return this.visibleOptions().filter(option => !this.isOptionGroup(option)).length;\n    }\n    get listLabel() {\n      return this.config.getTranslation(TranslationKeys.ARIA)['listLabel'];\n    }\n    get virtualScrollerDisabled() {\n      return !this.virtualScroll;\n    }\n    get optionValueSelected() {\n      return typeof this.modelValue() === 'string' && this.optionValue;\n    }\n    get isVisibleClearIcon() {\n      return this.modelValue() != null && this.hasSelectedOption() && this.showClear && !this.disabled && !this.loading;\n    }\n    constructor(document, el, renderer, cd, config, overlayService, zone) {\n      this.document = document;\n      this.el = el;\n      this.renderer = renderer;\n      this.cd = cd;\n      this.config = config;\n      this.overlayService = overlayService;\n      this.zone = zone;\n      effect(() => {\n        this.filled = ObjectUtils.isNotEmpty(this.modelValue());\n      });\n    }\n    ngOnInit() {\n      this.id = this.id || UniqueComponentId();\n      this.cd.detectChanges();\n    }\n    ngAfterViewChecked() {\n      //Use timeouts as since Angular 4.2, AfterViewChecked is broken and not called after panel is updated\n      if (this.suggestionsUpdated && this.overlayViewChild) {\n        this.zone.runOutsideAngular(() => {\n          setTimeout(() => {\n            if (this.overlayViewChild) {\n              this.overlayViewChild.alignOverlay();\n            }\n          }, 1);\n          this.suggestionsUpdated = false;\n        });\n      }\n    }\n    ngAfterContentInit() {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'item':\n            this.itemTemplate = item.template;\n            break;\n          case 'group':\n            this.groupTemplate = item.template;\n            break;\n          case 'selectedItem':\n            this.selectedItemTemplate = item.template;\n            break;\n          case 'header':\n            this.headerTemplate = item.template;\n            break;\n          case 'empty':\n            this.emptyTemplate = item.template;\n            break;\n          case 'footer':\n            this.footerTemplate = item.template;\n            break;\n          case 'loader':\n            this.loaderTemplate = item.template;\n            break;\n          case 'removetokenicon':\n            this.removeIconTemplate = item.template;\n            break;\n          case 'loadingicon':\n            this.loadingIconTemplate = item.template;\n            break;\n          case 'clearicon':\n            this.clearIconTemplate = item.template;\n            break;\n          case 'dropdownicon':\n            this.dropdownIconTemplate = item.template;\n            break;\n          default:\n            this.itemTemplate = item.template;\n            break;\n        }\n      });\n    }\n    handleSuggestionsChange() {\n      if (this.loading) {\n        this._suggestions().length > 0 || this.showEmptyMessage ? this.show() : !!this.emptyTemplate ? this.show() : this.hide();\n        const focusedOptionIndex = this.overlayVisible && this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n        this.focusedOptionIndex.set(focusedOptionIndex);\n        this.suggestionsUpdated = true;\n        this.loading = false;\n        this.cd.markForCheck();\n      }\n    }\n    flatOptions(options) {\n      return (options || []).reduce((result, option, index) => {\n        result.push({\n          optionGroup: option,\n          group: true,\n          index\n        });\n        const optionGroupChildren = this.getOptionGroupChildren(option);\n        optionGroupChildren && optionGroupChildren.forEach(o => result.push(o));\n        return result;\n      }, []);\n    }\n    isOptionGroup(option) {\n      return this.optionGroupLabel && option.optionGroup && option.group;\n    }\n    findFirstOptionIndex() {\n      return this.visibleOptions().findIndex(option => this.isValidOption(option));\n    }\n    findLastOptionIndex() {\n      return ObjectUtils.findLastIndex(this.visibleOptions(), option => this.isValidOption(option));\n    }\n    findFirstFocusedOptionIndex() {\n      const selectedIndex = this.findSelectedOptionIndex();\n      return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n    }\n    findLastFocusedOptionIndex() {\n      const selectedIndex = this.findSelectedOptionIndex();\n      return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n    }\n    findSelectedOptionIndex() {\n      return this.hasSelectedOption() ? this.visibleOptions().findIndex(option => this.isValidSelectedOption(option)) : -1;\n    }\n    findNextOptionIndex(index) {\n      const matchedOptionIndex = index < this.visibleOptions().length - 1 ? this.visibleOptions().slice(index + 1).findIndex(option => this.isValidOption(option)) : -1;\n      return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n    }\n    findPrevOptionIndex(index) {\n      const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions().slice(0, index), option => this.isValidOption(option)) : -1;\n      return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n    }\n    isValidSelectedOption(option) {\n      return this.isValidOption(option) && this.isSelected(option);\n    }\n    isValidOption(option) {\n      return option && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n    }\n    isOptionDisabled(option) {\n      return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false;\n    }\n    isSelected(option) {\n      if (this.multiple) {\n        return this.unique ? this.modelValue()?.find(model => ObjectUtils.equals(model, this.getOptionValue(option), this.equalityKey())) : false;\n      }\n      return ObjectUtils.equals(this.modelValue(), this.getOptionValue(option), this.equalityKey());\n    }\n    isOptionMatched(option, value) {\n      return this.isValidOption(option) && this.getOptionLabel(option).toLocaleLowerCase(this.searchLocale) === value.toLocaleLowerCase(this.searchLocale);\n    }\n    isInputClicked(event) {\n      return event.target === this.inputEL.nativeElement;\n    }\n    isDropdownClicked(event) {\n      return this.dropdownButton?.nativeElement ? event.target === this.dropdownButton.nativeElement || this.dropdownButton.nativeElement.contains(event.target) : false;\n    }\n    equalityKey() {\n      return this.dataKey; // TODO: The 'optionValue' properties can be added.\n    }\n    onContainerClick(event) {\n      if (this.disabled || this.loading || this.isInputClicked(event) || this.isDropdownClicked(event)) {\n        return;\n      }\n      if (!this.overlayViewChild || !this.overlayViewChild.overlayViewChild?.nativeElement.contains(event.target)) {\n        DomHandler.focus(this.inputEL.nativeElement);\n      }\n    }\n    handleDropdownClick(event) {\n      let query = undefined;\n      if (this.overlayVisible) {\n        this.hide(true);\n      } else {\n        DomHandler.focus(this.inputEL.nativeElement);\n        query = this.inputEL.nativeElement.value;\n        if (this.dropdownMode === 'blank') this.search(event, '', 'dropdown');else if (this.dropdownMode === 'current') this.search(event, query, 'dropdown');\n      }\n      this.onDropdownClick.emit({\n        originalEvent: event,\n        query\n      });\n    }\n    onInput(event) {\n      if (this.searchTimeout) {\n        clearTimeout(this.searchTimeout);\n      }\n      let query = event.target.value;\n      if (this.maxlength !== null) {\n        query = query.split('').slice(0, this.maxlength).join('');\n      }\n      if (!this.multiple && !this.forceSelection) {\n        this.updateModel(query);\n      }\n      if (query.length === 0 && !this.multiple && !this.completeOnFocus) {\n        this.onClear.emit();\n        this.hide();\n      } else {\n        if (query.length >= this.minLength) {\n          this.focusedOptionIndex.set(-1);\n          this.searchTimeout = setTimeout(() => {\n            this.search(event, query, 'input');\n          }, this.delay);\n        } else {\n          this.hide();\n        }\n      }\n    }\n    onInputChange(event) {\n      if (this.forceSelection) {\n        let valid = false;\n        if (this.visibleOptions()) {\n          const matchedValue = this.visibleOptions().find(option => this.isOptionMatched(option, this.inputEL.nativeElement.value || ''));\n          if (matchedValue !== undefined) {\n            valid = true;\n            !this.isSelected(matchedValue) && this.onOptionSelect(event, matchedValue);\n          }\n        }\n        if (!valid) {\n          this.inputEL.nativeElement.value = '';\n          !this.multiple && this.updateModel(null);\n        }\n      }\n    }\n    onInputFocus(event) {\n      if (this.disabled) {\n        // For ScreenReaders\n        return;\n      }\n      if (!this.dirty && this.completeOnFocus) {\n        this.search(event, event.target.value, 'focus');\n        this.show();\n      }\n      this.dirty = true;\n      this.focused = true;\n      const focusedOptionIndex = this.focusedOptionIndex() !== -1 ? this.focusedOptionIndex() : this.overlayVisible && this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n      this.focusedOptionIndex.set(focusedOptionIndex);\n      this.overlayVisible && this.scrollInView(this.focusedOptionIndex());\n      this.onFocus.emit(event);\n    }\n    onMultipleContainerFocus(event) {\n      if (this.disabled) {\n        // For ScreenReaders\n        return;\n      }\n      this.focused = true;\n    }\n    onMultipleContainerBlur(event) {\n      this.focusedMultipleOptionIndex.set(-1);\n      this.focused = false;\n    }\n    onMultipleContainerKeyDown(event) {\n      if (this.disabled) {\n        event.preventDefault();\n        return;\n      }\n      switch (event.code) {\n        case 'ArrowLeft':\n          this.onArrowLeftKeyOnMultiple(event);\n          break;\n        case 'ArrowRight':\n          this.onArrowRightKeyOnMultiple(event);\n          break;\n        case 'Backspace':\n          this.onBackspaceKeyOnMultiple(event);\n          break;\n        default:\n          break;\n      }\n    }\n    onInputBlur(event) {\n      this.dirty = false;\n      this.focused = false;\n      this.focusedOptionIndex.set(-1);\n      /** triggered only if user can input freely text\n       * Later on it must set touched also onSelect */\n      if (!this.forceSelection) {\n        this.onModelTouched();\n      }\n      this.onBlur.emit(event);\n    }\n    onInputPaste(event) {\n      this.onKeyDown(event);\n    }\n    onInputKeyUp(event) {\n      this.onKeyUp.emit(event);\n    }\n    onKeyDown(event) {\n      if (this.disabled) {\n        event.preventDefault();\n        return;\n      }\n      switch (event.code) {\n        case 'ArrowDown':\n          this.onArrowDownKey(event);\n          break;\n        case 'ArrowUp':\n          this.onArrowUpKey(event);\n          break;\n        case 'ArrowLeft':\n          this.onArrowLeftKey(event);\n          break;\n        case 'ArrowRight':\n          this.onArrowRightKey(event);\n          break;\n        case 'Home':\n          this.onHomeKey(event);\n          break;\n        case 'End':\n          this.onEndKey(event);\n          break;\n        case 'PageDown':\n          this.onPageDownKey(event);\n          break;\n        case 'PageUp':\n          this.onPageUpKey(event);\n          break;\n        case 'Enter':\n        case 'NumpadEnter':\n          this.onEnterKey(event);\n          break;\n        case 'Escape':\n          this.onEscapeKey(event);\n          break;\n        case 'Tab':\n          this.onTabKey(event);\n          break;\n        case 'Backspace':\n          this.onBackspaceKey(event);\n          break;\n        case 'ShiftLeft':\n        case 'ShiftRight':\n          //NOOP\n          break;\n        default:\n          break;\n      }\n    }\n    onArrowDownKey(event) {\n      if (!this.overlayVisible) {\n        return;\n      }\n      const optionIndex = this.focusedOptionIndex() !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex()) : this.findFirstFocusedOptionIndex();\n      this.changeFocusedOptionIndex(event, optionIndex);\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    onArrowUpKey(event) {\n      if (!this.overlayVisible) {\n        return;\n      }\n      if (event.altKey) {\n        if (this.focusedOptionIndex() !== -1) {\n          this.onOptionSelect(event, this.visibleOptions()[this.focusedOptionIndex()]);\n        }\n        this.overlayVisible && this.hide();\n        event.preventDefault();\n      } else {\n        const optionIndex = this.focusedOptionIndex() !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex()) : this.findLastFocusedOptionIndex();\n        this.changeFocusedOptionIndex(event, optionIndex);\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n    onArrowLeftKey(event) {\n      const target = event.currentTarget;\n      this.focusedOptionIndex.set(-1);\n      if (this.multiple) {\n        if (ObjectUtils.isEmpty(target.value) && this.hasSelectedOption()) {\n          DomHandler.focus(this.multiContainerEL.nativeElement);\n          this.focusedMultipleOptionIndex.set(this.modelValue().length);\n        } else {\n          event.stopPropagation(); // To prevent onArrowLeftKeyOnMultiple method\n        }\n      }\n    }\n    onArrowRightKey(event) {\n      this.focusedOptionIndex.set(-1);\n      this.multiple && event.stopPropagation(); // To prevent onArrowRightKeyOnMultiple method\n    }\n    onHomeKey(event) {\n      const {\n        currentTarget\n      } = event;\n      const len = currentTarget.value.length;\n      currentTarget.setSelectionRange(0, event.shiftKey ? len : 0);\n      this.focusedOptionIndex.set(-1);\n      event.preventDefault();\n    }\n    onEndKey(event) {\n      const {\n        currentTarget\n      } = event;\n      const len = currentTarget.value.length;\n      currentTarget.setSelectionRange(event.shiftKey ? 0 : len, len);\n      this.focusedOptionIndex.set(-1);\n      event.preventDefault();\n    }\n    onPageDownKey(event) {\n      this.scrollInView(this.visibleOptions().length - 1);\n      event.preventDefault();\n    }\n    onPageUpKey(event) {\n      this.scrollInView(0);\n      event.preventDefault();\n    }\n    onEnterKey(event) {\n      if (!this.overlayVisible) {\n        this.onArrowDownKey(event);\n      } else {\n        if (this.focusedOptionIndex() !== -1) {\n          this.onOptionSelect(event, this.visibleOptions()[this.focusedOptionIndex()]);\n          event.preventDefault();\n        }\n        this.hide();\n      }\n    }\n    onEscapeKey(event) {\n      this.overlayVisible && this.hide(true);\n      event.preventDefault();\n    }\n    onTabKey(event) {\n      if (this.focusedOptionIndex() !== -1) {\n        this.onOptionSelect(event, this.visibleOptions()[this.focusedOptionIndex()]);\n      }\n      this.overlayVisible && this.hide();\n    }\n    onBackspaceKey(event) {\n      if (this.multiple) {\n        if (ObjectUtils.isNotEmpty(this.modelValue()) && !this.inputEL.nativeElement.value) {\n          const removedValue = this.modelValue()[this.modelValue().length - 1];\n          const newValue = this.modelValue().slice(0, -1);\n          this.updateModel(newValue);\n          this.onUnselect.emit({\n            originalEvent: event,\n            value: removedValue\n          });\n        }\n        event.stopPropagation(); // To prevent onBackspaceKeyOnMultiple method\n      }\n    }\n    onArrowLeftKeyOnMultiple(event) {\n      const optionIndex = this.focusedMultipleOptionIndex() < 1 ? 0 : this.focusedMultipleOptionIndex() - 1;\n      this.focusedMultipleOptionIndex.set(optionIndex);\n    }\n    onArrowRightKeyOnMultiple(event) {\n      let optionIndex = this.focusedMultipleOptionIndex();\n      optionIndex++;\n      this.focusedMultipleOptionIndex.set(optionIndex);\n      if (optionIndex > this.modelValue().length - 1) {\n        this.focusedMultipleOptionIndex.set(-1);\n        DomHandler.focus(this.inputEL.nativeElement);\n      }\n    }\n    onBackspaceKeyOnMultiple(event) {\n      if (this.focusedMultipleOptionIndex() !== -1) {\n        this.removeOption(event, this.focusedMultipleOptionIndex());\n      }\n    }\n    onOptionSelect(event, option, isHide = true) {\n      const value = this.getOptionValue(option);\n      if (this.multiple) {\n        this.inputEL.nativeElement.value = '';\n        if (!this.isSelected(option)) {\n          this.updateModel([...(this.modelValue() || []), value]);\n        }\n      } else {\n        this.updateModel(value);\n      }\n      /** triggers model touched to update FormControl\n       * value in case updateOn is set to \"blur\" */\n      this.onModelTouched();\n      this.onSelect.emit({\n        originalEvent: event,\n        value: option\n      });\n      isHide && this.hide(true);\n    }\n    onOptionMouseEnter(event, index) {\n      if (this.focusOnHover) {\n        this.changeFocusedOptionIndex(event, index);\n      }\n    }\n    search(event, query, source) {\n      //allow empty string but not undefined or null\n      if (query === undefined || query === null) {\n        return;\n      }\n      //do not search on input change if minLength is not met\n      if (source === 'input' && query.trim().length < this.minLength) {\n        return;\n      }\n      this.loading = true;\n      this.completeMethod.emit({\n        originalEvent: event,\n        query\n      });\n    }\n    removeOption(event, index) {\n      event.stopPropagation();\n      const removedOption = this.modelValue()[index];\n      const value = this.modelValue().filter((_, i) => i !== index).map(option => this.getOptionValue(option));\n      this.updateModel(value);\n      this.onUnselect.emit({\n        originalEvent: event,\n        value: removedOption\n      });\n      DomHandler.focus(this.inputEL.nativeElement);\n    }\n    updateModel(value) {\n      this.value = value;\n      this.modelValue.set(value);\n      this.onModelChange(value);\n      this.updateInputValue();\n      this.cd.markForCheck();\n    }\n    updateInputValue() {\n      if (this.inputEL && this.inputEL.nativeElement) {\n        if (!this.multiple) {\n          this.inputEL.nativeElement.value = this.inputValue();\n        } else {\n          this.inputEL.nativeElement.value = '';\n        }\n      }\n    }\n    autoUpdateModel() {\n      if ((this.selectOnFocus || this.autoHighlight) && this.autoOptionFocus && !this.hasSelectedOption()) {\n        const focusedOptionIndex = this.findFirstFocusedOptionIndex();\n        this.focusedOptionIndex.set(focusedOptionIndex);\n        this.onOptionSelect(null, this.visibleOptions()[this.focusedOptionIndex()], false);\n      }\n    }\n    scrollInView(index = -1) {\n      const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n      if (this.itemsViewChild && this.itemsViewChild.nativeElement) {\n        const element = DomHandler.findSingle(this.itemsViewChild.nativeElement, `li[id=\"${id}\"]`);\n        if (element) {\n          element.scrollIntoView && element.scrollIntoView({\n            block: 'nearest',\n            inline: 'nearest'\n          });\n        } else if (!this.virtualScrollerDisabled) {\n          setTimeout(() => {\n            this.virtualScroll && this.scroller?.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex());\n          }, 0);\n        }\n      }\n    }\n    changeFocusedOptionIndex(event, index) {\n      if (this.focusedOptionIndex() !== index) {\n        this.focusedOptionIndex.set(index);\n        this.scrollInView();\n        if (this.selectOnFocus) {\n          this.onOptionSelect(event, this.visibleOptions()[index], false);\n        }\n      }\n    }\n    show(isFocus = false) {\n      this.dirty = true;\n      this.overlayVisible = true;\n      const focusedOptionIndex = this.focusedOptionIndex() !== -1 ? this.focusedOptionIndex() : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n      this.focusedOptionIndex.set(focusedOptionIndex);\n      isFocus && DomHandler.focus(this.inputEL.nativeElement);\n      if (isFocus) {\n        DomHandler.focus(this.inputEL.nativeElement);\n      }\n      this.onShow.emit();\n      this.cd.markForCheck();\n    }\n    hide(isFocus = false) {\n      const _hide = () => {\n        this.dirty = isFocus;\n        this.overlayVisible = false;\n        this.focusedOptionIndex.set(-1);\n        isFocus && DomHandler.focus(this.inputEL.nativeElement);\n        this.onHide.emit();\n        this.cd.markForCheck();\n      };\n      // Added to adjust the scroller's content position when the dropdown closes.\n      if (this.virtualScroll) {\n        this.scroller.onScrollChange(event);\n      }\n      setTimeout(() => {\n        _hide();\n      }, 0); // For ScreenReaders\n    }\n    clear() {\n      this.updateModel(null);\n      this.inputEL.nativeElement.value = '';\n      this.onClear.emit();\n    }\n    writeValue(value) {\n      this.value = value;\n      this.modelValue.set(value);\n      this.updateInputValue();\n      this.cd.markForCheck();\n    }\n    hasSelectedOption() {\n      return ObjectUtils.isNotEmpty(this.modelValue());\n    }\n    getAriaPosInset(index) {\n      return (this.optionGroupLabel ? index - this.visibleOptions().slice(0, index).filter(option => this.isOptionGroup(option)).length : index) + 1;\n    }\n    getOptionLabel(option) {\n      return this.field || this.optionLabel ? ObjectUtils.resolveFieldData(option, this.field || this.optionLabel) : option && option.label != undefined ? option.label : option;\n    }\n    getOptionValue(option) {\n      return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : option;\n    }\n    getOptionIndex(index, scrollerOptions) {\n      return this.virtualScrollerDisabled ? index : scrollerOptions && scrollerOptions.getItemOptions(index)['index'];\n    }\n    getOptionGroupLabel(optionGroup) {\n      return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup && optionGroup.label != undefined ? optionGroup.label : optionGroup;\n    }\n    getOptionGroupChildren(optionGroup) {\n      return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n    getSelectedOption(modelValue) {\n      if (!this.optionValue) {\n        return modelValue;\n      }\n      return (this.suggestions || []).find(item => ObjectUtils.resolveFieldData(item, this.optionValue) === modelValue);\n    }\n    getMultipleLabel(option) {\n      let selected = this.getSelectedOption(option);\n      return this.getOptionLabel(selected);\n    }\n    registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n      this.disabled = val;\n      this.cd.markForCheck();\n    }\n    onOverlayAnimationStart(event) {\n      if (event.toState === 'visible') {\n        this.itemsWrapper = DomHandler.findSingle(this.overlayViewChild.overlayViewChild?.nativeElement, this.virtualScroll ? '.p-scroller' : '.p-autocomplete-panel');\n        if (this.virtualScroll) {\n          this.scroller?.setContentEl(this.itemsViewChild?.nativeElement);\n          this.scroller.viewInit();\n        }\n        if (this.visibleOptions() && this.visibleOptions().length) {\n          if (this.virtualScroll) {\n            const selectedIndex = this.modelValue() ? this.focusedOptionIndex() : -1;\n            if (selectedIndex !== -1) {\n              this.scroller?.scrollToIndex(selectedIndex);\n            }\n          } else {\n            let selectedListItem = DomHandler.findSingle(this.itemsWrapper, '.p-autocomplete-item.p-highlight');\n            if (selectedListItem) {\n              selectedListItem.scrollIntoView({\n                block: 'nearest',\n                inline: 'center'\n              });\n            }\n          }\n        }\n      }\n    }\n    ngOnDestroy() {\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n    }\n    static ɵfac = function AutoComplete_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AutoComplete)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.PrimeNGConfig), i0.ɵɵdirectiveInject(i1.OverlayService), i0.ɵɵdirectiveInject(i0.NgZone));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: AutoComplete,\n      selectors: [[\"p-autoComplete\"]],\n      contentQueries: function AutoComplete_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      viewQuery: function AutoComplete_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n          i0.ɵɵviewQuery(_c2, 5);\n          i0.ɵɵviewQuery(_c3, 5);\n          i0.ɵɵviewQuery(_c4, 5);\n          i0.ɵɵviewQuery(_c5, 5);\n          i0.ɵɵviewQuery(_c6, 5);\n          i0.ɵɵviewQuery(_c7, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerEL = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputEL = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiInputEl = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiContainerEL = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdownButton = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemsViewChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scroller = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.overlayViewChild = _t.first);\n        }\n      },\n      hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n      hostVars: 6,\n      hostBindings: function AutoComplete_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focused && !ctx.disabled || ctx.autofocus || ctx.overlayVisible)(\"p-autocomplete-clearable\", ctx.showClear && !ctx.disabled);\n        }\n      },\n      inputs: {\n        minLength: [2, \"minLength\", \"minLength\", numberAttribute],\n        delay: [2, \"delay\", \"delay\", numberAttribute],\n        style: \"style\",\n        panelStyle: \"panelStyle\",\n        styleClass: \"styleClass\",\n        panelStyleClass: \"panelStyleClass\",\n        inputStyle: \"inputStyle\",\n        inputId: \"inputId\",\n        inputStyleClass: \"inputStyleClass\",\n        placeholder: \"placeholder\",\n        readonly: [2, \"readonly\", \"readonly\", booleanAttribute],\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        scrollHeight: \"scrollHeight\",\n        lazy: [2, \"lazy\", \"lazy\", booleanAttribute],\n        virtualScroll: [2, \"virtualScroll\", \"virtualScroll\", booleanAttribute],\n        virtualScrollItemSize: [2, \"virtualScrollItemSize\", \"virtualScrollItemSize\", numberAttribute],\n        virtualScrollOptions: \"virtualScrollOptions\",\n        maxlength: [2, \"maxlength\", \"maxlength\", value => numberAttribute(value, null)],\n        name: \"name\",\n        required: [2, \"required\", \"required\", booleanAttribute],\n        size: [2, \"size\", \"size\", numberAttribute],\n        appendTo: \"appendTo\",\n        autoHighlight: [2, \"autoHighlight\", \"autoHighlight\", booleanAttribute],\n        forceSelection: [2, \"forceSelection\", \"forceSelection\", booleanAttribute],\n        type: \"type\",\n        autoZIndex: [2, \"autoZIndex\", \"autoZIndex\", booleanAttribute],\n        baseZIndex: [2, \"baseZIndex\", \"baseZIndex\", numberAttribute],\n        ariaLabel: \"ariaLabel\",\n        dropdownAriaLabel: \"dropdownAriaLabel\",\n        ariaLabelledBy: \"ariaLabelledBy\",\n        dropdownIcon: \"dropdownIcon\",\n        unique: [2, \"unique\", \"unique\", booleanAttribute],\n        group: [2, \"group\", \"group\", booleanAttribute],\n        completeOnFocus: [2, \"completeOnFocus\", \"completeOnFocus\", booleanAttribute],\n        showClear: [2, \"showClear\", \"showClear\", booleanAttribute],\n        field: \"field\",\n        dropdown: [2, \"dropdown\", \"dropdown\", booleanAttribute],\n        showEmptyMessage: [2, \"showEmptyMessage\", \"showEmptyMessage\", booleanAttribute],\n        dropdownMode: \"dropdownMode\",\n        multiple: [2, \"multiple\", \"multiple\", booleanAttribute],\n        tabindex: [2, \"tabindex\", \"tabindex\", numberAttribute],\n        dataKey: \"dataKey\",\n        emptyMessage: \"emptyMessage\",\n        showTransitionOptions: \"showTransitionOptions\",\n        hideTransitionOptions: \"hideTransitionOptions\",\n        autofocus: [2, \"autofocus\", \"autofocus\", booleanAttribute],\n        autocomplete: \"autocomplete\",\n        optionGroupChildren: \"optionGroupChildren\",\n        optionGroupLabel: \"optionGroupLabel\",\n        overlayOptions: \"overlayOptions\",\n        suggestions: \"suggestions\",\n        itemSize: \"itemSize\",\n        optionLabel: \"optionLabel\",\n        optionValue: \"optionValue\",\n        id: \"id\",\n        searchMessage: \"searchMessage\",\n        emptySelectionMessage: \"emptySelectionMessage\",\n        selectionMessage: \"selectionMessage\",\n        autoOptionFocus: [2, \"autoOptionFocus\", \"autoOptionFocus\", booleanAttribute],\n        selectOnFocus: [2, \"selectOnFocus\", \"selectOnFocus\", booleanAttribute],\n        searchLocale: [2, \"searchLocale\", \"searchLocale\", booleanAttribute],\n        optionDisabled: \"optionDisabled\",\n        focusOnHover: [2, \"focusOnHover\", \"focusOnHover\", booleanAttribute],\n        variant: \"variant\"\n      },\n      outputs: {\n        completeMethod: \"completeMethod\",\n        onSelect: \"onSelect\",\n        onUnselect: \"onUnselect\",\n        onFocus: \"onFocus\",\n        onBlur: \"onBlur\",\n        onDropdownClick: \"onDropdownClick\",\n        onClear: \"onClear\",\n        onKeyUp: \"onKeyUp\",\n        onShow: \"onShow\",\n        onHide: \"onHide\",\n        onLazyLoad: \"onLazyLoad\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([AUTOCOMPLETE_VALUE_ACCESSOR])],\n      decls: 18,\n      vars: 24,\n      consts: [[\"container\", \"\"], [\"overlay\", \"\"], [\"buildInItems\", \"\"], [\"focusInput\", \"\"], [\"multiContainer\", \"\"], [\"token\", \"\"], [\"ddBtn\", \"\"], [\"scroller\", \"\"], [\"items\", \"\"], [\"empty\", \"\"], [3, \"click\", \"ngClass\", \"ngStyle\"], [\"pAutoFocus\", \"\", \"aria-autocomplete\", \"list\", \"role\", \"combobox\", 3, \"autofocus\", \"ngClass\", \"ngStyle\", \"class\", \"type\", \"autocomplete\", \"required\", \"name\", \"tabindex\", \"readonly\", \"disabled\", \"input\", \"keydown\", \"change\", \"focus\", \"blur\", \"paste\", \"keyup\", 4, \"ngIf\"], [4, \"ngIf\"], [\"role\", \"listbox\", 3, \"ngClass\", \"tabindex\", \"focus\", \"blur\", \"keydown\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-autocomplete-dropdown p-button-icon-only\", \"pRipple\", \"\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [3, \"visibleChange\", \"onAnimationStart\", \"onHide\", \"visible\", \"options\", \"target\", \"appendTo\", \"showTransitionOptions\", \"hideTransitionOptions\"], [3, \"ngClass\", \"ngStyle\"], [4, \"ngTemplateOutlet\"], [3, \"items\", \"style\", \"itemSize\", \"autoSize\", \"lazy\", \"options\", \"onLazyLoad\", 4, \"ngIf\"], [\"role\", \"status\", \"aria-live\", \"polite\", 1, \"p-hidden-accessible\"], [\"pAutoFocus\", \"\", \"aria-autocomplete\", \"list\", \"role\", \"combobox\", 3, \"input\", \"keydown\", \"change\", \"focus\", \"blur\", \"paste\", \"keyup\", \"autofocus\", \"ngClass\", \"ngStyle\", \"type\", \"autocomplete\", \"required\", \"name\", \"tabindex\", \"readonly\", \"disabled\"], [3, \"styleClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-clear-icon\", 3, \"click\", 4, \"ngIf\"], [3, \"click\", \"styleClass\"], [1, \"p-autocomplete-clear-icon\", 3, \"click\"], [\"role\", \"listbox\", 3, \"focus\", \"blur\", \"keydown\", \"ngClass\", \"tabindex\"], [\"role\", \"option\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"option\", 1, \"p-autocomplete-input-token\"], [\"pAutoFocus\", \"\", \"role\", \"combobox\", \"aria-autocomplete\", \"list\", 3, \"input\", \"keydown\", \"change\", \"focus\", \"blur\", \"paste\", \"keyup\", \"autofocus\", \"ngClass\", \"ngStyle\", \"autocomplete\", \"required\", \"tabindex\", \"readonly\", \"disabled\"], [\"role\", \"option\", 3, \"ngClass\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"p-autocomplete-token-label\", 4, \"ngIf\"], [1, \"p-autocomplete-token-icon\", 3, \"click\"], [3, \"styleClass\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-token-icon\", 4, \"ngIf\"], [1, \"p-autocomplete-token-label\"], [3, \"styleClass\"], [1, \"p-autocomplete-token-icon\"], [3, \"styleClass\", \"spin\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-loader pi-spin \", 4, \"ngIf\"], [3, \"styleClass\", \"spin\"], [1, \"p-autocomplete-loader\", \"pi-spin\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 1, \"p-autocomplete-dropdown\", \"p-button-icon-only\", 3, \"click\", \"disabled\"], [3, \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\"], [3, \"onLazyLoad\", \"items\", \"itemSize\", \"autoSize\", \"lazy\", \"options\"], [\"pTemplate\", \"content\"], [\"pTemplate\", \"loader\"], [\"role\", \"listbox\", 1, \"p-autocomplete-items\", 3, \"ngClass\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"p-autocomplete-empty-message\", \"role\", \"option\", 3, \"ngStyle\", 4, \"ngIf\"], [\"role\", \"option\", 1, \"p-autocomplete-item-group\", 3, \"ngStyle\"], [\"pRipple\", \"\", \"role\", \"option\", 1, \"p-autocomplete-item\", 3, \"mousedown\", \"mouseenter\", \"ngStyle\", \"ngClass\"], [\"role\", \"option\", 1, \"p-autocomplete-empty-message\", 3, \"ngStyle\"], [4, \"ngIf\", \"ngIfElse\"]],\n      template: function AutoComplete_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 10, 0);\n          i0.ɵɵlistener(\"click\", function AutoComplete_Template_div_click_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onContainerClick($event));\n          });\n          i0.ɵɵtemplate(2, AutoComplete_input_2_Template, 2, 23, \"input\", 11)(3, AutoComplete_ng_container_3_Template, 3, 2, \"ng-container\", 12)(4, AutoComplete_ul_4_Template, 6, 27, \"ul\", 13)(5, AutoComplete_ng_container_5_Template, 3, 2, \"ng-container\", 12)(6, AutoComplete_button_6_Template, 4, 5, \"button\", 14);\n          i0.ɵɵelementStart(7, \"p-overlay\", 15, 1);\n          i0.ɵɵtwoWayListener(\"visibleChange\", function AutoComplete_Template_p_overlay_visibleChange_7_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.overlayVisible, $event) || (ctx.overlayVisible = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵlistener(\"onAnimationStart\", function AutoComplete_Template_p_overlay_onAnimationStart_7_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onOverlayAnimationStart($event));\n          })(\"onHide\", function AutoComplete_Template_p_overlay_onHide_7_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.hide());\n          });\n          i0.ɵɵelementStart(9, \"div\", 16);\n          i0.ɵɵtemplate(10, AutoComplete_ng_container_10_Template, 1, 0, \"ng-container\", 17)(11, AutoComplete_p_scroller_11_Template, 4, 10, \"p-scroller\", 18)(12, AutoComplete_ng_container_12_Template, 2, 6, \"ng-container\", 12)(13, AutoComplete_ng_template_13_Template, 4, 7, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor)(15, AutoComplete_ng_container_15_Template, 1, 0, \"ng-container\", 17);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"span\", 19);\n          i0.ɵɵtext(17);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.styleClass);\n          i0.ɵɵproperty(\"ngClass\", ctx.containerClass)(\"ngStyle\", ctx.style);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.multiple);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isVisibleClearIcon);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.multiple);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.dropdown);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"visible\", ctx.overlayVisible);\n          i0.ɵɵproperty(\"options\", ctx.overlayOptions)(\"target\", \"@parent\")(\"appendTo\", ctx.appendTo)(\"showTransitionOptions\", ctx.showTransitionOptions)(\"hideTransitionOptions\", ctx.hideTransitionOptions);\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassMap(ctx.panelStyleClass);\n          i0.ɵɵproperty(\"ngClass\", ctx.panelClass)(\"ngStyle\", ctx.panelStyles);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.headerTemplate);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.virtualScroll);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.virtualScroll);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.footerTemplate);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.selectedMessageText, \" \");\n        }\n      },\n      dependencies: () => [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle, i3.Overlay, i1.PrimeTemplate, i4.ButtonDirective, i5.Ripple, i6.Scroller, i7.AutoFocus, TimesCircleIcon, SpinnerIcon, TimesIcon, ChevronDownIcon],\n      styles: [\"@layer primeng{.p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{position:absolute;top:50%;margin-top:-.5rem}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-top-right-radius:0;border-bottom-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-top-left-radius:0;border-bottom-left-radius:0}.p-autocomplete-panel{overflow:auto}.p-autocomplete-items{margin:0;padding:0;list-style-type:none}.p-autocomplete-item{cursor:pointer;white-space:nowrap;position:relative;overflow:hidden}.p-autocomplete-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-autocomplete-token{width:fit-content;cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-autocomplete-token-icon{display:flex;cursor:pointer}.p-autocomplete-input-token{flex:1 1 auto;display:inline-flex}.p-autocomplete-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}.p-autocomplete-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-autocomplete-clearable{position:relative}}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return AutoComplete;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AutoCompleteModule = /*#__PURE__*/(() => {\n  class AutoCompleteModule {\n    static ɵfac = function AutoCompleteModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AutoCompleteModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: AutoCompleteModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, OverlayModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollerModule, AutoFocusModule, TimesCircleIcon, SpinnerIcon, TimesIcon, ChevronDownIcon, OverlayModule, SharedModule, ScrollerModule, AutoFocusModule]\n    });\n  }\n  return AutoCompleteModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_VALUE_ACCESSOR, AutoComplete, AutoCompleteModule };\n","<ng-template #modal let-close=\"close\" let-dismiss=\"dismiss\">\n  <div class=\"modal-header\">\n    <h4 i18n class=\"modal-title\">Change ownership</h4>\n\n    <button class=\"border-0 p-0\" title=\"Close this modal\" i18n-title (click)=\"dismiss()\">\n      <my-global-icon iconName=\"cross\"></my-global-icon>\n    </button>\n  </div>\n\n  <div class=\"modal-body\" [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label i18n for=\"next-ownership-username\">Select the next owner</label>\n\n      <p-autoComplete\n        formControlName=\"username\" [suggestions]=\"usernamePropositions\"\n        (completeMethod)=\"search($event)\" id=\"next-ownership-username\"\n      ></p-autoComplete>\n\n      <div *ngIf=\"formErrors.username\" class=\"form-error\" role=\"alert\">\n        {{ formErrors.username }}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"modal-footer\">\n    <div class=\"inputs\">\n      <input\n        type=\"button\" role=\"button\" i18n-value value=\"Cancel\" class=\"peertube-button secondary-button\"\n        (click)=\"dismiss()\" (key.enter)=\"dismiss()\"\n      >\n\n      <input\n        type=\"submit\" i18n-value value=\"Submit\" class=\"peertube-button primary-button\"\n        [disabled]=\"!form.valid\" (click)=\"close()\"\n      />\n    </div>\n  </div>\n</ng-template>\n","import { Component, ElementRef, OnInit, inject, viewChild } from '@angular/core'\nimport { Notifier, UserService } from '@app/core'\nimport { OWNERSHIP_CHANGE_USERNAME_VALIDATOR } from '@app/shared/form-validators/video-ownership-change-validators'\nimport { FormReactive } from '@app/shared/shared-forms/form-reactive'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { NgIf } from '@angular/common'\nimport { AutoCompleteModule } from 'primeng/autocomplete'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { GlobalIconComponent } from '../../../shared/shared-icons/global-icon.component'\nimport { VideoOwnershipService } from '@app/shared/shared-main/video/video-ownership.service'\nimport { Video } from '@app/shared/shared-main/video/video.model'\n\n@Component({\n  selector: 'my-video-change-ownership',\n  templateUrl: './video-change-ownership.component.html',\n  styleUrls: [ './video-change-ownership.component.scss' ],\n  imports: [ GlobalIconComponent, FormsModule, ReactiveFormsModule, AutoCompleteModule, NgIf ]\n})\nexport class VideoChangeOwnershipComponent extends FormReactive implements OnInit {\n  protected formReactiveService = inject(FormReactiveService)\n  private videoOwnershipService = inject(VideoOwnershipService)\n  private notifier = inject(Notifier)\n  private userService = inject(UserService)\n  private modalService = inject(NgbModal)\n\n  readonly modal = viewChild<ElementRef>('modal')\n\n  usernamePropositions: string[]\n\n  error: string = null\n\n  private video: Video | undefined = undefined\n\n  ngOnInit () {\n    this.buildForm({\n      username: OWNERSHIP_CHANGE_USERNAME_VALIDATOR\n    })\n    this.usernamePropositions = []\n  }\n\n  show (video: Video) {\n    this.video = video\n    this.modalService\n      .open(this.modal(), { centered: true })\n      .result\n      .then(() => this.changeOwnership())\n      .catch(_ => _) // Called when closing (cancel) the modal without validating, do nothing\n  }\n\n  search (event: { query: string }) {\n    const query = event.query\n    this.userService.autocomplete(query)\n      .subscribe({\n        next: usernames => {\n          this.usernamePropositions = usernames\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  changeOwnership () {\n    const username = this.form.value['username']\n\n    this.videoOwnershipService\n      .changeOwnership(this.video.id, username)\n      .subscribe({\n        next: () => this.notifier.success($localize`Ownership change request sent.`),\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n}\n","<div class=\"channel-filters\">\n  <div class=\"channels-label\" i18n>Per channel:</div>\n\n  @for (channel of channels; track channel.id) {\n    <my-channel-toggle [channel]=\"channel\" [(ngModel)]=\"channel.selected\" (ngModelChange)=\"onFilter()\"></my-channel-toggle>\n  }\n</div>\n\n<p-table\n  [value]=\"videos\" [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\" [rows]=\"rowsPerPage\" [first]=\"pagination.start\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\" [sortField]=\"sort.field\" [sortOrder]=\"sort.order\" dataKey=\"id\" [resizableColumns]=\"true\"\n  [(selection)]=\"selectedRows\" [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\" [lazyLoadOnInit]=\"false\" [selectionPageOnly]=\"true\"\n  [showCurrentPageReport]=\"true\" [currentPageReportTemplate]=\"getPaginationTemplate()\"\n  [expandedRowKeys]=\"expandedRows\" [ngClass]=\"{ loading: loading }\"\n  class=\"new-p-table sticky-p-table cell-wrap\"\n>\n  <ng-template pTemplate=\"caption\">\n    <div class=\"caption\">\n      <div class=\"left-buttons\">\n        @if (isInSelectionMode()) {\n        <my-action-dropdown\n          i18n-label label=\"Batch actions\" theme=\"primary\"\n          [actions]=\"bulkActions\" [entry]=\"selectedRows\"\n        >\n        </my-action-dropdown>\n      } @else {\n        <strong i18n [hidden]=\"loading\">\n          { totalRecords, plural, =0 {No videos} =1 {1 video} other {{{ totalRecords | myNumberFormatter }} videos}}\n        </strong>\n      }\n      </div>\n\n      <div class=\"ms-auto right-form\">\n        <div class=\"d-flex align-items-center\">\n          <label class=\"label-inline d-none d-inline-block-mw\" for=\"table-search\" i18n>Search</label>\n\n          <my-advanced-input-filter\n            inputId=\"table-search\" icon=\"true\" emitOnInit=\"false\" i18n-placeholder placeholder=\"Search your videos\"\n            (search)=\"onSearch($event)\"\n          ></my-advanced-input-filter>\n        </div>\n\n        <div class=\"d-flex align-items-center\">\n          <label class=\"label-inline\" for=\"table-filter\" i18n>Filter</label>\n\n          <my-select-checkbox\n            inputId=\"table-filter\"\n            showToggleAll=\"false\"\n            showClear=\"true\"\n\n            [availableItems]=\"filterItems\"\n            [selectableGroup]=\"false\"\n            [(ngModel)]=\"selectedFilterItems\"\n            i18n-placeholder placeholder=\"All videos\"\n            (ngModelChange)=\"onFilter()\"\n          >\n          </my-select-checkbox>\n        </div>\n      </div>\n\n    </div>\n  </ng-template>\n\n  <ng-template pTemplate=\"sorticon\" let-sortOrder>\n    @if (sortOrder === 1) {\n      <my-button class=\"ms-2\" small=\"true\" active=\"true\" rounded=\"true\" theme=\"tertiary\" icon=\"chevron-up\"></my-button>\n    } @else if (sortOrder === -1) {\n      <my-button class=\"ms-2\" small=\"true\" active=\"true\" rounded=\"true\" theme=\"tertiary\" icon=\"chevron-down\"></my-button>\n    } @else if (sortOrder === 0) {\n      <my-button class=\"ms-2\" small=\"true\" rounded=\"true\" theme=\"tertiary\" icon=\"chevron-down\"></my-button>\n    }\n  </ng-template>\n\n  <ng-template pTemplate=\"paginatorright\" let-item>\n    <ng-container i18n>videos per page</ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th scope=\"col\" width=\"25px\" class=\"checkbox-cell\">\n        <p-tableHeaderCheckbox ariaLabel=\"Select all rows\" i18n-ariaLabel></p-tableHeaderCheckbox>\n      </th>\n\n      <th scope=\"col\" *ngIf=\"isSelected('duration')\" [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"duration\">{{ getColumn('duration').label }} <p-sortIcon field=\"duration\"></p-sortIcon></th>\n      <th scope=\"col\" *ngIf=\"isSelected('name')\" [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"name\">{{ getColumn('name').label }} <p-sortIcon field=\"name\"></p-sortIcon></th>\n      <th scope=\"col\" *ngIf=\"isSelected('privacy')\">{{ getColumn('privacy').label }}</th>\n      <th scope=\"col\" *ngIf=\"isSelected('sensitive')\">{{ getColumn('sensitive').label }}</th>\n      <th scope=\"col\" *ngIf=\"isSelected('playlists')\">{{ getColumn('playlists').label }}</th>\n      <th scope=\"col\" *ngIf=\"isSelected('insights')\" [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"views\">{{ getColumn('insights').label }} <p-sortIcon field=\"views\"></p-sortIcon></th>\n      <th scope=\"col\" *ngIf=\"isSelected('comments')\" [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"comments\">{{ getColumn('comments').label }} <p-sortIcon field=\"comments\"></p-sortIcon></th>\n      <th scope=\"col\" *ngIf=\"isSelected('published')\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"publishedAt\">{{ getColumn('published').label }} <p-sortIcon field=\"publishedAt\"></p-sortIcon></th>\n      <th scope=\"col\" *ngIf=\"isSelected('state')\">{{ getColumn('state').label }}</th>\n\n      <th scope=\"col\" width=\"250px\" class=\"action-head\">\n        <div class=\"d-flex align-items-center justify-content-between\">\n          <span i18>Actions</span>\n\n          <span class=\"c-hand column-toggle\" >\n            <div ngbDropdown placement=\"bottom-left auto\" container=\"body\" autoClose=\"outside\" #columnsDropdown=\"ngbDropdown\">\n              <my-button theme=\"tertiary\" icon=\"columns\" ngbDropdownToggle i18n-title title=\"Open table configuration\" [show]=\"columnsDropdown.isOpen()\"></my-button>\n\n              <div ngbDropdownMenu class=\"p-3\">\n                <div class=\"form-group\">\n                  <div class=\"muted small mb-2\" i18n>Column displayed:</div>\n\n                  @for (column of columns; track column) {\n                    <div class=\"ms-1 mb-1\">\n                      <my-peertube-checkbox\n                        [inputName]=\"'column-' + column.id\" [(ngModel)]=\"column.selected\"\n                        i18n-labelText [labelText]=\"column.label\"\n                        (ngModelChange)=\"saveSelectedColumns()\"\n                      ></my-peertube-checkbox>\n                    </div>\n                  }\n                </div>\n              </div>\n            </div>\n          </span>\n        </div>\n      </th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-video>\n\n    <tr [pSelectableRow]=\"video\">\n      <td class=\"checkbox-cell\">\n        <p-tableCheckbox [value]=\"video\" ariaLabel=\"Select this row\" i18n-ariaLabel></p-tableCheckbox>\n      </td>\n\n      <td *ngIf=\"isSelected('duration')\">\n        <my-video-cell [video]=\"video\" thumbnail=\"true\" title=\"false\"></my-video-cell>\n      </td>\n\n      <td *ngIf=\"isSelected('name')\">\n        <my-video-cell class=\"video-cell-name\" [video]=\"video\" thumbnail=\"false\" title=\"true\"></my-video-cell>\n      </td>\n\n      <td *ngIf=\"isSelected('privacy')\">\n        <div class=\"d-flex flex-wrap gap-1\">\n          <my-video-privacy-badge [video]=\"video\"></my-video-privacy-badge>\n\n          <span *ngIf=\"video.blacklisted\" class=\"pt-badge badge-red\" i18n [ngbTooltip]=\"video.blacklistedReason\">Blocked</span>\n        </div>\n      </td>\n\n      <td *ngIf=\"isSelected('sensitive')\">\n        <my-video-nsfw-badge [video]=\"video\"></my-video-nsfw-badge>\n      </td>\n\n      <td *ngIf=\"isSelected('playlists')\">\n        <div class=\"badges playlists\">\n          <a *ngFor=\"let playlist of (videosContainedInPlaylists[video.id] || [])\" class=\"pt-badge badge-secondary pt-badge-keep-case\" [routerLink]=\"['/w/p/', playlist.playlistShortUUID]\">\n            {{ playlist.playlistDisplayName }}\n          </a>\n        </div>\n      </td>\n\n      <td *ngIf=\"isSelected('insights')\">\n        <a class=\"pt\" [routerLink]=\"[ '/videos/manage', video.shortUUID, 'stats' ]\" i18n-title title=\"Navigate to the video stats page\">\n          <ng-container i18n>{video.views, plural, =0 {No views} =1 {1 view} other {{{ video.views | myNumberFormatter }} views}}</ng-container>\n\n          <br />\n\n          @if (video.isLive) {\n            <ng-container i18n>{video.viewers, plural, =0 {No viewers} =1 {1 viewer} other {{{ video.views | myNumberFormatter }} viewers}}</ng-container>\n          }\n        </a>\n      </td>\n\n      <td *ngIf=\"isSelected('comments')\">\n        <span i18n>{video.comments, plural, =0 {No comments} =1 {1 comment} other {{{ video.comments | myNumberFormatter }} comments}}</span>\n      </td>\n\n      <td *ngIf=\"isSelected('published')\">\n        {{ video.publishedAt | ptDate: 'short' }}\n      </td>\n\n      <td *ngIf=\"isSelected('state')\">\n        <my-video-state-badge [video]=\"video\"></my-video-state-badge>\n      </td>\n\n      <td class=\"action-cell\">\n        <div class=\"d-flex justify-content-end\">\n          <my-button class=\"me-3\" i18n-label label=\"Manage\" [ptRouterLink]=\"[ '/videos', 'manage', video.shortUUID ]\" theme=\"secondary\" icon=\"film\" responsiveLabel=\"true\"></my-button>\n\n          <my-video-actions-dropdown\n            placement=\"bottom auto\" buttonDirection=\"horizontal\" buttonStyled=\"true\" [video]=\"video\" [displayOptions]=\"videoActionsOptions\"\n            [moreActions]=\"moreVideoActions\"\n            (videoRemoved)=\"reloadData()\" (videoFilesRemoved)=\"reloadData()\" (transcodingCreated)=\"reloadData()\" (videoExistsInPlaylistChange)=\"fetchVideosContainedInPlaylists([ video ])\"\n          ></my-video-actions-dropdown>\n        </div>\n      </td>\n\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\">\n    <tr>\n      <td myAutoColspan>\n        <div class=\"no-results\">\n          <ng-container *ngIf=\"search\" i18n>No video found matching current filters.</ng-container>\n          <ng-container *ngIf=\"!search\" i18n>You don't have any videos published yet.</ng-container>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n\n<my-video-change-ownership #videoChangeOwnershipModal></my-video-change-ownership>\n","import { Component } from '@angular/core'\nimport { RouterLink } from '@angular/router'\n\nimport { WatchedWordsListAdminOwnerComponent } from '@app/shared/standalone-watched-words/watched-words-list-admin-owner.component'\n\n@Component({\n  templateUrl: './my-watched-words-list.component.html',\n  imports: [\n    WatchedWordsListAdminOwnerComponent,\n    RouterLink\n  ]\n})\nexport class MyWatchedWordsListComponent {\n}\n","<em class=\"d-block\" i18n>Comments that contain any of the watched words are automatically tagged with the name of the list.</em>\n<em class=\"d-block mb-3\" i18n>These automatic tags can be used to filter comments or <a routerLink=\"/my-account/auto-tag-policies\">automatically block</a> them.</em>\n\n<my-watched-words-list-admin-owner mode=\"user\"></my-watched-words-list-admin-owner>\n\n","import { Route, Routes, UrlSegment } from '@angular/router'\nimport { userResolver } from '@app/core/routing/user.resolver'\nimport { AbuseService } from '@app/shared/shared-moderation/abuse.service'\nimport { BlocklistService } from '@app/shared/shared-moderation/blocklist.service'\nimport { BulkService } from '@app/shared/shared-moderation/bulk.service'\nimport { VideoBlockService } from '@app/shared/shared-moderation/video-block.service'\nimport { UserSubscriptionService } from '@app/shared/shared-user-subscription/user-subscription.service'\nimport { VideoCommentService } from '@app/shared/shared-video-comment/video-comment.service'\nimport { LiveVideoService } from '@app/shared/shared-video-live/live-video.service'\nimport { VideoPlaylistService } from '@app/shared/shared-video-playlist/video-playlist.service'\nimport { WatchedWordsListService } from '@app/shared/standalone-watched-words/watched-words-list.service'\nimport { LoginGuard } from '../core'\nimport { CommentsOnMyVideosComponent } from './comments-on-my-videos/comments-on-my-videos.component'\nimport { AutomaticTagService } from './my-auto-tag-policies/automatic-tag.service'\nimport { MyAutoTagPoliciesComponent } from './my-auto-tag-policies/my-auto-tag-policies.component'\nimport { MyChannelSpaceComponent } from './my-channel-space.component'\nimport { MyFollowersComponent } from './my-follows/my-followers.component'\nimport { MySubscriptionsComponent } from './my-follows/my-subscriptions.component'\nimport { MyHistoryComponent } from './my-history/my-history.component'\nimport { MyLibraryComponent } from './my-library.component'\nimport { MyOwnershipComponent } from './my-ownership/my-ownership.component'\nimport { MyVideoChannelSyncsComponent } from './my-video-channel-syncs/my-video-channel-syncs.component'\nimport { VideoChannelSyncEditComponent } from './my-video-channel-syncs/video-channel-sync-edit/video-channel-sync-edit.component'\nimport { MyVideoImportsComponent } from './my-video-imports/my-video-imports.component'\nimport { MyVideoPlaylistCreateComponent } from './my-video-playlists/my-video-playlist-create.component'\nimport { MyVideoPlaylistElementsComponent } from './my-video-playlists/my-video-playlist-elements.component'\nimport { MyVideoPlaylistUpdateComponent } from './my-video-playlists/my-video-playlist-update.component'\nimport { MyVideoPlaylistsComponent } from './my-video-playlists/my-video-playlists.component'\nimport { MyVideoSpaceComponent } from './my-video-space.component'\nimport { MyVideosComponent } from './my-videos/my-videos.component'\nimport { MyWatchedWordsListComponent } from './my-watched-words-list/my-watched-words-list.component'\n\nconst commonConfig = {\n  path: '',\n  providers: [\n    VideoPlaylistService,\n    BlocklistService,\n    VideoBlockService,\n    AbuseService,\n    LiveVideoService,\n    UserSubscriptionService,\n    AutomaticTagService,\n    WatchedWordsListService,\n    BulkService,\n    VideoCommentService\n  ],\n  resolve: {\n    user: userResolver\n  },\n  canActivateChild: [ LoginGuard ]\n}\n\nconst videoSpaceRoutes = [\n  {\n    path: 'videos/comments',\n    redirectTo: 'comments-on-my-videos',\n    pathMatch: 'full'\n  },\n\n  {\n    path: 'comments-on-my-videos',\n    component: CommentsOnMyVideosComponent,\n    data: {\n      meta: {\n        title: $localize`Comments on your videos`\n      }\n    }\n  },\n\n  {\n    path: 'watched-words/list',\n    component: MyWatchedWordsListComponent,\n    data: {\n      meta: {\n        title: $localize`Your watched words`\n      }\n    }\n  },\n\n  {\n    path: 'auto-tag-policies',\n    component: MyAutoTagPoliciesComponent,\n    data: {\n      meta: {\n        title: $localize`Your automatic tag policies`\n      }\n    }\n  },\n\n  {\n    path: 'videos',\n    component: MyVideosComponent,\n    data: {\n      meta: {\n        title: $localize`My videos`\n      }\n    }\n  },\n  {\n    path: 'video-imports',\n    component: MyVideoImportsComponent,\n    data: {\n      meta: {\n        title: $localize`My video imports`\n      }\n    }\n  },\n  {\n    path: 'ownership',\n    component: MyOwnershipComponent,\n    data: {\n      meta: {\n        title: $localize`Ownership changes`\n      }\n    }\n  }\n] satisfies Routes\n\nconst channelSpaceRoutes = [\n  {\n    path: '',\n    redirectTo: 'video-channels',\n    pathMatch: 'full'\n  },\n\n  {\n    path: 'video-channels',\n    loadChildren: () => import('./+my-video-channels/routes')\n  },\n\n  {\n    path: 'followers',\n    component: MyFollowersComponent,\n    data: {\n      meta: {\n        title: $localize`My followers`\n      }\n    }\n  },\n\n  {\n    path: 'video-channel-syncs',\n    component: MyVideoChannelSyncsComponent,\n    data: {\n      meta: {\n        title: $localize`My synchronizations`\n      }\n    }\n  },\n\n  {\n    path: 'video-channel-syncs/create',\n    component: VideoChannelSyncEditComponent,\n    data: {\n      meta: {\n        title: $localize`Create new synchronization`\n      }\n    }\n  }\n] satisfies Routes\n\nconst libraryRoutes = [\n  // ---------------------------------------------------------------------------\n  // Playlists\n  // ---------------------------------------------------------------------------\n\n  {\n    path: 'video-playlists',\n    component: MyVideoPlaylistsComponent,\n    data: {\n      meta: {\n        title: $localize`My playlists`\n      }\n    }\n  },\n  {\n    path: 'video-playlists/create',\n    component: MyVideoPlaylistCreateComponent,\n    data: {\n      meta: {\n        title: $localize`Create a new playlist`\n      }\n    }\n  },\n  {\n    path: 'video-playlists/:videoPlaylistId',\n    component: MyVideoPlaylistElementsComponent,\n    data: {\n      meta: {\n        title: $localize`Playlist elements`\n      }\n    }\n  },\n  {\n    path: 'video-playlists/update/:videoPlaylistId',\n    component: MyVideoPlaylistUpdateComponent,\n    data: {\n      meta: {\n        title: $localize`Update playlist`\n      }\n    }\n  },\n\n  // ---------------------------------------------------------------------------\n  // My subscriptions/history\n  // ---------------------------------------------------------------------------\n\n  {\n    path: 'subscriptions',\n    component: MySubscriptionsComponent,\n    data: {\n      meta: {\n        title: $localize`My subscriptions`\n      }\n    }\n  },\n\n  {\n    path: 'history/videos',\n    component: MyHistoryComponent,\n    data: {\n      meta: {\n        title: $localize`My video history`\n      },\n      reuse: {\n        enabled: true,\n        key: 'my-videos-history-list'\n      }\n    }\n  }\n]\n\nfunction isVideoSpaceRoute (segments: UrlSegment[]) {\n  if (segments.length === 0) return false\n\n  const rootPath = segments[0].path\n\n  return videoSpaceRoutes.some(r => r.path === rootPath || r.path.startsWith(`${rootPath}/`))\n}\n\nfunction isChannelSpaceRoute (segments: UrlSegment[]) {\n  if (segments.length === 0) return false\n\n  const rootPath = segments[0].path\n\n  return channelSpaceRoutes.some(r => r.path === rootPath || r.path.startsWith(`${rootPath}/`))\n}\n\nexport default [\n  {\n    ...commonConfig,\n\n    component: MyVideoSpaceComponent,\n    canMatch: [\n      (_route: Route, segments: UrlSegment[]) => {\n        return isVideoSpaceRoute(segments)\n      }\n    ],\n\n    children: videoSpaceRoutes\n  },\n  {\n    ...commonConfig,\n\n    component: MyChannelSpaceComponent,\n    canMatch: [\n      (_route: Route, segments: UrlSegment[]) => {\n        return isChannelSpaceRoute(segments)\n      }\n    ],\n\n    children: channelSpaceRoutes\n  },\n  {\n    ...commonConfig,\n\n    component: MyLibraryComponent,\n    canMatch: [\n      (_route: Route, segments: UrlSegment[]) => {\n        return !isVideoSpaceRoute(segments) && !isChannelSpaceRoute(segments)\n      }\n    ],\n    children: libraryRoutes\n  }\n] satisfies Routes\n"]}