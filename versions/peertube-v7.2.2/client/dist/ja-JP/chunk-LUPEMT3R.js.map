{"version":3,"mappings":"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","names":["ɵɵelement","e","l","m","ɵɵproperty","ctx_r0","avatarUrl","ɵɵsanitizeUrl","FollowerImageComponent","server","inject","ServerService","ngOnInit","Actor","GET_ACTOR_AVATAR_URL","getHTMLConfig","instance","u","selectors","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ae","ɵɵelementEnd","ɵɵtemplate","FollowerImageComponent_img_25_Template","r","ɵɵadvance","dependencies","CommonModule","NgIf","styles","_FollowerImageComponent","Rt","n","SubscriptionImageComponent","SubscriptionImageComponent_img_1_Template","_SubscriptionImageComponent","yt","scope","Ft","ɵɵi18n","ɵɵi18nExp","instanceName","b","Bt","ɵɵtext","$implicit","subscription_r2","url","ɵɵtextInterpolate","name","$t","oe","ɵɵlistener","ɵɵrestoreView","_r3","ɵɵnextContext","ɵɵresetView","loadMoreSubscriptions","xt","k","ɵɵpipeBind1","serverStats","totalVideos","ɵɵpureFunction0","_c0","totalVideoComments","wt","kt","follower_r4","Dt","_r5","loadMoreFollowers","AboutFollowsComponent","restService","RestService","notifier","Notifier","followService","InstanceFollowService","followers","subscriptions","followersPagination","currentPage","itemsPerPage","totalItems","subscriptionsPagination","loadingFollowers","loadingSubscriptions","sort","field","order","getServerStats","subscribe","stats","buildLink","host","window","location","protocol","canLoadMoreFollowers","hasMoreItems","canLoadMoreSubscriptions","reset","pagination","componentToRestPagination","getFollowers","state","next","resultList","newFollowers","data","map","formatFollow","follower","concat","total","error","err","message","complete","getFollowing","newFollowings","following","actor","__spreadProps","__spreadValues","i18n_0","$localize","i","g","i18n_3","N","f","w","ee","AboutFollowsComponent_div_10_Template","AboutFollowsComponent_div_11_Template","AboutFollowsComponent_my_button_13_Template","AboutFollowsComponent_div_14_Template","AboutFollowsComponent_div_24_Template","AboutFollowsComponent_div_25_Template","AboutFollowsComponent_my_button_27_Template","NgFor","ActorAvatarComponent","ButtonComponent","PluginSelectorDirective","GlobalIconComponent","DecimalPipe","RouterLink","_AboutFollowsComponent","AboutPeertubeComponent","viewportScroller","ViewportScroller","lastScrollHash","ngAfterViewChecked","hash","scrollToAnchor","replace","C","ɵɵi18nStart","ɵɵi18nEnd","_AboutPeertubeComponent","FROM_EMAIL_VALIDATOR","VALIDATORS","Validators","required","email","MESSAGES","FROM_NAME_VALIDATOR","minLength","maxLength","minlength","maxlength","SUBJECT_VALIDATOR","BODY_VALIDATOR","ctx_r1","formErrors","fromName","zt","fromEmail","Xt","subject","Ht","body","Wt","jt","_r1","sendForm","AboutContactComponent_Conditional_3_Conditional_0_div_5_Template","AboutContactComponent_Conditional_3_Conditional_0_div_10_Template","AboutContactComponent_Conditional_3_Conditional_0_div_15_Template","AboutContactComponent_Conditional_3_Conditional_0_div_20_Template","AboutContactComponent_Conditional_3_Conditional_0_my_alert_21_Template","form","ɵɵpureFunction1","valid","Vt","success","Yt","AboutContactComponent_Conditional_3_Conditional_0_Template","AboutContactComponent_Conditional_3_Conditional_1_Template","ɵɵconditional","qt","AboutContactComponent","FormReactive","formReactiveService","FormReactiveService","route","ActivatedRoute","instanceService","InstanceService","serverService","serverConfig","buildForm","prefillForm","snapshot","queryParams","isContactFormEnabled","enabled","contactForm","value","contactAdministrator","status","HttpStatusCode","FORBIDDEN_403","prefill","get","setValue","__ngFactoryType__","features","ɵɵInheritDefinitionFeature","AboutContactComponent_Conditional_3_Template","AboutContactComponent_Conditional_4_Template","FormsModule","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","ReactiveFormsModule","FormGroupDirective","FormControlName","NgClass","AlertComponent","_AboutContactComponent","Zt","Qt","ɵɵelementContainerStart","z","Kt","InstanceStatRulesComponent_div_51_ng_container_11_Template","config","serverCountry","aboutHTML","codeOfConduct","Jt","en","tn","averageRegistrationRequestResponseTimeMs","nn","on","InstanceStatRulesComponent_Conditional_58_Conditional_0_Conditional_3_Template","InstanceStatRulesComponent_Conditional_58_Conditional_0_Conditional_4_Template","rn","an","InstanceStatRulesComponent_Conditional_58_Conditional_0_Template","InstanceStatRulesComponent_Conditional_58_Conditional_1_Template","signup","requiresApproval","_n","ln","sn","cn","InstanceStatRulesComponent_Conditional_62_ng_container_10_Template","canPublishLive","dn","mn","pn","un","InstanceStatRulesComponent_Conditional_63_Conditional_5_Template","InstanceStatRulesComponent_Conditional_63_Conditional_6_Template","InstanceStatRulesComponent_Conditional_63_ng_container_10_Template","InstanceStatRulesComponent","auth","AuthService","input","canUpload","user","getUser","videoQuota","videoQuotaDaily","live","inputs","X","J","h","Pe","a","L","I","Me","ve","be","Le","Ie","he","Ue","Re","ye","Fe","InstanceStatRulesComponent_div_51_Template","InstanceStatRulesComponent_Conditional_55_Template","InstanceStatRulesComponent_Conditional_56_Template","InstanceStatRulesComponent_Conditional_58_Template","InstanceStatRulesComponent_Conditional_59_Template","InstanceStatRulesComponent_div_60_Template","InstanceStatRulesComponent_Conditional_62_Template","InstanceStatRulesComponent_Conditional_63_Template","totalModerators","totalAdmins","totalUsers","totalLocalVideos","totalLocalVideoViews","totalLocalVideoComments","ɵɵpipeBind2","totalLocalVideoFilesSize","allowed","allowedForCurrentIP","federation","DaysDurationFormatterPipe","BytesPipe","_InstanceStatRulesComponent","Tn","AboutInstanceComponent","descriptionWrapper","viewChild","menuEntries","instanceData","label","routerLink","administrator","creationReason","maintenanceLifetime","businessModel","push","moderationInformation","viewQuery","Y","q","HorizontalMenuComponent","RouterOutlet","_AboutInstanceComponent","AboutInstanceResolver","customMarkupService","CustomMarkupService","resolve","forkJoin","buildInstanceAboutObservable","getConfig","pipe","about","languages","categories","rootElement","descriptionElement","getAbout","switchMap","Promise","buildTranslatedLanguages","buildTranslatedCategories","buildHtml","buildElement","description","factory","ɵfac","_AboutInstanceResolver","gn","Cn","language_r1","fn","AboutInstanceHomeComponent_div_0_div_3_span_3_Template","An","category_r3","On","AboutInstanceHomeComponent_div_0_div_4_span_3_Template","En","Sn","AboutInstanceHomeComponent_div_0_div_3_Template","AboutInstanceHomeComponent_div_0_div_4_Template","AboutInstanceHomeComponent_div_0_div_5_Template","length","isNSFW","Nn","Mn","terms","ɵɵsanitizeHtml","AboutInstanceHomeComponent","router","Router","supportModal","parent","isSupport","setTimeout","show","hidden","navigateByUrl","AboutInstanceHomeComponent_div_0_Template","AboutInstanceHomeComponent_Conditional_1_Template","AboutInstanceHomeComponent_Conditional_2_Template","support","text","CustomMarkupContainerComponent","SupportModalComponent","_AboutInstanceHomeComponent","Pn","vn","AboutInstanceModerationComponent","AboutInstanceModerationComponent_div_1_Template","AboutInstanceModerationComponent_div_2_Template","_AboutInstanceModerationComponent","bn","Ln","In","hn","AboutInstanceTeamComponent","AboutInstanceTeamComponent_div_0_Template","AboutInstanceTeamComponent_div_1_Template","AboutInstanceTeamComponent_div_2_Template","AboutInstanceTeamComponent_div_3_Template","_AboutInstanceTeamComponent","Un","hardwareInformation","AboutInstanceTechComponent","AboutInstanceTechComponent_div_0_Template","InstanceFeaturesTableComponent","_AboutInstanceTechComponent","aboutInstanceRoutes","path","providers","component","meta","title","children","redirectTo","pathMatch","Rn","yn","bannerUrl","Fn","Bn","social","mastodonLink","$n","blueskyLink","xn","externalLink","wn","kn","AboutComponent","banners","maxBy","undefined","pluginSelectorId","AboutComponent_div_7_Template","AboutComponent_div_9_Template","AboutComponent_a_17_Template","AboutComponent_a_18_Template","AboutComponent_a_19_Template","AboutComponent_my_button_21_Template","AboutComponent_my_button_22_Template","shortDescription","_AboutComponent","routes_default","DynamicElementService","fr","default"],"ignoreList":[],"sources":["src/app/+about/about-follows/follower-image.component.html","src/app/+about/about-follows/follower-image.component.ts","src/app/+about/about-follows/subscription-image.component.html","src/app/+about/about-follows/subscription-image.component.ts","src/app/+about/about-follows/about-follows.component.html","src/app/+about/about-follows/about-follows.component.ts","src/app/+about/about-peertube/about-peertube.component.ts","src/app/+about/about-peertube/about-peertube.component.html","src/app/shared/form-validators/instance-validators.ts","src/app/+about/about-contact/about-contact.component.html","src/app/+about/about-contact/about-contact.component.ts","src/app/+about/about-instance/instance-stat-rules.component.html","src/app/+about/about-instance/instance-stat-rules.component.ts","src/app/+about/about-instance/about-instance.component.ts","src/app/+about/about-instance/about-instance.component.html","src/app/+about/about-instance/about-instance.resolver.ts","src/app/+about/about-instance/children/about-instance-home.component.html","src/app/+about/about-instance/children/about-instance-home.component.ts","src/app/+about/about-instance/children/about-instance-moderation.component.html","src/app/+about/about-instance/children/about-instance-moderation.component.ts","src/app/+about/about-instance/children/about-instance-team.component.html","src/app/+about/about-instance/children/about-instance-team.component.ts","src/app/+about/about-instance/children/about-instance-tech.component.html","src/app/+about/about-instance/children/about-instance-tech.component.ts","src/app/+about/about-instance/about-instance.routes.ts","src/app/+about/about.component.html","src/app/+about/about.component.ts","src/app/+about/routes.ts"],"sourcesContent":["<div class=\"root\" aria-hidden=\"true\">\n  <svg width=\"120\" height=\"120\" viewBox=\"0 0 120 120\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M42.2928 87.2622L10.5359 19.0679L28.4902 11.6038L89.4271 62.8128L42.2928 87.2622Z\"\n      fill=\"url(#paint0_linear_1305_16041)\" />\n    <path d=\"M57.3679 68.7467L87 26L89.4588 26L89.4588 77.6445L57.3679 68.7467Z\"\n      fill=\"url(#paint1_linear_1305_16041)\" />\n    <rect x=\"2.30959\" y=\"14.776\" width=\"37.2961\" height=\"37.2961\" rx=\"9\" transform=\"rotate(-22.8223 2.30959 14.776)\"\n      fill=\"var(--bg-secondary-400)\" stroke=\"var(--secondary-icon-color)\" stroke-width=\"2\" />\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.0393 26.7067L15.8565 16.767L25.4049 18.5988L20.0393 26.7067Z\"\n      fill=\"var(--secondary-icon-color)\" />\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24.2229 36.6467L20.0401 26.7069L29.5885 28.5387L24.2229 36.6467Z\"\n      fill=\"var(--secondary-icon-color)\" />\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M29.5872 28.5378L25.4043 18.598L34.9528 20.4299L29.5872 28.5378Z\"\n      fill=\"var(--secondary-icon-color)\" />\n    <path\n      d=\"M95.2828 29.4743L94.6821 27.4769C94.3634 26.4174 93.637 25.5279 92.6625 25.0041C91.6881 24.4802 90.5454 24.3649 89.4859 24.6835L83.4938 26.4856C82.4343 26.8043 81.5448 27.5307 81.0209 28.5052C80.4971 29.4796 80.3818 30.6223 80.7004 31.6818L81.3011 33.6792\"\n      stroke=\"var(--bg-secondary-500)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path\n      d=\"M85.2882 21.5899C87.4944 20.9264 88.745 18.6 88.0815 16.3937C87.418 14.1875 85.0916 12.9369 82.8854 13.6004C80.6791 14.2639 79.4285 16.5903 80.092 18.7965C80.7555 21.0028 83.0819 22.2534 85.2882 21.5899Z\"\n      stroke=\"var(--bg-secondary-500)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M68.0007 92.0002L22.5001 99.4999L18.0003 99.4996L52.5006 67L68.0007 92.0002Z\"\n      fill=\"url(#paint2_linear_1305_16041)\" />\n    <rect x=\"7.78809\" y=\"86.0605\" width=\"28.6783\" height=\"28.6783\" rx=\"6\" transform=\"rotate(-6.5522 7.78809 86.0605)\"\n      fill=\"var(--secondary-icon-color)\" />\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.5762 98.6849L17.6782 90.8661L23.993 94.1018L18.5762 98.6849Z\"\n      fill=\"var(--bg)\" />\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.4756 106.504L18.5776 98.685L24.8924 101.921L19.4756 106.504Z\"\n      fill=\"var(--bg)\" />\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24.8916 101.92L23.9936 94.1015L30.3084 97.3371L24.8916 101.92Z\"\n      fill=\"var(--bg)\" />\n    <defs>\n      <linearGradient id=\"paint0_linear_1305_16041\" x1=\"10.3339\" y1=\"3.88906\" x2=\"70.4056\" y2=\"83.557\"\n        gradientUnits=\"userSpaceOnUse\">\n        <stop offset=\"0.39\" stop-color=\"var(--bg)\" />\n        <stop offset=\"0.905\" stop-color=\"var(--bg)\" stop-opacity=\"0\" />\n      </linearGradient>\n      <linearGradient id=\"paint1_linear_1305_16041\" x1=\"87.5\" y1=\"22.5\" x2=\"75.6241\" y2=\"83.0273\"\n        gradientUnits=\"userSpaceOnUse\">\n        <stop stop-color=\"var(--bg)\" />\n        <stop offset=\"0.905\" stop-color=\"var(--bg)\" stop-opacity=\"0\" />\n      </linearGradient>\n      <linearGradient id=\"paint2_linear_1305_16041\" x1=\"5.83634\" y1=\"113.619\" x2=\"65.326\" y2=\"61.6047\"\n        gradientUnits=\"userSpaceOnUse\">\n        <stop stop-color=\"var(--bg)\" />\n        <stop offset=\"0.905\" stop-color=\"var(--bg)\" stop-opacity=\"0\" />\n      </linearGradient>\n    </defs>\n  </svg>\n\n  <img *ngIf=\"avatarUrl\" [src]=\"avatarUrl\" alt=\"\">\n</div>\n","import { CommonModule } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { ServerService } from '@app/core'\nimport { Actor } from '@app/shared/shared-main/account/actor.model'\n\n@Component({\n  selector: 'my-follower-image',\n  templateUrl: './follower-image.component.html',\n  styleUrls: [ './follower-image.component.scss' ],\n  standalone: true,\n  imports: [\n    CommonModule\n  ]\n})\nexport class FollowerImageComponent implements OnInit {\n  private server = inject(ServerService)\n\n  avatarUrl: string\n\n  ngOnInit () {\n    this.avatarUrl = Actor.GET_ACTOR_AVATAR_URL(this.server.getHTMLConfig().instance, 30)\n  }\n}\n","<div class=\"root\" aria-hidden=\"true\">\n  <img *ngIf=\"avatarUrl\" [src]=\"avatarUrl\" alt=\"\">\n\n  <svg width=\"125\" height=\"129\" viewBox=\"0 0 125 129\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M43.4996 129L18.9946 27.2709L36.8651 13.7961L124.924 67.6037L43.4996 129Z\"\n      fill=\"url(#paint0_linear_1305_16148)\" />\n    <rect x=\"57.9766\" y=\"33.5923\" width=\"39.9544\" height=\"39.9544\" rx=\"10\"\n      transform=\"rotate(-17.7787 57.9766 33.5923)\" fill=\"var(--bg-secondary-450)\" />\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n      d=\"M76.1448 47.9191L72.7968 37.478L82.3039 40.1868L76.1448 47.9191Z\" fill=\"var(--secondary-icon-color)\" />\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n      d=\"M79.4925 58.3605L76.1445 47.9194L85.6515 50.6282L79.4925 58.3605Z\" fill=\"var(--secondary-icon-color)\" />\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n      d=\"M85.6507 50.6276L82.3027 40.1865L91.8097 42.8953L85.6507 50.6276Z\" fill=\"var(--secondary-icon-color)\" />\n    <g clip-path=\"url(#clip0_1305_16148)\">\n      <path\n        d=\"M39.7866 86.6025L40.6519 83.7089C41.1109 82.1741 40.9414 80.5198 40.1807 79.11C39.4199 77.7002 38.1303 76.6503 36.5955 76.1913L27.915 73.5954C26.3801 73.1364 24.7259 73.3059 23.316 74.0666C21.9062 74.8273 20.8563 76.117 20.3973 77.6518L19.532 80.5453\"\n        stroke=\"var(--bg-secondary-500)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <path\n        d=\"M33.9859 69.1059C37.182 70.0617 40.5478 68.2456 41.5036 65.0495C42.4594 61.8534 40.6433 58.4877 37.4472 57.5319C34.2511 56.5761 30.8853 58.3922 29.9295 61.5883C28.9737 64.7844 30.7899 68.1501 33.9859 69.1059Z\"\n        stroke=\"var(--bg-secondary-500)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    </g>\n    <path\n      d=\"M64.0505 89.509C62.4526 89.3031 60.9752 90.5494 60.7506 92.2926L59.3273 103.34C59.1027 105.083 60.216 106.663 61.814 106.869L80.6204 109.292C82.2183 109.498 83.7001 108.218 83.9203 106.508\"\n      stroke=\"var(--secondary-icon-color)\" stroke-width=\"2\" />\n    <path\n      d=\"M69.7048 83.8923L91.83 86.7428C93.0902 86.9051 94.0965 88.1833 93.8955 89.7441L92.235 102.632C92.0339 104.193 90.7364 105.175 89.4763 105.012L67.3511 102.162C66.0909 101.999 65.0845 100.721 65.2856 99.1604L66.9461 86.2721C67.1472 84.7112 68.4447 83.7299 69.7048 83.8923Z\"\n      stroke=\"var(--secondary-icon-color)\" stroke-width=\"2\" />\n    <path d=\"M77.2559 89.7397L76.2523 97.5294L82.9857 94.4381L77.2559 89.7397Z\" fill=\"var(--secondary-icon-color)\" />\n    <defs>\n      <linearGradient id=\"paint0_linear_1305_16148\" x1=\"27.7121\" y1=\"20.698\" x2=\"75.2879\" y2=\"83.7937\"\n        gradientUnits=\"userSpaceOnUse\">\n        <stop offset=\"0.293252\" stop-color=\"var(--bg)\" />\n        <stop offset=\"1\" stop-color=\"var(--bg)\" stop-opacity=\"0\" />\n      </linearGradient>\n      <clipPath id=\"clip0_1305_16148\">\n        <rect width=\"36.2416\" height=\"36.2416\" fill=\"var(--bg)\"\n          transform=\"translate(21.3838 48) rotate(16.6494)\" />\n      </clipPath>\n    </defs>\n  </svg>\n</div>\n","import { CommonModule } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { ServerService } from '@app/core'\nimport { Actor } from '@app/shared/shared-main/account/actor.model'\n\n@Component({\n  selector: 'my-subscription-image',\n  templateUrl: './subscription-image.component.html',\n  styleUrls: [ './subscription-image.component.scss' ],\n  standalone: true,\n  imports: [ CommonModule ]\n})\nexport class SubscriptionImageComponent implements OnInit {\n  private server = inject(ServerService)\n\n  avatarUrl: string\n\n  ngOnInit () {\n    this.avatarUrl = Actor.GET_ACTOR_AVATAR_URL(this.server.getHTMLConfig().instance, 30)\n  }\n}\n","<div class=\"margin-content mt-5\">\n\n  <div class=\"subscriptions me-3 mb-3\">\n    <div class=\"block-header mb-4 d-flex\">\n      <div class=\"flex-grow-1 me-2\">\n        <h3 i18n>{{ subscriptionsPagination.totalItems }} {subscriptionsPagination.totalItems, plural, =1 {subscription} other {subscriptions}}</h3>\n\n        <div i18n class=\"text-content\">\n          This is content to which we have subscribed. This allows us to display their videos directly on {{ instanceName }}.\n        </div>\n      </div>\n\n      <my-subscription-image></my-subscription-image>\n    </div>\n\n    <div class=\"follows\">\n      <div i18n class=\"no-results\" *ngIf=\"subscriptionsPagination.totalItems === 0\">{{ instanceName }} does not have subscriptions.</div>\n\n      <div *ngFor=\"let subscription of subscriptions\" class=\"follow-block\">\n        <my-actor-avatar [actor]=\"subscription\" actorType=\"instance\" size=\"32\"></my-actor-avatar>\n\n        <div class=\"ellipsis\">\n          <a class=\"follow-name\" [href]=\"subscription.url\" target=\"_blank\" rel=\"noopener noreferrer\">{{ subscription.name }}</a>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"text-center\">\n      <my-button *ngIf=\"canLoadMoreSubscriptions()\" class=\"mt-3 mx-auto\" (click)=\"loadMoreSubscriptions()\" theme=\"secondary\" i18n>Show more subscriptions</my-button>\n    </div>\n\n    <div *ngIf=\"serverStats\" class=\"stats mt-4\">\n      <h4 i18n>Our network in figures</h4>\n\n      <div myPluginSelector pluginSelectorId=\"about-instance-network-statistics\">\n        <div class=\"stat\">\n          <strong>{{ serverStats.totalVideos | number }}</strong>\n          <a routerLink=\"/videos/browse\" [queryParams]=\"{ scope: 'federated' }\" i18n>total videos</a>\n          <my-global-icon iconName=\"videos\"></my-global-icon>\n        </div>\n\n        <div class=\"stat\">\n          <strong>{{ serverStats.totalVideoComments | number }}</strong>\n          <div i18n>total comments</div>\n          <my-global-icon iconName=\"message-circle\"></my-global-icon>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"followers\">\n    <div class=\"block-header mb-4 d-flex\">\n      <div class=\"flex-grow-1 me-2\">\n        <h3 i18n>{{ followersPagination.totalItems }} {followersPagination.totalItems, plural, =1 {follower} other {followers}}</h3>\n\n        <div i18n class=\"text-content\">\n          Our subscribers automatically display videos of {{ instanceName }} on their platforms.\n        </div>\n      </div>\n\n      <my-follower-image></my-follower-image>\n    </div>\n\n    <div class=\"follows\">\n      <div i18n class=\"no-results\" *ngIf=\"followersPagination.totalItems === 0\">{{ instanceName }} does not have followers.</div>\n\n      <div *ngFor=\"let follower of followers\" class=\"follow-block\">\n        <my-actor-avatar [actor]=\"follower\" actorType=\"instance\" size=\"32\"></my-actor-avatar>\n\n        <div class=\"ellipsis\">\n          <a class=\"follow-name\" [href]=\"follower.url\" target=\"_blank\" rel=\"noopener noreferrer\">{{ follower.name }}</a>\n        </div>\n      </div>\n\n      <div class=\"text-center\">\n        <my-button *ngIf=\"canLoadMoreFollowers()\" class=\"mt-3 mx-auto\" (click)=\"loadMoreFollowers()\" theme=\"secondary\" i18n>Show more followers</my-button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { DecimalPipe, NgFor, NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { RouterLink } from '@angular/router'\nimport { ComponentPagination, hasMoreItems, Notifier, RestService, ServerService } from '@app/core'\nimport { ActorAvatarComponent } from '@app/shared/shared-actor-image/actor-avatar.component'\nimport { GlobalIconComponent } from '@app/shared/shared-icons/global-icon.component'\nimport { InstanceFollowService } from '@app/shared/shared-instance/instance-follow.service'\nimport { ButtonComponent } from '@app/shared/shared-main/buttons/button.component'\nimport { PluginSelectorDirective } from '@app/shared/shared-main/plugins/plugin-selector.directive'\nimport { Actor, ServerStats } from '@peertube/peertube-models'\nimport { SortMeta } from 'primeng/api'\nimport { FollowerImageComponent } from './follower-image.component'\nimport { SubscriptionImageComponent } from './subscription-image.component'\n\n@Component({\n  selector: 'my-about-follows',\n  templateUrl: './about-follows.component.html',\n  styleUrls: [ './about-follows.component.scss' ],\n  imports: [\n    NgIf,\n    NgFor,\n    ActorAvatarComponent,\n    ButtonComponent,\n    PluginSelectorDirective,\n    GlobalIconComponent,\n    DecimalPipe,\n    RouterLink,\n    SubscriptionImageComponent,\n    FollowerImageComponent\n  ]\n})\nexport class AboutFollowsComponent implements OnInit {\n  private server = inject(ServerService)\n  private restService = inject(RestService)\n  private notifier = inject(Notifier)\n  private followService = inject(InstanceFollowService)\n\n  instanceName: string\n\n  followers: Actor[] = []\n  subscriptions: Actor[] = []\n\n  followersPagination: ComponentPagination = {\n    currentPage: 1,\n    itemsPerPage: 20,\n    totalItems: 0\n  }\n\n  subscriptionsPagination: ComponentPagination = {\n    currentPage: 1,\n    itemsPerPage: 20,\n    totalItems: 0\n  }\n\n  serverStats: ServerStats\n\n  private loadingFollowers = false\n  private loadingSubscriptions = false\n\n  private sort: SortMeta = {\n    field: 'createdAt',\n    order: -1\n  }\n\n  ngOnInit () {\n    this.loadMoreFollowers(true)\n    this.loadMoreSubscriptions(true)\n\n    this.instanceName = this.server.getHTMLConfig().instance.name\n\n    this.server.getServerStats().subscribe(stats => this.serverStats = stats)\n  }\n\n  buildLink (host: string) {\n    return window.location.protocol + '//' + host\n  }\n\n  canLoadMoreFollowers () {\n    return hasMoreItems(this.followersPagination)\n  }\n\n  canLoadMoreSubscriptions () {\n    return hasMoreItems(this.subscriptionsPagination)\n  }\n\n  loadMoreFollowers (reset = false) {\n    if (this.loadingFollowers) return\n    this.loadingFollowers = true\n\n    if (reset) this.followersPagination.currentPage = 1\n    else this.followersPagination.currentPage++\n\n    const pagination = this.restService.componentToRestPagination(this.followersPagination)\n\n    this.followService.getFollowers({ pagination, sort: this.sort, state: 'accepted' })\n      .subscribe({\n        next: resultList => {\n          if (reset) this.followers = []\n\n          const newFollowers = resultList.data.map(r => this.formatFollow(r.follower))\n          this.followers = this.followers.concat(newFollowers)\n\n          this.followersPagination.totalItems = resultList.total\n        },\n\n        error: err => this.notifier.error(err.message),\n\n        complete: () => this.loadingFollowers = false\n      })\n  }\n\n  loadMoreSubscriptions (reset = false) {\n    if (this.loadingSubscriptions) return\n    this.loadingSubscriptions = true\n\n    if (reset) this.subscriptionsPagination.currentPage = 1\n    else this.subscriptionsPagination.currentPage++\n\n    const pagination = this.restService.componentToRestPagination(this.subscriptionsPagination)\n\n    this.followService.getFollowing({ pagination, sort: this.sort, state: 'accepted' })\n      .subscribe({\n        next: resultList => {\n          if (reset) this.subscriptions = []\n\n          const newFollowings = resultList.data.map(r => this.formatFollow(r.following))\n          this.subscriptions = this.subscriptions.concat(newFollowings)\n\n          this.subscriptionsPagination.totalItems = resultList.total\n        },\n\n        error: err => this.notifier.error(err.message),\n\n        complete: () => this.loadingSubscriptions = false\n      })\n  }\n\n  private formatFollow (actor: Actor) {\n    return {\n      ...actor,\n\n      // Instance follow, only display host\n      name: actor.name === 'peertube'\n        ? actor.host\n        : actor.name + '@' + actor.host\n    }\n  }\n}\n","import { Component, AfterViewChecked, inject } from '@angular/core'\nimport { ViewportScroller } from '@angular/common'\n\n@Component({\n  selector: 'my-about-peertube',\n  templateUrl: './about-peertube.component.html',\n  styleUrls: [ './about-peertube.component.scss' ],\n  standalone: true\n})\nexport class AboutPeertubeComponent implements AfterViewChecked {\n  private viewportScroller = inject(ViewportScroller)\n\n  private lastScrollHash: string\n\n  ngAfterViewChecked () {\n    if (window.location.hash && window.location.hash !== this.lastScrollHash) {\n      this.viewportScroller.scrollToAnchor(window.location.hash.replace('#', ''))\n\n      this.lastScrollHash = window.location.hash\n    }\n  }\n}\n","<div class=\"margin-content mt-5\">\n  <h3 i18n class=\"fs-3 text-center fw-semibold mb-3\">\n    This platform is powered by PeerTube\n  </h3>\n\n  <img class=\"d-block my-4 mx-auto\" width=\"121px\" height=\"147px\" src=\"/client/assets/images/mascot/default.svg\" alt=\"mascot\"/>\n\n  <div class=\"text-center\">\n    <p i18n>\n      PeerTube is a self-hosted ActivityPub-federated video streaming platform using P2P directly in your web browser.\n    </p>\n\n    <p i18n>\n      It is free and open-source software, under <a class=\"link-primary\" href=\"https://github.com/Chocobozzz/PeerTube/blob/develop/LICENSE\">AGPLv3\n      licence</a>.\n    </p>\n\n    <p i18n>\n      For more information, please visit <a class=\"link-primary\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://joinpeertube.org\">joinpeertube.org</a>.\n    </p>\n  </div>\n\n  <div class=\"d-flex flex-wrap justify-content-center my-5\">\n\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"card-title\">\n          <a i18n class=\"link-primary\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.joinpeertube.org/use/setup-account\">Use PeerTube documentation</a>\n        </div>\n\n        <div i18n class=\"card-text\">\n          Discover how to setup your account, what is a channel, how to create a playlist and more!\n        </div>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"card-title\">\n          <a i18n class=\"link-primary\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.joinpeertube.org/use/third-party-application\">PeerTube Applications</a>\n        </div>\n\n        <div i18n class=\"card-text\">\n          Discover unofficial Android applications or browser addons!\n        </div>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"card-title\">\n          <a i18n class=\"link-primary\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.joinpeertube.org/contribute/getting-started\">Contribute on PeerTube</a>\n        </div>\n\n        <div i18n class=\"card-text\">\n          Want to help to improve PeerTube? You can translate the web interface, give your feedback or directly contribute to the code!\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Validators } from '@angular/forms'\nimport { BuildFormValidator } from './form-validator.model'\n\nexport const FROM_EMAIL_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.email ],\n  MESSAGES: {\n    required: $localize`Email is required.`,\n    email: $localize`Email must be valid.`\n  }\n}\n\nexport const FROM_NAME_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [\n    Validators.required,\n    Validators.minLength(1),\n    Validators.maxLength(120)\n  ],\n  MESSAGES: {\n    required: $localize`Your name is required.`,\n    minlength: $localize`Your name must be at least 1 character long.`,\n    maxlength: $localize`Your name cannot be more than 120 characters long.`\n  }\n}\n\nexport const SUBJECT_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [\n    Validators.required,\n    Validators.minLength(1),\n    Validators.maxLength(120)\n  ],\n  MESSAGES: {\n    required: $localize`A subject is required.`,\n    minlength: $localize`The subject must be at least 1 character long.`,\n    maxlength: $localize`The subject cannot be more than 120 characters long.`\n  }\n}\n\nexport const BODY_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [\n    Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(5000)\n  ],\n  MESSAGES: {\n    required: $localize`A message is required.`,\n    minlength: $localize`The message must be at least 3 characters long.`,\n    maxlength: $localize`The message cannot be more than 5000 characters long.`\n  }\n}\n","<div class=\"margin-content mt-4\">\n  <h3 class=\"fs-3 fw-semibold mb-3\" i18n>Contact {{ instanceName }} administrators</h3>\n\n  @if (isContactFormEnabled()) {\n    @if (!success) {\n      <form novalidate [formGroup]=\"form\" (ngSubmit)=\"sendForm()\">\n        <div class=\"form-group\">\n          <label i18n for=\"fromName\">Your name</label>\n          <input\n            type=\"text\" id=\"fromName\" class=\"form-control\"\n            formControlName=\"fromName\" [ngClass]=\"{ 'input-error': formErrors.fromName }\"\n            autocomplete=\"name\"\n          >\n\n          <div *ngIf=\"formErrors.fromName\" class=\"form-error\" role=\"alert\">{{ formErrors.fromName }}</div>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"fromEmail\">Your email</label>\n          <input\n            type=\"text\" id=\"fromEmail\" class=\"form-control\"\n            formControlName=\"fromEmail\" [ngClass]=\"{ 'input-error': formErrors['fromEmail'] }\"\n            i18n-placeholder placeholder=\"Example: john@example.com\" autocomplete=\"email\"\n          >\n\n          <div *ngIf=\"formErrors.fromEmail\" class=\"form-error\" role=\"alert\">{{ formErrors.fromEmail }}</div>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"subject\">Subject</label>\n          <input\n            type=\"text\" id=\"subject\" class=\"form-control\"\n            formControlName=\"subject\" [ngClass]=\"{ 'input-error': formErrors['subject'] }\"\n          >\n\n          <div *ngIf=\"formErrors.subject\" class=\"form-error\" role=\"alert\">{{ formErrors.subject }}</div>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"body\">Your message</label>\n          <textarea id=\"body\" formControlName=\"body\" class=\"form-control\" [ngClass]=\"{ 'input-error': formErrors['body'] }\"></textarea>\n\n          <div *ngIf=\"formErrors.body\" class=\"form-error\" role=\"alert\">{{ formErrors.body }}</div>\n        </div>\n\n        <my-alert *ngIf=\"error\" type=\"danger\">{{ error }}</my-alert>\n\n        <input type=\"submit\" i18n-value value=\"Submit\" class=\"peertube-button primary-button\" [disabled]=\"!form.valid\" />\n      </form>\n    } @else {\n      <my-alert type=\"success\">{{ success }}</my-alert>\n    }\n  } @else {\n    <my-alert type=\"danger\" i18n>The contact form is not enabled on this instance.</my-alert>\n  }\n</div>\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { ActivatedRoute } from '@angular/router'\nimport { ServerService } from '@app/core'\nimport {\n  BODY_VALIDATOR,\n  FROM_EMAIL_VALIDATOR,\n  FROM_NAME_VALIDATOR,\n  SUBJECT_VALIDATOR\n} from '@app/shared/form-validators/instance-validators'\nimport { FormReactive } from '@app/shared/shared-forms/form-reactive'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport { InstanceService } from '@app/shared/shared-main/instance/instance.service'\nimport { HTMLServerConfig, HttpStatusCode } from '@peertube/peertube-models'\n\ntype Prefill = {\n  subject?: string\n  body?: string\n}\n\n@Component({\n  templateUrl: './about-contact.component.html',\n  styleUrls: [ './about-contact.component.scss' ],\n  imports: [ NgIf, FormsModule, ReactiveFormsModule, NgClass, AlertComponent ]\n})\nexport class AboutContactComponent extends FormReactive implements OnInit {\n  protected formReactiveService = inject(FormReactiveService)\n  private route = inject(ActivatedRoute)\n  private instanceService = inject(InstanceService)\n  private serverService = inject(ServerService)\n\n  error: string\n  success: string\n\n  private serverConfig: HTMLServerConfig\n\n  get instanceName () {\n    return this.serverConfig.instance.name\n  }\n\n  ngOnInit () {\n    this.serverConfig = this.serverService.getHTMLConfig()\n\n    this.buildForm({\n      fromName: FROM_NAME_VALIDATOR,\n      fromEmail: FROM_EMAIL_VALIDATOR,\n      subject: SUBJECT_VALIDATOR,\n      body: BODY_VALIDATOR\n    })\n\n    this.prefillForm(this.route.snapshot.queryParams)\n  }\n\n  isContactFormEnabled () {\n    return this.serverConfig.email.enabled && this.serverConfig.contactForm.enabled\n  }\n\n  sendForm () {\n    const fromName = this.form.value['fromName']\n    const fromEmail = this.form.value['fromEmail']\n    const subject = this.form.value['subject']\n    const body = this.form.value['body']\n\n    this.instanceService.contactAdministrator(fromEmail, fromName, subject, body)\n      .subscribe({\n        next: () => {\n          this.success = $localize`Your message has been sent.`\n        },\n\n        error: err => {\n          this.error = err.status === HttpStatusCode.FORBIDDEN_403\n            ? $localize`You already sent this form recently`\n            : err.message\n        }\n      })\n  }\n\n  private prefillForm (prefill: Prefill) {\n    if (prefill.subject) {\n      this.form.get('subject').setValue(prefill.subject)\n    }\n\n    if (prefill.body) {\n      this.form.get('body').setValue(prefill.body)\n    }\n  }\n}\n","<div class=\"root\">\n\n  <div class=\"stats-block\">\n    <h4 i18n>Our platform in figures</h4>\n\n    <div class=\"blocks\" myPluginSelector pluginSelectorId=\"about-instance-statistics\">\n      <div class=\"stat\">\n        <strong>{{ stats().totalModerators + stats().totalAdmins | number }}</strong>\n        <div i18n>moderators</div>\n        <my-global-icon iconName=\"moderation\"></my-global-icon>\n      </div>\n\n      <div class=\"stat\">\n        <strong>{{ stats().totalUsers | number }}</strong>\n        <div i18n>users</div>\n        <my-global-icon iconName=\"user\"></my-global-icon>\n      </div>\n\n      <div class=\"stat\">\n        <strong>{{ stats().totalLocalVideos | number }}</strong>\n        <a routerLink=\"/videos/browse\" [queryParams]=\"{ scope: 'local' }\" i18n>videos</a>\n        <my-global-icon iconName=\"videos\"></my-global-icon>\n      </div>\n\n      <div class=\"stat\">\n        <strong>{{ stats().totalLocalVideoViews | number }}</strong>\n        <div i18n>views</div>\n        <my-global-icon iconName=\"eye-open\"></my-global-icon>\n      </div>\n\n      <div class=\"stat\">\n        <strong>{{ stats().totalLocalVideoComments | number }}</strong>\n        <div i18n>comments</div>\n        <my-global-icon iconName=\"message-circle\"></my-global-icon>\n      </div>\n\n      <div class=\"stat\">\n        <strong>{{ stats().totalLocalVideoFilesSize | bytes:1 }}</strong>\n        <div i18n>hosted videos</div>\n        <my-global-icon iconName=\"film\"></my-global-icon>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"usage-rules-block\">\n    <h4 i18n>Usage rules</h4>\n\n    <div class=\"blocks\">\n\n      <div class=\"usage-rule\" *ngIf=\"config().instance.serverCountry\">\n        <div class=\"icon-container\">\n          <my-global-icon iconName=\"message-circle\"></my-global-icon>\n\n          <div class=\"icon-status\">\n            <div class=\"icon-info\"></div>\n          </div>\n        </div>\n\n        <div>\n          <strong i18n>This platform has been created in {{ config().instance.serverCountry }}</strong>\n          <div class=\"rule-content\">\n            <ng-container i18n>Your content (comments, videos...) must comply with the legislation in force in this country.</ng-container>\n            <ng-container *ngIf=\"aboutHTML().codeOfConduct\" i18n> You must also follow our <a routerLink=\"/about/instance/moderation\">code of conduct</a>.</ng-container>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"usage-rule\">\n        <div class=\"icon-container\">\n          <my-global-icon iconName=\"user\"></my-global-icon>\n\n          @if (config().signup.allowed && config().signup.allowedForCurrentIP) {\n            <div class=\"icon-status\">\n              <my-global-icon iconName=\"tick\"></my-global-icon>\n            </div>\n          } @else {\n            <div class=\"icon-status\">\n              <my-global-icon iconName=\"cross\"></my-global-icon>\n            </div>\n          }\n        </div>\n\n        <div>\n          @if (config().signup.allowed && config().signup.allowedForCurrentIP) {\n            @if (config().signup.requiresApproval) {\n              <strong i18n>You can <a routerLink=\"/signup\">request an account</a> on our platform</strong>\n\n              @if (stats().averageRegistrationRequestResponseTimeMs) {\n                <div class=\"rule-content\" i18n>Our moderator will validate it within a {{ stats().averageRegistrationRequestResponseTimeMs | myDaysDurationFormatter }}.</div>\n              } @else {\n                <div class=\"rule-content\" i18n>Our moderator will validate it within a few days.</div>\n              }\n            } @else {\n              <strong i18n>You can <a routerLink=\"/signup\">create an account</a> on our platform</strong>\n            }\n          } @else {\n            <strong i18n>Public registration on our platform is not allowed</strong>\n          }\n        </div>\n      </div>\n\n      <div class=\"usage-rule\" *ngIf=\"config().federation.enabled\">\n        <div class=\"icon-container\">\n          <my-global-icon iconName=\"fediverse\"></my-global-icon>\n\n          <div class=\"icon-status\">\n            <my-global-icon iconName=\"tick\"></my-global-icon>\n          </div>\n        </div>\n\n        <div>\n          <strong i18n>This platform is compatible with Mastodon, Lemmy, Misskey and other services from the Fediverse</strong>\n\n          <div class=\"rule-content\" i18n>You can use these services to interact with our videos</div>\n        </div>\n      </div>\n\n      <div class=\"usage-rule\">\n        @if (canUpload()) {\n          <div class=\"icon-container\">\n            <my-global-icon iconName=\"upload\"></my-global-icon>\n\n            <div class=\"icon-status\">\n              <my-global-icon iconName=\"tick\"></my-global-icon>\n            </div>\n          </div>\n\n          <div>\n            <strong i18n>You can publish videos</strong>\n\n            <div class=\"rule-content\">\n              <ng-container i18n>By default, your account allows you to publish videos.</ng-container>\n\n              <ng-container *ngIf=\"canPublishLive()\" i18n> You can also stream lives.</ng-container>\n            </div>\n          </div>\n        } @else {\n          <div class=\"icon-container\">\n            <my-global-icon iconName=\"upload\"></my-global-icon>\n\n            <div class=\"icon-status\">\n              <my-global-icon iconName=\"cross\"></my-global-icon>\n            </div>\n          </div>\n\n          <div>\n            @if (isContactFormEnabled()) {\n              <strong i18n>Contact us to publish videos</strong>\n            } @else {\n              <strong i18n>You can't publish videos</strong>\n            }\n\n            <div class=\"rule-content\">\n              <ng-container i18n>By default, your account does not allow to publish videos.</ng-container>\n\n              <ng-container *ngIf=\"isContactFormEnabled()\" i18n> If you want to publish videos, <a routerLink=\"/about/contact\">contact us</a>.</ng-container>\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  </div>\n</div>\n","import { CommonModule, DecimalPipe, NgIf } from '@angular/common'\nimport { Component, inject, input } from '@angular/core'\nimport { RouterLink } from '@angular/router'\nimport { BytesPipe } from '@app/shared/shared-main/common/bytes.pipe'\nimport { DaysDurationFormatterPipe } from '@app/shared/shared-main/date/days-duration-formatter.pipe'\nimport { AboutHTML } from '@app/shared/shared-main/instance/instance.service'\nimport { PluginSelectorDirective } from '@app/shared/shared-main/plugins/plugin-selector.directive'\nimport { ServerConfig, ServerStats } from '@peertube/peertube-models'\nimport { GlobalIconComponent } from '../../shared/shared-icons/global-icon.component'\nimport { AuthService } from '@app/core'\n\n@Component({\n  selector: 'my-instance-stat-rules',\n  templateUrl: './instance-stat-rules.component.html',\n  styleUrls: [ './instance-stat-rules.component.scss' ],\n  imports: [\n    CommonModule,\n    NgIf,\n    GlobalIconComponent,\n    DecimalPipe,\n    DaysDurationFormatterPipe,\n    BytesPipe,\n    PluginSelectorDirective,\n    RouterLink\n  ]\n})\nexport class InstanceStatRulesComponent {\n  private auth = inject(AuthService)\n\n  readonly stats = input.required<ServerStats>()\n  readonly config = input.required<ServerConfig>()\n  readonly aboutHTML = input.required<AboutHTML>()\n\n  canUpload () {\n    const user = this.auth.getUser()\n\n    if (user) {\n      if (user.videoQuota === 0 || user.videoQuotaDaily === 0) return false\n\n      return true\n    }\n\n    const config = this.config()\n    return config.user.videoQuota !== 0 && config.user.videoQuotaDaily !== 0\n  }\n\n  canPublishLive () {\n    return this.config().live.enabled\n  }\n\n  isContactFormEnabled () {\n    const config = this.config()\n    return config.email.enabled && config.contactForm.enabled\n  }\n}\n","import { Component, ElementRef, OnInit, inject, viewChild } from '@angular/core'\nimport { ActivatedRoute, RouterOutlet } from '@angular/router'\nimport { AboutHTML } from '@app/shared/shared-main/instance/instance.service'\nimport { ServerConfig, ServerStats } from '@peertube/peertube-models'\nimport { ResolverData } from './about-instance.resolver'\nimport { InstanceStatRulesComponent } from './instance-stat-rules.component'\nimport { HorizontalMenuComponent, HorizontalMenuEntry } from '@app/shared/shared-main/menu/horizontal-menu.component'\n\n@Component({\n  selector: 'my-about-instance',\n  templateUrl: './about-instance.component.html',\n  styleUrls: [ './about-instance.component.scss' ],\n  imports: [\n    InstanceStatRulesComponent,\n    HorizontalMenuComponent,\n    RouterOutlet\n  ]\n})\nexport class AboutInstanceComponent implements OnInit {\n  private route = inject(ActivatedRoute)\n\n  readonly descriptionWrapper = viewChild<ElementRef<HTMLInputElement>>('descriptionWrapper')\n\n  aboutHTML: AboutHTML\n  serverStats: ServerStats\n  serverConfig: ServerConfig\n  menuEntries: HorizontalMenuEntry[] = []\n\n  ngOnInit () {\n    const {\n      aboutHTML,\n      serverStats,\n      serverConfig\n    }: ResolverData = this.route.snapshot.data.instanceData\n\n    this.serverStats = serverStats\n    this.serverConfig = serverConfig\n\n    this.aboutHTML = aboutHTML\n\n    this.menuEntries = [\n      {\n        label: $localize`General`,\n        routerLink: '/about/instance/home'\n      }\n    ]\n\n    if (aboutHTML.administrator || aboutHTML.creationReason || aboutHTML.maintenanceLifetime || aboutHTML.businessModel) {\n      this.menuEntries.push({\n        label: $localize`Team`,\n        routerLink: '/about/instance/team'\n      })\n    }\n\n    if (aboutHTML.moderationInformation || aboutHTML.codeOfConduct) {\n      this.menuEntries.push({\n        label: $localize`Moderation and code of conduct`,\n        routerLink: '/about/instance/moderation'\n      })\n    }\n\n    // Always displayed, we have the \"features found on this instance\" table on this page\n    this.menuEntries.push({\n      label: $localize`Technical information`,\n      routerLink: '/about/instance/tech'\n    })\n  }\n}\n","<div class=\"margin-content\">\n  <my-horizontal-menu [menuEntries]=\"menuEntries\" areChildren=\"true\"></my-horizontal-menu>\n\n  <div class=\"content\">\n    <div>\n      <router-outlet></router-outlet>\n    </div>\n\n    <my-instance-stat-rules [stats]=\"serverStats\" [config]=\"serverConfig\" [aboutHTML]=\"aboutHTML\"></my-instance-stat-rules>\n  </div>\n</div>\n\n","import { forkJoin, Observable } from 'rxjs'\nimport { map, switchMap } from 'rxjs/operators'\nimport { Injectable, inject } from '@angular/core'\nimport { ServerService } from '@app/core'\nimport { About, ServerConfig, ServerStats } from '@peertube/peertube-models'\nimport { AboutHTML, InstanceService } from '@app/shared/shared-main/instance/instance.service'\nimport { CustomMarkupService } from '@app/shared/shared-custom-markup/custom-markup.service'\n\nexport type ResolverData = {\n  serverConfig: ServerConfig\n  serverStats: ServerStats\n  about: About\n  languages: string[]\n  categories: string[]\n  aboutHTML: AboutHTML\n  descriptionElement: HTMLDivElement\n}\n\n@Injectable()\nexport class AboutInstanceResolver {\n  private instanceService = inject(InstanceService)\n  private customMarkupService = inject(CustomMarkupService)\n  private serverService = inject(ServerService)\n\n  resolve (): Observable<ResolverData> {\n    return forkJoin([\n      this.buildInstanceAboutObservable(),\n      this.serverService.getServerStats(),\n      this.serverService.getConfig()\n    ]).pipe(\n      map(([\n        [ about, languages, categories, aboutHTML, { rootElement } ],\n        serverStats,\n        serverConfig\n      ]) => {\n        return {\n          serverStats,\n          serverConfig,\n          about,\n          languages,\n          categories,\n          aboutHTML,\n          descriptionElement: rootElement\n        }\n      })\n    )\n  }\n\n  private buildInstanceAboutObservable () {\n    return this.instanceService.getAbout()\n      .pipe(\n        switchMap(about => {\n          return forkJoin([\n            Promise.resolve(about),\n            this.instanceService.buildTranslatedLanguages(about),\n            this.instanceService.buildTranslatedCategories(about),\n            this.instanceService.buildHtml(about),\n            this.customMarkupService.buildElement(about.instance.description)\n          ])\n        })\n      )\n  }\n}\n","<div class=\"block specifics\" *ngIf=\"categories.length !== 0 || languages.length !== 0 || config.instance.isNSFW\">\n  <h4 i18n>Specifics</h4>\n\n  <div *ngIf=\"languages.length !== 0\" class=\"d-inline-block me-2\">\n    <span class=\"text-content top-2px\" i18n>Language: </span>\n    <span *ngFor=\"let language of languages\" class=\"pt-badge badge-primary me-1\">{{ language }}</span>\n  </div>\n\n  <div *ngIf=\"categories.length !== 0\" class=\"d-inline-block mt-2\">\n    <span class=\"text-content top-2px\" i18n>Categories: </span>\n    <span *ngFor=\"let category of categories\" class=\"pt-badge badge-secondary me-1\">{{ category }}</span>\n  </div>\n\n  <div i18n *ngIf=\"config.instance.isNSFW\" class=\"fw-bold text-content mt-3\">{{ config.instance.name }} is dedicated to sensitive content.</div>\n</div>\n\n@if (descriptionElement) {\n<div class=\"block description\">\n  <h4 i18n>Description</h4>\n\n  <my-custom-markup-container class=\"text-content\" [content]=\"descriptionElement\"></my-custom-markup-container>\n</div>\n}\n\n@if (aboutHTML.terms) {\n  <div class=\"block terms\">\n    <h4 i18n class=\"section-title\">Terms</h4>\n\n    <div class=\"text-content\" [innerHTML]=\"aboutHTML.terms\"></div>\n  </div>\n}\n\n<my-support-modal #supportModal [name]=\"config.instance.name\" [content]=\"config.instance.support.text\"></my-support-modal>\n","import { NgFor, NgIf } from '@angular/common'\nimport { Component, OnInit, inject, viewChild } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { ServerService } from '@app/core'\nimport { AboutHTML } from '@app/shared/shared-main/instance/instance.service'\nimport { SupportModalComponent } from '@app/shared/shared-support-modal/support-modal.component'\nimport { HTMLServerConfig } from '@peertube/peertube-models'\nimport { CustomMarkupContainerComponent } from '../../../shared/shared-custom-markup/custom-markup-container.component'\nimport { ResolverData } from '../about-instance.resolver'\n\n@Component({\n  templateUrl: './about-instance-home.component.html',\n  styleUrls: [ './about-instance-common.component.scss' ],\n  imports: [\n    NgIf,\n    NgFor,\n    CustomMarkupContainerComponent,\n    SupportModalComponent\n  ]\n})\nexport class AboutInstanceHomeComponent implements OnInit {\n  private router = inject(Router)\n  private route = inject(ActivatedRoute)\n  private serverService = inject(ServerService)\n\n  readonly supportModal = viewChild<SupportModalComponent>('supportModal')\n\n  aboutHTML: AboutHTML\n  descriptionElement: HTMLDivElement\n\n  languages: string[] = []\n  categories: string[] = []\n\n  config: HTMLServerConfig\n\n  ngOnInit () {\n    this.config = this.serverService.getHTMLConfig()\n\n    const {\n      languages,\n      categories,\n      aboutHTML,\n      descriptionElement\n    }: ResolverData = this.route.parent.snapshot.data.instanceData\n\n    this.aboutHTML = aboutHTML\n    this.descriptionElement = descriptionElement\n\n    this.languages = languages\n    this.categories = categories\n\n    this.route.data.subscribe(data => {\n      if (!data?.isSupport) return\n\n      setTimeout(() => {\n        const modal = this.supportModal().show()\n\n        modal.hidden.subscribe(() => this.router.navigateByUrl('/about/instance/home'))\n      }, 0)\n    })\n  }\n}\n","<div myPluginSelector pluginSelectorId=\"about-instance-moderation\">\n\n  <div class=\"block moderation-information\" *ngIf=\"aboutHTML.moderationInformation\">\n    <h4 i18n class=\"section-title\">Moderation information</h4>\n    <div [innerHTML]=\"aboutHTML.moderationInformation\"></div>\n  </div>\n\n  <div class=\"block code-of-conduct\" *ngIf=\"aboutHTML.codeOfConduct\">\n    <h4 i18n class=\"section-title\">Code of conduct</h4>\n    <div [innerHTML]=\"aboutHTML.codeOfConduct\"></div>\n  </div>\n\n</div>\n","import { CommonModule } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { ServerService } from '@app/core'\nimport { AboutHTML } from '@app/shared/shared-main/instance/instance.service'\nimport { ResolverData } from '../about-instance.resolver'\nimport { PluginSelectorDirective } from '@app/shared/shared-main/plugins/plugin-selector.directive'\n\n@Component({\n  templateUrl: './about-instance-moderation.component.html',\n  styleUrls: [ './about-instance-common.component.scss' ],\n  imports: [ CommonModule, PluginSelectorDirective ]\n})\nexport class AboutInstanceModerationComponent implements OnInit {\n  private route = inject(ActivatedRoute)\n  private serverService = inject(ServerService)\n\n  aboutHTML: AboutHTML\n\n  get instanceName () {\n    return this.serverService.getHTMLConfig().instance.name\n  }\n\n  ngOnInit () {\n    const { aboutHTML }: ResolverData = this.route.parent.snapshot.data.instanceData\n\n    this.aboutHTML = aboutHTML\n  }\n}\n","<div class=\"block administrator\" *ngIf=\"aboutHTML.administrator\">\n  <h4 i18n>Who we are</h4>\n  <div class=\"text-content\" [innerHTML]=\"aboutHTML.administrator\"></div>\n</div>\n\n<div class=\"block creation-reason\" *ngIf=\"aboutHTML.creationReason\">\n  <h4 i18n>Why we created {{ instanceName }}</h4>\n  <div class=\"text-content\" [innerHTML]=\"aboutHTML.creationReason\"></div>\n</div>\n\n<div class=\"block maintenance-lifetime\" *ngIf=\"aboutHTML.maintenanceLifetime\">\n  <h4 i18n>How long we plan to maintain {{ instanceName }}</h4>\n  <div [innerHTML]=\"aboutHTML.maintenanceLifetime\"></div>\n</div>\n\n<div class=\"block business-model\" *ngIf=\"aboutHTML.businessModel\">\n  <h4 i18n>How we will pay for keeping {{ instanceName }} running</h4>\n  <div class=\"text-content\" [innerHTML]=\"aboutHTML.businessModel\"></div>\n</div>\n","import { CommonModule } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { ServerService } from '@app/core'\nimport { AboutHTML } from '@app/shared/shared-main/instance/instance.service'\nimport { ResolverData } from '../about-instance.resolver'\n\n@Component({\n  templateUrl: './about-instance-team.component.html',\n  styleUrls: [ './about-instance-common.component.scss' ],\n  imports: [ CommonModule ]\n})\nexport class AboutInstanceTeamComponent implements OnInit {\n  private route = inject(ActivatedRoute)\n  private serverService = inject(ServerService)\n\n  aboutHTML: AboutHTML\n\n  get instanceName () {\n    return this.serverService.getHTMLConfig().instance.name\n  }\n\n  ngOnInit () {\n    const { aboutHTML }: ResolverData = this.route.parent.snapshot.data.instanceData\n\n    this.aboutHTML = aboutHTML\n  }\n}\n","<div *ngIf=\"aboutHTML.hardwareInformation\" myPluginSelector pluginSelectorId=\"about-instance-other-information\">\n  <h4 i18n class=\"section-title\">Hardware information</h4>\n  <div [innerHTML]=\"aboutHTML.hardwareInformation\"></div>\n</div>\n\n<div myPluginSelector pluginSelectorId=\"about-instance-features\">\n  <h4 class=\"visually-hidden\" i18n>FEATURES</h4>\n  <my-instance-features-table></my-instance-features-table>\n</div>\n\n","import { CommonModule } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { ServerService } from '@app/core'\nimport { AboutHTML } from '@app/shared/shared-main/instance/instance.service'\nimport { PluginSelectorDirective } from '@app/shared/shared-main/plugins/plugin-selector.directive'\nimport { ResolverData } from '../about-instance.resolver'\nimport { InstanceFeaturesTableComponent } from '@app/shared/shared-instance/instance-features-table.component'\n\n@Component({\n  templateUrl: './about-instance-tech.component.html',\n  styleUrls: [ './about-instance-common.component.scss' ],\n  imports: [ CommonModule, PluginSelectorDirective, InstanceFeaturesTableComponent ]\n})\nexport class AboutInstanceTechComponent implements OnInit {\n  private route = inject(ActivatedRoute)\n  private serverService = inject(ServerService)\n\n  aboutHTML: AboutHTML\n\n  get instanceName () {\n    return this.serverService.getHTMLConfig().instance.name\n  }\n\n  ngOnInit () {\n    const { aboutHTML }: ResolverData = this.route.parent.snapshot.data.instanceData\n\n    this.aboutHTML = aboutHTML\n  }\n}\n","import { Routes } from '@angular/router'\nimport { AboutInstanceComponent } from './about-instance.component'\nimport { AboutInstanceResolver } from './about-instance.resolver'\nimport { AboutInstanceHomeComponent } from './children/about-instance-home.component'\nimport { AboutInstanceModerationComponent } from './children/about-instance-moderation.component'\nimport { AboutInstanceTeamComponent } from './children/about-instance-team.component'\nimport { AboutInstanceTechComponent } from './children/about-instance-tech.component'\n\nexport const aboutInstanceRoutes: Routes = [\n  {\n    path: 'instance',\n    providers: [ AboutInstanceResolver ],\n    component: AboutInstanceComponent,\n    data: {\n      meta: {\n        title: $localize`About this platform`\n      }\n    },\n    resolve: {\n      instanceData: AboutInstanceResolver\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full'\n      },\n      {\n        path: 'home',\n        component: AboutInstanceHomeComponent\n      },\n      {\n        path: 'support',\n        component: AboutInstanceHomeComponent,\n        data: {\n          isSupport: true\n        }\n      },\n      {\n        path: 'team',\n        component: AboutInstanceTeamComponent\n      },\n      {\n        path: 'tech',\n        component: AboutInstanceTechComponent\n      },\n      {\n        path: 'moderation',\n        component: AboutInstanceModerationComponent\n      }\n    ]\n  }\n]\n","<div>\n  <div class=\"margin-content\">\n    <h1>\n      <my-global-icon iconName=\"help\"></my-global-icon>\n\n      <ng-container i18n>About</ng-container>\n    </h1>\n\n    <div class=\"instance-info-container\">\n      <div class=\"banner\" *ngIf=\"bannerUrl\">\n        <img [src]=\"bannerUrl\" alt=\"\">\n      </div>\n\n      <div class=\"instance-info\">\n        <div class=\"avatar\" *ngIf=\"avatarUrl\">\n          <img [src]=\"avatarUrl\" alt=\"\">\n        </div>\n\n        <div>\n          <div class=\"instance-name\">{{ config.instance.name }}</div>\n          <div class=\"instance-description\">{{ config.instance.shortDescription }}</div>\n        </div>\n\n        <div class=\"ms-auto\">\n          <div class=\"social-buttons d-flex flex-wrap justify-content-end\">\n            <a\n              *ngIf=\"config.instance.social.mastodonLink\"\n              class=\"media peertube-button-link rounded-icon-button mb-3\" i18n-title title=\"Go to the Mastodon profile\"\n              target=\"_blank\" rel=\"noopener noreferrer\" [href]=\"config.instance.social.mastodonLink\"\n              >\n              <my-global-icon iconName=\"mastodon\"></my-global-icon>\n            </a>\n\n            <a\n            *ngIf=\"config.instance.social.blueskyLink\"\n            class=\"media peertube-button-link rounded-icon-button mb-3\" i18n-title title=\"Go to the Bluesky profile\"\n            target=\"_blank\" rel=\"noopener noreferrer\" [href]=\"config.instance.social.blueskyLink\"\n            >\n            <my-global-icon iconName=\"bluesky\"></my-global-icon>\n          </a>\n\n            <a\n              *ngIf=\"config.instance.social.externalLink\"\n              class=\"external-link peertube-button-link rounded-icon-button mb-3\" i18n-title title=\"Go to the external website\"\n              target=\"_blank\" rel=\"noopener noreferrer\" [href]=\"config.instance.social.externalLink\"\n            >\n              <my-global-icon iconName=\"link\"></my-global-icon>\n            </a>\n          </div>\n\n          <div class=\"d-flex flex-wrap justify-content-end\">\n            <my-button *ngIf=\"isContactFormEnabled()\" class=\"ms-3\" theme=\"primary\" ptRouterLink=\"/about/contact\" i18n>Contact us</my-button>\n\n            <my-button *ngIf=\"config.instance.support.text\" class=\"ms-3\" theme=\"secondary\" ptRouterLink=\"/about/instance/support\" i18n>Support</my-button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <my-horizontal-menu [menuEntries]=\"menuEntries\" withMarginBottom=\"false\"></my-horizontal-menu>\n  </div>\n\n  <router-outlet></router-outlet>\n</div>\n\n","import { CommonModule } from '@angular/common'\nimport { Component, OnInit, inject, viewChild } from '@angular/core'\nimport { RouterOutlet } from '@angular/router'\nimport { ServerService } from '@app/core'\nimport { GlobalIconComponent } from '@app/shared/shared-icons/global-icon.component'\nimport { Actor } from '@app/shared/shared-main/account/actor.model'\nimport { ButtonComponent } from '@app/shared/shared-main/buttons/button.component'\nimport { HorizontalMenuComponent, HorizontalMenuEntry } from '@app/shared/shared-main/menu/horizontal-menu.component'\nimport { SupportModalComponent } from '@app/shared/shared-support-modal/support-modal.component'\nimport { maxBy } from '@peertube/peertube-core-utils'\nimport { HTMLServerConfig } from '@peertube/peertube-models'\n\n@Component({\n  selector: 'my-about',\n  templateUrl: './about.component.html',\n  styleUrls: [ './about.component.scss' ],\n  imports: [ CommonModule, RouterOutlet, HorizontalMenuComponent, GlobalIconComponent, ButtonComponent ]\n})\nexport class AboutComponent implements OnInit {\n  private server = inject(ServerService)\n\n  readonly supportModal = viewChild<SupportModalComponent>('supportModal')\n\n  bannerUrl: string\n  avatarUrl: string\n\n  menuEntries: HorizontalMenuEntry[] = []\n\n  config: HTMLServerConfig\n\n  ngOnInit () {\n    this.config = this.server.getHTMLConfig()\n\n    this.bannerUrl = this.config.instance.banners.length !== 0\n      ? maxBy(this.config.instance.banners, 'width').path\n      : undefined\n\n    this.avatarUrl = Actor.GET_ACTOR_AVATAR_URL(this.config.instance, 110)\n\n    this.menuEntries = [\n      {\n        label: $localize`Platform`,\n        routerLink: '/about/instance',\n        pluginSelectorId: 'about-menu-instance'\n      },\n      {\n        label: $localize`PeerTube`,\n        routerLink: '/about/peertube',\n        pluginSelectorId: 'about-menu-peertube'\n      },\n      {\n        label: $localize`Network`,\n        routerLink: '/about/follows',\n        pluginSelectorId: 'about-menu-network'\n      }\n    ]\n  }\n\n  isContactFormEnabled () {\n    return this.config.email.enabled && this.config.contactForm.enabled\n  }\n}\n","import { Routes } from '@angular/router'\nimport { AboutFollowsComponent } from '@app/+about/about-follows/about-follows.component'\nimport { AboutPeertubeComponent } from '@app/+about/about-peertube/about-peertube.component'\nimport { CustomMarkupService } from '@app/shared/shared-custom-markup/custom-markup.service'\nimport { DynamicElementService } from '@app/shared/shared-custom-markup/dynamic-element.service'\nimport { InstanceFollowService } from '@app/shared/shared-instance/instance-follow.service'\nimport { AboutContactComponent } from './about-contact/about-contact.component'\nimport { aboutInstanceRoutes } from './about-instance/about-instance.routes'\nimport { AboutComponent } from './about.component'\n\nexport default [\n  {\n    path: '',\n    component: AboutComponent,\n    providers: [\n      InstanceFollowService,\n      CustomMarkupService,\n      DynamicElementService\n    ],\n    children: [\n      {\n        path: '',\n        redirectTo: 'instance',\n        pathMatch: 'full'\n      },\n\n      ...aboutInstanceRoutes,\n\n      {\n        path: 'peertube',\n        component: AboutPeertubeComponent,\n        data: {\n          meta: {\n            title: $localize`About PeerTube`\n          }\n        }\n      },\n\n      {\n        path: 'follows',\n        component: AboutFollowsComponent,\n        data: {\n          meta: {\n            title: $localize`About this platform's network`\n          }\n        }\n      },\n\n      {\n        path: 'contact',\n        component: AboutContactComponent,\n        data: {\n          meta: {\n            title: $localize`Contact`\n          }\n        }\n      }\n    ]\n  }\n] satisfies Routes\n"]}