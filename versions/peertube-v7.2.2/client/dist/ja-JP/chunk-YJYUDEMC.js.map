{"version":3,"mappings":"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","names":["ɵɵelementStart","ɵɵtext","ɵɵelementEnd","i","r","u","ɵɵproperty","ctx_r0","ownerRouterLink","ownerHref","ownerTarget","ɵɵadvance","ɵɵtextInterpolate1","playlist","videoChannelBy","z","o","ɵɵtextInterpolate","privacy","label","$","ɵɵelement","playlistDescription","ɵɵsanitizeHtml","VideoPlaylistMiniatureComponent","markdownService","inject","MarkdownService","input","undefined","toManage","displayChannel","displayDescription","displayPrivacy","displayAsRow","linkType","playlistRouterLink","playlistHref","playlistTarget","ngOnInit","__async","buildPlaylistUrl","buildOwnerUrl","textMarkdownToHTML","markdown","description","shortUUID","videosLength","url","VideoPlaylist","buildWatchUrl","videoChannel","g","selectors","inputs","decls","vars","consts","i18n_0","$localize","t","e","template","n","ɵɵelementContainerStart","ɵɵi18n","k","ɵɵtemplate","VideoPlaylistMiniatureComponent_my_link_11_Template","VideoPlaylistMiniatureComponent_span_13_Template","A","VideoPlaylistMiniatureComponent_div_17_Template","ɵɵpureFunction3","_c0","ctx","w","displayName","thumbnailUrl","v","ɵɵi18nExp","P","ɵɵpipeBind1","updatedAt","dependencies","NgClass","LinkComponent","NgIf","FromNowPipe","styles","_VideoPlaylistMiniatureComponent","K","a"],"ignoreList":[],"sources":["src/app/shared/shared-video-playlist/video-playlist-miniature.component.html","src/app/shared/shared-video-playlist/video-playlist-miniature.component.ts"],"sourcesContent":["<div class=\"miniature\" [ngClass]=\"{ 'no-videos': playlist().videosLength === 0, 'to-manage': toManage(), 'display-as-row': displayAsRow() }\">\n  <my-link\n    [internalLink]=\"playlistRouterLink\" [href]=\"playlistHref\" [target]=\"playlistTarget\" inheritParentStyle=\"true\" inheritParentDimension=\"true\"\n    [title]=\"playlist().description\" class=\"miniature-thumbnail\" tabindex=\"-1\"\n  >\n    <img alt=\"\" [attr.aria-labelledby]=\"playlist().displayName\" [attr.src]=\"playlist().thumbnailUrl\" />\n\n    <div class=\"miniature-playlist-info-overlay\">\n      <ng-container i18n>{playlist().videosLength, plural, =0 {No videos} =1 {1 video} other {{{ playlist().videosLength }} videos}}</ng-container>\n    </div>\n\n    <div class=\"play-overlay\">\n      <div class=\"icon\"></div>\n    </div>\n  </my-link>\n\n  <div class=\"miniature-info\">\n    <my-link\n      [internalLink]=\"playlistRouterLink\" [href]=\"playlistHref\" [target]=\"playlistTarget\" inheritParentStyle=\"true\" inheritParentDimension=\"true\"\n      [title]=\"playlist().description\" class=\"miniature-name\" className=\"ellipsis-multiline-2\"\n    >\n      {{ playlist().displayName }}\n    </my-link>\n\n    <my-link\n      *ngIf=\"displayChannel() && playlist().videoChannelBy\"\n      class=\"by\"\n      [internalLink]=\"ownerRouterLink\" [href]=\"ownerHref\" [target]=\"ownerTarget\" inheritParentStyle=\"true\"\n    >\n      {{ playlist().videoChannelBy }}\n    </my-link>\n\n    <div class=\"privacy-date\">\n      <span class=\"privacy\" *ngIf=\"displayPrivacy()\">{{ playlist().privacy.label }}</span>\n\n      <span i18n class=\"updated-at\">Updated {{ playlist().updatedAt | myFromNow }}</span>\n    </div>\n\n    <div *ngIf=\"displayDescription()\" class=\"description\" [innerHTML]=\"playlistDescription\"></div>\n  </div>\n</div>\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnInit, inject, input } from '@angular/core'\nimport { MarkdownService } from '@app/core'\nimport { LinkType } from 'src/types/link.type'\nimport { LinkComponent } from '../shared-main/common/link.component'\nimport { FromNowPipe } from '../shared-main/date/from-now.pipe'\nimport { VideoPlaylist } from './video-playlist.model'\n\n@Component({\n  selector: 'my-video-playlist-miniature',\n  styleUrls: [ './video-playlist-miniature.component.scss' ],\n  templateUrl: './video-playlist-miniature.component.html',\n  imports: [ NgClass, LinkComponent, NgIf, FromNowPipe ]\n})\nexport class VideoPlaylistMiniatureComponent implements OnInit {\n  private markdownService = inject(MarkdownService)\n\n  readonly playlist = input<VideoPlaylist>(undefined)\n\n  readonly toManage = input(false)\n\n  readonly displayChannel = input(false)\n  readonly displayDescription = input(false)\n  readonly displayPrivacy = input(false)\n  readonly displayAsRow = input(false)\n\n  readonly linkType = input<LinkType>('internal')\n\n  ownerRouterLink: any\n  ownerHref: string\n  ownerTarget: string\n\n  playlistRouterLink: any\n  playlistHref: string\n  playlistTarget: string\n\n  playlistDescription: string\n\n  async ngOnInit () {\n    this.buildPlaylistUrl()\n    this.buildOwnerUrl()\n\n    if (this.displayDescription()) {\n      this.playlistDescription = await this.markdownService.textMarkdownToHTML({ markdown: this.playlist().description })\n    }\n  }\n\n  buildPlaylistUrl () {\n    if (this.toManage()) {\n      this.playlistRouterLink = [ '/my-library/video-playlists', this.playlist().shortUUID ]\n      return\n    }\n\n    const playlist = this.playlist()\n    if (playlist.videosLength === 0) {\n      this.playlistRouterLink = null\n      return\n    }\n\n    const linkType = this.linkType()\n    if (linkType === 'internal' || !playlist.url) {\n      this.playlistRouterLink = VideoPlaylist.buildWatchUrl(playlist)\n      return\n    }\n\n    if (linkType === 'external') {\n      this.playlistRouterLink = null\n      this.playlistHref = playlist.url\n      this.playlistTarget = '_blank'\n      return\n    }\n\n    // Lazy load\n    this.playlistRouterLink = [ '/search/lazy-load-playlist', { url: playlist.url } ]\n  }\n\n  buildOwnerUrl () {\n    const playlist = this.playlist()\n    const linkType = this.linkType()\n\n    if (!playlist.videoChannel) return\n\n    if (linkType === 'internal' || !playlist.videoChannel.url) {\n      this.ownerRouterLink = `/c/${playlist.videoChannelBy}`\n      return\n    }\n\n    if (linkType === 'external') {\n      this.ownerRouterLink = null\n      this.ownerHref = playlist.videoChannel.url\n      this.ownerTarget = '_blank'\n      return\n    }\n\n    // Lazy load\n    this.ownerRouterLink = [ '/search/lazy-load-channel', { url: playlist.videoChannel.url } ]\n    return\n  }\n}\n"]}