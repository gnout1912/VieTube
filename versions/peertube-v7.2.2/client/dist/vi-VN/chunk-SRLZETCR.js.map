{"version":3,"mappings":"yNAYA,GAAaA,IAAkB,KAAzB,GAAOA,GAAP,KAAOA,EAAkB,CACrBC,OAASC,EAAOC,CAAa,EAE5BC,MAAQC,4BAAsB,EAC9BC,KAAOD,EAAM,GAAO,CAAEE,UAAWC,CAAgB,CAAE,EAEnDC,UAAYJ,EAAcK,MAAS,EAE5CC,sBAAoB,CAClB,MAAOC,GAAeC,oBAAoBC,EAAYC,OAAQ,KAAKd,OAAOe,cAAa,CAAE,CAC3F,IAAAC,CAAA,CAVWjB,4CAAkB,IAAAiB,CAAA,CAAlBjB,wBAAkBkB,UAAA,oBAAAC,OAAA,CAAAf,MAAA,YAAAE,KAAA,WAAAG,UAAA,iBAAAW,MAAA,EAAAC,KAAA,EAAAC,WAAA,IAAAC,0DCXXC,6GADpBC,EAAA,eAOEC,EAAA,GACFC,EAAA,GAAAC,CAAA,KALwBC,EAAA,OAAAC,EAAAnB,qBAAA,GAA+B,YAAAmB,EAAArB,UAAA,GAC5B,OAAAqB,EAAAxB,KAAA,YAAAI,MAAA,EAGzBqB,EAAA,EAAAC,EAAA,IAAAF,EAAA1B,MAAA;CAAA,KAAA6B,YAAA,EDGWC,CAAa,EAAAC,OAAA;8DAAA,KAEpB,GAAOnC,GAAPoC,QAAOpC,EAAkB,aAAAqC,CAAA,IAAAC,CAAA","names":["LoginLinkComponent","server","inject","ServerService","label","input","icon","transform","booleanAttribute","className","undefined","getExternalLoginHref","PluginsManager","getDefaultLoginHref","environment","apiUrl","getHTMLConfig","r","selectors","inputs","decls","vars","consts","i18n_0","$localize","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","n","ɵɵproperty","ctx","ɵɵadvance","ɵɵtextInterpolate1","dependencies","LinkComponent","styles","_LoginLinkComponent","y","a"],"ignoreList":[],"sources":["src/app/shared/shared-main/users/login-link.component.ts","src/app/shared/shared-main/users/login-link.component.html"],"sourcesContent":["import { booleanAttribute, Component, inject, input } from '@angular/core'\nimport { ServerService } from '@app/core'\nimport { PluginsManager } from '@root-helpers/plugins-manager'\nimport { environment } from 'src/environments/environment'\nimport { LinkComponent } from '../common/link.component'\n\n@Component({\n  selector: 'my-login-link',\n  templateUrl: './login-link.component.html',\n  styleUrls: [ './login-link.component.scss' ],\n  imports: [ LinkComponent ]\n})\nexport class LoginLinkComponent {\n  private server = inject(ServerService)\n\n  readonly label = input($localize`Login`)\n  readonly icon = input(false, { transform: booleanAttribute })\n\n  readonly className = input<string>(undefined)\n\n  getExternalLoginHref () {\n    return PluginsManager.getDefaultLoginHref(environment.apiUrl, this.server.getHTMLConfig())\n  }\n}\n","<my-link\n  i18n-title title=\"Go to the login page\"\n  class=\"d-flex\"\n  internalLink=\"/login\" [href]=\"getExternalLoginHref()\"\n  [className]=\"className()\"\n  [icon]=\"icon() ? 'sign-in' : undefined\"\n>\n  {{ label() }}\n</my-link>\n"]}