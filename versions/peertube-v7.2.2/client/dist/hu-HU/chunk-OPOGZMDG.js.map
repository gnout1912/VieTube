{"version":3,"sources":["node_modules/@ngx-loading-bar/http-client/fesm2022/ngx-loading-bar-http-client.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { HttpContextToken, HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { tap, finalize } from 'rxjs/operators';\nimport * as i1 from '@ngx-loading-bar/core';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\nconst NGX_LOADING_BAR_IGNORED = new HttpContextToken(() => false);\nlet LoadingBarInterceptor = /*#__PURE__*/(() => {\n  class LoadingBarInterceptor {\n    constructor(loader) {\n      this.loader = loader;\n    }\n    intercept(req, next) {\n      if (req.context.get(NGX_LOADING_BAR_IGNORED) === true) {\n        return next.handle(req);\n      }\n      let started = false;\n      const ref = this.loader.useRef('http');\n      return next.handle(req).pipe(tap(() => {\n        if (!started) {\n          ref.start();\n          started = true;\n        }\n      }), finalize(() => started && ref.complete()));\n    }\n    static {\n      this.ɵfac = function LoadingBarInterceptor_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LoadingBarInterceptor)(i0.ɵɵinject(i1.LoadingBarService));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: LoadingBarInterceptor,\n        factory: LoadingBarInterceptor.ɵfac\n      });\n    }\n  }\n  return LoadingBarInterceptor;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction provideLoadingBarInterceptor() {\n  return {\n    provide: HTTP_INTERCEPTORS,\n    useClass: LoadingBarInterceptor,\n    multi: true\n  };\n}\nlet LoadingBarHttpClientModule = /*#__PURE__*/(() => {\n  class LoadingBarHttpClientModule {\n    static {\n      this.ɵfac = function LoadingBarHttpClientModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LoadingBarHttpClientModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: LoadingBarHttpClientModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [{\n          provide: HTTP_INTERCEPTORS,\n          useClass: LoadingBarInterceptor,\n          multi: true\n        }],\n        imports: [HttpClientModule, LoadingBarModule, HttpClientModule, LoadingBarModule]\n      });\n    }\n  }\n  return LoadingBarHttpClientModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LoadingBarHttpClientModule, NGX_LOADING_BAR_IGNORED, provideLoadingBarInterceptor };\n"],"mappings":"mJAMA,IAAMA,EAA0B,IAAIC,EAAiB,IAAM,EAAK,EAC5DC,GAAsC,IAAM,CAC9C,IAAMC,EAAN,MAAMA,CAAsB,CAC1B,YAAYC,EAAQ,CAClB,KAAK,OAASA,CAChB,CACA,UAAUC,EAAKC,EAAM,CACnB,GAAID,EAAI,QAAQ,IAAIL,CAAuB,IAAM,GAC/C,OAAOM,EAAK,OAAOD,CAAG,EAExB,IAAIE,EAAU,GACRC,EAAM,KAAK,OAAO,OAAO,MAAM,EACrC,OAAOF,EAAK,OAAOD,CAAG,EAAE,KAAKI,EAAI,IAAM,CAChCF,IACHC,EAAI,MAAM,EACVD,EAAU,GAEd,CAAC,EAAGG,EAAS,IAAMH,GAAWC,EAAI,SAAS,CAAC,CAAC,CAC/C,CAYF,EAVIL,EAAK,UAAO,SAAuCQ,EAAmB,CACpE,OAAO,IAAKA,GAAqBR,GAA0BS,EAAYC,CAAiB,CAAC,CAC3F,EAGAV,EAAK,WAA0BW,EAAmB,CAChD,MAAOX,EACP,QAASA,EAAsB,SACjC,CAAC,EA1BL,IAAMD,EAANC,EA6BA,OAAOD,CACT,GAAG,EAWH,IAAIa,GAA2C,IAAM,CACnD,IAAMC,EAAN,MAAMA,CAA2B,CAqBjC,EAnBIA,EAAK,UAAO,SAA4CC,EAAmB,CACzE,OAAO,IAAKA,GAAqBD,EACnC,EAGAA,EAAK,UAAyBE,EAAiB,CAC7C,KAAMF,CACR,CAAC,EAGDA,EAAK,UAAyBG,EAAiB,CAC7C,UAAW,CAAC,CACV,QAASC,EACT,SAAUC,EACV,MAAO,EACT,CAAC,EACD,QAAS,CAACC,EAAkBC,EAAkBD,EAAkBC,CAAgB,CAClF,CAAC,EAnBL,IAAMR,EAANC,EAsBA,OAAOD,CACT,GAAG","names":["NGX_LOADING_BAR_IGNORED","HttpContextToken","LoadingBarInterceptor","_LoadingBarInterceptor","loader","req","next","started","ref","tap","finalize","__ngFactoryType__","ɵɵinject","LoadingBarService","ɵɵdefineInjectable","LoadingBarHttpClientModule","_LoadingBarHttpClientModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","HTTP_INTERCEPTORS","LoadingBarInterceptor","HttpClientModule","LoadingBarModule"],"x_google_ignoreList":[0]}