{"version":3,"mappings":"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","names":["PluginPlaceholderComponent","pluginId","input","undefined","getId","D","selectors","inputs","decls","vars","consts","template","rf","ctx","ɵɵelement","t","ɵɵproperty","styles","_PluginPlaceholderComponent","xt","It","n","Nt","Lt","s","ɵɵelementStart","ɵɵi18n","ɵɵelementEnd","wt","e","d","ɵɵadvance","ɵɵpureFunction1","_c1","ctx_r3","playlist","shortUUID","Ht","playlistUrl","Vt","$t","zt","P","ɵɵlistener","ɵɵrestoreView","_r5","ɵɵnextContext","ɵɵresetView","onUpdate","ɵɵtemplate","VideoShareComponent_ng_template_0_div_6_ng_template_16_my_alert_2_Template","customizations","onlyEmbedUrl","playlistEmbedUrl","playlistEmbedHTML","notSecure","playlistEmbedSafeHTML","ɵɵsanitizeHtml","kt","ɵɵtwoWayListener","$event","_r6","i0","ɵɵtwoWayBindingSet","includeVideoInPlaylist","ɵɵtwoWayProperty","Ut","ɵɵelementContainerStart","_r7","responsive","y","Gt","VideoShareComponent_ng_template_0_div_6_h5_1_Template","VideoShareComponent_ng_template_0_div_6_my_alert_2_Template","_r3","activePlaylistId","VideoShareComponent_ng_template_0_div_6_ng_template_8_Template","VideoShareComponent_ng_template_0_div_6_ng_template_12_Template","VideoShareComponent_ng_template_0_div_6_ng_template_16_Template","VideoShareComponent_ng_template_0_div_6_div_19_Template","VideoShareComponent_ng_template_0_div_6_ng_container_20_Template","oe","i","video","isPrivatePlaylist","nav_r8","isInPlaylistEmbedTab","Xt","Wt","_c2","Ft","Bt","videoUrl","Yt","qt","Qt","_r10","VideoShareComponent_ng_template_0_div_7_ng_template_17_my_alert_2_Template","videoEmbedUrl","videoEmbedHTML","videoEmbedSafeHTML","jt","_r11","startAtCheckbox","startAt","duration","Zt","ɵɵtext","$implicit","caption_r13","language","id","ɵɵtextInterpolate","label","Kt","_r12","subtitleCheckbox","subtitle","VideoShareComponent_ng_template_0_div_7_div_21_option_4_Template","videoCaptions","Jt","_r14","en","_r15","stopAtCheckbox","stopAt","tn","_r16","loop","nn","_r17","originUrl","on","_r18","title","embedP2P","warningTitle","controlBar","peertubeLink","_n","an","ln","VideoShareComponent_ng_template_0_div_7_h5_1_Template","VideoShareComponent_ng_template_0_div_7_my_alert_2_Template","VideoShareComponent_ng_template_0_div_7_my_alert_3_Template","_r9","activeVideoId","VideoShareComponent_ng_template_0_div_7_ng_template_9_Template","VideoShareComponent_ng_template_0_div_7_ng_template_13_Template","VideoShareComponent_ng_template_0_div_7_ng_template_17_Template","VideoShareComponent_ng_template_0_div_7_div_20_Template","VideoShareComponent_ng_template_0_div_7_div_21_Template","VideoShareComponent_ng_template_0_div_7_Conditional_22_Template","VideoShareComponent_ng_template_0_div_7_div_25_Template","autoplay","muted","VideoShareComponent_ng_template_0_div_7_div_30_Template","VideoShareComponent_ng_template_0_div_7_div_31_Template","VideoShareComponent_ng_template_0_div_7_ng_container_32_Template","isAdvancedCustomizationCollapsed","VideoShareComponent_ng_template_0_div_7_ng_container_34_Template","VideoShareComponent_ng_template_0_div_7_ng_container_35_Template","isPrivateVideo","isPasswordProtectedVideo","nav_r19","isLive","length","ɵɵconditional","isInVideoEmbedTab","isLocalVideo","U","rn","hide_r2","_r1","close","VideoShareComponent_ng_template_0_div_6_Template","VideoShareComponent_ng_template_0_div_7_Template","VideoShareComponent","modalService","inject","NgbModal","sanitizer","DomSanitizer","server","ServerService","hooks","HooksService","modal","viewChild","playlistPosition","model","show","currentVideoTimestamp","currentPlaylistPosition","Proxy","Math","floor","getHTMLConfig","defaults","p2p","embed","enabled","set","target","prop","value","open","centered","shown","subscribe","runAction","getVideoUrl","url","buildVideoLink","window","location","origin","wrapFun","decorateVideoLink","__spreadValues","getVideoOptions","getVideoEmbedUrl","embedUrl","getVideoEmbedCode","options","__async","buildVideoOrPlaylistEmbed","embedTitle","name","aspectRatio","getPlaylistUrl","buildPlaylistLink","decoratePlaylistLink","getPlaylistOptions","getPlaylistEmbedUrl","getPlaylistEmbedCode","displayName","bypassSecurityTrustHtml","protocol","isLocal","privacy","VideoPrivacy","PRIVATE","VideoPlaylistPrivacy","PASSWORD_PROTECTED","baseUrl","forEmbed","embedOptions","startTime","stopTime","viewQuery","F","o","B","outputs","$localize","VideoShareComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","dependencies","GlobalIconComponent","NgIf","RouterLink","NgbNav","NgbNavItem","NgbNavLink","NgbNavLinkBase","NgbNavContent","InputTextComponent","QRCodeComponent","NgbNavOutlet","PeertubeCheckboxComponent","FormsModule","NgSelectOption","ɵNgSelectMultipleOption","SelectControlValueAccessor","NgControlStatus","NgModel","TimestampInputComponent","NgFor","NgbCollapse","AlertComponent","_VideoShareComponent","sn","dn","playing","pn","mn","cn","ctx_r0","position","gn","playlistElement","hasNSFWBlur","buildRouterLink","buildRouterQuery","getVideoAriaLabel","En","un","Sn","Cn","getNSFWTooltip","Mn","byAccount","An","byVideoChannel","yn","VideoPlaylistElementMiniatureComponent_ng_container_8_a_12_ng_container_1_Template","VideoPlaylistElementMiniatureComponent_ng_container_8_a_12_ng_container_2_Template","getVideoOwnerDisplayType","Pn","Tn","VideoPlaylistElementMiniatureComponent_ng_container_8_Conditional_4_Template","VideoPlaylistElementMiniatureComponent_ng_container_8_Conditional_5_Template","VideoPlaylistElementMiniatureComponent_ng_container_8_button_6_Template","VideoPlaylistElementMiniatureComponent_ng_container_8_a_12_Template","VideoPlaylistElementMiniatureComponent_ng_container_8_span_13_Template","isVideoPrivate","isVideoPasswordProtected","hasNSFWWarning","publishedAt","viewers","views","accountLink","formatTimestamp","vn","Rn","On","fn","VideoPlaylistElementMiniatureComponent_span_9_ng_container_1_Template","VideoPlaylistElementMiniatureComponent_span_9_ng_container_2_Template","VideoPlaylistElementMiniatureComponent_span_9_ng_container_3_Template","isUnavailable","isPrivate","isDeleted","bn","_r4","timestampOptions","startTimestampEnabled","startTimestamp","stopTimestampEnabled","stopTimestamp","updateTimestamps","hn","toggleDisplayTimestampsOptions","VideoPlaylistElementMiniatureComponent_div_10_ng_container_5_div_5_Template","displayTimestampOptions","Dn","_r2","onDropdownOpenChange","preventDefault","VideoPlaylistElementMiniatureComponent_div_10_ng_container_5_Template","removeFromPlaylist","ɵɵi18nExp","tmp_3_0","Ue","VideoPlaylistElementMiniatureComponent","userService","UserService","serverService","notifier","Notifier","videoPlaylistService","VideoPlaylistService","videoService","VideoService","cdr","ChangeDetectorRef","moreDropdown","owned","rowLink","elementRemoved","output","serverConfig","user","ngOnInit","getAnonymousOrLoggedUser","element","buildDefaultOwnerDisplayType","type","VideoPlaylistElementType","UNAVAILABLE","DELETED","VideoPlaylist","buildWatchUrl","start","stop","resume","isNSFWBlurForUser","isNSFWWarnedForUser","buildNSFWTooltip","playlistElementValue","videoId","removeVideoFromPlaylist","next","success","emit","error","err","message","body","updateVideoOfPlaylist","detectChanges","startFormatted","secondsToTime","seconds","format","symbol","stopFormatted","event","markForCheck","N","VideoPlaylistElementMiniatureComponent_my_global_icon_3_Template","VideoPlaylistElementMiniatureComponent_ng_container_4_Template","VideoPlaylistElementMiniatureComponent_my_video_thumbnail_5_Template","VideoPlaylistElementMiniatureComponent_div_6_Template","VideoPlaylistElementMiniatureComponent_ng_container_8_Template","VideoPlaylistElementMiniatureComponent_span_9_Template","VideoPlaylistElementMiniatureComponent_div_10_Template","CommonModule","NgClass","VideoThumbnailComponent","DateToggleComponent","VideoViewsCounterComponent","NgbDropdownModule","NgbDropdown","NgbDropdownToggle","NgbDropdownMenu","NgbDropdownItem","NgbDropdownButtonItem","NgbTooltipModule","NgbTooltip","changeDetection","_VideoPlaylistElementMiniatureComponent","ht","a","Jn","b","Ti","c"],"ignoreList":[],"sources":["src/app/shared/shared-main/plugins/plugin-placeholder.component.ts","src/app/shared/shared-share-modal/video-share.component.html","src/app/shared/shared-share-modal/video-share.component.ts","src/app/shared/shared-video-playlist/video-playlist-element-miniature.component.html","src/app/shared/shared-video-playlist/video-playlist-element-miniature.component.ts"],"sourcesContent":["import { Component, input } from '@angular/core'\nimport { PluginElementPlaceholder } from '@peertube/peertube-models'\n\n@Component({\n  selector: 'my-plugin-placeholder',\n  template: '<div [id]=\"getId()\"></div>',\n  styleUrls: [ './plugin-placeholder.component.scss' ],\n  standalone: true\n})\nexport class PluginPlaceholderComponent {\n  readonly pluginId = input<PluginElementPlaceholder>(undefined)\n\n  getId () {\n    return 'plugin-placeholder-' + this.pluginId()\n  }\n}\n","<ng-template #modal let-hide=\"close\">\n  <div class=\"modal-header\">\n    <h4 i18n class=\"modal-title\">Share</h4>\n\n    <button class=\"border-0 p-0\" title=\"Close this modal\" i18n-title (click)=\"hide()\">\n      <my-global-icon iconName=\"cross\"></my-global-icon>\n    </button>\n  </div>\n\n\n  <div class=\"modal-body\">\n\n    <div class=\"playlist\" *ngIf=\"playlist()\">\n      <h5 *ngIf=\"video()\" i18n class=\"text-center mb-4\">Share the playlist</h5>\n\n      <my-alert *ngIf=\"isPrivatePlaylist()\" class=\"alert-private\" type=\"warning\">\n        <div i18n>This playlist is private so you won't be able to share it with external users</div>\n\n        <a i18n class=\"peertube-button-link primary-button\" [routerLink]=\"[ '/my-library/video-playlists/update', playlist().shortUUID ]\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Update playlist privacy\n        </a>\n      </my-alert>\n\n      <div ngbNav #nav=\"ngbNav\" class=\"nav-tabs\" [(activeId)]=\"activePlaylistId\">\n\n        <ng-container ngbNavItem=\"url\">\n          <a ngbNavLink i18n>URL</a>\n\n          <ng-template ngbNavContent>\n            <div class=\"nav-content\">\n              <my-input-text\n                inputId=\"playlist-url\" i18n-ariaLabel ariaLabel=\"Playlist URL\"\n                [value]=\"playlistUrl\" [withToggle]=\"false\" [withCopy]=\"true\" [show]=\"true\" [readonly]=\"true\"\n              ></my-input-text>\n            </div>\n          </ng-template>\n        </ng-container>\n\n        <ng-container ngbNavItem=\"qrcode\">\n          <a ngbNavLink i18n>QR-Code</a>\n\n          <ng-template ngbNavContent>\n            <div class=\"nav-content\">\n              <qrcode [qrdata]=\"playlistUrl\" [width]=\"256\" level=\"Q\"></qrcode>\n            </div>\n          </ng-template>\n        </ng-container>\n\n        <ng-container ngbNavItem=\"embed\">\n          <a ngbNavLink i18n>Embed</a>\n\n          <ng-template ngbNavContent>\n            <div class=\"nav-content\">\n              <my-input-text\n                inputId=\"playlist-embed-url\" i18n-ariaLabel ariaLabel=\"Playlist embed URL\"\n                [value]=\"customizations.onlyEmbedUrl ? playlistEmbedUrl : playlistEmbedHTML\" (change)=\"onUpdate()\"\n                [withToggle]=\"false\" [withCopy]=\"true\" [show]=\"true\" [readonly]=\"true\"\n              ></my-input-text>\n\n              <my-alert i18n *ngIf=\"notSecure()\" type=\"warning\" class=\"mt-3\">\n                The url is not secured (no HTTPS), so the embed video won't work on HTTPS websites (web browsers block non secured HTTP requests on HTTPS websites).\n              </my-alert>\n\n              <div class=\"embed\" [innerHTML]=\"playlistEmbedSafeHTML\"></div>\n            </div>\n          </ng-template>\n        </ng-container>\n\n      </div>\n\n      <div [ngbNavOutlet]=\"nav\"></div>\n\n      <div class=\"filters\">\n\n        <div class=\"form-group\" *ngIf=\"video()\">\n          <my-peertube-checkbox\n            inputName=\"includeVideoInPlaylist\" [(ngModel)]=\"customizations.includeVideoInPlaylist\"\n            i18n-labelText labelText=\"Share the playlist at this video position\"\n          ></my-peertube-checkbox>\n        </div>\n\n        <ng-container *ngIf=\"isInPlaylistEmbedTab()\">\n          <div class=\"form-group\">\n            <my-peertube-checkbox\n              inputName=\"onlyEmbedUrl\" [(ngModel)]=\"customizations.onlyEmbedUrl\"\n              i18n-labelText labelText=\"Only display embed URL\"\n            ></my-peertube-checkbox>\n          </div>\n\n          <div class=\"form-group\">\n            <my-peertube-checkbox\n              inputName=\"responsive\" [(ngModel)]=\"customizations.responsive\"\n              i18n-labelText labelText=\"Responsive embed\"\n            ></my-peertube-checkbox>\n          </div>\n        </ng-container>\n\n        <my-plugin-placeholder pluginId=\"share-modal-playlist-settings\"></my-plugin-placeholder>\n      </div>\n    </div>\n\n\n    <div class=\"video\" *ngIf=\"video()\">\n      <h5 *ngIf=\"playlist()\" i18n class=\"text-center mb-4\">Share the video</h5>\n\n      <my-alert *ngIf=\"isPrivateVideo()\" class=\"alert-private\" type=\"warning\">\n        <div i18n>This video is private so you won't be able to share it with external users</div>\n\n        <a i18n class=\"peertube-button-link primary-button mt-3\" [routerLink]=\"[ '/videos/', 'manage', video().shortUUID ]\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Update video privacy\n        </a>\n      </my-alert>\n\n      <my-alert i18n *ngIf=\"isPasswordProtectedVideo()\" class=\"alert-private\" type=\"warning\">\n        This video is password protected, please note that recipients will require the corresponding password to access the content.\n      </my-alert>\n\n      <div ngbNav #nav=\"ngbNav\" class=\"nav-tabs\" [(activeId)]=\"activeVideoId\">\n\n        <ng-container ngbNavItem=\"url\">\n          <a ngbNavLink i18n>URL</a>\n\n          <ng-template ngbNavContent>\n            <div class=\"nav-content\">\n              <my-input-text\n                inputId=\"video-url\" i18n-ariaLabel ariaLabel=\"Video URL\"\n                [value]=\"videoUrl\" [withToggle]=\"false\" [withCopy]=\"true\" [show]=\"true\" [readonly]=\"true\"\n              ></my-input-text>\n            </div>\n          </ng-template>\n        </ng-container>\n\n        <ng-container ngbNavItem=\"qrcode\">\n          <a ngbNavLink i18n>QR-Code</a>\n\n          <ng-template ngbNavContent>\n            <div class=\"nav-content\">\n              <qrcode [qrdata]=\"videoUrl\" [width]=\"256\" level=\"Q\"></qrcode>\n            </div>\n          </ng-template>\n        </ng-container>\n\n        <ng-container ngbNavItem=\"embed\">\n          <a ngbNavLink i18n>Embed</a>\n\n          <ng-template ngbNavContent>\n            <div class=\"nav-content\">\n              <my-input-text\n                inputId=\"video-embed-url\" i18n-ariaLabel ariaLabel=\"Video embed URL\"\n                [value]=\"customizations.onlyEmbedUrl ? videoEmbedUrl : videoEmbedHTML\" (ngModelChange)=\"onUpdate()\"\n                [withToggle]=\"false\" [withCopy]=\"true\" [show]=\"true\" [readonly]=\"true\"\n              ></my-input-text>\n\n              <my-alert i18n *ngIf=\"notSecure()\" type=\"warning\" class=\"mt-3\">\n                The url is not secured (no HTTPS), so the embed video won't work on HTTPS websites (web browsers block non secured HTTP requests on HTTPS websites).\n              </my-alert>\n\n              <div class=\"embed\" [innerHTML]=\"videoEmbedSafeHTML\"></div>\n            </div>\n          </ng-template>\n        </ng-container>\n\n      </div>\n\n      <div [ngbNavOutlet]=\"nav\"></div>\n\n      <div class=\"filters\">\n        <div class=\"form-group start-at\" *ngIf=\"!video().isLive\">\n          <my-peertube-checkbox\n            inputName=\"startAt\" [(ngModel)]=\"customizations.startAtCheckbox\"\n            i18n-labelText labelText=\"Start at\"\n          ></my-peertube-checkbox>\n\n          <my-timestamp-input\n            [timestamp]=\"customizations.startAt\"\n            [maxTimestamp]=\"video().duration\"\n            [disabled]=\"!customizations.startAtCheckbox\"\n            [(ngModel)]=\"customizations.startAt\"\n          >\n          </my-timestamp-input>\n        </div>\n\n        <div *ngIf=\"videoCaptions().length !== 0\" class=\"form-group video-caption-block\">\n          <my-peertube-checkbox\n            inputName=\"subtitleCheckbox\" [(ngModel)]=\"customizations.subtitleCheckbox\"\n            i18n-labelText labelText=\"Auto select subtitle\"\n          ></my-peertube-checkbox>\n\n          <div class=\"peertube-select-container\">\n            <select [(ngModel)]=\"customizations.subtitle\" [disabled]=\"!customizations.subtitleCheckbox\" class=\"form-control\">\n              <option *ngFor=\"let caption of videoCaptions()\" [value]=\"caption.language.id\">{{ caption.language.label }}</option>\n            </select>\n          </div>\n        </div>\n\n        @if (isInVideoEmbedTab()) {\n        <div class=\"form-group\">\n          <my-peertube-checkbox\n            inputName=\"onlyEmbedUrl\" [(ngModel)]=\"customizations.onlyEmbedUrl\"\n            i18n-labelText labelText=\"Only display embed URL\"\n          ></my-peertube-checkbox>\n        </div>\n\n          <div class=\"form-group\">\n            <my-peertube-checkbox\n              inputName=\"responsive\" [(ngModel)]=\"customizations.responsive\"\n              i18n-labelText labelText=\"Responsive embed\"\n            ></my-peertube-checkbox>\n          </div>\n        }\n\n        <my-plugin-placeholder pluginId=\"share-modal-video-settings\"></my-plugin-placeholder>\n\n        <div class=\"advanced-filters\" [ngbCollapse]=\"isAdvancedCustomizationCollapsed\" [animation]=\"true\">\n          <div class=\"form-group stop-at\" *ngIf=\"!video().isLive\">\n            <my-peertube-checkbox\n              inputName=\"stopAt\" [(ngModel)]=\"customizations.stopAtCheckbox\"\n              i18n-labelText labelText=\"Stop at\"\n            ></my-peertube-checkbox>\n\n            <my-timestamp-input\n              [timestamp]=\"customizations.stopAt\"\n              [maxTimestamp]=\"video().duration\"\n              [disabled]=\"!customizations.stopAtCheckbox\"\n              [(ngModel)]=\"customizations.stopAt\"\n            >\n            </my-timestamp-input>\n          </div>\n\n          <div class=\"form-group\">\n            <my-peertube-checkbox\n              inputName=\"autoplay\" [(ngModel)]=\"customizations.autoplay\"\n              i18n-labelText labelText=\"Autoplay\"\n            ></my-peertube-checkbox>\n          </div>\n\n          <div class=\"form-group\">\n            <my-peertube-checkbox\n              inputName=\"muted\" [(ngModel)]=\"customizations.muted\"\n              i18n-labelText labelText=\"Muted\"\n            ></my-peertube-checkbox>\n          </div>\n\n          <div class=\"form-group\" *ngIf=\"!video().isLive\">\n            <my-peertube-checkbox\n              inputName=\"loop\" [(ngModel)]=\"customizations.loop\"\n              i18n-labelText labelText=\"Loop\"\n            ></my-peertube-checkbox>\n          </div>\n\n          <div *ngIf=\"!isLocalVideo() && !isInVideoEmbedTab()\" class=\"form-group\">\n            <my-peertube-checkbox\n              inputName=\"originUrl\" [(ngModel)]=\"customizations.originUrl\"\n              i18n-labelText labelText=\"Use origin instance URL\"\n            ></my-peertube-checkbox>\n          </div>\n\n          <ng-container *ngIf=\"isInVideoEmbedTab()\">\n            <div class=\"form-group\">\n              <my-peertube-checkbox\n                inputName=\"title\" [(ngModel)]=\"customizations.title\"\n                i18n-labelText labelText=\"Display video title\"\n              ></my-peertube-checkbox>\n            </div>\n\n            <div class=\"form-group\">\n              <my-peertube-checkbox\n                inputName=\"embedP2P\" [(ngModel)]=\"customizations.embedP2P\"\n                i18n-labelText labelText=\"P2P\"\n              ></my-peertube-checkbox>\n            </div>\n\n            <div class=\"form-group\">\n              <my-peertube-checkbox\n                inputName=\"warningTitle\" [(ngModel)]=\"customizations.warningTitle\"\n                i18n-labelText labelText=\"Display privacy warning\" [disabled]=\"!customizations.embedP2P\"\n              ></my-peertube-checkbox>\n            </div>\n\n            <div class=\"form-group\">\n              <my-peertube-checkbox\n                inputName=\"controlBar\" [(ngModel)]=\"customizations.controlBar\"\n                i18n-labelText labelText=\"Display player control bar\"\n              ></my-peertube-checkbox>\n            </div>\n\n            <div class=\"form-group\">\n              <my-peertube-checkbox\n                inputName=\"peertubeLink\" [(ngModel)]=\"customizations.peertubeLink\"\n                i18n-labelText labelText=\"Display PeerTube button link\"\n              ></my-peertube-checkbox>\n            </div>\n          </ng-container>\n        </div>\n\n        <button\n          class=\"border-0 p-0 mt-4 mx-auto fw-semibold d-block\"\n          (click)=\"isAdvancedCustomizationCollapsed = !isAdvancedCustomizationCollapsed\"\n          [attr.aria-expanded]=\"!isAdvancedCustomizationCollapsed\" aria-controls=\"collapseBasic\"\n        >\n          <ng-container *ngIf=\"isAdvancedCustomizationCollapsed\">\n            <span class=\"chevron-down\"></span>\n\n            <ng-container i18n>\n              More customization\n            </ng-container>\n          </ng-container>\n\n          <ng-container *ngIf=\"!isAdvancedCustomizationCollapsed\">\n            <span class=\"chevron-up\"></span>\n\n            <ng-container i18n>\n              Less customization\n            </ng-container>\n          </ng-container>\n        </button>\n      </div>\n    </div>\n  </div>\n\n</ng-template>\n","import { NgFor, NgIf } from '@angular/common'\nimport { Component, ElementRef, inject, input, model, viewChild } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser'\nimport { RouterLink } from '@angular/router'\nimport { HooksService, ServerService } from '@app/core'\nimport { VideoDetails } from '@app/shared/shared-main/video/video-details.model'\nimport {\n  NgbCollapse,\n  NgbModal,\n  NgbNav,\n  NgbNavContent,\n  NgbNavItem,\n  NgbNavLink,\n  NgbNavLinkBase,\n  NgbNavOutlet\n} from '@ng-bootstrap/ng-bootstrap'\nimport { buildPlaylistLink, buildVideoLink, decoratePlaylistLink, decorateVideoLink } from '@peertube/peertube-core-utils'\nimport { VideoCaption, VideoPlaylistPrivacy, VideoPrivacy } from '@peertube/peertube-models'\nimport { buildVideoOrPlaylistEmbed } from '@root-helpers/video'\nimport { QRCodeComponent } from 'angularx-qrcode'\nimport { InputTextComponent } from '../shared-forms/input-text.component'\nimport { PeertubeCheckboxComponent } from '../shared-forms/peertube-checkbox.component'\nimport { TimestampInputComponent } from '../shared-forms/timestamp-input.component'\nimport { GlobalIconComponent } from '../shared-icons/global-icon.component'\nimport { AlertComponent } from '../shared-main/common/alert.component'\nimport { PluginPlaceholderComponent } from '../shared-main/plugins/plugin-placeholder.component'\nimport { VideoPlaylist } from '../shared-video-playlist/video-playlist.model'\n\ntype Customizations = {\n  startAtCheckbox: boolean\n  startAt: number\n\n  stopAtCheckbox: boolean\n  stopAt: number\n\n  subtitleCheckbox: boolean\n  subtitle: string\n\n  loop: boolean\n  originUrl: boolean\n  autoplay: boolean\n  muted: boolean\n\n  embedP2P: boolean\n  onlyEmbedUrl: boolean\n  title: boolean\n  warningTitle: boolean\n  controlBar: boolean\n  peertubeLink: boolean\n  responsive: boolean\n\n  includeVideoInPlaylist: boolean\n}\n\ntype TabId = 'url' | 'qrcode' | 'embed'\n\n@Component({\n  selector: 'my-video-share',\n  templateUrl: './video-share.component.html',\n  styleUrls: [ './video-share.component.scss' ],\n  imports: [\n    GlobalIconComponent,\n    NgIf,\n    RouterLink,\n    NgbNav,\n    NgbNavItem,\n    NgbNavLink,\n    NgbNavLinkBase,\n    NgbNavContent,\n    InputTextComponent,\n    QRCodeComponent,\n    NgbNavOutlet,\n    PeertubeCheckboxComponent,\n    FormsModule,\n    PluginPlaceholderComponent,\n    TimestampInputComponent,\n    NgFor,\n    NgbCollapse,\n    AlertComponent\n  ]\n})\nexport class VideoShareComponent {\n  private modalService = inject(NgbModal)\n  private sanitizer = inject(DomSanitizer)\n  private server = inject(ServerService)\n  private hooks = inject(HooksService)\n\n  readonly modal = viewChild<ElementRef>('modal')\n\n  readonly video = input<VideoDetails>(null)\n  readonly videoCaptions = input<VideoCaption[]>([])\n  readonly playlist = input<VideoPlaylist>(null)\n  readonly playlistPosition = model<number>(null)\n\n  activeVideoId: TabId = 'url'\n  activePlaylistId: TabId = 'url'\n\n  customizations: Customizations\n  isAdvancedCustomizationCollapsed = true\n\n  videoUrl: string\n  playlistUrl: string\n\n  videoEmbedUrl: string\n  playlistEmbedUrl: string\n\n  videoEmbedHTML: string\n  videoEmbedSafeHTML: SafeHtml\n  playlistEmbedHTML: string\n  playlistEmbedSafeHTML: SafeHtml\n\n  show (currentVideoTimestamp?: number, currentPlaylistPosition?: number) {\n    let subtitle: string\n    const videoCaptions = this.videoCaptions()\n    if (videoCaptions && videoCaptions.length !== 0) {\n      subtitle = videoCaptions[0].language.id\n    }\n\n    this.customizations = new Proxy({\n      startAtCheckbox: false,\n      startAt: currentVideoTimestamp ? Math.floor(currentVideoTimestamp) : 0,\n\n      stopAtCheckbox: false,\n      stopAt: this.video()?.duration,\n\n      subtitleCheckbox: false,\n      subtitle,\n\n      loop: false,\n      originUrl: false,\n      autoplay: false,\n      muted: false,\n\n      // Embed options\n      embedP2P: this.server.getHTMLConfig().defaults.p2p.embed.enabled,\n      onlyEmbedUrl: false,\n      title: true,\n      warningTitle: true,\n      controlBar: true,\n      peertubeLink: true,\n      responsive: false,\n\n      includeVideoInPlaylist: false\n    }, {\n      set: (target, prop, value) => {\n        ;(target as any)[prop] = value\n\n        if (prop === 'embedP2P') {\n          // Auto enabled warning title if P2P is enabled\n          this.customizations.warningTitle = value\n        }\n\n        this.onUpdate()\n\n        return true\n      }\n    })\n\n    this.playlistPosition.set(currentPlaylistPosition)\n\n    this.onUpdate()\n\n    this.modalService.open(this.modal(), { centered: true }).shown.subscribe(() => {\n      this.hooks.runAction('action:modal.share.shown', 'video-watch', { video: this.video(), playlist: this.playlist() })\n    })\n  }\n\n  // ---------------------------------------------------------------------------\n\n  getVideoUrl () {\n    const url = this.customizations.originUrl\n      ? this.video().url\n      : buildVideoLink(this.video(), window.location.origin)\n\n    return this.hooks.wrapFun(\n      decorateVideoLink,\n      { url, ...this.getVideoOptions(false) },\n      'video-watch',\n      'filter:share.video-url.build.params',\n      'filter:share.video-url.build.result'\n    )\n  }\n\n  getVideoEmbedUrl () {\n    return this.hooks.wrapFun(\n      decorateVideoLink,\n      { url: this.video().embedUrl, ...this.getVideoOptions(true) },\n      'video-watch',\n      'filter:share.video-embed-url.build.params',\n      'filter:share.video-embed-url.build.result'\n    )\n  }\n\n  async getVideoEmbedCode (options: { responsive: boolean }) {\n    const { responsive } = options\n    return this.hooks.wrapFun(\n      buildVideoOrPlaylistEmbed,\n      { embedUrl: await this.getVideoEmbedUrl(), embedTitle: this.video().name, responsive, aspectRatio: this.video().aspectRatio },\n      'video-watch',\n      'filter:share.video-embed-code.build.params',\n      'filter:share.video-embed-code.build.result'\n    )\n  }\n\n  // ---------------------------------------------------------------------------\n\n  getPlaylistUrl () {\n    const url = buildPlaylistLink(this.playlist())\n\n    return this.hooks.wrapFun(\n      decoratePlaylistLink,\n      { url, ...this.getPlaylistOptions() },\n      'video-watch',\n      'filter:share.video-playlist-url.build.params',\n      'filter:share.video-playlist-url.build.result'\n    )\n  }\n\n  getPlaylistEmbedUrl () {\n    return this.hooks.wrapFun(\n      decoratePlaylistLink,\n      { url: this.playlist().embedUrl, ...this.getPlaylistOptions() },\n      'video-watch',\n      'filter:share.video-playlist-embed-url.build.params',\n      'filter:share.video-playlist-embed-url.build.result'\n    )\n  }\n\n  async getPlaylistEmbedCode (options: { responsive: boolean }) {\n    const { responsive } = options\n    return this.hooks.wrapFun(\n      buildVideoOrPlaylistEmbed,\n      {\n        embedUrl: await this.getPlaylistEmbedUrl(),\n        embedTitle: this.playlist().displayName,\n        responsive,\n        aspectRatio: this.video()?.aspectRatio\n      },\n      'video-watch',\n      'filter:share.video-playlist-embed-code.build.params',\n      'filter:share.video-playlist-embed-code.build.result'\n    )\n  }\n\n  // ---------------------------------------------------------------------------\n\n  async onUpdate () {\n    if (this.playlist()) {\n      this.playlistUrl = await this.getPlaylistUrl()\n      this.playlistEmbedUrl = await this.getPlaylistEmbedUrl()\n      this.playlistEmbedHTML = await this.getPlaylistEmbedCode({ responsive: this.customizations.responsive })\n      this.playlistEmbedSafeHTML = this.sanitizer.bypassSecurityTrustHtml(await this.getPlaylistEmbedCode({ responsive: false }))\n    }\n\n    if (this.video()) {\n      this.videoUrl = await this.getVideoUrl()\n      this.videoEmbedUrl = await this.getVideoEmbedUrl()\n      this.videoEmbedHTML = await this.getVideoEmbedCode({ responsive: this.customizations.responsive })\n      this.videoEmbedSafeHTML = this.sanitizer.bypassSecurityTrustHtml(await this.getVideoEmbedCode({ responsive: false }))\n    }\n  }\n\n  notSecure () {\n    return window.location.protocol === 'http:'\n  }\n\n  isInVideoEmbedTab () {\n    return this.activeVideoId === 'embed'\n  }\n\n  isInPlaylistEmbedTab () {\n    return this.activePlaylistId === 'embed'\n  }\n\n  isLocalVideo () {\n    return this.video().isLocal\n  }\n\n  isPrivateVideo () {\n    return this.video().privacy.id === VideoPrivacy.PRIVATE\n  }\n\n  isPrivatePlaylist () {\n    return this.playlist().privacy.id === VideoPlaylistPrivacy.PRIVATE\n  }\n\n  isPasswordProtectedVideo () {\n    return this.video().privacy.id === VideoPrivacy.PASSWORD_PROTECTED\n  }\n\n  private getPlaylistOptions (baseUrl?: string) {\n    const playlistPosition = this.playlistPosition()\n    return {\n      baseUrl,\n\n      playlistPosition: playlistPosition && this.customizations.includeVideoInPlaylist\n        ? playlistPosition\n        : undefined\n    }\n  }\n\n  private getVideoOptions (forEmbed: boolean) {\n    const embedOptions = forEmbed\n      ? {\n        title: this.customizations.title,\n        warningTitle: this.customizations.warningTitle,\n        controlBar: this.customizations.controlBar,\n        peertubeLink: this.customizations.peertubeLink,\n\n        // If using default value, we don't need to specify it\n        p2p: this.customizations.embedP2P === this.server.getHTMLConfig().defaults.p2p.embed.enabled\n          ? undefined\n          : this.customizations.embedP2P\n      }\n      : {}\n\n    return {\n      startTime: this.customizations.startAtCheckbox ? this.customizations.startAt : undefined,\n      stopTime: this.customizations.stopAtCheckbox ? this.customizations.stopAt : undefined,\n\n      subtitle: this.customizations.subtitleCheckbox ? this.customizations.subtitle : undefined,\n\n      loop: this.customizations.loop,\n      autoplay: this.customizations.autoplay,\n      muted: this.customizations.muted,\n\n      ...embedOptions\n    }\n  }\n}\n","<div class=\"video\" [ngClass]=\"{ playing: playing() }\">\n  <a [routerLink]=\"buildRouterLink()\" [queryParams]=\"buildRouterQuery()\">\n    <div class=\"position\">\n      <my-global-icon *ngIf=\"playing()\" iconName=\"play\"></my-global-icon>\n      <ng-container *ngIf=\"!playing()\">{{ position() }}</ng-container>\n    </div>\n\n    <my-video-thumbnail\n      *ngIf=\"playlistElement().video\"\n      [video]=\"playlistElement().video\" [blur]=\"hasNSFWBlur(playlistElement().video)\"\n      [videoRouterLink]=\"buildRouterLink()\" [queryParams]=\"buildRouterQuery()\" [ariaLabel]=\"getVideoAriaLabel()\"\n    ></my-video-thumbnail>\n\n    <div class=\"fake-thumbnail\" *ngIf=\"!playlistElement().video\"></div>\n\n    <div class=\"video-info\">\n      <ng-container *ngIf=\"playlistElement().video\">\n        <div class=\"video-info-header\">\n          <a\n            tabindex=\"-1\" class=\"video-info-name\" [ariaLabel]=\"getVideoAriaLabel()\" [attr.title]=\"playlistElement().video.name\"\n            [routerLink]=\"buildRouterLink()\" [queryParams]=\"buildRouterQuery()\"\n          >{{ playlistElement().video.name }}</a>\n\n          @if (isVideoPrivate()) {\n            <span i18n class=\"pt-badge badge-yellow\">Private</span>\n          } @else if(isVideoPasswordProtected()) {\n            <span i18n class=\"pt-badge badge-yellow\">Password protected</span>\n          }\n\n          <button\n            type=\"button\" class=\"nsfw-warning button-unstyle ms-2\"\n            *ngIf=\"hasNSFWWarning(playlistElement().video)\" [attr.aria-label]=\"getNSFWTooltip(playlistElement().video)\" [ngbTooltip]=\"getNSFWTooltip(playlistElement().video)\"\n          >\n            <my-global-icon iconName=\"eye-close\"></my-global-icon>\n          </button>\n        </div>\n\n        <span class=\"date-and-views\">\n          <my-date-toggle [date]=\"playlistElement().video.publishedAt\"></my-date-toggle>\n\n          <span class=\"views\">\n            • <my-video-views-counter [isLive]=\"playlistElement().video.isLive\" [viewers]=\"playlistElement().video.viewers\" [views]=\"playlistElement().video.views\"></my-video-views-counter>\n          </span>\n        </span>\n\n        <a *ngIf=\"accountLink()\" tabindex=\"-1\" class=\"video-info-owner\" [routerLink]=\"[ '/c', playlistElement().video.byVideoChannel ]\">\n          <ng-container *ngIf=\"getVideoOwnerDisplayType(playlistElement()) === 'account'\">{{ playlistElement().video.byAccount }}</ng-container>\n          <ng-container *ngIf=\"getVideoOwnerDisplayType(playlistElement()) === 'videoChannel'\">{{ playlistElement().video.byVideoChannel }}</ng-container>\n        </a>\n\n        <span *ngIf=\"!accountLink()\" tabindex=\"-1\" class=\"video-info-owner\">{{ playlistElement().video.byAccount }}</span>\n\n        <span tabindex=\"-1\" class=\"video-info-timestamp\">{{ formatTimestamp(playlistElement()) }}</span>\n      </ng-container>\n\n      <span *ngIf=\"!playlistElement().video\" class=\"video-info-name\">\n        <ng-container i18n *ngIf=\"isUnavailable(playlistElement())\">Unavailable</ng-container>\n        <ng-container i18n *ngIf=\"isPrivate(playlistElement())\">Private</ng-container>\n        <ng-container i18n *ngIf=\"isDeleted(playlistElement())\">Deleted</ng-container>\n      </span>\n    </div>\n  </a>\n\n  <div\n    *ngIf=\"owned()\" class=\"more dropdown-root\" ngbDropdown #moreDropdown=\"ngbDropdown\" placement=\"left auto\"\n    (openChange)=\"onDropdownOpenChange()\" autoClose=\"outside\" container=\"body\"\n  >\n    <button class=\"border-0 p-0 more-button\" (click)=\"$event.preventDefault()\" ngbDropdownToggle>\n      <my-global-icon iconName=\"more-vertical\"></my-global-icon>\n    </button>\n\n    <div ngbDropdownMenu>\n      <ng-container *ngIf=\"playlistElement().video\">\n        <button ngbDropdownItem (click)=\"toggleDisplayTimestampsOptions($event, playlistElement())\">\n          <my-global-icon iconName=\"edit\" aria-hidden=\"true\"></my-global-icon>\n          <ng-container i18n>Edit starts/stops at</ng-container>\n        </button>\n\n        <div class=\"timestamp-options\" *ngIf=\"displayTimestampOptions\">\n          <div>\n            <my-peertube-checkbox\n              inputName=\"startAt\" [(ngModel)]=\"timestampOptions.startTimestampEnabled\"\n              i18n-labelText labelText=\"Start at\"\n            ></my-peertube-checkbox>\n\n            <my-timestamp-input\n              [timestamp]=\"timestampOptions.startTimestamp\"\n              [maxTimestamp]=\"playlistElement().video.duration\"\n              [disabled]=\"!timestampOptions.startTimestampEnabled\"\n              [(ngModel)]=\"timestampOptions.startTimestamp\"\n            ></my-timestamp-input>\n          </div>\n\n          <div>\n            <my-peertube-checkbox\n              inputName=\"stopAt\" [(ngModel)]=\"timestampOptions.stopTimestampEnabled\"\n              i18n-labelText labelText=\"Stop at\"\n            ></my-peertube-checkbox>\n\n            <my-timestamp-input\n              [timestamp]=\"timestampOptions.stopTimestamp\"\n              [maxTimestamp]=\"playlistElement().video.duration\"\n              [disabled]=\"!timestampOptions.stopTimestampEnabled\"\n              [(ngModel)]=\"timestampOptions.stopTimestamp\"\n            ></my-timestamp-input>\n          </div>\n\n          <input class=\"peertube-button primary-button mt-2\" type=\"submit\" i18n-value value=\"Save\" (click)=\"updateTimestamps(playlistElement())\">\n        </div>\n      </ng-container>\n\n      <button ngbDropdownItem (click)=\"removeFromPlaylist(playlistElement())\">\n        <my-global-icon iconName=\"delete\" aria-hidden=\"true\"></my-global-icon>\n        <ng-container i18n>Delete from {{ playlist()?.displayName }}</ng-container>\n      </button>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common'\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, inject, input, output, viewChild } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { RouterLink } from '@angular/router'\nimport { Notifier, ServerService, User, UserService } from '@app/core'\nimport { NgbDropdown, NgbDropdownModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap'\nimport { secondsToTime } from '@peertube/peertube-core-utils'\nimport { HTMLServerConfig, VideoPlaylistElementType, VideoPlaylistElementUpdate, VideoPrivacy } from '@peertube/peertube-models'\nimport { PeertubeCheckboxComponent } from '../shared-forms/peertube-checkbox.component'\nimport { TimestampInputComponent } from '../shared-forms/timestamp-input.component'\nimport { GlobalIconComponent } from '../shared-icons/global-icon.component'\nimport { DateToggleComponent } from '../shared-main/date/date-toggle.component'\nimport { Video } from '../shared-main/video/video.model'\nimport { VideoService } from '../shared-main/video/video.service'\nimport { VideoThumbnailComponent } from '../shared-thumbnail/video-thumbnail.component'\nimport { VideoViewsCounterComponent } from '../shared-video/video-views-counter.component'\nimport { VideoPlaylistElement } from './video-playlist-element.model'\nimport { VideoPlaylist } from './video-playlist.model'\nimport { VideoPlaylistService } from './video-playlist.service'\n\n@Component({\n  selector: 'my-video-playlist-element-miniature',\n  styleUrls: [ './video-playlist-element-miniature.component.scss' ],\n  templateUrl: './video-playlist-element-miniature.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    RouterLink,\n    GlobalIconComponent,\n    VideoThumbnailComponent,\n    DateToggleComponent,\n    VideoViewsCounterComponent,\n    NgbDropdownModule,\n    PeertubeCheckboxComponent,\n    FormsModule,\n    TimestampInputComponent,\n    NgbTooltipModule\n  ]\n})\nexport class VideoPlaylistElementMiniatureComponent implements OnInit {\n  private userService = inject(UserService)\n  private serverService = inject(ServerService)\n  private notifier = inject(Notifier)\n  private videoPlaylistService = inject(VideoPlaylistService)\n  private videoService = inject(VideoService)\n  private cdr = inject(ChangeDetectorRef)\n\n  readonly moreDropdown = viewChild<NgbDropdown>('moreDropdown')\n\n  readonly playlist = input<VideoPlaylist>(undefined)\n  readonly playlistElement = input<VideoPlaylistElement>(undefined)\n  readonly owned = input(false)\n  readonly playing = input(false)\n  readonly rowLink = input(false)\n  readonly accountLink = input(true)\n  readonly position = input<number // Keep this property because we're in the OnPush change detection strategy\n  >(undefined) // Keep this property because we're in the OnPush change detection strategy\n\n  readonly elementRemoved = output<VideoPlaylistElement>()\n\n  displayTimestampOptions = false\n\n  timestampOptions: {\n    startTimestampEnabled: boolean\n    startTimestamp: number\n    stopTimestampEnabled: boolean\n    stopTimestamp: number\n  } = {} as any\n\n  private serverConfig: HTMLServerConfig\n  private user: User\n\n  ngOnInit (): void {\n    this.serverConfig = this.serverService.getHTMLConfig()\n\n    this.userService.getAnonymousOrLoggedUser().subscribe(user => {\n      this.user = user\n    })\n  }\n\n  getVideoAriaLabel () {\n    return $localize`Watch video ${this.playlistElement().video.name}`\n  }\n\n  getVideoOwnerDisplayType (element: VideoPlaylistElement) {\n    return this.videoService.buildDefaultOwnerDisplayType(element.video)\n  }\n\n  isVideoPrivate () {\n    return this.playlistElement().video.privacy.id === VideoPrivacy.PRIVATE\n  }\n\n  isVideoPasswordProtected () {\n    return this.playlistElement().video.privacy.id === VideoPrivacy.PASSWORD_PROTECTED\n  }\n\n  isUnavailable (e: VideoPlaylistElement) {\n    return e.type === VideoPlaylistElementType.UNAVAILABLE\n  }\n\n  isPrivate (e: VideoPlaylistElement) {\n    return e.type === VideoPlaylistElementType.PRIVATE\n  }\n\n  isDeleted (e: VideoPlaylistElement) {\n    return e.type === VideoPlaylistElementType.DELETED\n  }\n\n  buildRouterLink () {\n    const playlist = this.playlist()\n    if (!playlist) return null\n\n    return VideoPlaylist.buildWatchUrl(playlist)\n  }\n\n  buildRouterQuery () {\n    const playlistElement = this.playlistElement()\n    if (!playlistElement?.video) return {}\n\n    return {\n      playlistPosition: playlistElement.position,\n      start: playlistElement.startTimestamp,\n      stop: playlistElement.stopTimestamp,\n      resume: true\n    }\n  }\n\n  hasNSFWBlur (video: Video) {\n    return video.isNSFWBlurForUser(this.user, this.serverConfig)\n  }\n\n  hasNSFWWarning (video: Video) {\n    return video.isNSFWWarnedForUser(this.user, this.serverConfig)\n  }\n\n  getNSFWTooltip (video: Video) {\n    return this.videoService.buildNSFWTooltip(video)\n  }\n\n  removeFromPlaylist (playlistElement: VideoPlaylistElement) {\n    const playlistElementValue = this.playlistElement()\n    const videoId = playlistElementValue.video ? playlistElementValue.video.id : undefined\n\n    this.videoPlaylistService.removeVideoFromPlaylist(this.playlist().id, playlistElement.id, videoId)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Video removed from ${this.playlist().displayName}`)\n          this.elementRemoved.emit(playlistElement)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n\n    this.moreDropdown().close()\n  }\n\n  updateTimestamps (playlistElement: VideoPlaylistElement) {\n    const body: VideoPlaylistElementUpdate = {}\n\n    body.startTimestamp = this.timestampOptions.startTimestampEnabled ? this.timestampOptions.startTimestamp : null\n    body.stopTimestamp = this.timestampOptions.stopTimestampEnabled ? this.timestampOptions.stopTimestamp : null\n\n    this.videoPlaylistService.updateVideoOfPlaylist(this.playlist().id, playlistElement.id, body, this.playlistElement().video.id)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Timestamps updated`)\n\n          playlistElement.startTimestamp = body.startTimestamp\n          playlistElement.stopTimestamp = body.stopTimestamp\n\n          this.cdr.detectChanges()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n\n    this.moreDropdown().close()\n  }\n\n  formatTimestamp (playlistElement: VideoPlaylistElement) {\n    const start = playlistElement.startTimestamp\n    const stop = playlistElement.stopTimestamp\n\n    const startFormatted = secondsToTime({ seconds: start, format: 'full', symbol: ':' })\n    const stopFormatted = secondsToTime({ seconds: stop, format: 'full', symbol: ':' })\n\n    if (start === null && stop === null) return ''\n\n    if (start !== null && stop === null) return $localize`Starts at ` + startFormatted\n    if (start === null && stop !== null) return $localize`Stops at ` + stopFormatted\n\n    return $localize`Starts at ` + startFormatted + $localize` and stops at ` + stopFormatted\n  }\n\n  onDropdownOpenChange () {\n    this.displayTimestampOptions = false\n  }\n\n  toggleDisplayTimestampsOptions (event: Event, playlistElement: VideoPlaylistElement) {\n    event.preventDefault()\n\n    this.displayTimestampOptions = !this.displayTimestampOptions\n\n    if (this.displayTimestampOptions === true) {\n      this.timestampOptions = {\n        startTimestampEnabled: false,\n        stopTimestampEnabled: false,\n        startTimestamp: 0,\n        stopTimestamp: playlistElement.video.duration\n      }\n\n      if (playlistElement.startTimestamp) {\n        this.timestampOptions.startTimestampEnabled = true\n        this.timestampOptions.startTimestamp = playlistElement.startTimestamp\n      }\n\n      if (playlistElement.stopTimestamp) {\n        this.timestampOptions.stopTimestampEnabled = true\n        this.timestampOptions.stopTimestamp = playlistElement.stopTimestamp\n      }\n    }\n\n    this.cdr.markForCheck()\n  }\n}\n"]}