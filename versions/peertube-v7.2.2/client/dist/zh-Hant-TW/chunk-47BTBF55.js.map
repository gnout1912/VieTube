{"version":3,"mappings":"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","names":["import_debug","te","ae","bt","i","t","n","L","ɵɵelementStart","ɵɵtwoWayListener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","i0","ɵɵtwoWayBindingSet","selectedCategories","ɵɵresetView","ɵɵlistener","onModelChange","ɵɵelementEnd","c","ɵɵproperty","inputId","ɵɵtwoWayProperty","availableCategories","SelectCategoriesComponent","server","inject","ServerService","input","required","ngOnInit","getVideoCategories","subscribe","categories","map","label","id","propagateChange","_","writeValue","registerOnChange","fn","registerOnTouched","F","selectors","inputs","features","ɵɵProvidersFeature","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","decls","vars","consts","i18n_0","$localize","ɵɵtemplate","SelectCategoriesComponent_my_select_checkbox_default_all_0_Template","o","ctx","dependencies","SelectCheckboxDefaultAllComponent","FormsModule","NgControlStatus","NgModel","NgIf","encapsulation","_SelectCategoriesComponent","Lt","active","Vt","$t","key","value","Ht","ɵɵtext","$implicit","quickFilter_r1","iconName","filters","isActive","ɵɵadvance","ɵɵtextInterpolate1","wt","ɵɵelementContainerStart","ɵɵi18nStart","ɵɵelement","ɵɵi18nEnd","C","ɵɵi18nExp","instanceName","G","xt","totalFollowing","kt","VideoFiltersHeaderComponent_div_6_Conditional_1_Template","VideoFiltersHeaderComponent_div_6_Conditional_2_Template","ɵɵpureFunction1","_c1","undefined","ɵɵconditional","scope","Ut","filter_r3","zt","VideoFiltersHeaderComponent_For_10_Conditional_0_span_1_Template","e","ɵɵtextInterpolate","getFilterValue","Gt","VideoFiltersHeaderComponent_For_10_Conditional_0_Template","Bt","ɵɵi18n","Xt","Wt","availableScopes","Qt","debugLogger","debug","VideoFiltersHeaderComponent","auth","AuthService","serverService","fb","FormBuilder","modalService","PeertubeModalService","redirectService","RedirectService","followService","InstanceFollowService","displayModerationBlock","hideScope","areFiltersCollapsed","form","sortItems","quickFilters","videoCategories","videoLanguages","getHTMLConfig","instance","name","group","sort","languageOneOf","categoryOneOf","allVideos","live","patchForm","onChange","valueChanges","values","load","getVideoLanguages","languages","getFollowing","pagination","count","start","state","total","buildSortItems","buildQuickFilters","canSeeAllVideos","isLoggedIn","getUser","hasRight","UserRight","SEE_ALL_VIDEOS","trendingSort","getDefaultTrendingSort","isTrendingSortEnabled","push","trending","videos","algorithms","enabled","includes","filter","Array","isArray","rawValue","length","translated","v","find","join","onAccountSettingsClick","event","preventDefault","stopPropagation","openQuickSettingsSubject","next","emitEvent","defaultValues","toFormObject","patchValue","O","ce","x","i18n_14","k","B","Se","i18n_19","Re","ɵɵrepeaterCreate","VideoFiltersHeaderComponent_For_3_Template","ɵɵrepeaterTrackByIdentity","VideoFiltersHeaderComponent_div_6_Template","VideoFiltersHeaderComponent_For_10_Template","_forTrack0","VideoFiltersHeaderComponent_Conditional_12_Template","VideoFiltersHeaderComponent_Conditional_13_Template","VideoFiltersHeaderComponent_div_44_Template","VideoFiltersHeaderComponent_div_67_Template","ɵɵrepeater","getActiveFilters","_c0","$e","s","getNSFWSettingsLabel","RouterLink","DefaultValueAccessor","RadioControlValueAccessor","NgControlStatusGroup","ReactiveFormsModule","FormGroupDirective","FormControlName","NgClass","GlobalIconComponent","NgbCollapse","SelectLanguagesComponent","PeertubeCheckboxComponent","SelectOptionsComponent","ButtonComponent","styles","_VideoFiltersHeaderComponent","VideoFilters","search","nsfwPolicy","nsfwFlagsDisplayed","nsfwFlagsHidden","nsfwFlagsWarned","nsfwFlagsBlurred","Map","activeFilters","onChangeCallbacks","oldFormObjectString","customizedByUser","hiddenFields","constructor","defaultSort","defaultScope","setDefaultSort","setDefaultScope","reset","triggerChange","cb","currentFormObjectString","JSON","stringify","noChanges","changes","set","setNSFWPolicy","user","options","specificKey","buildActiveFilters","obj","splitIntoArray","toBoolean","clone","videoFilters","cloned","get","toUrlObject","hasBeenCustomizedByUser","canRemove","getNSFWValue","l","toUpperCase","a","result","defaultValue","toVideosAPIObject","isLocal","include","privacyOneOf","VideoInclude","NOT_PUBLISHED_STATE","getAllPrivacies","isLive","__spreadProps","__spreadValues","buildNSFWVideosAPIObject","nsfw","nsfwFlagsExcluded","NSFWFlag","NONE","nsfwFlagsIncluded","getGlobalNSFWLabel","hasCustomNSFWFlags","Yt","jt","action_r1","routerLink","Kt","VideosListComponent_div_2_ng_container_1_Conditional_1_Template","qt","VideosListComponent_div_2_ng_container_1_Template","headerActions","Jt","hideScopeFilter","Zt","ei","live_r4","_r3","removeVideoFromArray","displayAsRow","displayVideoActions","displayOptions","ti","ii","VideosListComponent_ng_container_6_ng_container_5_Template","VideosListComponent_ng_container_6_h2_6_Template","highlightedLives","videoById","groupByDate","ni","getCurrentGroupedDateLabel","video_r6","oi","VideosListComponent_ng_container_7_h2_1_Template","_r5","GroupDate","UNKNOWN","TODAY","YESTERDAY","THIS_WEEK","THIS_MONTH","LAST_MONTH","OLDER","VideosListComponent","notifier","Notifier","userService","UserService","route","ActivatedRoute","screenService","ScreenService","peertubeRouter","PeerTubeRouterService","getVideosObservableFunction","getSyndicationItemsFunction","displayFilters","transform","booleanAttribute","displayBy","loadUserVideoPreferences","highlightLives","disabled","filtersChanged","output","videosLoaded","syndicationItems","onVideosDataSubject","Subject","hasDoneFirstQuery","date","views","by","avatar","privacyLabel","routeSub","userSub","resizeSub","currentPage","itemsPerPage","totalItems","groupedDateLabels","groupedDates","lastQueryLength","videoRequests","alreadyDoneSearch","subscribeToVideoRequests","hiddenFilters","fromEvent","window","pipe","debounceTime","calcPageSizes","getAnonymousOrLoggedUser","loadUserSettings","subscribeToAnonymousUpdate","subscribeToQueryParamsChange","snapshot","queryParams","updateUrl","reloadSyndicationItems","reloadVideos","emit","ngOnDestroy","unsubscribe","_index","video","onNearOfBottom","loadMoreVideos","liveFilters","obsVideos","obsHighlightedLives","of","data","resetCurrentPage","some","updatePaginationOnDelete","isInMobileView","Promise","resolve","then","items","catch","err","logger","error","Object","keys","silentNavigate","listenAnonymousUpdate","switchMap","params","concatMap","forkJoin","resHighlightedLives","resVideos","concat","buildGroupedDateLabels","message","currentGroupedDate","periods","validator","d","isToday","isYesterday","isLastWeek","isThisMonth","isLastMonth","onlyOlderPeriod","publishedDate","publishedAt","period","outputs","VideosListComponent_div_2_Template","VideosListComponent_my_video_filters_header_3_Template","VideosListComponent_div_4_Template","VideosListComponent_ng_container_6_Template","VideosListComponent_ng_container_7_Template","asObservable","CommonModule","NgForOf","InfiniteScrollerDirective","VideoMiniatureComponent","_VideosListComponent","Zi"],"ignoreList":[],"sources":["src/app/shared/shared-video-miniature/videos-list.component.ts","src/app/shared/shared-video-miniature/video-filters-header.component.ts","src/app/shared/shared-forms/select/select-categories.component.ts","src/app/shared/shared-video-miniature/video-filters-header.component.html","src/app/shared/shared-video-miniature/video-filters.model.ts","src/app/shared/shared-video-miniature/videos-list.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common'\nimport { Component, OnDestroy, OnInit, booleanAttribute, inject, input, output } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport {\n  ComponentPagination,\n  ComponentPaginationLight,\n  Notifier,\n  PeerTubeRouterService,\n  ScreenService,\n  User,\n  UserService,\n  resetCurrentPage,\n  updatePaginationOnDelete\n} from '@app/core'\nimport { GlobalIconComponent, GlobalIconName } from '@app/shared/shared-icons/global-icon.component'\nimport { isLastMonth, isLastWeek, isThisMonth, isToday, isYesterday } from '@peertube/peertube-core-utils'\nimport { ResultList, VideoSortField } from '@peertube/peertube-models'\nimport { logger } from '@root-helpers/logger'\nimport debug from 'debug'\nimport { Observable, Subject, Subscription, forkJoin, fromEvent, of } from 'rxjs'\nimport { concatMap, debounceTime, map, switchMap } from 'rxjs/operators'\nimport { ButtonComponent } from '../shared-main/buttons/button.component'\nimport { InfiniteScrollerDirective } from '../shared-main/common/infinite-scroller.directive'\nimport { Syndication } from '../shared-main/feeds/syndication.model'\nimport { Video } from '../shared-main/video/video.model'\nimport { VideoFiltersHeaderComponent } from './video-filters-header.component'\nimport { VideoFilterScope, VideoFilters } from './video-filters.model'\nimport { MiniatureDisplayOptions, VideoMiniatureComponent } from './video-miniature.component'\n\nconst debugLogger = debug('peertube:videos:VideosListComponent')\n\nexport type HeaderAction = {\n  iconName: GlobalIconName\n  label: string\n  routerLink?: string\n}\n\nenum GroupDate {\n  UNKNOWN = 0,\n  TODAY = 1,\n  YESTERDAY = 2,\n  THIS_WEEK = 3,\n  THIS_MONTH = 4,\n  LAST_MONTH = 5,\n  OLDER = 6\n}\n\n@Component({\n  selector: 'my-videos-list',\n  templateUrl: './videos-list.component.html',\n  styleUrls: [ './videos-list.component.scss' ],\n  imports: [\n    CommonModule,\n    ButtonComponent,\n    ButtonComponent,\n    VideoFiltersHeaderComponent,\n    InfiniteScrollerDirective,\n    VideoMiniatureComponent,\n    GlobalIconComponent\n  ]\n})\nexport class VideosListComponent implements OnInit, OnDestroy {\n  private notifier = inject(Notifier)\n  private userService = inject(UserService)\n  private route = inject(ActivatedRoute)\n  private screenService = inject(ScreenService)\n  private peertubeRouter = inject(PeerTubeRouterService)\n\n  // dprint-ignore\n  // eslint-disable-next-line max-len\n  readonly getVideosObservableFunction = input<(pagination: ComponentPaginationLight, filters: VideoFilters) => Observable<ResultList<Video>>>(undefined)\n  readonly getSyndicationItemsFunction = input<(filters: VideoFilters) => Promise<Syndication[]> | Syndication[]>(undefined)\n\n  readonly defaultSort = input<VideoSortField>(undefined)\n  readonly defaultScope = input<VideoFilterScope>('federated')\n  readonly displayFilters = input(false, { transform: booleanAttribute })\n  readonly displayBy = input(true, { transform: booleanAttribute })\n  readonly hideScopeFilter = input(false, { transform: booleanAttribute })\n\n  readonly loadUserVideoPreferences = input(false, { transform: booleanAttribute })\n\n  readonly displayAsRow = input(false, { transform: booleanAttribute })\n  readonly displayVideoActions = input(true, { transform: booleanAttribute })\n  readonly groupByDate = input(false, { transform: booleanAttribute })\n  readonly highlightLives = input(false, { transform: booleanAttribute })\n\n  readonly headerActions = input<HeaderAction[]>([])\n\n  readonly disabled = input(false, { transform: booleanAttribute })\n\n  readonly filtersChanged = output<VideoFilters>()\n  readonly videosLoaded = output<Video[]>()\n\n  videos: Video[] = []\n  highlightedLives: Video[] = []\n\n  filters: VideoFilters\n  syndicationItems: Syndication[]\n\n  onVideosDataSubject = new Subject<any[]>()\n  hasDoneFirstQuery = false\n\n  user: User\n\n  displayOptions: MiniatureDisplayOptions = {\n    date: true,\n    views: true,\n    by: true,\n    avatar: true,\n    privacyLabel: true\n  }\n  displayModerationBlock = true\n\n  private routeSub: Subscription\n  private userSub: Subscription\n  private resizeSub: Subscription\n\n  private pagination: ComponentPagination = {\n    currentPage: 1,\n    itemsPerPage: 25,\n    totalItems: null\n  }\n\n  private groupedDateLabels: { [id in GroupDate]: string } = {\n    [GroupDate.UNKNOWN]: null,\n    [GroupDate.TODAY]: $localize`Today's videos`,\n    [GroupDate.YESTERDAY]: $localize`Yesterday's videos`,\n    [GroupDate.THIS_WEEK]: $localize`This week's videos`,\n    [GroupDate.THIS_MONTH]: $localize`This month's videos`,\n    [GroupDate.LAST_MONTH]: $localize`Last month's videos`,\n    [GroupDate.OLDER]: $localize`Older videos`\n  }\n  private groupedDates: { [id: number]: GroupDate } = {}\n\n  private lastQueryLength: number\n\n  private videoRequests = new Subject<{\n    reset: boolean\n    obsVideos: Observable<Pick<ResultList<Video>, 'data'>>\n    obsHighlightedLives: Observable<Pick<ResultList<Video>, 'data'>>\n  }>()\n\n  private alreadyDoneSearch = false\n\n  ngOnInit () {\n    this.displayOptions.by = this.displayBy()\n    this.displayOptions.avatar = this.displayBy()\n\n    this.subscribeToVideoRequests()\n\n    const hiddenFilters = this.hideScopeFilter()\n      ? [ 'scope' ]\n      : []\n\n    this.filters = new VideoFilters(this.defaultSort(), this.defaultScope(), hiddenFilters)\n\n    this.resizeSub = fromEvent(window, 'resize')\n      .pipe(debounceTime(500))\n      .subscribe(() => this.calcPageSizes())\n\n    this.calcPageSizes()\n\n    this.userService.getAnonymousOrLoggedUser()\n      .subscribe(user => {\n        this.user = user\n\n        if (this.loadUserVideoPreferences()) {\n          this.loadUserSettings(user)\n        }\n\n        this.subscribeToAnonymousUpdate()\n        this.subscribeToQueryParamsChange()\n      })\n\n    this.filters.load(this.route.snapshot.queryParams)\n\n    this.filters.onChange(() => {\n      debugLogger('Filters changed', this.filters)\n\n      // We'll reload videos, but avoid weird UI effect\n      this.videos = []\n      this.highlightedLives = []\n\n      this.updateUrl()\n\n      this.reloadSyndicationItems()\n      this.reloadVideos()\n\n      this.filtersChanged.emit(this.filters)\n    })\n\n    this.reloadSyndicationItems()\n    this.reloadVideos()\n  }\n\n  ngOnDestroy () {\n    if (this.resizeSub) this.resizeSub.unsubscribe()\n    if (this.routeSub) this.routeSub.unsubscribe()\n    if (this.userSub) this.userSub.unsubscribe()\n  }\n\n  videoById (_index: number, video: Video) {\n    return video.id\n  }\n\n  onNearOfBottom () {\n    if (this.disabled()) return\n\n    // No more results\n    if (this.lastQueryLength !== undefined && this.lastQueryLength < this.pagination.itemsPerPage) return\n\n    this.pagination.currentPage += 1\n\n    this.loadMoreVideos()\n  }\n\n  loadMoreVideos (reset = false) {\n    let liveFilters: VideoFilters\n    let videoFilters: VideoFilters\n\n    if (reset) {\n      this.hasDoneFirstQuery = false\n      this.videos = []\n      this.highlightedLives = []\n\n      if (this.highlightLives() && (!this.filters.live || this.filters.live === 'both')) {\n        liveFilters = this.filters.clone()\n        liveFilters.live = 'true'\n\n        videoFilters = this.filters.clone()\n        videoFilters.live = 'false'\n      }\n    }\n\n    this.videoRequests.next({\n      reset,\n      obsVideos: this.getVideosObservableFunction()(this.pagination, videoFilters ?? this.filters),\n\n      obsHighlightedLives: liveFilters\n        ? this.getVideosObservableFunction()(this.pagination, liveFilters)\n        : of({ data: this.highlightedLives })\n    })\n  }\n\n  reloadVideos () {\n    resetCurrentPage(this.pagination)\n    this.loadMoreVideos(true)\n  }\n\n  removeVideoFromArray (video: Video) {\n    if (this.videos.some(v => v.id === video.id)) {\n      this.videos = this.videos.filter(v => v.id !== video.id)\n\n      updatePaginationOnDelete(this.pagination)\n    }\n\n    this.highlightedLives = this.highlightedLives.filter(v => v.id !== video.id)\n  }\n\n  private calcPageSizes () {\n    if (this.screenService.isInMobileView()) {\n      this.pagination.itemsPerPage = 5\n    }\n  }\n\n  private loadUserSettings (user: User) {\n    this.filters.setNSFWPolicy(user)\n\n    this.filters.load({ languageOneOf: user.videoLanguages })\n  }\n\n  private reloadSyndicationItems () {\n    Promise.resolve(this.getSyndicationItemsFunction()(this.filters))\n      .then(items => {\n        if (!items || items.length === 0) this.syndicationItems = undefined\n        else this.syndicationItems = items\n      })\n      .catch(err => logger.error('Cannot get syndication items.', err))\n  }\n\n  private updateUrl () {\n    const queryParams = this.filters.toUrlObject()\n\n    debugLogger('Will inject URL query', { queryParams })\n\n    if (Object.keys(queryParams).length !== 0 || this.filters.hasBeenCustomizedByUser()) {\n      this.peertubeRouter.silentNavigate([], queryParams)\n    }\n  }\n\n  private subscribeToAnonymousUpdate () {\n    this.userSub = this.userService.listenAnonymousUpdate()\n      .pipe(switchMap(() => this.userService.getAnonymousOrLoggedUser()))\n      .subscribe(user => {\n        debugLogger('User changed', { user })\n\n        this.user = user\n\n        if (this.loadUserVideoPreferences()) {\n          this.loadUserSettings(user)\n        }\n\n        if (this.hasDoneFirstQuery) {\n          this.reloadVideos()\n        }\n      })\n  }\n\n  private subscribeToQueryParamsChange () {\n    this.routeSub = this.route.queryParams.subscribe(params => {\n      if (Object.keys(params).length === 0 && !this.filters.hasBeenCustomizedByUser()) return\n\n      let search = params.search\n\n      if (search) {\n        this.alreadyDoneSearch = true\n      } else if (this.alreadyDoneSearch) {\n        search = ''\n      }\n\n      debugLogger('Query params changed', params)\n\n      this.filters.load(params)\n    })\n  }\n\n  private subscribeToVideoRequests () {\n    this.videoRequests\n      .pipe(\n        concatMap(({ reset, obsHighlightedLives, obsVideos }) => {\n          return forkJoin([ obsHighlightedLives, obsVideos ])\n            .pipe(\n              map(([ resHighlightedLives, resVideos ]) => ({ highlightedLives: resHighlightedLives.data, videos: resVideos.data, reset }))\n            )\n        })\n      )\n      .subscribe({\n        next: ({ videos, highlightedLives, reset }) => {\n          this.hasDoneFirstQuery = true\n          this.lastQueryLength = videos.length\n\n          if (reset) {\n            this.videos = []\n            this.highlightedLives = highlightedLives\n          }\n\n          this.videos = this.videos.concat(videos)\n\n          if (this.groupByDate()) this.buildGroupedDateLabels()\n\n          this.onVideosDataSubject.next(videos)\n          this.videosLoaded.emit(this.videos)\n        },\n\n        error: err => {\n          const message = $localize`Cannot load more videos. Try again later.`\n\n          logger.error(message, err)\n          this.notifier.error(message)\n        }\n      })\n  }\n\n  // ---------------------------------------------------------------------------\n\n  private buildGroupedDateLabels () {\n    let currentGroupedDate: GroupDate = GroupDate.UNKNOWN\n\n    const periods = [\n      {\n        value: GroupDate.TODAY,\n        validator: (d: Date) => isToday(d)\n      },\n      {\n        value: GroupDate.YESTERDAY,\n        validator: (d: Date) => isYesterday(d)\n      },\n      {\n        value: GroupDate.THIS_WEEK,\n        validator: (d: Date) => isLastWeek(d)\n      },\n      {\n        value: GroupDate.THIS_MONTH,\n        validator: (d: Date) => isThisMonth(d)\n      },\n      {\n        value: GroupDate.LAST_MONTH,\n        validator: (d: Date) => isLastMonth(d)\n      },\n      {\n        value: GroupDate.OLDER,\n        validator: () => true\n      }\n    ]\n\n    let onlyOlderPeriod = true\n\n    for (const video of this.videos) {\n      const publishedDate = video.publishedAt\n\n      for (const period of periods) {\n        if (currentGroupedDate <= period.value && period.validator(publishedDate)) {\n          if (currentGroupedDate !== period.value) {\n            if (period.value !== GroupDate.OLDER) onlyOlderPeriod = false\n\n            currentGroupedDate = period.value\n            this.groupedDates[video.id] = currentGroupedDate\n          }\n\n          break\n        }\n      }\n    }\n\n    // No need to group by date, there is only \"Older\" period available\n    if (onlyOlderPeriod) this.groupedDates = {}\n  }\n\n  getCurrentGroupedDateLabel (video: Video) {\n    if (this.groupByDate() === false) return undefined\n\n    return this.groupedDateLabels[this.groupedDates[video.id]]\n  }\n}\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnInit, inject, input } from '@angular/core'\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { RouterLink } from '@angular/router'\nimport { AuthService, RedirectService } from '@app/core'\nimport { ServerService } from '@app/core/server/server.service'\nimport { NgbCollapse } from '@ng-bootstrap/ng-bootstrap'\nimport { UserRight, VideoConstant } from '@peertube/peertube-models'\nimport { AttributesOnly } from '@peertube/peertube-typescript-utils'\nimport debug from 'debug'\nimport { SelectOptionsItem } from 'src/types'\nimport { PeertubeCheckboxComponent } from '../shared-forms/peertube-checkbox.component'\nimport { SelectCategoriesComponent } from '../shared-forms/select/select-categories.component'\nimport { SelectLanguagesComponent } from '../shared-forms/select/select-languages.component'\nimport { SelectOptionsComponent } from '../shared-forms/select/select-options.component'\nimport { GlobalIconComponent, GlobalIconName } from '../shared-icons/global-icon.component'\nimport { InstanceFollowService } from '../shared-instance/instance-follow.service'\nimport { ButtonComponent } from '../shared-main/buttons/button.component'\nimport { PeertubeModalService } from '../shared-main/peertube-modal/peertube-modal.service'\nimport { VideoFilterActive, VideoFilters } from './video-filters.model'\n\nconst debugLogger = debug('peertube:videos:VideoFiltersHeaderComponent')\n\ntype QuickFilter = {\n  iconName: GlobalIconName\n  label: string\n  isActive: () => boolean\n  filters: Partial<AttributesOnly<VideoFilters>>\n}\n\n@Component({\n  selector: 'my-video-filters-header',\n  styleUrls: [ './video-filters-header.component.scss' ],\n  templateUrl: './video-filters-header.component.html',\n  imports: [\n    RouterLink,\n    FormsModule,\n    ReactiveFormsModule,\n    NgClass,\n    NgIf,\n    GlobalIconComponent,\n    NgbCollapse,\n    SelectLanguagesComponent,\n    SelectCategoriesComponent,\n    PeertubeCheckboxComponent,\n    SelectOptionsComponent,\n    ButtonComponent\n  ],\n  providers: [ InstanceFollowService ]\n})\nexport class VideoFiltersHeaderComponent implements OnInit {\n  private auth = inject(AuthService)\n  private serverService = inject(ServerService)\n  private fb = inject(FormBuilder)\n  private modalService = inject(PeertubeModalService)\n  private redirectService = inject(RedirectService)\n  private server = inject(ServerService)\n  private followService = inject(InstanceFollowService)\n\n  readonly filters = input<VideoFilters>(undefined)\n  readonly displayModerationBlock = input(false)\n  readonly hideScope = input(false)\n\n  areFiltersCollapsed = true\n\n  form: FormGroup\n\n  sortItems: SelectOptionsItem[] = []\n  availableScopes: SelectOptionsItem[] = []\n\n  quickFilters: QuickFilter[] = []\n\n  instanceName: string\n  totalFollowing: number\n\n  private videoCategories: VideoConstant<number>[] = []\n  private videoLanguages: VideoConstant<string>[] = []\n\n  ngOnInit () {\n    this.instanceName = this.server.getHTMLConfig().instance.name\n\n    this.form = this.fb.group({\n      sort: [ '' ],\n      languageOneOf: [ '' ],\n      categoryOneOf: [ '' ],\n      scope: [ '' ],\n      allVideos: [ '' ],\n      live: [ '' ]\n    })\n\n    this.patchForm(false)\n\n    this.filters().onChange(() => {\n      this.patchForm(false)\n    })\n\n    this.form.valueChanges.subscribe(values => {\n      debugLogger('Loading values from form', { values })\n\n      this.filters().load(values, true)\n    })\n\n    this.serverService.getVideoCategories()\n      .subscribe(categories => this.videoCategories = categories)\n\n    this.serverService.getVideoLanguages()\n      .subscribe(languages => this.videoLanguages = languages)\n\n    this.followService.getFollowing({ pagination: { count: 1, start: 0 }, state: 'accepted' })\n      .subscribe(({ total }) => this.totalFollowing = total)\n\n    this.availableScopes = [\n      { id: 'local', label: $localize`Only videos from this platform` },\n      { id: 'federated', label: $localize`Videos from all platforms` }\n    ]\n\n    this.buildSortItems()\n    this.buildQuickFilters()\n  }\n\n  canSeeAllVideos () {\n    if (!this.auth.isLoggedIn()) return false\n    if (!this.displayModerationBlock()) return false\n\n    return this.auth.getUser().hasRight(UserRight.SEE_ALL_VIDEOS)\n  }\n\n  // ---------------------------------------------------------------------------\n\n  private buildQuickFilters () {\n    const trendingSort = this.redirectService.getDefaultTrendingSort()\n\n    this.quickFilters = [\n      {\n        label: $localize`Recently added`,\n        iconName: 'add',\n        isActive: () => this.filters().sort === '-publishedAt',\n        filters: { sort: '-publishedAt' }\n      },\n\n      {\n        label: $localize`Trending`,\n        iconName: 'trending',\n        isActive: () => this.filters().sort === trendingSort,\n        filters: { sort: trendingSort }\n      }\n    ]\n  }\n\n  // ---------------------------------------------------------------------------\n\n  private buildSortItems () {\n    this.sortItems = [\n      { id: '-publishedAt', label: $localize`Recently Added` },\n      { id: '-originallyPublishedAt', label: $localize`Original Publication Date` },\n      { id: 'name', label: $localize`Name` }\n    ]\n\n    if (this.isTrendingSortEnabled('most-viewed')) {\n      this.sortItems.push({ id: '-trending', label: $localize`Recent Views` })\n    }\n\n    if (this.isTrendingSortEnabled('hot')) {\n      this.sortItems.push({ id: '-hot', label: $localize`Hot` })\n    }\n\n    if (this.isTrendingSortEnabled('most-liked')) {\n      this.sortItems.push({ id: '-likes', label: $localize`Likes` })\n    }\n\n    this.sortItems.push({ id: '-views', label: $localize`Global Views` })\n  }\n\n  private isTrendingSortEnabled (sort: 'most-viewed' | 'hot' | 'most-liked') {\n    const serverConfig = this.serverService.getHTMLConfig()\n\n    return serverConfig.trending.videos.algorithms.enabled.includes(sort)\n  }\n\n  getFilterValue (filter: VideoFilterActive) {\n    if ((filter.key === 'categoryOneOf' || filter.key === 'languageOneOf') && Array.isArray(filter.rawValue)) {\n      if (filter.rawValue.length > 2) {\n        return filter.rawValue.length\n      }\n\n      const translated = filter.key === 'categoryOneOf'\n        ? this.videoCategories\n        : this.videoLanguages\n\n      const formatted = filter.rawValue\n        .map(v => {\n          if (v === '_unknown') return $localize`Unknown`\n\n          return translated.find(c => c.id + '' === v)?.label\n        })\n        .join(', ')\n\n      return formatted\n    }\n\n    return filter.value\n  }\n\n  onAccountSettingsClick (event: Event) {\n    if (this.auth.isLoggedIn()) return\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    this.modalService.openQuickSettingsSubject.next()\n  }\n\n  private patchForm (emitEvent: boolean) {\n    const defaultValues = this.filters().toFormObject()\n    this.form.patchValue(defaultValues, { emitEvent })\n\n    debugLogger('Patch form', { values: defaultValues })\n  }\n}\n","import { Component, forwardRef, OnInit, inject, input } from '@angular/core'\nimport { ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms'\nimport { ServerService } from '@app/core'\nimport { SelectOptionsItem } from '../../../../types/select-options-item.model'\nimport { SelectCheckboxDefaultAllComponent } from './select-checkbox-default-all.component'\nimport { NgIf } from '@angular/common'\n\n@Component({\n  selector: 'my-select-categories',\n  template: `\n<my-select-checkbox-default-all\n  *ngIf=\"availableCategories\"\n  [inputId]=\"inputId()\"\n  [(ngModel)]=\"selectedCategories\"\n  (ngModelChange)=\"onModelChange()\"\n  [availableItems]=\"availableCategories\"\n  i18n-placeholder placeholder=\"Add a new category\"\n  i18n-allSelectedLabel allSelectedLabel=\"All categories\"\n  i18n-selectedLabel selectedLabel=\"{1} categories selected\"\n>\n</my-select-checkbox-default-all>\n`,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => SelectCategoriesComponent),\n      multi: true\n    }\n  ],\n  imports: [ SelectCheckboxDefaultAllComponent, FormsModule, NgIf ]\n})\nexport class SelectCategoriesComponent implements ControlValueAccessor, OnInit {\n  private server = inject(ServerService)\n\n  readonly inputId = input.required<string>()\n\n  selectedCategories: string[]\n  availableCategories: SelectOptionsItem[]\n\n  ngOnInit () {\n    this.server.getVideoCategories()\n      .subscribe(\n        categories => {\n          this.availableCategories = categories.map(c => ({ label: c.label, id: c.id + '' }))\n        }\n      )\n  }\n\n  propagateChange = (_: any) => {\n    // empty\n  }\n\n  writeValue (categories: string[] | number[]) {\n    this.selectedCategories = categories\n      ? categories.map(c => c + '')\n      : null\n  }\n\n  registerOnChange (fn: (_: any) => void) {\n    this.propagateChange = fn\n  }\n\n  registerOnTouched () {\n    // Unused\n  }\n\n  onModelChange () {\n    this.propagateChange(\n      this.selectedCategories\n        ? this.selectedCategories.map(c => c + '')\n        : null\n    )\n  }\n}\n","<div class=\"root\" [formGroup]=\"form\">\n  <div class=\"d-flex flex-wrap mb-3\">\n    @for (quickFilter of quickFilters; track quickFilter) {\n      <my-button\n        theme=\"secondary\"\n        [icon]=\"quickFilter.iconName\"\n        class=\"me-2 mb-2\"\n        ptRouterLink=\".\"\n        [ptQueryParams]=\"quickFilter.filters\"\n        [active]=\"quickFilter.isActive()\"\n        ptQueryParamsHandling=\"merge\"\n      >{{ quickFilter.label }}\n      </my-button>\n    }\n  </div>\n\n  <div class=\"d-flex flex-wrap-reverse align-items-start justify-content-between\">\n    <div class=\"gap-3\">\n      <div class=\"scope-info\" *ngIf=\"!hideScope()\" [ngClass]=\"{ 'opacity-0': totalFollowing === undefined }\">\n        @if (filters().scope === 'local' || totalFollowing === 0) {\n          <ng-container i18n>Videos on <strong>{{ instanceName }}</strong></ng-container>\n        } @else {\n          <ng-container i18n>\n            Videos on <strong>{{ instanceName }}</strong> and <strong>{{ totalFollowing }}</strong> {totalFollowing, plural, =1 {other platform} other {other platforms}}\n          </ng-container>\n        }\n      </div>\n\n      <div class=\"filters-summary\">\n        <div class=\"d-inline-block active-filters\">\n          @for (filter of filters().getActiveFilters(); track filter.key + (filter.value || '')) {\n            @if (filter.key !== 'scope') {\n              <div class=\"d-inline-block active-filter\">\n                <span *ngIf=\"filter.value\">{{ filter.label }}: </span>\n                <strong>{{ getFilterValue(filter) || filter.label }}</strong>\n              </div>\n            }\n          }\n        </div>\n\n        <button\n          class=\"filters-toggle peertube-button-like-link\"\n          (click)=\"areFiltersCollapsed = !areFiltersCollapsed\"\n          [attr.aria-expanded]=\"!areFiltersCollapsed\"\n          aria-controls=\"collapseBasic\"\n          [ngClass]=\"{ active: !areFiltersCollapsed }\"\n        >\n          @if (areFiltersCollapsed) {\n            <ng-container i18n>More filters</ng-container>\n          } @else {\n            <ng-container i18n>Hide filters</ng-container>\n          }\n\n          <my-global-icon iconName=\"chevrons-up\"></my-global-icon>\n        </button>\n      </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap align-items-center mb-2\">\n      <label for=\"sort-videos\" i18n class=\"select-label\">Sort by:</label>\n\n      <my-select-options inputId=\"sort-videos\" class=\"d-inline-block me-2\" formControlName=\"sort\" [items]=\"sortItems\"></my-select-options>\n    </div>\n  </div>\n\n  <div [ngbCollapse]=\"areFiltersCollapsed\" [animation]=\"true\">\n    <div class=\"filters\">\n      <div class=\"section\">\n        <div class=\"section-title\">\n          <ng-container i18n>Content preferences</ng-container>\n\n          <div class=\"with-description\">\n            <span i18n>You always use the same preferences?</span>\n\n            <span i18n>\n              Update your <a routerLink=\"/my-account/settings\" fragment=\"video-languages-subtitles\" (click)=\"onAccountSettingsClick($event)\"\n              >default settings</a>\n            </span>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"languageOneOf\" i18n>Languages</label>\n\n          <my-select-languages inputId=\"languageOneOf\" [maxLanguages]=\"20\" formControlName=\"languageOneOf\"></my-select-languages>\n        </div>\n\n        <div class=\"form-group\" role=\"radiogroup\">\n          <label for=\"nsfw\" i18n>Sensitive content</label>\n\n          <div class=\"form-group-description\">\n            <div>{{ filters().getNSFWSettingsLabel() }}</div>\n\n            <div i18n>\n              Update your policy in <a routerLink=\"/my-account/settings\" fragment=\"video-sensitive-content-policy\" (click)=\"onAccountSettingsClick($event)\"\n              >your settings</a>.\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"section\" *ngIf=\"totalFollowing && !hideScope()\">\n        <div class=\"section-title\">\n          <ng-container i18n>Platforms order</ng-container>\n\n          <div class=\"with-description\">\n            <div i18n>\n              {{ instanceName }} platform subscribes to content from <a routerLink=\"/about/follows\" target=\"_blank\">{{ totalFollowing }} {totalFollowing, plural, =1 {other platform} other {other platforms}}</a>.\n            </div>\n\n            <div i18n>Set your display preferences here.</div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"scope\" i18n>Displayed videos</label>\n\n          <my-select-options inputId=\"scope\" class=\"scope-select\" formControlName=\"scope\" [items]=\"availableScopes\"></my-select-options>\n        </div>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"section-title\" i18n>Content type</div>\n\n        <div class=\"form-group\">\n          <label for=\"categoryOneOf\" i18n>Categories</label>\n\n          <my-select-categories inputId=\"categoryOneOf\" formControlName=\"categoryOneOf\"></my-select-categories>\n        </div>\n\n        <div class=\"form-group\" role=\"radiogroup\">\n          <label for=\"type\" i18n>Type</label>\n\n          <div class=\"peertube-radio-container\">\n            <input formControlName=\"live\" type=\"radio\" name=\"live\" id=\"liveBoth\" value=\"both\" />\n            <label for=\"liveBoth\" i18n>VOD & Live videos</label>\n          </div>\n\n          <div class=\"peertube-radio-container\">\n            <input formControlName=\"live\" type=\"radio\" name=\"live\" id=\"liveTrue\" value=\"true\" />\n            <label for=\"liveTrue\" i18n>Live videos</label>\n          </div>\n\n          <div class=\"peertube-radio-container\">\n            <input formControlName=\"live\" type=\"radio\" name=\"live\" id=\"liveFalse\" value=\"false\" />\n            <label for=\"liveFalse\" i18n>VOD videos</label>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"section\" *ngIf=\"canSeeAllVideos()\">\n        <div class=\"section-title\" i18n>Moderation</div>\n\n        <div class=\"form-group\">\n          <my-peertube-checkbox\n            formControlName=\"allVideos\"\n            inputName=\"allVideos\"\n            i18n-labelText\n            labelText=\"Display all videos (private, unlisted, password protected, not yet published or sensitive videos)\"\n          ></my-peertube-checkbox>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { User } from '@app/core'\nimport { splitIntoArray, toBoolean } from '@app/helpers'\nimport { getAllPrivacies } from '@peertube/peertube-core-utils'\nimport {\n  BooleanBothQuery,\n  NSFWFlag,\n  NSFWPolicyType,\n  VideoInclude,\n  VideoIncludeType,\n  VideoPrivacyType,\n  VideosCommonQuery,\n  VideoSortField\n} from '@peertube/peertube-models'\nimport { AttributesOnly } from '@peertube/peertube-typescript-utils'\nimport debug from 'debug'\n\nconst debugLogger = debug('peertube:videos:VideoFilters')\n\ntype VideoFiltersKeys = {\n  [id in keyof AttributesOnly<VideoFilters>]: any\n}\n\nexport type VideoFilterScope = 'local' | 'federated'\n\nexport type VideoFilterActive = {\n  key: string\n  canRemove: boolean\n  label: string\n  value?: string\n  rawValue?: string[] | number[]\n}\n\nexport class VideoFilters {\n  sort: VideoSortField\n\n  languageOneOf: string[]\n  categoryOneOf: number[]\n\n  scope: VideoFilterScope\n  allVideos: boolean\n\n  live: BooleanBothQuery\n\n  search: string\n\n  private nsfwPolicy: NSFWPolicyType\n  private nsfwFlagsDisplayed: number\n  private nsfwFlagsHidden: number\n  private nsfwFlagsWarned: number\n  private nsfwFlagsBlurred: number\n\n  private defaultValues = new Map<keyof VideoFilters, any>([\n    [ 'sort', '-publishedAt' ],\n    [ 'languageOneOf', undefined ],\n    [ 'categoryOneOf', undefined ],\n    [ 'scope', 'federated' ],\n    [ 'allVideos', false ],\n    [ 'live', 'both' ],\n    [ 'search', '' ]\n  ])\n\n  private activeFilters: VideoFilterActive[] = []\n\n  private onChangeCallbacks: (() => void)[] = []\n  private oldFormObjectString: string\n\n  private customizedByUser = false\n\n  private readonly hiddenFields: string[] = []\n\n  constructor (defaultSort: string, defaultScope: VideoFilterScope, hiddenFields: string[] = []) {\n    this.setDefaultSort(defaultSort)\n    this.setDefaultScope(defaultScope)\n\n    this.hiddenFields = hiddenFields\n\n    this.reset({ triggerChange: false })\n  }\n\n  // ---------------------------------------------------------------------------\n\n  onChange (cb: () => void) {\n    this.onChangeCallbacks.push(cb)\n  }\n\n  private triggerChange () {\n    if (this.onChangeCallbacks.length === 0) return\n\n    // Don't run on change if the values did not change\n    const currentFormObjectString = JSON.stringify(this.toFormObject())\n\n    const noChanges = !!this.oldFormObjectString && currentFormObjectString === this.oldFormObjectString\n\n    debugLogger('Checking if we need to trigger change', { changes: !noChanges })\n\n    if (noChanges) return\n\n    this.oldFormObjectString = currentFormObjectString\n\n    for (const cb of this.onChangeCallbacks) {\n      cb()\n    }\n  }\n\n  // ---------------------------------------------------------------------------\n\n  setDefaultScope (scope: VideoFilterScope) {\n    this.defaultValues.set('scope', scope)\n  }\n\n  setDefaultSort (sort: string) {\n    this.defaultValues.set('sort', sort)\n  }\n\n  setNSFWPolicy (user: Pick<User, 'nsfwPolicy' | 'nsfwFlagsDisplayed' | 'nsfwFlagsHidden' | 'nsfwFlagsWarned' | 'nsfwFlagsBlurred'>) {\n    this.nsfwPolicy = user.nsfwPolicy\n    this.nsfwFlagsDisplayed = user.nsfwFlagsDisplayed\n    this.nsfwFlagsHidden = user.nsfwFlagsHidden\n    this.nsfwFlagsWarned = user.nsfwFlagsWarned\n    this.nsfwFlagsBlurred = user.nsfwFlagsBlurred\n  }\n\n  // ---------------------------------------------------------------------------\n\n  private reset (options: {\n    specificKey?: string\n    triggerChange?: boolean // default true\n  }) {\n    const { specificKey, triggerChange = true } = options\n\n    debugLogger('Reset video filters', { specificKey })\n\n    for (const [ key, value ] of this.defaultValues) {\n      if (specificKey && specificKey !== key) continue\n      ;(this as any)[key] = value\n    }\n\n    this.buildActiveFilters()\n\n    if (triggerChange) {\n      this.triggerChange()\n    }\n  }\n\n  // ---------------------------------------------------------------------------\n\n  load (obj: Partial<AttributesOnly<VideoFilters>>, customizedByUser?: boolean) {\n    debugLogger('Loading object in video filters', { obj, customizedByUser })\n\n    this.reset({ triggerChange: false })\n\n    if (customizedByUser) this.customizedByUser = customizedByUser\n\n    if (obj.sort !== undefined) this.sort = obj.sort\n\n    if (obj.languageOneOf !== undefined) this.languageOneOf = splitIntoArray(obj.languageOneOf)\n    if (obj.categoryOneOf !== undefined) this.categoryOneOf = splitIntoArray(obj.categoryOneOf)\n\n    if (obj.scope !== undefined) this.scope = obj.scope\n    if (obj.allVideos !== undefined) this.allVideos = toBoolean(obj.allVideos)\n\n    if (obj.live !== undefined) this.live = obj.live\n\n    if (obj.search !== undefined) this.search = obj.search\n\n    this.buildActiveFilters()\n    this.triggerChange()\n  }\n\n  clone () {\n    debugLogger('Cloning video filters', { videoFilters: this })\n\n    const cloned = new VideoFilters(this.defaultValues.get('sort'), this.defaultValues.get('scope'), this.hiddenFields)\n\n    cloned.setNSFWPolicy({\n      nsfwPolicy: this.nsfwPolicy,\n      nsfwFlagsDisplayed: this.nsfwFlagsDisplayed,\n      nsfwFlagsHidden: this.nsfwFlagsHidden,\n      nsfwFlagsWarned: this.nsfwFlagsWarned,\n      nsfwFlagsBlurred: this.nsfwFlagsBlurred\n    })\n\n    cloned.load(this.toUrlObject(), this.customizedByUser)\n\n    return cloned\n  }\n\n  // ---------------------------------------------------------------------------\n\n  hasBeenCustomizedByUser () {\n    return this.customizedByUser\n  }\n\n  // ---------------------------------------------------------------------------\n\n  private buildActiveFilters () {\n    this.activeFilters = []\n\n    this.activeFilters.push({\n      key: 'nsfw',\n      canRemove: false,\n      label: $localize`Sensitive content`,\n      value: this.getNSFWValue()\n    })\n\n    this.activeFilters.push({\n      key: 'scope',\n      canRemove: false,\n      label: $localize`Scope`,\n      value: this.scope === 'federated'\n        ? $localize`All platforms`\n        : $localize`This platform`\n    })\n\n    if (this.languageOneOf && this.languageOneOf.length !== 0) {\n      this.activeFilters.push({\n        key: 'languageOneOf',\n        canRemove: true,\n        label: $localize`Languages`,\n        value: this.languageOneOf.map(l => l.toUpperCase()).join(', '),\n        rawValue: this.languageOneOf\n      })\n    }\n\n    if (this.categoryOneOf && this.categoryOneOf.length !== 0) {\n      this.activeFilters.push({\n        key: 'categoryOneOf',\n        canRemove: true,\n        label: $localize`Categories`,\n        value: this.categoryOneOf.join(', '),\n        rawValue: this.categoryOneOf\n      })\n    }\n\n    if (this.allVideos) {\n      this.activeFilters.push({\n        key: 'allVideos',\n        canRemove: true,\n        label: $localize`All videos`\n      })\n    }\n\n    if (this.live === 'true') {\n      this.activeFilters.push({\n        key: 'live',\n        canRemove: true,\n        label: $localize`Only lives`\n      })\n    } else if (this.live === 'false') {\n      this.activeFilters.push({\n        key: 'live',\n        canRemove: true,\n        label: $localize`Only VOD`\n      })\n    }\n\n    this.activeFilters = this.activeFilters\n      .filter(a => this.hiddenFields.includes(a.key) === false)\n  }\n\n  getActiveFilters () {\n    return this.activeFilters\n  }\n\n  // ---------------------------------------------------------------------------\n\n  toFormObject (): VideoFiltersKeys {\n    const result: Partial<VideoFiltersKeys> = {}\n\n    for (const [ key ] of this.defaultValues) {\n      result[key] = this[key]\n    }\n\n    return result as VideoFiltersKeys\n  }\n\n  toUrlObject () {\n    const result: { [id: string]: any } = {}\n\n    for (const [ key, defaultValue ] of this.defaultValues) {\n      if (this[key] !== defaultValue) {\n        result[key] = this[key]\n      }\n    }\n\n    return result\n  }\n\n  toVideosAPIObject () {\n    let isLocal: boolean\n    let include: VideoIncludeType\n    let privacyOneOf: VideoPrivacyType[]\n\n    if (this.scope === 'local') {\n      isLocal = true\n    }\n\n    if (this.allVideos) {\n      include = VideoInclude.NOT_PUBLISHED_STATE\n      privacyOneOf = getAllPrivacies()\n    }\n\n    let isLive: boolean\n    if (this.live === 'true') isLive = true\n    else if (this.live === 'false') isLive = false\n\n    return {\n      ...this.buildNSFWVideosAPIObject(),\n\n      sort: this.sort,\n      languageOneOf: this.languageOneOf,\n      categoryOneOf: this.categoryOneOf,\n      search: this.search,\n      isLocal,\n      include,\n      privacyOneOf,\n      isLive\n    }\n  }\n\n  private buildNSFWVideosAPIObject (): Partial<Pick<VideosCommonQuery, 'nsfw' | 'nsfwFlagsExcluded' | 'nsfwFlagsIncluded'>> {\n    if (this.allVideos) {\n      return { nsfw: 'both', nsfwFlagsExcluded: NSFWFlag.NONE }\n    }\n\n    const nsfw: BooleanBothQuery = this.nsfwPolicy === 'do_not_list'\n      ? 'false'\n      : 'both'\n\n    let nsfwFlagsIncluded = NSFWFlag.NONE\n    let nsfwFlagsExcluded = NSFWFlag.NONE\n\n    if (this.nsfwPolicy === 'do_not_list') {\n      nsfwFlagsIncluded |= this.nsfwFlagsDisplayed\n      nsfwFlagsIncluded |= this.nsfwFlagsWarned\n      nsfwFlagsIncluded |= this.nsfwFlagsBlurred\n    } else {\n      nsfwFlagsExcluded |= this.nsfwFlagsHidden\n    }\n\n    return { nsfw, nsfwFlagsIncluded, nsfwFlagsExcluded }\n  }\n\n  // ---------------------------------------------------------------------------\n\n  getNSFWSettingsLabel () {\n    let result = this.getGlobalNSFWLabel()\n\n    if (this.hasCustomNSFWFlags()) {\n      result += $localize` Some videos with a specific sensitive content category have a different policy.`\n    }\n\n    return result\n  }\n\n  private getGlobalNSFWLabel () {\n    if (this.nsfwPolicy === 'do_not_list') return $localize`Sensitive content hidden.`\n    if (this.nsfwPolicy === 'warn') return $localize`Sensitive content has a warning.`\n    if (this.nsfwPolicy === 'blur') return $localize`Sensitive content has a warning and the thumbnail is blurred.`\n\n    return $localize`Sensitive content is displayed.`\n  }\n\n  private getNSFWValue () {\n    if (this.hasCustomNSFWFlags()) {\n      if (this.nsfwPolicy === 'do_not_list') return $localize`hidden (with exceptions)`\n      if (this.nsfwPolicy === 'warn') return $localize`warned (with exceptions)`\n      if (this.nsfwPolicy === 'blur') return $localize`blurred (with exceptions)`\n\n      return $localize`displayed (with exceptions)`\n    }\n\n    if (this.nsfwPolicy === 'do_not_list') return $localize`hidden`\n    if (this.nsfwPolicy === 'warn') return $localize`warned`\n    if (this.nsfwPolicy === 'blur') return $localize`blurred`\n\n    return $localize`displayed`\n  }\n\n  private hasCustomNSFWFlags () {\n    return this.nsfwFlagsDisplayed || this.nsfwFlagsHidden || this.nsfwFlagsWarned || this.nsfwFlagsBlurred\n  }\n}\n","<div class=\"margin-content\">\n  <div class=\"videos-header\">\n    <div *ngIf=\"headerActions().length !== 0\" class=\"action-block mb-4\">\n      <ng-container *ngFor=\"let action of headerActions()\">\n        @if (action.routerLink) {\n          <my-button theme=\"secondary\" [ptRouterLink]=\"action.routerLink\" [icon]=\"action.iconName\">{{ action.label }}</my-button>\n        }\n      </ng-container>\n    </div>\n  </div>\n\n  <my-video-filters-header\n    *ngIf=\"displayFilters()\" class=\"d-block\"\n    [displayModerationBlock]=\"displayModerationBlock\" [hideScope]=\"hideScopeFilter()\" [filters]=\"filters\"\n  ></my-video-filters-header>\n\n  <div class=\"no-results\" i18n *ngIf=\"hasDoneFirstQuery && videos.length === 0 && highlightedLives.length === 0\">No results.</div>\n\n  <div\n    myInfiniteScroller (nearOfBottom)=\"onNearOfBottom()\" [dataObservable]=\"onVideosDataSubject.asObservable()\"\n    class=\"videos\" [ngClass]=\"{ 'display-as-row': displayAsRow() }\"\n  >\n    <ng-container *ngIf=\"highlightedLives.length !== 0\">\n      <h2 class=\"date-title\">\n        <my-global-icon class=\"pt-icon me-1 top--1px\" iconName=\"live\"></my-global-icon>\n        <ng-container i18n>Current lives</ng-container>\n      </h2>\n\n      <ng-container *ngFor=\"let live of highlightedLives; trackBy: videoById;\">\n        <div class=\"video-wrapper\">\n          <my-video-miniature\n            [video]=\"live\" [user]=\"user\" [displayAsRow]=\"displayAsRow()\"\n            [displayVideoActions]=\"displayVideoActions()\" [displayOptions]=\"displayOptions\"\n            (videoBlocked)=\"removeVideoFromArray(live)\" (videoRemoved)=\"removeVideoFromArray(live)\"\n          >\n          </my-video-miniature>\n        </div>\n      </ng-container>\n\n      <h2 *ngIf=\"!groupByDate()\" class=\"date-title\">\n        <my-global-icon class=\"pt-icon me-1\" iconName=\"videos\"></my-global-icon> Videos\n      </h2>\n    </ng-container>\n\n    <ng-container *ngFor=\"let video of videos; trackBy: videoById;\">\n      <h2 class=\"date-title\" *ngIf=\"getCurrentGroupedDateLabel(video)\">\n        {{ getCurrentGroupedDateLabel(video) }}\n      </h2>\n\n      <div class=\"video-wrapper\">\n        <my-video-miniature\n          [video]=\"video\" [user]=\"user\" [displayAsRow]=\"displayAsRow()\"\n          [displayVideoActions]=\"displayVideoActions()\" [displayOptions]=\"displayOptions\"\n          (videoBlocked)=\"removeVideoFromArray(video)\" (videoRemoved)=\"removeVideoFromArray(video)\"\n        >\n        </my-video-miniature>\n      </div>\n    </ng-container>\n  </div>\n</div>\n"]}