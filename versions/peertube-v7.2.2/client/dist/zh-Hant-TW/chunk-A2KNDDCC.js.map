{
  "version": 3,
  "sources": ["src/app/shared/shared-main/menu/list-overflow.component.ts", "src/app/shared/shared-main/menu/list-overflow.component.html", "src/app/shared/shared-main/menu/horizontal-menu.component.ts", "src/app/shared/shared-main/menu/horizontal-menu.component.html"],
  "sourcesContent": ["import { NgClass, NgTemplateOutlet, SlicePipe } from '@angular/common'\nimport {\n  AfterViewInit,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  OnInit,\n  TemplateRef,\n  inject,\n  input,\n  viewChild,\n  viewChildren\n} from '@angular/core'\nimport { ScreenService } from '@app/core'\nimport { NgbDropdown, NgbDropdownMenu, NgbDropdownToggle, NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { randomInt } from '@peertube/peertube-core-utils'\nimport debug from 'debug'\nimport { lowerFirst, uniqueId } from 'lodash-es'\n\nconst debugLogger = debug('peertube:main:ListOverflowItem')\n\nexport interface ListOverflowItem {\n  label: string\n  routerLink: string | any[]\n  isDisplayed?: () => boolean\n}\n\n@Component({\n  selector: 'my-list-overflow',\n  templateUrl: './list-overflow.component.html',\n  styleUrls: [ './list-overflow.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    NgTemplateOutlet,\n    NgbDropdown,\n    NgbDropdownToggle,\n    NgClass,\n    NgbDropdownMenu,\n    SlicePipe\n  ]\n})\nexport class ListOverflowComponent<T extends ListOverflowItem> implements OnInit, AfterViewInit {\n  private cdr = inject(ChangeDetectorRef)\n  private modalService = inject(NgbModal)\n  private screenService = inject(ScreenService)\n\n  readonly items = input<T[]>(undefined)\n  readonly itemTemplate = input<\n    TemplateRef<{\n      item: T\n      dropdown?: boolean\n      modal?: boolean\n    }>\n  >(undefined)\n  readonly hasBorder = input(false, { transform: booleanAttribute })\n\n  readonly modal = viewChild<ElementRef>('modal')\n  readonly parent = viewChild<ElementRef<HTMLDivElement>>('itemsParent')\n  readonly itemsRendered = viewChildren<ElementRef>('itemsRendered')\n\n  showItemsUntilIndexExcluded: number\n  isInMobileView = false\n  initialized = false\n\n  private randomInt: number\n\n  ngOnInit () {\n    this.randomInt = randomInt(1, 2000)\n  }\n\n  ngAfterViewInit () {\n    setTimeout(() => {\n      this.onWindowResize()\n      this.initialized = true\n    }, 0)\n  }\n\n  isMenuDisplayed () {\n    return !!this.showItemsUntilIndexExcluded\n  }\n\n  @HostListener('window:resize')\n  onWindowResize () {\n    this.isInMobileView = !!this.screenService.isInMobileView()\n\n    const parentWidth = this.parent().nativeElement.getBoundingClientRect().width\n    let showItemsUntilIndexExcluded: number\n    let accWidth = 0\n\n    debugLogger('Parent width is %d', parentWidth)\n\n    for (const [ index, el ] of this.itemsRendered().entries()) {\n      accWidth += el.nativeElement.getBoundingClientRect().width\n\n      if (showItemsUntilIndexExcluded === undefined) {\n        showItemsUntilIndexExcluded = (parentWidth < accWidth) ? index : undefined\n      }\n    }\n\n    debugLogger('Accumulated children width is %d so exclude index is %d', accWidth, showItemsUntilIndexExcluded)\n\n    this.showItemsUntilIndexExcluded = showItemsUntilIndexExcluded\n    this.cdr.markForCheck()\n  }\n\n  toggleModal () {\n    this.modalService.open(this.modal(), { centered: true })\n  }\n\n  getId (id: number | string = uniqueId()): string {\n    return lowerFirst(this.constructor.name) + '_' + this.randomInt + '_' + id\n  }\n}\n", "<div class=\"root\">\n  <div #itemsParent class=\"list-overflow-parent\" [ngClass]=\"{ 'opacity-0': !initialized, 'has-border': hasBorder() }\">\n\n    <ul class=\"ul-unstyle d-flex\">\n      @for (item of items(); track item.label; let id = $index) {\n        @if (!item.isDisplayed || item.isDisplayed()) {\n          <li class=\"d-inline-block\" [id]=\"getId(id)\" #itemsRendered [style]=\"{ visibility: showItemsUntilIndexExcluded && id >= showItemsUntilIndexExcluded ? 'hidden' : 'inherit' }\">\n            <ng-container *ngTemplateOutlet=\"itemTemplate(); context: {item: item}\"></ng-container>\n          </li>\n        }\n      }\n    </ul>\n\n    @if (isMenuDisplayed()) {\n      @if (isInMobileView) {\n        <button type=\"button\" class=\"peertube-button tertiary-button p-0 list-overflow-menu overflow-button\" (click)=\"toggleModal()\">\n          <span class=\"chevron-down\"></span>\n        </button>\n      }\n\n      <div [hidden]=\"isInMobileView\" class=\"list-overflow-menu\" ngbDropdown container=\"body\" #dropdown=\"ngbDropdown\">\n        <button class=\"peertube-button tertiary-button p-0 overflow-button\" ngbDropdownToggle type=\"button\">\n          <span class=\"chevron-down\"></span>\n        </button>\n\n        <ul class=\"ul-unstyle\" ngbDropdownMenu>\n          @for (item of items() | slice:showItemsUntilIndexExcluded:items().length; track item.label) {\n            @if (!item.isDisplayed || item.isDisplayed()) {\n              <li>\n                <ng-container *ngTemplateOutlet=\"itemTemplate(); context: {item: item, dropdown: true}\"></ng-container>\n              </li>\n            }\n          }\n        </ul>\n      </div>\n    }\n  </div >\n\n  <ng-template #modal let-close=\"close\" let-dismiss=\"dismiss\">\n    <div class=\"modal-body\">\n      <ul class=\"ul-unstyle\">\n        @for (item of items() | slice:showItemsUntilIndexExcluded:items().length; track item.label) {\n          @if (!item.isDisplayed || item.isDisplayed()) {\n            <li>\n              <ng-container *ngTemplateOutlet=\"itemTemplate(); context: {item: item, modal: true}\"></ng-container>\n            </li>\n          }\n        }\n      </ul>\n    </div>\n  </ng-template>\n</div>\n", "import { CommonModule } from '@angular/common'\nimport { booleanAttribute, Component, OnChanges, OnDestroy, OnInit, inject, input } from '@angular/core'\nimport { ActivatedRoute, NavigationEnd, Router, RouterModule } from '@angular/router'\nimport { GlobalIconComponent, GlobalIconName } from '@app/shared/shared-icons/global-icon.component'\nimport { logger } from '@root-helpers/logger'\nimport { filter, Subscription } from 'rxjs'\nimport { PluginSelectorDirective } from '../plugins/plugin-selector.directive'\nimport { ListOverflowComponent } from './list-overflow.component'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\n\nexport type HorizontalMenuEntry = {\n  label: string\n  iconName?: GlobalIconName\n\n  routerLink: string\n  queryParams?: Record<string, any>\n\n  isDisplayed?: () => boolean // Default: () => true\n  pluginSelectorId?: string // Default: () => true\n\n  children?: {\n    label: string\n\n    routerLink: string\n    queryParams?: Record<string, any>\n\n    isDisplayed?: () => boolean // Default: () => true\n  }[]\n}\n\n@Component({\n  selector: 'my-horizontal-menu',\n  templateUrl: './horizontal-menu.component.html',\n  styleUrls: [ './horizontal-menu.component.scss' ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ListOverflowComponent,\n    GlobalIconComponent,\n    PluginSelectorDirective\n  ]\n})\nexport class HorizontalMenuComponent implements OnInit, OnChanges, OnDestroy {\n  private router = inject(Router)\n  private route = inject(ActivatedRoute)\n  private modal = inject(NgbModal)\n\n  readonly menuEntries = input<HorizontalMenuEntry[]>([])\n\n  readonly h1 = input<string>(undefined)\n  readonly h1Icon = input<GlobalIconName>(undefined)\n\n  readonly areChildren = input(false, { transform: booleanAttribute })\n  readonly withMarginBottom = input(true, { transform: booleanAttribute })\n\n  activeParent: HorizontalMenuEntry\n  children: HorizontalMenuEntry[] = []\n\n  private routerSub: Subscription\n\n  ngOnInit () {\n    this.routerSub = this.router.events.pipe(\n      filter((event: any) => event instanceof NavigationEnd)\n    ).subscribe(() => this.buildChildren())\n  }\n\n  ngOnChanges () {\n    this.buildChildren()\n  }\n\n  ngOnDestroy () {\n    if (this.routerSub) this.routerSub.unsubscribe()\n  }\n\n  onLinkClick (modal: boolean) {\n    if (modal) {\n      this.modal.dismissAll()\n    }\n  }\n\n  private buildChildren () {\n    this.children = []\n    this.activeParent = undefined\n\n    const currentUrl = window.location.pathname\n    const currentComponentPath = this.route.snapshot.pathFromRoot.reduce((a, c) => {\n      if (c.url.length === 0) return a\n\n      return a + '/' + c.url[0].path\n    }, '')\n\n    const entry = this.menuEntries().find(parent => {\n      if (currentUrl.startsWith(parent.routerLink)) return true\n      if (!parent.routerLink.startsWith('/') && `${currentComponentPath}/${parent.routerLink}` === currentUrl) return true\n\n      if (parent.children) return parent.children.some(child => currentUrl.startsWith(child.routerLink))\n\n      return false\n    })\n\n    if (!entry) {\n      const menuEntries = this.menuEntries()\n      if (menuEntries.length !== 0 && currentUrl !== '/') {\n        logger.info(`Unable to find entry for ${currentUrl} or ${currentComponentPath}`, { menuEntries })\n      }\n\n      return\n    }\n\n    this.children = entry.children\n    this.activeParent = entry\n  }\n}\n", "<div class=\"root\" [ngClass]=\"{ 'with-mb': withMarginBottom() }\">\n  <h1 *ngIf=\"h1()\">\n    <my-global-icon *ngIf=\"h1Icon()\" [iconName]=\"h1Icon()\"></my-global-icon>\n\n    {{ h1() }}\n  </h1>\n\n  <ng-template #entryTemplate let-item=\"item\" let-dropdown=\"dropdown\" let-modal=\"modal\">\n    <a\n      myPluginSelector [pluginSelectorId]=\"item.pluginSelectorId\"\n      [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams\" routerLinkActive=\"active\" class=\"entry\"\n      [ngClass]=\"{ 'child-active': activeParent === item, 'dropdown-item': dropdown, 'in-modal': modal }\"\n      (click)=\"onLinkClick(modal)\"\n    >\n      {{ item.label }}\n    </a>\n  </ng-template>\n\n  <div [ngClass]=\"{ 'children-container': areChildren(), 'parent-container': !areChildren() }\">\n    <my-list-overflow [items]=\"menuEntries()\" [itemTemplate]=\"entryTemplate\" [hasBorder]=\"!areChildren()\"></my-list-overflow>\n  </div>\n\n  @if (children && children.length !== 0) {\n    <div class=\"children-container\">\n      <my-list-overflow [items]=\"children\" [itemTemplate]=\"entryTemplate\"></my-list-overflow>\n    </div>\n  }\n</div>\n"],
  "mappings": "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",
  "names": ["import_debug", "\u0275\u0275elementContainer", "\u0275\u0275elementStart", "\u0275\u0275template", "ListOverflowComponent_For_5_Conditional_0_ng_container_2_Template", "\u0275\u0275elementEnd", "\u0275\u0275styleMap", "\u0275\u0275pureFunction1", "_c4", "ctx_r3", "showItemsUntilIndexExcluded", "\u0275$index_7_r3", "\u0275\u0275property", "getId", "\u0275\u0275advance", "itemTemplate", "_c5", "item_r2", "ListOverflowComponent_For_5_Conditional_0_Template", "\u0275\u0275conditional", "isDisplayed", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r5", "\u0275\u0275nextContext", "\u0275\u0275resetView", "toggleModal", "\u0275\u0275element", "ListOverflowComponent_Conditional_6_For_7_Conditional_0_ng_container_1_Template", "_c6", "item_r6", "ListOverflowComponent_Conditional_6_For_7_Conditional_0_Template", "ListOverflowComponent_Conditional_6_Conditional_0_Template", "\u0275\u0275repeaterCreate", "ListOverflowComponent_Conditional_6_For_7_Template", "_forTrack0", "isInMobileView", "\u0275\u0275repeater", "\u0275\u0275pipeBind3", "items", "length", "ListOverflowComponent_ng_template_7_For_3_Conditional_0_ng_container_1_Template", "_c7", "item_r7", "ListOverflowComponent_ng_template_7_For_3_Conditional_0_Template", "ListOverflowComponent_ng_template_7_For_3_Template", "debugLogger", "debug", "ListOverflowComponent", "cdr", "inject", "ChangeDetectorRef", "modalService", "NgbModal", "screenService", "ScreenService", "input", "undefined", "hasBorder", "transform", "booleanAttribute", "modal", "viewChild", "parent", "itemsRendered", "viewChildren", "initialized", "randomInt", "ngOnInit", "ngAfterViewInit", "setTimeout", "onWindowResize", "isMenuDisplayed", "parentWidth", "nativeElement", "getBoundingClientRect", "width", "accWidth", "index", "el", "entries", "markForCheck", "open", "centered", "id", "uniqueId", "lowerFirst", "constructor", "name", "selectors", "viewQuery", "rf", "ctx", "\u0275\u0275resolveWindow", "ListOverflowComponent_For_5_Template", "ListOverflowComponent_Conditional_6_Template", "ListOverflowComponent_ng_template_7_Template", "\u0275\u0275templateRefExtractor", "\u0275\u0275pureFunction2", "_c3", "NgTemplateOutlet", "NgbDropdown", "NgbDropdownToggle", "NgClass", "NgbDropdownMenu", "SlicePipe", "styles", "changeDetection", "_ListOverflowComponent", "\u0275\u0275element", "\u0275\u0275property", "ctx_r0", "h1Icon", "\u0275\u0275elementStart", "\u0275\u0275template", "HorizontalMenuComponent_h1_1_my_global_icon_1_Template", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "h1", "\u0275\u0275listener", "modal_r3", "\u0275\u0275restoreView", "_r2", "modal", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onLinkClick", "item_r4", "pluginSelectorId", "routerLink", "queryParams", "\u0275\u0275pureFunction3", "_c2", "activeParent", "dropdown_r5", "label", "children", "entryTemplate_r6", "HorizontalMenuComponent", "router", "inject", "Router", "route", "ActivatedRoute", "NgbModal", "menuEntries", "input", "undefined", "areChildren", "transform", "booleanAttribute", "withMarginBottom", "routerSub", "ngOnInit", "events", "pipe", "filter", "event", "NavigationEnd", "subscribe", "buildChildren", "ngOnChanges", "ngOnDestroy", "unsubscribe", "dismissAll", "currentUrl", "window", "location", "pathname", "currentComponentPath", "snapshot", "pathFromRoot", "reduce", "a", "c", "url", "length", "path", "entry", "find", "parent", "startsWith", "some", "child", "logger", "info", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "HorizontalMenuComponent_h1_1_Template", "HorizontalMenuComponent_ng_template_2_Template", "\u0275\u0275templateRefExtractor", "HorizontalMenuComponent_Conditional_6_Template", "\u0275\u0275pureFunction1", "_c0", "\u0275\u0275pureFunction2", "_c1", "\u0275\u0275conditional", "CommonModule", "NgClass", "NgIf", "RouterModule", "RouterLink", "RouterLinkActive", "ListOverflowComponent", "GlobalIconComponent", "PluginSelectorDirective", "styles", "_HorizontalMenuComponent"]
}
