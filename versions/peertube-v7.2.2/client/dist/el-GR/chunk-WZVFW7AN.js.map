{"version":3,"mappings":"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","names":["PeerTubeTemplateDirective","template","inject","TemplateRef","name","input","undefined","alias","d","selectors","inputs","_PeerTubeTemplateDirective","$","q","J","e","t","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","r","g","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","labelText","Y","ɵɵelement","ɵɵproperty","labelInnerHTML","ɵɵsanitizeHtml","Z","ɵɵelementContainer","ee","ɵɵtemplate","PeertubeCheckboxComponent_span_7_ng_container_1_Template","labelTemplate","te","ne","PeertubeCheckboxComponent_my_help_8_1_ng_template_0_Template","oe","PeertubeCheckboxComponent_my_help_8_1_Template","helpPlacement","helpTemplate","ie","ɵɵi18n","PeertubeCheckboxComponent","checked","model","inputName","recommended","disabled","describedby","templates","contentChildren","ngAfterContentInit","find","propagateChange","_","writeValue","set","registerOnChange","fn","registerOnTouched","onModelChange","setDisabledState","isDisabled","contentQueries","rf","ctx","dirIndex","N","o","i","w","outputs","features","j","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ngContentSelectors","_c1","decls","vars","consts","i18n_0","$localize","ɵɵtwoWayListener","$event","i0","ɵɵtwoWayBindingSet","ɵɵlistener","PeertubeCheckboxComponent_span_5_Template","PeertubeCheckboxComponent_span_6_Template","PeertubeCheckboxComponent_span_7_Template","PeertubeCheckboxComponent_my_help_8_Template","PeertubeCheckboxComponent_div_9_Template","ɵɵprojection","ɵɵtwoWayProperty","k","dependencies","FormsModule","CheckboxControlValueAccessor","NgControlStatus","NgModel","NgIf","NgTemplateOutlet","HelpComponent","styles","_PeertubeCheckboxComponent","b","a","ue"],"ignoreList":[],"sources":["src/app/shared/shared-main/common/peertube-template.directive.ts","src/app/shared/shared-forms/peertube-checkbox.component.html","src/app/shared/shared-forms/peertube-checkbox.component.ts"],"sourcesContent":["import { Directive, TemplateRef, inject, input } from '@angular/core'\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[ptTemplate]',\n  standalone: true\n})\nexport class PeerTubeTemplateDirective<T extends string> {\n  template = inject<TemplateRef<any>>(TemplateRef)\n\n  readonly name = input<T>(undefined, { alias: 'ptTemplate' })\n}\n","<div class=\"root flex-column\">\n  <div class=\"d-flex align-items-center\">\n    <label>\n      <input\n        type=\"checkbox\"\n        [(ngModel)]=\"checked\"\n        (ngModelChange)=\"onModelChange()\"\n        [id]=\"inputName()\"\n        [disabled]=\"disabled\"\n        [attr.aria-describedby]=\"inputName() + '-description'\"\n      />\n      <span></span>\n      <span *ngIf=\"labelText()\">{{ labelText() }}</span>\n      <span\n        *ngIf=\"!labelText() && labelInnerHTML()\"\n        [innerHTML]=\"labelInnerHTML()\"\n      ></span>\n\n      <span *ngIf=\"labelTemplate\">\n        <ng-container *ngTemplateOutlet=\"labelTemplate\"></ng-container>\n      </span>\n    </label>\n\n    <my-help\n      *ngIf=\"helpTemplate\"\n      [tooltipPlacement]=\"helpPlacement()\"\n      helpType=\"custom\"\n    >\n      <ng-template *ngTemplateOutlet=\"helpTemplate\"></ng-template>\n    </my-help>\n\n    <div *ngIf=\"recommended()\" class=\"ms-2 pt-badge badge-secondary\" i18n>Recommended</div>\n  </div>\n\n  <div class=\"d-flex flex-column extra-container ms-4\">\n    <div class=\"wrapper form-group-description\" [id]=\"inputName() + '-description'\">\n      <ng-content select=\"description\"></ng-content>\n    </div>\n\n    <span class=\"wrapper mt-3\">\n      <ng-content select=\"extra\"></ng-content>\n    </span>\n  </div>\n</div>\n","import { NgIf, NgTemplateOutlet } from '@angular/common'\nimport { AfterContentInit, Component, contentChildren, forwardRef, input, model, TemplateRef } from '@angular/core'\nimport { ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms'\nimport { HelpComponent } from '../shared-main/buttons/help.component'\nimport { PeerTubeTemplateDirective } from '../shared-main/common/peertube-template.directive'\n\n@Component({\n  selector: 'my-peertube-checkbox',\n  styleUrls: [ './peertube-checkbox.component.scss' ],\n  templateUrl: './peertube-checkbox.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PeertubeCheckboxComponent),\n      multi: true\n    }\n  ],\n  imports: [ FormsModule, NgIf, NgTemplateOutlet, HelpComponent ]\n})\nexport class PeertubeCheckboxComponent implements ControlValueAccessor, AfterContentInit {\n  readonly checked = model(false)\n  readonly inputName = input<string>(undefined)\n  readonly labelText = input<string>(undefined)\n  readonly labelInnerHTML = input<string>(undefined)\n  readonly helpPlacement = input('top auto')\n  readonly recommended = input(false)\n\n  disabled = false\n  describedby: string\n\n  readonly templates = contentChildren(PeerTubeTemplateDirective)\n\n  labelTemplate: TemplateRef<any>\n  helpTemplate: TemplateRef<any>\n\n  ngAfterContentInit () {\n    {\n      const t = this.templates().find(t => t.name() === 'label')\n      if (t) this.labelTemplate = t.template\n    }\n\n    {\n      const t = this.templates().find(t => t.name() === 'help')\n      if (t) this.helpTemplate = t.template\n    }\n  }\n\n  propagateChange = (_: any) => {\n    // empty\n  }\n\n  writeValue (checked: boolean) {\n    this.checked.set(checked)\n  }\n\n  registerOnChange (fn: (_: any) => void) {\n    this.propagateChange = fn\n  }\n\n  registerOnTouched () {\n    // Unused\n  }\n\n  onModelChange () {\n    this.propagateChange(this.checked())\n  }\n\n  setDisabledState (isDisabled: boolean) {\n    this.disabled = isDisabled\n  }\n}\n"]}