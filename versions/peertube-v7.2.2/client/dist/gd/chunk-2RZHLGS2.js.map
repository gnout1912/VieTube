{"version":3,"mappings":"iFAIO,GAAMA,GAA4D,CACvEC,WAAY,CACVC,EAAWC,SACXD,EAAWE,UAAU,CAAC,EACtBF,EAAWG,UAAU,GAAG,CAAC,EAE3BC,SAAU,CACRH,0CAAUI,CACVC,qGAAWD,CACXE,8EAAWF,GAIFG,EAAuD,CAClET,WAAY,CACVC,EAAWC,QAAQ,EAErBG,SAAU,CACRH,2CAAUI,GAIDI,EAA2D,CACtEV,WAAY,CACVC,EAAWE,UAAU,CAAC,EACtBF,EAAWG,UAAU,GAAI,CAAC,EAE5BC,SAAU,CACRE,8FAAWD,CACXE,0EAAWF,GAIFK,EAA0D,CACrEX,WAAY,GACZK,SAAU,CACRH,8EAAUI,GAIR,QAAUM,GAA6BC,EAAiCC,EAAiC,CACzGA,EAAQC,SAAQ,IAAOC,EAAqBC,OAAOF,SAAQ,EAC7DF,EAAeK,cAAc,CAAEjB,EAAWC,QAAQ,CAAE,EAEpDW,EAAeK,cAAc,IAAI,EAGnCL,EAAeM,YAAW,EAC1BN,EAAeO,uBAAsB,CACvC,SAAAC,CAAA,IAAAC,CAAA,CAAAC,CAAA,IAAAC,CAAA,CAAAC,CAAA,IAAAC,CAAA,CAAAC,CAAA,IAAAC,CAAA,CAAAF,CAAA,IAAAG,CAAA","names":["VIDEO_PLAYLIST_DISPLAY_NAME_VALIDATOR","VALIDATORS","Validators","required","minLength","maxLength","MESSAGES","$localize","minlength","maxlength","VIDEO_PLAYLIST_PRIVACY_VALIDATOR","VIDEO_PLAYLIST_DESCRIPTION_VALIDATOR","VIDEO_PLAYLIST_CHANNEL_ID_VALIDATOR","setPlaylistChannelValidator","channelControl","privacy","toString","VideoPlaylistPrivacy","PUBLIC","setValidators","markAsDirty","updateValueAndValidity","n","a","o","b","s","c","A","d","e"],"ignoreList":[],"sources":["src/app/shared/form-validators/video-playlist-validators.ts"],"sourcesContent":["import { Validators, AbstractControl } from '@angular/forms'\nimport { BuildFormValidator } from './form-validator.model'\nimport { VideoPlaylistPrivacy, VideoPlaylistPrivacyType } from '@peertube/peertube-models'\n\nexport const VIDEO_PLAYLIST_DISPLAY_NAME_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [\n    Validators.required,\n    Validators.minLength(1),\n    Validators.maxLength(120)\n  ],\n  MESSAGES: {\n    required: $localize`Display name is required.`,\n    minlength: $localize`Display name must be at least 1 character long.`,\n    maxlength: $localize`Display name cannot be more than 120 characters long.`\n  }\n}\n\nexport const VIDEO_PLAYLIST_PRIVACY_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [\n    Validators.required\n  ],\n  MESSAGES: {\n    required: $localize`Privacy is required.`\n  }\n}\n\nexport const VIDEO_PLAYLIST_DESCRIPTION_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [\n    Validators.minLength(3),\n    Validators.maxLength(1000)\n  ],\n  MESSAGES: {\n    minlength: $localize`Description must be at least 3 characters long.`,\n    maxlength: $localize`Description cannot be more than 1000 characters long.`\n  }\n}\n\nexport const VIDEO_PLAYLIST_CHANNEL_ID_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [],\n  MESSAGES: {\n    required: $localize`The channel is required when the playlist is public.`\n  }\n}\n\nexport function setPlaylistChannelValidator (channelControl: AbstractControl, privacy: VideoPlaylistPrivacyType) {\n  if (privacy.toString() === VideoPlaylistPrivacy.PUBLIC.toString()) {\n    channelControl.setValidators([ Validators.required ])\n  } else {\n    channelControl.setValidators(null)\n  }\n\n  channelControl.markAsDirty()\n  channelControl.updateValueAndValidity()\n}\n"]}