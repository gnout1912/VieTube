{
  "version": 3,
  "sources": ["src/app/shared/shared-plugin-pages/plugin-pages.component.ts", "src/app/shared/shared-plugin-pages/plugin-pages.component.html"],
  "sourcesContent": ["import { AfterViewInit, Component, ElementRef, OnDestroy, inject, viewChild } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { MetaService, PluginService } from '@app/core'\nimport { logger } from '@root-helpers/logger'\nimport { Subscription } from 'rxjs/internal/Subscription'\n\n@Component({\n  templateUrl: './plugin-pages.component.html',\n  standalone: true\n})\nexport class PluginPagesComponent implements OnDestroy, AfterViewInit {\n  private metaService = inject(MetaService)\n  private route = inject(ActivatedRoute)\n  private router = inject(Router)\n  private pluginService = inject(PluginService)\n\n  readonly root = viewChild<ElementRef>('root')\n\n  private urlSub: Subscription\n\n  ngAfterViewInit () {\n    this.urlSub = this.route.url.subscribe(() => {\n      this.loadRoute()\n    })\n  }\n\n  ngOnDestroy () {\n    if (this.urlSub) this.urlSub.unsubscribe()\n  }\n\n  onRootClick (event: Event) {\n    const target = event.target as HTMLElement\n    if (!target) return\n\n    const a = target.closest('a')\n    if (!a) return\n\n    // Get the href attribute set by the dev, not the one calculated by JS to detect if it's a relative/external link\n    const href = a.getAttribute('href') || ''\n\n    if (!a.target && href.startsWith('/')) {\n      event.preventDefault()\n      event.stopPropagation()\n\n      this.router.navigateByUrl(href)\n    }\n  }\n\n  private async loadRoute () {\n    await this.pluginService.ensurePluginsAreLoaded(this.route.snapshot.data.pluginScope || 'common')\n\n    if (!this.route.snapshot.data.parentRoute) {\n      logger.error('Missing \"parentRoute\" URL data to load plugin route ' + this.route.snapshot.url)\n      return\n    }\n\n    const path = '/' + this.route.snapshot.url.map(u => u.path).join('/')\n\n    const registered = this.pluginService.getRegisteredClientRoute(path, this.route.snapshot.data.parentRoute)\n    if (!registered) {\n      logger.info(`Could not find registered route ${path}`, { routes: this.pluginService.getAllRegisteredClientRoutes() })\n\n      return this.router.navigate([ '/404' ], { skipLocationChange: true })\n    }\n\n    if (registered.title) {\n      this.metaService.setTitle(registered.title)\n    }\n\n    registered.onMount({ rootEl: this.root().nativeElement })\n  }\n}\n", "<!-- eslint-disable @angular-eslint/template/interactive-supports-focus -->\n<!-- eslint-disable @angular-eslint/template/click-events-have-key-events -->\n<div (click)=\"onRootClick($event)\" #root></div>\n"],
  "mappings": "+NAUaA,GAAoB,IAAA,CAA3B,IAAOA,EAAP,MAAOA,CAAoB,CACvBC,YAAcC,EAAOC,CAAW,EAChCC,MAAQF,EAAOG,CAAc,EAC7BC,OAASJ,EAAOK,CAAM,EACtBC,cAAgBN,EAAOO,CAAa,EAEnCC,KAAOC,EAAsB,MAAM,EAEpCC,OAERC,iBAAe,CACb,KAAKD,OAAS,KAAKR,MAAMU,IAAIC,UAAU,IAAK,CAC1C,KAAKC,UAAS,CAChB,CAAC,CACH,CAEAC,aAAW,CACL,KAAKL,QAAQ,KAAKA,OAAOM,YAAW,CAC1C,CAEAC,YAAaC,EAAY,CACvB,IAAMC,EAASD,EAAMC,OACrB,GAAI,CAACA,EAAQ,OAEb,IAAMC,EAAID,EAAOE,QAAQ,GAAG,EAC5B,GAAI,CAACD,EAAG,OAGR,IAAME,EAAOF,EAAEG,aAAa,MAAM,GAAK,GAEnC,CAACH,EAAED,QAAUG,EAAKE,WAAW,GAAG,IAClCN,EAAMO,eAAc,EACpBP,EAAMQ,gBAAe,EAErB,KAAKtB,OAAOuB,cAAcL,CAAI,EAElC,CAEcR,WAAS,QAAAc,EAAA,sBAGrB,GAFA,MAAM,KAAKtB,cAAcuB,uBAAuB,KAAK3B,MAAM4B,SAASC,KAAKC,aAAe,QAAQ,EAE5F,CAAC,KAAK9B,MAAM4B,SAASC,KAAKE,YAAa,CACzCC,EAAOC,MAAM,uDAAyD,KAAKjC,MAAM4B,SAASlB,GAAG,EAC7F,MACF,CAEA,IAAMwB,EAAO,IAAM,KAAKlC,MAAM4B,SAASlB,IAAIyB,IAAIC,GAAKA,EAAEF,IAAI,EAAEG,KAAK,GAAG,EAE9DC,EAAa,KAAKlC,cAAcmC,yBAAyBL,EAAM,KAAKlC,MAAM4B,SAASC,KAAKE,WAAW,EACzG,GAAI,CAACO,EACHN,OAAAA,EAAOQ,KAAK,mCAAmCN,CAAI,GAAI,CAAEO,OAAQ,KAAKrC,cAAcsC,6BAA4B,CAAE,CAAE,EAE7G,KAAKxC,OAAOyC,SAAS,CAAE,MAAM,EAAI,CAAEC,mBAAoB,EAAI,CAAE,EAGlEN,EAAWO,OACb,KAAKhD,YAAYiD,SAASR,EAAWO,KAAK,EAG5CP,EAAWS,QAAQ,CAAEC,OAAQ,KAAK1C,KAAI,EAAG2C,aAAa,CAAE,CAC1D,OA5DWrD,wCAAAA,EAAoB,KAApBA,sBAAAA,EAAoBsD,UAAA,CAAA,CAAA,cAAA,CAAA,EAAAC,UAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,oHCRjCE,EAAA,EAAA,MAAA,EAAA,CAAA,EAAKC,EAAA,QAAA,SAAAC,EAAA,CAAAC,OAAAC,EAAAC,CAAA,EAAAC,EAASP,EAAAtC,YAAAyC,CAAA,CAAmB,CAAA,CAAA,EAAQK,EAAA,uBDQnC,IAAOjE,EAAPkE,SAAOlE,CAAoB,GAAA",
  "names": ["PluginPagesComponent", "metaService", "inject", "MetaService", "route", "ActivatedRoute", "router", "Router", "pluginService", "PluginService", "root", "viewChild", "urlSub", "ngAfterViewInit", "url", "subscribe", "loadRoute", "ngOnDestroy", "unsubscribe", "onRootClick", "event", "target", "a", "closest", "href", "getAttribute", "startsWith", "preventDefault", "stopPropagation", "navigateByUrl", "__async", "ensurePluginsAreLoaded", "snapshot", "data", "pluginScope", "parentRoute", "logger", "error", "path", "map", "u", "join", "registered", "getRegisteredClientRoute", "info", "routes", "getAllRegisteredClientRoutes", "navigate", "skipLocationChange", "title", "setTitle", "onMount", "rootEl", "nativeElement", "selectors", "viewQuery", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275resetView", "\u0275\u0275elementEnd", "_PluginPagesComponent"]
}
