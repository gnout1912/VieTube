{"version":3,"mappings":"uTAKEA,EAAA,SAAAC,EAAA,KAAyIC,EAAA,aAAAC,EAAAC,CAAA,CAAAC,CAAA,KAAAD,CAAA,KAL3IJ,EAAA,gBACEM,EAAA,sBAEAN,EAAA,SAAAO,EAAA,KAA0HD,EAAA,YAAuB,YAA4B,YAAoCE,EAAA,EAAAN,EAAA,EAEjNO,EAAA,EAAAC,EAAA,WACFR,EAAA,GAAAE,CAAA,QAAAO,CAAA,CAAAC,CAAA,GADMC,EAAA,GAAAC,EAAA,QAAAC,EAAAC,SAAA,KCSN,GAAaC,IAA6B,KAApC,GAAOA,GAAP,KAAOA,EAA6B,CAChCC,YAAcC,EAAOC,CAAW,EAE/BJ,SAAWK,EAAM,EAAK,EAE/BC,KAAa,KAEbC,yBAAuB,CACrB,MAAK,MAAKD,KAAKE,cAER,KAAKF,KAAKE,cAAcC,OAAQC,GAA2BA,EAAQC,QAAQC,SAAW,GAAK,CAACF,EAAQG,WAAY,EAAED,OAAS,EAF7F,EAGvC,EAEAE,UAAQ,CACN,KAAKR,KAAO,KAAKJ,YAAYa,QAAO,CACtC,IAAAC,CAAA,CAfWf,4CAA6B,IAAAe,CAAA,CAA7Bf,wBAA6BgB,UAAA,gCAAAC,OAAA,CAAAlB,SAAA,gBAAAmB,MAAA,EAAAC,KAAA,EAAAC,WAAA,IAAAC,qJDX4I,gDAAQ,WAAW,mDAAS,UAA5B,gDAAQ,UAAW,mDAAS,QAA5B,gDAAQ,UAAW,mDAAS,KAAAC,CAAA,CAAAC,CAAA,CAAAD,CAAA,MAAAE,CAAA,QAAAA,CAAA,iBAEzFC,sVALzHjC,EAAA,EAAAkC,EAAA,kBAAAF,CAAA,IAAW3B,EAAA,OAAA8B,EAAArB,wBAAA,KAAAsB,YAAA,ECYEC,EAAMC,EAAqBC,EAAYC,CAAc,EAAAC,OAAA;0EAAA,KAE5D,GAAOjC,GAAPkC,QAAOlC,EAA6B,aAAAmC,CAAA,IAAAC,CAAA","names":["ɵɵelementStart","ɵɵi18n","ɵɵelementEnd","M","n","t","ɵɵelement","ɵɵi18nStart","ɵɵi18nEnd","ɵɵtemplate","ChannelsSetupMessageComponent_my_alert_0_a_7_Template","C","T","ɵɵadvance","ɵɵproperty","ctx_r0","hideLink","ChannelsSetupMessageComponent","authService","inject","AuthService","input","user","hasChannelNotConfigured","videoChannels","filter","channel","avatars","length","description","ngOnInit","getUser","r","selectors","inputs","decls","vars","consts","i18n_0","e","d","F","$localize","ChannelsSetupMessageComponent_my_alert_0_Template","ctx","dependencies","NgIf","GlobalIconComponent","RouterLink","AlertComponent","styles","_ChannelsSetupMessageComponent","H","a"],"ignoreList":[],"sources":["src/app/shared/shared-main/channel/channels-setup-message.component.html","src/app/shared/shared-main/channel/channels-setup-message.component.ts"],"sourcesContent":["<my-alert *ngIf=\"hasChannelNotConfigured()\" type=\"primary\" class=\"text-center\">\n  <my-global-icon iconName=\"tip\"></my-global-icon>\n\n  <div i18n>Some of your channels are not fully set up. Make them welcoming and explicit about what you publish by adding a <strong>banner</strong>, an <strong>avatar</strong> and a <strong>description</strong>.</div>\n\n  <a *ngIf=\"!hideLink()\" class=\"peertube-button-link secondary-button mt-2\" routerLink=\"/my-library/video-channels\" i18n>Set up my channels</a>\n</my-alert>\n","import { NgIf } from '@angular/common'\nimport { Component, OnInit, inject, input } from '@angular/core'\nimport { RouterLink } from '@angular/router'\nimport { AuthService, User } from '@app/core'\nimport { GlobalIconComponent } from '../../shared-icons/global-icon.component'\nimport { AlertComponent } from '../common/alert.component'\nimport { VideoChannel } from './video-channel.model'\n\n@Component({\n  selector: 'my-channels-setup-message',\n  templateUrl: './channels-setup-message.component.html',\n  styleUrls: [ './channels-setup-message.component.scss' ],\n  imports: [ NgIf, GlobalIconComponent, RouterLink, AlertComponent ]\n})\nexport class ChannelsSetupMessageComponent implements OnInit {\n  private authService = inject(AuthService)\n\n  readonly hideLink = input(false)\n\n  user: User = null\n\n  hasChannelNotConfigured () {\n    if (!this.user.videoChannels) return false\n\n    return this.user.videoChannels.filter((channel: VideoChannel) => (channel.avatars.length === 0 || !channel.description)).length > 0\n  }\n\n  ngOnInit () {\n    this.user = this.authService.getUser()\n  }\n}\n"]}