{"version":3,"mappings":"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","names":["VideoChannelEdit","FormReactive","videoChannel","instanceHost","window","location","host","isBulkUpdateVideosDisplayed","ct","t","Nt","a","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","o","_","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","error","ft","ɵɵi18n","At","St","y","ɵɵlistener","$event","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","onBannerChange","onBannerDelete","ɵɵproperty","isCreation","bannerUrl","Mt","_r3","onAvatarChange","onAvatarDelete","displayName","avatars","name","followersCount","Ot","ɵɵtextInterpolate1","formErrors","Tt","ɵɵelement","ɵɵtemplate","VideoChannelCreateComponent_div_10_div_7_Template","ɵɵpureFunction1","_c0","bt","yt","description","Pt","VideoChannelCreateComponent","formReactiveService","inject","FormReactiveService","authService","AuthService","notifier","Notifier","router","Router","videoChannelService","VideoChannelService","hooks","HooksService","VideoChannel","avatar","banner","ngOnInit","buildForm","VIDEO_CHANNEL_NAME_VALIDATOR","VIDEO_CHANNEL_DISPLAY_NAME_VALIDATOR","VIDEO_CHANNEL_DESCRIPTION_VALIDATOR","support","VIDEO_CHANNEL_SUPPORT_VALIDATOR","ngAfterViewInit","runAction","formValidated","undefined","body","form","value","videoChannelCreate","createVideoChannel","pipe","switchMap","uploadAvatar","uploadBanner","subscribe","next","refreshUserInformation","success","navigate","err","status","HttpStatusCode","CONFLICT_409","$localize","message","formData","getFormButtonTitle","getUsername","changeVideoChannelImage","of","v","__ngFactoryType__","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","i18n_0","m","P","M","VideoChannelCreateComponent_my_alert_0_Template","ctx","VideoChannelCreateComponent_Conditional_5_Template","VideoChannelCreateComponent_Conditional_6_Template","VideoChannelCreateComponent_my_actor_banner_edit_8_Template","VideoChannelCreateComponent_my_actor_avatar_edit_9_Template","VideoChannelCreateComponent_div_10_Template","VideoChannelCreateComponent_div_15_Template","VideoChannelCreateComponent_div_21_Template","ɵɵi18nStart","ɵɵi18nEnd","VideoChannelCreateComponent_div_31_Template","i","ɵɵconditional","ɵɵpropertyInterpolate","valid","dependencies","NgIf","FormsModule","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","ReactiveFormsModule","FormGroupDirective","FormControlName","ActorBannerEditComponent","ActorAvatarEditComponent","NgClass","HelpComponent","MarkdownTextareaComponent","PeertubeCheckboxComponent","AlertComponent","MarkdownHintComponent","styles","_VideoChannelCreateComponent","dt","Dt","xt","Lt","It","Ft","Rt","wt","VideoChannelUpdateComponent_div_10_div_7_Template","Vt","Ht","$t","VideoChannelUpdateComponent","route","ActivatedRoute","redirectService","RedirectService","paramsSub","oldSupportField","bulkVideosSupportUpdate","params","routeParams","videoChannelName","getVideoChannel","videoChannelToUpdate","patchValue","ngOnDestroy","unsubscribe","videoChannelUpdate","updateVideoChannel","redirectToPreviousRoute","data","updateAvatar","shallowCopy","genericUploadErrorHandler","deleteVideoChannelImage","resetAvatar","updateBanner","banners","resetBanner","VideoChannelUpdateComponent_my_alert_0_Template","VideoChannelUpdateComponent_Conditional_5_Template","VideoChannelUpdateComponent_Conditional_6_Template","VideoChannelUpdateComponent_my_actor_banner_edit_8_Template","VideoChannelUpdateComponent_my_actor_avatar_edit_9_Template","VideoChannelUpdateComponent_div_10_Template","VideoChannelUpdateComponent_div_15_Template","VideoChannelUpdateComponent_div_21_Template","VideoChannelUpdateComponent_div_31_Template","_VideoChannelUpdateComponent","import_debug","ht","Et","debugLogger","debug","DeferLoadingDirective","el","ElementRef","viewContainer","ViewContainerRef","cd","ChangeDetectorRef","template","contentChild","TemplateRef","loaded","output","view","observer","hasIncompatibleBrowser","load","IntersectionObserver","entries","entry","isIntersecting","target","nativeElement","unobserve","threshold","observe","isLoaded","clear","createEmbeddedView","emit","detectChanges","disconnect","contentQueries","rf","dirIndex","xe","e","Le","outputs","_DeferLoadingDirective","Ct","Ut","Gt","search","Yt","zt","getTotalTitle","Bt","Xt","index","n","videoChannelsChartData","i_r4","chartOptions","getChartAriaLabel","jt","MyVideoChannelsComponent_div_10_div_21_ng_template_2_p_chart_0_Template","Wt","MyVideoChannelsComponent_div_10_div_21_ng_template_2_Template","Kt","Fe","videoChannel_r3","$implicit","deleteVideoChannel","MyVideoChannelsComponent_div_10_div_21_Template","nameWithHost","ɵɵpureFunction0","_c1","_c2","ɵɵi18nExp","B","videosCount","totalViews","ɵɵpipeBind1","_c3","isInSmallView","MyVideoChannelsComponent","confirmService","ConfirmService","screenService","ScreenService","videoChannels","onChannelDataSubject","Subject","pagination","currentPage","itemsPerPage","totalItems","pagesDone","Set","onSearch","resetCurrentPage","loadMoreVideoChannels","__async","confirmWithExpectedInput","formatICU","count","removeVideoChannel","filter","c","id","updatePaginationOnDelete","onNearOfBottom","hasMoreItems","has","add","userInformationLoaded","first","map","account","getUser","withStats","componentPagination","sort","options","listAccountVideoChannels","res","concat","total","labels","viewsPerDay","day","date","toLocaleDateString","datasets","label","views","fill","borderColor","reduce","p","startDate","length","buildChartOptions","channelsMinimumDailyViews","Math","min","minBy","channelsMaximumDailyViews","max","maxBy","plugins","legend","display","tooltip","mode","intersect","external","displayColors","callbacks","formattedValue","scales","x","layout","padding","left","right","top","bottom","elements","point","radius","hover","i18n_3","O","MyVideoChannelsComponent_span_3_Template","ɵɵelementContainerStart","De","MyVideoChannelsComponent_div_8_Template","MyVideoChannelsComponent_div_10_Template","asObservable","GlobalIconComponent","RouterLink","ChannelsSetupMessageComponent","AdvancedInputFilterComponent","InfiniteScrollerDirective","NgFor","ActorAvatarComponent","EditButtonComponent","DeleteButtonComponent","ChartModule","UIChart","NumberFormatterPipe","_MyVideoChannelsComponent","routes_default","path","component","meta","title","vo","default"],"ignoreList":[],"sources":["src/app/shared/standalone-channels/video-channel-edit.ts","src/app/shared/standalone-channels/video-channel-edit.component.html","src/app/shared/standalone-channels/video-channel-create.component.ts","src/app/shared/standalone-channels/video-channel-update.component.ts","src/app/shared/shared-main/common/defer-loading.directive.ts","src/app/+my-library/+my-video-channels/my-video-channels.component.html","src/app/+my-library/+my-video-channels/my-video-channels.component.ts","src/app/+my-library/+my-video-channels/routes.ts"],"sourcesContent":["import { FormReactive } from '@app/shared/shared-forms/form-reactive'\nimport { VideoChannel } from '@app/shared/shared-main/channel/video-channel.model'\n\nexport abstract class VideoChannelEdit extends FormReactive {\n  videoChannel: VideoChannel\n\n  abstract isCreation (): boolean\n  abstract getFormButtonTitle (): string\n\n  get instanceHost () {\n    return window.location.host\n  }\n\n  // Should be implemented by the child\n  isBulkUpdateVideosDisplayed () {\n    return false\n  }\n}\n","<my-alert *ngIf=\"error\" type=\"danger\">{{ error }}</my-alert>\n\n<div class=\"pt-4\">\n  <form (ngSubmit)=\"formValidated()\" [formGroup]=\"form\">\n\n    <div class=\"pt-two-cols\"> <!-- channel grid -->\n      <div class=\"title-col\">\n        @if (isCreation()) {\n          <h2 i18n>NEW CHANNEL</h2>\n        } @else {\n          <h2 i18n>UPDATE CHANNEL</h2>\n        }\n      </div>\n\n      <div class=\"content-col\">\n        <my-actor-banner-edit\n          *ngIf=\"videoChannel\" [previewImage]=\"isCreation()\" class=\"d-block mb-4\"\n          [bannerUrl]=\"videoChannel?.bannerUrl\" (bannerChange)=\"onBannerChange($event)\" (bannerDelete)=\"onBannerDelete()\"\n        ></my-actor-banner-edit>\n\n        <my-actor-avatar-edit\n          *ngIf=\"videoChannel\" class=\"d-block mb-4\" actorType=\"channel\"\n          [displayName]=\"videoChannel.displayName\" [previewImage]=\"isCreation()\" [avatars]=\"videoChannel.avatars\"\n          [username]=\"!isCreation() && videoChannel.name\" [subscribers]=\"!isCreation() && videoChannel.followersCount\"\n          (avatarChange)=\"onAvatarChange($event)\" (avatarDelete)=\"onAvatarDelete()\"\n        ></my-actor-avatar-edit>\n\n        <div class=\"form-group\" *ngIf=\"isCreation()\">\n          <label i18n for=\"name\">Name</label>\n\n          <div class=\"input-group\">\n            <input\n              type=\"text\" id=\"name\" i18n-placeholder placeholder=\"Example: my_channel\"\n              formControlName=\"name\" [ngClass]=\"{ 'input-error': formErrors['name'] }\" class=\"form-control w-auto flex-grow-1 d-block\"\n            >\n            <div class=\"input-group-text\">&#64;{{ instanceHost }}</div>\n          </div>\n          <div *ngIf=\"formErrors['name']\" class=\"form-error\" role=\"alert\">\n            {{ formErrors['name'] }}\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"display-name\">Display name</label>\n          <input\n            type=\"text\" id=\"display-name\" class=\"form-control\"\n            formControlName=\"display-name\" [ngClass]=\"{ 'input-error': formErrors['display-name'] }\"\n          >\n          <div *ngIf=\"formErrors['display-name']\" class=\"form-error\" role=\"alert\">\n            {{ formErrors['display-name'] }}\n          </div>\n        </div>\n\n        <div class=\"form-group markdown-block\">\n          <label i18n for=\"description\">Description</label>\n\n          <my-help helpType=\"markdownText\" supportRelMe=\"true\"></my-help>\n\n          <my-markdown-textarea\n            inputId=\"description\" formControlName=\"description\"\n            markdownType=\"enhanced\" [formError]=\"formErrors['description']\" withEmoji=\"true\" withHtml=\"true\"\n          ></my-markdown-textarea>\n\n          <div *ngIf=\"formErrors.description\" class=\"form-error\" role=\"alert\">\n            {{ formErrors.description }}\n          </div>\n        </div>\n\n        <div class=\"form-group markdown-block\">\n          <label i18n for=\"support\">Support</label>\n\n          <div class=\"form-group-description\" i18n>\n            This is text that helps people visiting your channel page <strong>understand how to support you</strong>. You can use <my-markdown-hint helpType=\"markdownText\">Markdown Language</my-markdown-hint>, including <strong>links to your fundraising tools</strong>.\n          </div>\n\n          <my-markdown-textarea\n            inputId=\"support\" formControlName=\"support\"\n            markdownType=\"enhanced\" [formError]=\"formErrors['support']\" withEmoji=\"true\" withHtml=\"true\"\n          ></my-markdown-textarea>\n        </div>\n\n        <div class=\"form-group\" *ngIf=\"isBulkUpdateVideosDisplayed()\">\n          <my-peertube-checkbox\n            inputName=\"bulkVideosSupportUpdate\" formControlName=\"bulkVideosSupportUpdate\"\n            i18n-labelText labelText=\"Overwrite support field of all videos of this channel\"\n          ></my-peertube-checkbox>\n        </div>\n\n        <input type=\"submit\" class=\"peertube-button primary-button mt-4\" value=\"{{ getFormButtonTitle() }}\" [disabled]=\"!form.valid\">\n      </div>\n    </div>\n  </form>\n</div>\n","import { NgClass, NgIf } from '@angular/common'\nimport { AfterViewInit, Component, OnInit, inject } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { AuthService, HooksService, Notifier } from '@app/core'\nimport {\n  VIDEO_CHANNEL_DESCRIPTION_VALIDATOR,\n  VIDEO_CHANNEL_DISPLAY_NAME_VALIDATOR,\n  VIDEO_CHANNEL_NAME_VALIDATOR,\n  VIDEO_CHANNEL_SUPPORT_VALIDATOR\n} from '@app/shared/form-validators/video-channel-validators'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { VideoChannel } from '@app/shared/shared-main/channel/video-channel.model'\nimport { VideoChannelService } from '@app/shared/shared-main/channel/video-channel.service'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport { HttpStatusCode, VideoChannelCreate } from '@peertube/peertube-models'\nimport { of } from 'rxjs'\nimport { switchMap } from 'rxjs/operators'\nimport { ActorAvatarEditComponent } from '../shared-actor-image-edit/actor-avatar-edit.component'\nimport { ActorBannerEditComponent } from '../shared-actor-image-edit/actor-banner-edit.component'\nimport { MarkdownTextareaComponent } from '../shared-forms/markdown-textarea.component'\nimport { PeertubeCheckboxComponent } from '../shared-forms/peertube-checkbox.component'\nimport { HelpComponent } from '../shared-main/buttons/help.component'\nimport { MarkdownHintComponent } from '../shared-main/text/markdown-hint.component'\nimport { VideoChannelEdit } from './video-channel-edit'\n\n@Component({\n  templateUrl: './video-channel-edit.component.html',\n  styleUrls: [ './video-channel-edit.component.scss' ],\n  imports: [\n    NgIf,\n    FormsModule,\n    ReactiveFormsModule,\n    ActorBannerEditComponent,\n    ActorAvatarEditComponent,\n    NgClass,\n    HelpComponent,\n    MarkdownTextareaComponent,\n    PeertubeCheckboxComponent,\n    AlertComponent,\n    MarkdownHintComponent\n  ]\n})\nexport class VideoChannelCreateComponent extends VideoChannelEdit implements OnInit, AfterViewInit {\n  protected formReactiveService = inject(FormReactiveService)\n  private authService = inject(AuthService)\n  private notifier = inject(Notifier)\n  private router = inject(Router)\n  private videoChannelService = inject(VideoChannelService)\n  private hooks = inject(HooksService)\n\n  error: string\n  videoChannel = new VideoChannel({})\n\n  private avatar: FormData\n  private banner: FormData\n\n  ngOnInit () {\n    this.buildForm({\n      'name': VIDEO_CHANNEL_NAME_VALIDATOR,\n      'display-name': VIDEO_CHANNEL_DISPLAY_NAME_VALIDATOR,\n      'description': VIDEO_CHANNEL_DESCRIPTION_VALIDATOR,\n      'support': VIDEO_CHANNEL_SUPPORT_VALIDATOR\n    })\n  }\n\n  ngAfterViewInit () {\n    this.hooks.runAction('action:video-channel-create.init', 'video-channel')\n  }\n\n  formValidated () {\n    this.error = undefined\n\n    const body = this.form.value\n    const videoChannelCreate: VideoChannelCreate = {\n      name: body.name,\n      displayName: body['display-name'],\n      description: body.description || null,\n      support: body.support || null\n    }\n\n    this.videoChannelService.createVideoChannel(videoChannelCreate)\n      .pipe(\n        switchMap(() => this.uploadAvatar()),\n        switchMap(() => this.uploadBanner())\n      ).subscribe({\n        next: () => {\n          this.authService.refreshUserInformation()\n\n          this.notifier.success($localize`Video channel ${videoChannelCreate.displayName} created.`)\n          this.router.navigate([ '/my-library', 'video-channels' ])\n        },\n\n        error: err => {\n          if (err.status === HttpStatusCode.CONFLICT_409) {\n            this.error = $localize`This name already exists on this platform.`\n            return\n          }\n\n          this.error = err.message\n        }\n      })\n  }\n\n  onAvatarChange (formData: FormData) {\n    this.avatar = formData\n  }\n\n  onAvatarDelete () {\n    this.avatar = null\n  }\n\n  onBannerChange (formData: FormData) {\n    this.banner = formData\n  }\n\n  onBannerDelete () {\n    this.banner = null\n  }\n\n  isCreation () {\n    return true\n  }\n\n  getFormButtonTitle () {\n    return $localize`Create your channel`\n  }\n\n  getUsername () {\n    return this.form.value.name\n  }\n\n  private uploadAvatar () {\n    if (!this.avatar) return of(undefined)\n\n    return this.videoChannelService.changeVideoChannelImage(this.getUsername(), this.avatar, 'avatar')\n  }\n\n  private uploadBanner () {\n    if (!this.banner) return of(undefined)\n\n    return this.videoChannelService.changeVideoChannelImage(this.getUsername(), this.banner, 'banner')\n  }\n}\n","import { NgClass, NgIf } from '@angular/common'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { AfterViewInit, Component, OnDestroy, OnInit, inject } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { ActivatedRoute } from '@angular/router'\nimport { AuthService, HooksService, Notifier, RedirectService } from '@app/core'\nimport { genericUploadErrorHandler } from '@app/helpers'\nimport {\n  VIDEO_CHANNEL_DESCRIPTION_VALIDATOR,\n  VIDEO_CHANNEL_DISPLAY_NAME_VALIDATOR,\n  VIDEO_CHANNEL_SUPPORT_VALIDATOR\n} from '@app/shared/form-validators/video-channel-validators'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { VideoChannelService } from '@app/shared/shared-main/channel/video-channel.service'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport { shallowCopy } from '@peertube/peertube-core-utils'\nimport { VideoChannelUpdate } from '@peertube/peertube-models'\nimport { Subscription } from 'rxjs'\nimport { ActorAvatarEditComponent } from '../shared-actor-image-edit/actor-avatar-edit.component'\nimport { ActorBannerEditComponent } from '../shared-actor-image-edit/actor-banner-edit.component'\nimport { MarkdownTextareaComponent } from '../shared-forms/markdown-textarea.component'\nimport { PeertubeCheckboxComponent } from '../shared-forms/peertube-checkbox.component'\nimport { HelpComponent } from '../shared-main/buttons/help.component'\nimport { MarkdownHintComponent } from '../shared-main/text/markdown-hint.component'\nimport { VideoChannelEdit } from './video-channel-edit'\n\n@Component({\n  selector: 'my-video-channel-update',\n  templateUrl: './video-channel-edit.component.html',\n  styleUrls: [ './video-channel-edit.component.scss' ],\n  imports: [\n    NgIf,\n    FormsModule,\n    ReactiveFormsModule,\n    ActorBannerEditComponent,\n    ActorAvatarEditComponent,\n    NgClass,\n    HelpComponent,\n    MarkdownTextareaComponent,\n    PeertubeCheckboxComponent,\n    AlertComponent,\n    MarkdownHintComponent\n  ]\n})\nexport class VideoChannelUpdateComponent extends VideoChannelEdit implements OnInit, AfterViewInit, OnDestroy {\n  protected formReactiveService = inject(FormReactiveService)\n  private authService = inject(AuthService)\n  private notifier = inject(Notifier)\n  private route = inject(ActivatedRoute)\n  private videoChannelService = inject(VideoChannelService)\n  private redirectService = inject(RedirectService)\n  private hooks = inject(HooksService)\n\n  error: string\n\n  private paramsSub: Subscription\n  private oldSupportField: string\n\n  ngOnInit () {\n    this.buildForm({\n      'display-name': VIDEO_CHANNEL_DISPLAY_NAME_VALIDATOR,\n      'description': VIDEO_CHANNEL_DESCRIPTION_VALIDATOR,\n      'support': VIDEO_CHANNEL_SUPPORT_VALIDATOR,\n      'bulkVideosSupportUpdate': null\n    })\n\n    this.paramsSub = this.route.params.subscribe(routeParams => {\n      const videoChannelName = routeParams['videoChannelName']\n\n      this.videoChannelService.getVideoChannel(videoChannelName)\n        .subscribe({\n          next: videoChannelToUpdate => {\n            this.videoChannel = videoChannelToUpdate\n\n            this.hooks.runAction('action:video-channel-update.video-channel.loaded', 'video-channel', { videoChannel: this.videoChannel })\n\n            this.oldSupportField = videoChannelToUpdate.support\n\n            this.form.patchValue({\n              'display-name': videoChannelToUpdate.displayName,\n              'description': videoChannelToUpdate.description,\n              'support': videoChannelToUpdate.support\n            })\n          },\n\n          error: err => {\n            this.error = err.message\n          }\n        })\n    })\n  }\n\n  ngAfterViewInit () {\n    this.hooks.runAction('action:video-channel-update.init', 'video-channel')\n  }\n\n  ngOnDestroy () {\n    if (this.paramsSub) this.paramsSub.unsubscribe()\n  }\n\n  formValidated () {\n    this.error = undefined\n\n    const body = this.form.value\n    const videoChannelUpdate: VideoChannelUpdate = {\n      displayName: body['display-name'],\n      description: body.description || null,\n      support: body.support || null,\n      bulkVideosSupportUpdate: body.bulkVideosSupportUpdate || false\n    }\n\n    this.videoChannelService.updateVideoChannel(this.videoChannel.name, videoChannelUpdate)\n      .subscribe({\n        next: () => {\n          this.authService.refreshUserInformation()\n\n          this.notifier.success($localize`Video channel ${videoChannelUpdate.displayName} updated.`)\n\n          this.redirectService.redirectToPreviousRoute('/c/' + this.videoChannel.name)\n        },\n\n        error: err => {\n          this.error = err.message\n        }\n      })\n  }\n\n  onAvatarChange (formData: FormData) {\n    this.videoChannelService.changeVideoChannelImage(this.videoChannel.name, formData, 'avatar')\n      .subscribe({\n        next: data => {\n          this.notifier.success($localize`Avatar changed.`)\n\n          this.videoChannel.updateAvatar(data.avatars)\n\n          // So my-actor-avatar component detects changes\n          this.videoChannel = shallowCopy(this.videoChannel)\n        },\n\n        error: (err: HttpErrorResponse) =>\n          genericUploadErrorHandler({\n            err,\n            name: $localize`avatar`,\n            notifier: this.notifier\n          })\n      })\n  }\n\n  onAvatarDelete () {\n    this.videoChannelService.deleteVideoChannelImage(this.videoChannel.name, 'avatar')\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Avatar deleted.`)\n\n          this.videoChannel.resetAvatar()\n\n          // So my-actor-avatar component detects changes\n          this.videoChannel = shallowCopy(this.videoChannel)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  onBannerChange (formData: FormData) {\n    this.videoChannelService.changeVideoChannelImage(this.videoChannel.name, formData, 'banner')\n      .subscribe({\n        next: data => {\n          this.notifier.success($localize`Banner changed.`)\n\n          this.videoChannel.updateBanner(data.banners)\n        },\n\n        error: (err: HttpErrorResponse) =>\n          genericUploadErrorHandler({\n            err,\n            name: $localize`banner`,\n            notifier: this.notifier\n          })\n      })\n  }\n\n  onBannerDelete () {\n    this.videoChannelService.deleteVideoChannelImage(this.videoChannel.name, 'banner')\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Banner deleted.`)\n\n          this.videoChannel.resetBanner()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  isCreation () {\n    return false\n  }\n\n  getFormButtonTitle () {\n    return $localize`Update ${this.videoChannel?.name}`\n  }\n\n  isBulkUpdateVideosDisplayed () {\n    if (this.oldSupportField === undefined) return false\n\n    return this.oldSupportField !== this.form.value['support']\n  }\n}\n","import debug from 'debug'\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef,\n  inject,\n  output,\n  contentChild\n} from '@angular/core'\n\nconst debugLogger = debug('peertube:main:DeferLoadingDirective')\n\n@Directive({\n  selector: '[myDeferLoading]',\n  standalone: true\n})\nexport class DeferLoadingDirective implements AfterViewInit, OnDestroy {\n  private el = inject(ElementRef)\n  private viewContainer = inject(ViewContainerRef)\n  private cd = inject(ChangeDetectorRef)\n\n  readonly template = contentChild(TemplateRef)\n\n  readonly loaded = output()\n\n  view: EmbeddedViewRef<any>\n\n  private observer: IntersectionObserver\n\n  ngAfterViewInit () {\n    if (this.hasIncompatibleBrowser()) {\n      return this.load()\n    }\n\n    this.observer = new IntersectionObserver(entries => {\n      const entry = entries[0]\n      if (!entry.isIntersecting || entry.target !== this.el.nativeElement) return\n\n      this.observer.unobserve(this.el.nativeElement)\n      this.load()\n    }, { threshold: 0.1 })\n\n    this.observer.observe(this.el.nativeElement)\n  }\n\n  load () {\n    if (this.isLoaded()) return\n\n    debugLogger('Loading component')\n\n    this.viewContainer.clear()\n    this.view = this.viewContainer.createEmbeddedView(this.template(), {}, 0)\n    this.loaded.emit()\n    this.cd.detectChanges()\n  }\n\n  isLoaded () {\n    return this.view != null\n  }\n\n  ngOnDestroy () {\n    this.view = null\n\n    if (this.observer) this.observer.disconnect()\n  }\n\n  private hasIncompatibleBrowser () {\n    return !('IntersectionObserver' in window)\n  }\n}\n","<my-channels-setup-message [hideLink]=\"true\"></my-channels-setup-message>\n\n<div class=\"video-channels-header d-flex justify-content-between align-items-end gap-2 flex-wrap\">\n  <my-advanced-input-filter (search)=\"onSearch($event)\"></my-advanced-input-filter>\n\n  <span *ngIf=\"pagination.totalItems\" class=\"total-items\">{{ getTotalTitle() }}</span>\n\n  <a class=\"peertube-create-button\" routerLink=\"/manage/create\">\n    <my-global-icon iconName=\"add\" aria-hidden=\"true\"></my-global-icon>\n    <ng-container i18n>Create video channel</ng-container>\n  </a>\n</div>\n\n<div class=\"no-results\" i18n *ngIf=\"this.pagination.totalItems === 0\">No channel found.</div>\n\n<div class=\"video-channels\" myInfiniteScroller (nearOfBottom)=\"onNearOfBottom()\" [dataObservable]=\"onChannelDataSubject.asObservable()\">\n  <div *ngFor=\"let videoChannel of videoChannels; let i = index\" class=\"video-channel\">\n    <my-actor-avatar [actor]=\"videoChannel\" actorType=\"channel\" [internalHref]=\"[ '/c', videoChannel.nameWithHost ]\" size=\"80\"></my-actor-avatar>\n\n    <div class=\"video-channel-info\">\n      <a [routerLink]=\"[ '/c', videoChannel.nameWithHost ]\" class=\"video-channel-names\" i18n-title title=\"Channel page\">\n        <div class=\"video-channel-display-name\">{{ videoChannel.displayName }}</div>\n        <div class=\"video-channel-name\">{{ videoChannel.nameWithHost }}</div>\n      </a>\n\n      <a\n        i18n class=\"video-channel-followers\"\n        [routerLink]=\"[ '/my-library', 'followers' ]\" [queryParams]=\"{ search: 'channel:' + videoChannel.name }\"\n      >\n        {videoChannel.followersCount, plural, =0 {No subscribers} =1 {1 subscriber} other {{{ videoChannel.followersCount }} subscribers}}\n      </a>\n\n      <div class=\"channel-videos\">\n        <span i18n>{videoChannel.videosCount, plural, =0 {No videos} =1 {1 video} other {{{ videoChannel.videosCount }} videos}}</span>\n        <span class=\"mx-1\">·</span>\n        <span i18n>{videoChannel.totalViews, plural, =0 {No views} =1 {1 view} other {{{ videoChannel.totalViews | myNumberFormatter }} views}}</span>\n      </div>\n\n      <div class=\"video-channel-buttons\">\n        <my-edit-button label [ptRouterLink]=\"[ '/my-library/video-channels/update', videoChannel.nameWithHost ]\"></my-edit-button>\n        <my-delete-button label (click)=\"deleteVideoChannel(videoChannel)\"></my-delete-button>\n      </div>\n\n      <div *ngIf=\"!isInSmallView\" class=\"w-100 d-flex justify-content-end chart-container\">\n        <div myDeferLoading>\n          <ng-template>\n            <p-chart\n              *ngIf=\"chartOptions && videoChannelsChartData && videoChannelsChartData[i]\"\n              width=\"40vw\" height=\"100px\"\n              type=\"line\" [data]=\"videoChannelsChartData[i]\" [options]=\"chartOptions\"\n              [ariaLabel]=\"getChartAriaLabel(videoChannelsChartData[i])\"\n            ></p-chart>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgFor, NgIf } from '@angular/common'\nimport { Component, inject } from '@angular/core'\nimport { RouterLink } from '@angular/router'\nimport {\n  AuthService,\n  ComponentPagination,\n  ConfirmService,\n  Notifier,\n  ScreenService,\n  hasMoreItems,\n  resetCurrentPage,\n  updatePaginationOnDelete\n} from '@app/core'\nimport { formatICU } from '@app/helpers'\nimport { VideoChannel } from '@app/shared/shared-main/channel/video-channel.model'\nimport { VideoChannelService } from '@app/shared/shared-main/channel/video-channel.service'\nimport { maxBy, minBy } from '@peertube/peertube-core-utils'\nimport { ChartData, ChartOptions, TooltipItem, TooltipModel } from 'chart.js'\nimport { ChartModule } from 'primeng/chart'\nimport { Subject, first, map, switchMap } from 'rxjs'\nimport { ActorAvatarComponent } from '../../shared/shared-actor-image/actor-avatar.component'\nimport { AdvancedInputFilterComponent } from '../../shared/shared-forms/advanced-input-filter.component'\nimport { GlobalIconComponent } from '../../shared/shared-icons/global-icon.component'\nimport { DeleteButtonComponent } from '../../shared/shared-main/buttons/delete-button.component'\nimport { EditButtonComponent } from '../../shared/shared-main/buttons/edit-button.component'\nimport { ChannelsSetupMessageComponent } from '../../shared/shared-main/channel/channels-setup-message.component'\nimport { DeferLoadingDirective } from '../../shared/shared-main/common/defer-loading.directive'\nimport { InfiniteScrollerDirective } from '../../shared/shared-main/common/infinite-scroller.directive'\nimport { NumberFormatterPipe } from '../../shared/shared-main/common/number-formatter.pipe'\n\ntype CustomChartData = ChartData & { startDate: string, total: number }\n\n@Component({\n  templateUrl: './my-video-channels.component.html',\n  styleUrls: [ './my-video-channels.component.scss' ],\n  imports: [\n    GlobalIconComponent,\n    NgIf,\n    RouterLink,\n    ChannelsSetupMessageComponent,\n    AdvancedInputFilterComponent,\n    InfiniteScrollerDirective,\n    NgFor,\n    ActorAvatarComponent,\n    EditButtonComponent,\n    DeleteButtonComponent,\n    DeferLoadingDirective,\n    ChartModule,\n    NumberFormatterPipe\n  ]\n})\nexport class MyVideoChannelsComponent {\n  private authService = inject(AuthService)\n  private notifier = inject(Notifier)\n  private confirmService = inject(ConfirmService)\n  private videoChannelService = inject(VideoChannelService)\n  private screenService = inject(ScreenService)\n\n  videoChannels: VideoChannel[] = []\n\n  videoChannelsChartData: CustomChartData[]\n\n  chartOptions: ChartOptions\n\n  search: string\n\n  onChannelDataSubject = new Subject<any>()\n\n  pagination: ComponentPagination = {\n    currentPage: 1,\n    itemsPerPage: 10,\n    totalItems: null\n  }\n\n  private pagesDone = new Set<number>()\n\n  get isInSmallView () {\n    return this.screenService.isInSmallView()\n  }\n\n  onSearch (search: string) {\n    this.search = search\n\n    resetCurrentPage(this.pagination)\n    this.videoChannels = []\n    this.pagesDone.clear()\n\n    this.loadMoreVideoChannels()\n  }\n\n  async deleteVideoChannel (videoChannel: VideoChannel) {\n    const res = await this.confirmService.confirmWithExpectedInput(\n      $localize`Do you really want to delete ${videoChannel.displayName}?` +\n        `<br />` +\n        formatICU(\n          // eslint-disable-next-line max-len\n          $localize`It will delete {count, plural, =1 {1 video} other {{count} videos}} uploaded in this channel, and you will not be able to create another channel or account with the same name (${videoChannel.name})!`,\n          { count: videoChannel.videosCount }\n        ),\n      $localize`Please type the name of the video channel (${videoChannel.name}) to confirm`,\n      videoChannel.name,\n      $localize`Delete`\n    )\n    if (res === false) return\n\n    this.videoChannelService.removeVideoChannel(videoChannel)\n      .subscribe({\n        next: () => {\n          this.videoChannels = this.videoChannels.filter(c => c.id !== videoChannel.id)\n          this.notifier.success($localize`Video channel ${videoChannel.displayName} deleted.`)\n\n          updatePaginationOnDelete(this.pagination)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  onNearOfBottom () {\n    if (!hasMoreItems(this.pagination)) return\n\n    this.pagination.currentPage += 1\n\n    this.loadMoreVideoChannels()\n  }\n\n  private loadMoreVideoChannels () {\n    if (this.pagesDone.has(this.pagination.currentPage)) return\n    this.pagesDone.add(this.pagination.currentPage)\n\n    return this.authService.userInformationLoaded\n      .pipe(\n        first(),\n        map(() => ({\n          account: this.authService.getUser().account,\n          withStats: true,\n          search: this.search,\n          componentPagination: this.pagination,\n          sort: '-updatedAt'\n        })),\n        switchMap(options => this.videoChannelService.listAccountVideoChannels(options))\n      )\n      .subscribe(res => {\n        this.videoChannels = this.videoChannels.concat(res.data)\n        this.pagination.totalItems = res.total\n\n        // chart data\n        this.videoChannelsChartData = this.videoChannels.map(v => ({\n          labels: v.viewsPerDay.map(day => day.date.toLocaleDateString()),\n          datasets: [\n            {\n              label: $localize`Views for the day`,\n              data: v.viewsPerDay.map(day => day.views),\n              fill: false,\n              borderColor: '#c6c6c6'\n            }\n          ],\n\n          total: v.viewsPerDay.map(day => day.views)\n            .reduce((p, c) => p + c, 0),\n\n          startDate: v.viewsPerDay.length !== 0\n            ? v.viewsPerDay[0].date.toLocaleDateString()\n            : ''\n        }))\n\n        this.buildChartOptions()\n\n        this.onChannelDataSubject.next(res.data)\n      })\n  }\n\n  private buildChartOptions () {\n    const channelsMinimumDailyViews = Math.min(...this.videoChannels.map(v => minBy(v.viewsPerDay, 'views').views))\n    const channelsMaximumDailyViews = Math.max(...this.videoChannels.map(v => maxBy(v.viewsPerDay, 'views').views))\n\n    this.chartOptions = {\n      plugins: {\n        legend: {\n          display: false\n        },\n        tooltip: {\n          mode: 'index',\n          intersect: false,\n          external: function ({ tooltip }: { tooltip: TooltipModel<any> }) {\n            if (!tooltip) return\n\n            // disable displaying the color box\n            tooltip.options.displayColors = false\n          },\n          callbacks: {\n            label: (tooltip: TooltipItem<any>) => `${tooltip.formattedValue} views`\n          }\n        }\n      },\n      scales: {\n        x: {\n          display: false\n        },\n        y: {\n          display: false,\n          min: Math.max(0, channelsMinimumDailyViews - (3 * channelsMaximumDailyViews / 100)),\n          max: Math.max(1, channelsMaximumDailyViews)\n        }\n      },\n      layout: {\n        padding: {\n          left: 15,\n          right: 15,\n          top: 10,\n          bottom: 0\n        }\n      },\n      elements: {\n        point: {\n          radius: 0\n        }\n      },\n      hover: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  }\n\n  getChartAriaLabel (data: CustomChartData) {\n    if (!data.startDate) return ''\n\n    return formatICU($localize`${data.total} {value, plural, =1 {view} other {views}} since ${data.startDate}`, { value: data.total })\n  }\n\n  getTotalTitle () {\n    return formatICU(\n      $localize`${this.pagination.totalItems} {total, plural, =1 {channel} other {channels}}`,\n      { total: this.pagination.totalItems }\n    )\n  }\n}\n","import { Routes } from '@angular/router'\nimport { VideoChannelCreateComponent } from '@app/shared/standalone-channels/video-channel-create.component'\nimport { VideoChannelUpdateComponent } from '@app/shared/standalone-channels/video-channel-update.component'\nimport { MyVideoChannelsComponent } from './my-video-channels.component'\n\nexport default [\n  {\n    path: '',\n    component: MyVideoChannelsComponent,\n    data: {\n      meta: {\n        title: $localize`My video channels`\n      }\n    }\n  },\n  {\n    path: 'create',\n    component: VideoChannelCreateComponent,\n    data: {\n      meta: {\n        title: $localize`Create a new video channel`\n      }\n    }\n  },\n  {\n    path: 'update/:videoChannelName',\n    component: VideoChannelUpdateComponent,\n    data: {\n      meta: {\n        title: $localize`Update video channel`\n      }\n    }\n  }\n] satisfies Routes\n"]}