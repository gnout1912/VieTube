{"version":3,"mappings":"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","names":["DaysDurationFormatterPipe","transform","value","days","Math","floor","N","pure","_DaysDurationFormatterPipe","ue","t","_","ɵɵelementStart","ɵɵi18n","ɵɵelementEnd","ɵɵelement","Re","FeatureBooleanComponent","input","undefined","selectors","inputs","decls","vars","consts","i18n_0","$localize","ɵɵtemplate","FeatureBooleanComponent_Conditional_0_Template","FeatureBooleanComponent_Conditional_1_Template","E","ɵɵconditional","ctx","dependencies","GlobalIconComponent","styles","_FeatureBooleanComponent","me","pe","fe","ɵɵelementContainerStart","ɵɵtext","M","p","i","C","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind2","ctx_r0","dailyUserVideoQuota","Me","InstanceFeaturesTableComponent_div_0_table_1_ng_container_44_ng_container_3_Template","initialUserVideoQuota","ɵɵproperty","quotaHelpIndication","ɵɵsanitizeHtml","Ie","$","ɵɵelementContainer","v","ɵɵi18nExp","F","Pe","ɵɵi18nStart","InstanceFeaturesTableComponent_div_0_table_1_ng_container_45_ng_container_2_Template","ɵɵi18nEnd","$e","serverConfig","live","transcoding","enabled","enabledResolutions","length","ve","maxUserLives","maxInstanceLives","Oe","$implicit","theme_r2","name","Fe","plugin_r3","De","InstanceFeaturesTableComponent_div_0_table_1_span_38_Template","InstanceFeaturesTableComponent_div_0_table_1_span_39_Template","InstanceFeaturesTableComponent_div_0_table_1_ng_container_44_Template","InstanceFeaturesTableComponent_div_0_table_1_ng_container_45_Template","InstanceFeaturesTableComponent_div_0_table_1_tr_54_Template","InstanceFeaturesTableComponent_div_0_table_1_tr_55_Template","InstanceFeaturesTableComponent_div_0_table_1_span_102_Template","InstanceFeaturesTableComponent_div_0_table_1_span_107_Template","ɵɵtextInterpolate","getServerVersionAndCommit","buildNSFWLabel","buildRegistrationLabel","videoTranscription","autoBlacklist","videos","ofUsers","import","http","torrent","videoChannelSynchronization","export","users","search","remoteUri","theme","registered","plugin","Le","InstanceFeaturesTableComponent_div_0_table_1_Template","InstanceFeaturesTableComponent","serverService","inject","ServerService","model","serverStats","user","videoQuota","min","videoQuotaDaily","ngOnInit","of","getConfig","subscribe","config","set","buildQuotaHelpIndication","getServerStats","stats","policy","instance","defaultNSFWPolicy","signup","allowed","requiresApproval","responseTimeMS","averageRegistrationRequestResponseTimeMs","responseTime","getApproximateTime","seconds","hours","formatICU","minutes","initialUserVideoQuotaBit","fullHdSeconds","hdSeconds","normalSeconds","lines","join","outputs","ee","o","S","g","u","L","b","H","y","h","U","x","B","G","X","z","V","Q","w","q","W","k","Y","j","J","K","Z","ne","te","template","InstanceFeaturesTableComponent_div_0_Template","NgIf","HelpComponent","NgFor","BytesPipe","_InstanceFeaturesTableComponent","ce","a","je"],"ignoreList":[],"sources":["src/app/shared/shared-main/date/days-duration-formatter.pipe.ts","src/app/shared/shared-instance/feature-boolean.component.html","src/app/shared/shared-instance/feature-boolean.component.ts","src/app/shared/shared-instance/instance-features-table.component.html","src/app/shared/shared-instance/instance-features-table.component.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n  name: 'myDaysDurationFormatter',\n  standalone: true\n})\nexport class DaysDurationFormatterPipe implements PipeTransform {\n\n  transform (value: number): string {\n    const days = Math.floor(value / (3600 * 24 * 1000))\n\n    if (days <= 1) return $localize`1 day`\n\n    return $localize`${days} days`\n  }\n}\n","@if (value() === true) {\n  <span class=\"visually-hidden\" i18n>yes</span>\n  <my-global-icon iconName=\"tick\"></my-global-icon>\n} @else {\n  <span class=\"visually-hidden\" i18n>no</span>\n  <my-global-icon iconName=\"cross\"></my-global-icon>\n}\n","import { Component, input } from '@angular/core'\nimport { GlobalIconComponent } from '../shared-icons/global-icon.component'\n\n@Component({\n  selector: 'my-feature-boolean',\n  templateUrl: './feature-boolean.component.html',\n  styleUrls: [ './feature-boolean.component.scss' ],\n  imports: [ GlobalIconComponent ]\n})\nexport class FeatureBooleanComponent {\n  readonly value = input<boolean>(undefined)\n}\n","<div *ngIf=\"serverConfig()\" class=\"feature-table\">\n\n  <table *ngIf=\"serverConfig()\">\n    <caption i18n>Features found on this instance</caption>\n    <tr>\n      <th i18n class=\"t-label\" scope=\"row\">PeerTube version</th>\n\n      <td class=\"value\">{{ getServerVersionAndCommit() }}</td>\n    </tr>\n\n    <tr>\n      <th class=\"t-label\" scope=\"row\">\n        <div i18n>Default sensitive content policy</div>\n        <span i18n class=\"fs-7 fw-normal fst-italic\">can be redefined by the users</span>\n      </th>\n\n      <td class=\"value\">{{ buildNSFWLabel() }}</td>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-label\" scope=\"row\">User registration</th>\n\n      <td class=\"value\">{{ buildRegistrationLabel() }}</td>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-label\" colspan=\"2\">Video uploads</th>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-sub-label\" scope=\"row\">Transcoding in multiple resolutions</th>\n      <td>\n        <my-feature-boolean [value]=\"serverConfig().transcoding.enabledResolutions.length !== 0\"></my-feature-boolean>\n      </td>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-sub-label\" scope=\"row\">Automatic transcription</th>\n      <td>\n        <my-feature-boolean [value]=\"serverConfig().videoTranscription.enabled\"></my-feature-boolean>\n      </td>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-sub-label\" scope=\"row\">Video uploads</th>\n      <td>\n        <span i18n *ngIf=\"serverConfig().autoBlacklist.videos.ofUsers.enabled\">Requires manual validation by moderators</span>\n        <span i18n *ngIf=\"!serverConfig().autoBlacklist.videos.ofUsers.enabled\">Automatically published</span>\n      </td>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-sub-label\" scope=\"row\">Video quota</th>\n\n      <td class=\"value\">\n        <ng-container *ngIf=\"initialUserVideoQuota !== -1\">\n          {{ initialUserVideoQuota | bytes: 0 }} <ng-container *ngIf=\"dailyUserVideoQuota !== -1\">({{ dailyUserVideoQuota | bytes: 0 }} per day)</ng-container>\n\n          <my-help tooltipPlacement=\"auto\" helpType=\"custom\">\n            <div [innerHTML]=\"quotaHelpIndication\"></div>\n          </my-help>\n        </ng-container>\n\n        <ng-container i18n *ngIf=\"initialUserVideoQuota === -1\">\n          Unlimited <ng-container *ngIf=\"dailyUserVideoQuota !== -1\">({{ dailyUserVideoQuota | bytes: 0 }} per day)</ng-container>\n        </ng-container>\n      </td>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-label\" colspan=\"2\">Live streaming</th>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-sub-label\" scope=\"row\">Live streaming enabled</th>\n      <td>\n        <my-feature-boolean [value]=\"serverConfig().live.enabled\"></my-feature-boolean>\n      </td>\n    </tr>\n\n    <tr *ngIf=\"serverConfig().live.enabled\">\n      <th i18n class=\"t-sub-label\" scope=\"row\">Transcode live video in multiple resolutions</th>\n      <td>\n        <my-feature-boolean [value]=\"serverConfig().live.transcoding.enabled && serverConfig().live.transcoding.enabledResolutions.length > 1\"></my-feature-boolean>\n      </td>\n    </tr>\n\n    <tr *ngIf=\"serverConfig().live.enabled\">\n      <th i18n class=\"t-sub-label\" scope=\"row\">Max parallel lives</th>\n      <td i18n>\n        {{ maxUserLives }} per user / {{ maxInstanceLives }} per instance\n      </td>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-label\" colspan=\"2\">Video Import</th>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-sub-label\" scope=\"row\">HTTP import (YouTube, Vimeo, direct URL...)</th>\n      <td>\n        <my-feature-boolean [value]=\"serverConfig().import.videos.http.enabled\"></my-feature-boolean>\n      </td>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-sub-label\" scope=\"row\">Torrent import</th>\n      <td>\n        <my-feature-boolean [value]=\"serverConfig().import.videos.torrent.enabled\"></my-feature-boolean>\n      </td>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-sub-label\" scope=\"row\">Channel synchronization with other platforms (YouTube, Vimeo, ...)</th>\n      <td>\n        <my-feature-boolean [value]=\"serverConfig().import.videoChannelSynchronization.enabled\"></my-feature-boolean>\n      </td>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-label\" colspan=\"2\">User Import/Export</th>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-sub-label\" scope=\"row\">Users can export their data</th>\n      <td>\n        <my-feature-boolean [value]=\"serverConfig().export.users.enabled\"></my-feature-boolean>\n      </td>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-sub-label\" scope=\"row\">Users can import their data</th>\n      <td>\n        <my-feature-boolean [value]=\"serverConfig().import.users.enabled\"></my-feature-boolean>\n      </td>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-label\" colspan=\"2\">Search</th>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-sub-label\" scope=\"row\">Users can resolve distant content</th>\n      <td>\n        <my-feature-boolean [value]=\"serverConfig().search.remoteUri.users\"></my-feature-boolean>\n      </td>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-label\" colspan=\"2\">Plugins & Themes</th>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-sub-label\" scope=\"row\">Available themes</th>\n      <td>\n        <span class=\"theme\" *ngFor=\"let theme of serverConfig().theme.registered\">\n          {{ theme.name }}\n        </span>\n      </td>\n    </tr>\n\n    <tr>\n      <th i18n class=\"t-sub-label\" scope=\"row\">Plugins enabled</th>\n      <td>\n        <span class=\"plugin\" *ngFor=\"let plugin of serverConfig().plugin.registered\">\n          {{ plugin.name }}\n        </span>\n      </td>\n    </tr>\n  </table>\n</div>\n","import { NgFor, NgIf } from '@angular/common'\nimport { Component, OnInit, inject, model } from '@angular/core'\nimport { ServerService } from '@app/core'\nimport { formatICU } from '@app/helpers'\nimport { ServerConfig, ServerStats } from '@peertube/peertube-models'\nimport { of } from 'rxjs'\nimport { HelpComponent } from '../shared-main/buttons/help.component'\nimport { BytesPipe } from '../shared-main/common/bytes.pipe'\nimport { DaysDurationFormatterPipe } from '../shared-main/date/days-duration-formatter.pipe'\nimport { FeatureBooleanComponent } from './feature-boolean.component'\n\n@Component({\n  selector: 'my-instance-features-table',\n  templateUrl: './instance-features-table.component.html',\n  styleUrls: [ './instance-features-table.component.scss' ],\n  imports: [ NgIf, FeatureBooleanComponent, HelpComponent, NgFor, BytesPipe ]\n})\nexport class InstanceFeaturesTableComponent implements OnInit {\n  private serverService = inject(ServerService)\n\n  readonly serverConfig = model<ServerConfig>(undefined)\n  readonly serverStats = model<ServerStats>(undefined)\n\n  quotaHelpIndication = ''\n\n  get initialUserVideoQuota () {\n    return this.serverConfig().user.videoQuota\n  }\n\n  get dailyUserVideoQuota () {\n    return Math.min(this.initialUserVideoQuota, this.serverConfig().user.videoQuotaDaily)\n  }\n\n  get maxInstanceLives () {\n    const value = this.serverConfig().live.maxInstanceLives\n    if (value === -1) return $localize`Unlimited`\n\n    return value\n  }\n\n  get maxUserLives () {\n    const value = this.serverConfig().live.maxUserLives\n    if (value === -1) return $localize`Unlimited`\n\n    return value\n  }\n\n  ngOnInit () {\n    const serverConfig = this.serverConfig()\n    const serverConfigObs = serverConfig\n      ? of(serverConfig)\n      : this.serverService.getConfig()\n\n    serverConfigObs.subscribe(config => {\n      this.serverConfig.set(config)\n\n      this.buildQuotaHelpIndication()\n    })\n\n    if (!this.serverStats()) {\n      this.serverService.getServerStats().subscribe(stats => this.serverStats.set(stats))\n    }\n  }\n\n  buildNSFWLabel () {\n    const policy = this.serverConfig().instance.defaultNSFWPolicy\n\n    if (policy === 'do_not_list') return $localize`Hidden`\n    if (policy === 'warn') return $localize`Warn users`\n    if (policy === 'blur') return $localize`Warn users and blur thumbnail`\n    if (policy === 'display') return $localize`Displayed`\n  }\n\n  buildRegistrationLabel () {\n    const config = this.serverConfig().signup\n\n    if (config.allowed !== true) return $localize`Disabled`\n\n    if (config.requiresApproval === true) {\n      const responseTimeMS = this.serverStats()?.averageRegistrationRequestResponseTimeMs\n\n      if (!responseTimeMS) {\n        return $localize`Requires approval by moderators`\n      }\n\n      const responseTime = new DaysDurationFormatterPipe().transform(responseTimeMS)\n      return $localize`Requires approval by moderators (~ ${responseTime})`\n    }\n\n    return $localize`Enabled`\n  }\n\n  getServerVersionAndCommit () {\n    return this.serverService.getServerVersionAndCommit()\n  }\n\n  private getApproximateTime (seconds: number) {\n    const hours = Math.floor(seconds / 3600)\n\n    if (hours !== 0) {\n      return formatICU(\n        $localize`~ {hours, plural, =1 {1 hour} other {{hours} hours}}`,\n        { hours }\n      )\n    }\n\n    const minutes = Math.floor(seconds % 3600 / 60)\n\n    return formatICU(\n      $localize`~ {minutes, plural, =1 {1 minute} other {{minutes} minutes}}`,\n      { minutes }\n    )\n  }\n\n  private buildQuotaHelpIndication () {\n    if (this.initialUserVideoQuota === -1) return\n\n    const initialUserVideoQuotaBit = this.initialUserVideoQuota * 8\n\n    // 1080p: ~ 6Mbps\n    // 720p: ~ 4Mbps\n    // 360p: ~ 1.5Mbps\n    const fullHdSeconds = initialUserVideoQuotaBit / (6 * 1000 * 1000)\n    const hdSeconds = initialUserVideoQuotaBit / (4 * 1000 * 1000)\n    const normalSeconds = initialUserVideoQuotaBit / (1.5 * 1000 * 1000)\n\n    const lines = [\n      $localize`${this.getApproximateTime(fullHdSeconds)} of full HD videos`,\n      $localize`${this.getApproximateTime(hdSeconds)} of HD videos`,\n      $localize`${this.getApproximateTime(normalSeconds)} of average quality videos`\n    ]\n\n    this.quotaHelpIndication = lines.join('<br />')\n  }\n}\n"]}