{"version":3,"mappings":"iTAYEA,EAAA,WAA0C,WACxCC,EAAA,KAAyCC,EAAA,EAEzCC,EAAA,uBAAAC,CAAA,YAMJF,EAAA,GAAAG,CAAA,QAAAC,CAAA,CAAAC,CAAA,GALMC,EAAA,GAAAC,EAAA,QAAAC,EAAAC,gBAAA,GAA2B,OAAAD,EAAAE,MAAA,UAAAF,EAAAE,KAAAC,kBAAA,GAAmC,QAAAH,EAAAI,uBAAA,EAAkC,iBAAAC,EAAA,IAAAL,EAAAI,wBAAA,IAC3C,eAAAJ,EAAAM,mBAAA,ICL3D,GAAaC,IAAkB,KAAzB,GAAOA,GAAP,KAAOA,EAAkB,CACrBC,YAAcC,EAAOC,CAAW,EAChCC,KAAOF,EAAOG,CAAW,EAEjCC,eAAiB,IACjBC,mBAAqB,EACrBC,yBAA2B,GAE3BT,oBAAsB,IACtBF,wBAA0B,EAC1BY,8BAAgC,GAEhC,GAAId,OAAI,CACN,MAAO,MAAKS,KAAKM,QAAO,CAC1B,EAEAC,UAAQ,CACN,KAAKP,KAAKQ,sBAAsBC,KAAKC,EAAK,CAAE,EAAEC,UAC5C,IAAK,CACC,KAAKpB,KAAKqB,aAAe,GAC3B,KAAKV,eAAiB,GAAIW,GAAS,EAAGC,UAAU,KAAKvB,KAAKqB,WAAY,CAAC,EAAEG,SAAQ,EAEjF,KAAKb,8BAAiBc,CAGpB,KAAKzB,KAAKC,kBAAoB,GAChC,KAAKG,oBAAsB,GAAIkB,GAAS,EAAGC,UAAU,KAAKvB,KAAKC,gBAAiB,CAAC,EAAEuB,SAAQ,EAE3F,KAAKpB,mCAET,EAAC,EAGH,KAAKE,YAAYoB,oBAAmB,EACjCN,UAAUO,GAAO,CAChB,KAAKf,mBAAqBe,EAAKC,eAC/B,KAAKf,yBAA2B,KAAKD,mBAAqB,IAAM,KAAKZ,KAAKqB,WAE1E,KAAKnB,wBAA0ByB,EAAKE,oBACpC,KAAKf,8BAAgC,KAAKZ,wBAA0B,IAAM,KAAKF,KAAKC,eACtF,EAAC,CACL,EAEA6B,eAAa,CACX,MAAO,MAAK9B,KAAKC,kBAAoB,EACvC,EAEA8B,YAAU,CACR,MAAO,sBAAsB,GAAIT,GAAS,EAAGC,UAAU,KAAKX,mBAAoB,CAAC,EAAEY,SAAQ,CAAE,MAAM,KAAKb,cAAc,EACxH,EAEAZ,iBAAe,CACb,MAAO,4BAA4B,GAAIuB,GAAS,EAAGC,UAAU,KAAKrB,wBAAyB,CAAC,EAAEsB,SAAQ,CAAE,MAAM,KAAKpB,mBAAmB,EACxI,IAAA4B,CAAA,CArDW3B,4CAAkB,IAAA2B,CAAA,CAAlB3B,wBAAkB4B,UAAA,oBAAAC,MAAA,EAAAC,KAAA,EAAAC,WAAA,IAAAC,sBDVHZ,kCAWAA,yLAb5BrC,EAAA,WAA6B,SACtB,WACHC,EAAA,KAAyCC,EAAA,EAEzCC,EAAA,uBAAAC,CAAA,YAMFF,EAAA,EAEAgD,EAAA,EAAAC,EAAA,aAZFjD,EAAA,GAAAkD,CAAA,KAKM5C,EAAA,GAAAC,EAAA,QAAA4C,EAAAV,WAAA,GAAsB,OAAAU,EAAAzC,MAAA,UAAAyC,EAAAzC,KAAAqB,aAAA,GAA8B,QAAAoB,EAAA7B,kBAAA,EAA6B,iBAAAT,EAAA,IAAAsC,EAAA7B,mBAAA,IACjC,eAAA6B,EAAA9B,cAAA,EAM9Cf,EAAA,GAAAC,EAAA,OAAA4C,EAAAX,cAAA,MAAAY,YAAA,ECFKC,EAAMrB,EAAWsB,CAAoB,EAAAC,cAAA,KAE5C,GAAOxC,GAAPyC,QAAOzC,EAAkB,aAAA0C,CAAA,IAAAtD,CAAA","names":["ɵɵelementStart","ɵɵi18n","ɵɵelementEnd","ɵɵelement","S","a","s","g","ɵɵadvance","ɵɵproperty","ctx_r0","labelQuotaDaily","user","videoQuotaDaily","userVideoQuotaUsedDaily","ɵɵpipeBind2","userVideoQuotaDaily","UserQuotaComponent","userService","inject","UserService","auth","AuthService","userVideoQuota","userVideoQuotaUsed","userVideoQuotaPercentage","userVideoQuotaDailyPercentage","getUser","ngOnInit","userInformationLoaded","pipe","first","subscribe","videoQuota","BytesPipe","transform","toString","$localize","getMyVideoQuotaUsed","data","videoQuotaUsed","videoQuotaUsedDaily","hasDailyQuota","labelQuota","l","selectors","decls","vars","consts","i18n_0","ɵɵtemplate","UserQuotaComponent_div_6_Template","o","ctx","dependencies","NgIf","ProgressBarComponent","encapsulation","_UserQuotaComponent","$"],"ignoreList":[],"sources":["src/app/shared/shared-main/users/user-quota.component.html","src/app/shared/shared-main/users/user-quota.component.ts"],"sourcesContent":["<div class=\"user-quota mb-3\">\n  <div>\n    <div class=\"label\" i18n>Total video quota</div>\n\n    <my-progress-bar\n      [label]=\"labelQuota()\" [max]=\"user?.videoQuota || 0\" [value]=\"userVideoQuotaUsed\"\n      [valueFormatted]=\"userVideoQuotaUsed | bytes: 1\" [maxFormatted]=\"userVideoQuota\"\n      height=\"2rem\"\n    >\n    </my-progress-bar>\n  </div>\n\n  <div *ngIf=\"hasDailyQuota()\" class=\"mt-3\">\n    <div class=\"label\" i18n>Daily video quota</div>\n\n    <my-progress-bar\n      [label]=\"labelQuotaDaily()\" [max]=\"user?.videoQuotaDaily || 0\" [value]=\"userVideoQuotaUsedDaily\"\n      [valueFormatted]=\"userVideoQuotaUsedDaily | bytes: 1\" [maxFormatted]=\"userVideoQuotaDaily\"\n      height=\"2rem\"\n    >\n    </my-progress-bar>\n</div>\n","import { NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { AuthService, UserService } from '@app/core'\nimport { first } from 'rxjs'\nimport { BytesPipe } from '../common/bytes.pipe'\nimport { ProgressBarComponent } from '../common/progress-bar.component'\n\n@Component({\n  selector: 'my-user-quota',\n  templateUrl: './user-quota.component.html',\n  imports: [ NgIf, BytesPipe, ProgressBarComponent ]\n})\nexport class UserQuotaComponent implements OnInit {\n  private userService = inject(UserService)\n  private auth = inject(AuthService)\n\n  userVideoQuota = '0'\n  userVideoQuotaUsed = 0\n  userVideoQuotaPercentage = 15\n\n  userVideoQuotaDaily = '0'\n  userVideoQuotaUsedDaily = 0\n  userVideoQuotaDailyPercentage = 15\n\n  get user () {\n    return this.auth.getUser()\n  }\n\n  ngOnInit () {\n    this.auth.userInformationLoaded.pipe(first()).subscribe(\n      () => {\n        if (this.user.videoQuota !== -1) {\n          this.userVideoQuota = new BytesPipe().transform(this.user.videoQuota, 0).toString()\n        } else {\n          this.userVideoQuota = $localize`Unlimited`\n        }\n\n        if (this.user.videoQuotaDaily !== -1) {\n          this.userVideoQuotaDaily = new BytesPipe().transform(this.user.videoQuotaDaily, 0).toString()\n        } else {\n          this.userVideoQuotaDaily = $localize`Unlimited`\n        }\n      }\n    )\n\n    this.userService.getMyVideoQuotaUsed()\n      .subscribe(data => {\n        this.userVideoQuotaUsed = data.videoQuotaUsed\n        this.userVideoQuotaPercentage = this.userVideoQuotaUsed * 100 / this.user.videoQuota\n\n        this.userVideoQuotaUsedDaily = data.videoQuotaUsedDaily\n        this.userVideoQuotaDailyPercentage = this.userVideoQuotaUsedDaily * 100 / this.user.videoQuotaDaily\n      })\n  }\n\n  hasDailyQuota () {\n    return this.user.videoQuotaDaily !== -1\n  }\n\n  labelQuota () {\n    return `Total video quota: ${new BytesPipe().transform(this.userVideoQuotaUsed, 0).toString()} / ${this.userVideoQuota}`\n  }\n\n  labelQuotaDaily () {\n    return `Total daily video quota: ${new BytesPipe().transform(this.userVideoQuotaUsedDaily, 0).toString()} / ${this.userVideoQuotaDaily}`\n  }\n}\n"]}