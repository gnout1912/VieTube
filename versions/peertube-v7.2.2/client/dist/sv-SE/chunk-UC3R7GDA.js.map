{"version":3,"sources":["node_modules/linkify-html/dist/linkify-html.mjs"],"sourcesContent":["import { Options, tokenize as tokenize$1 } from 'linkifyjs';\n\n/**\n * generated from https://raw.githubusercontent.com/w3c/html/26b5126f96f736f796b9e29718138919dd513744/entities.json\n * do not edit\n */\nvar HTML5NamedCharRefs = {\n  // We don't need the complete named character reference because linkifyHtml\n  // does not modify the escape sequences. We do need &nbsp; so that\n  // whitespace is parsed properly. Other types of whitespace should already\n  // be accounted for. &gt; &lt; and &quot; are also frequently relevant ones\n  amp: \"&\",\n  gt: \">\",\n  lt: \"<\",\n  nbsp: \"Â \",\n  quot: \"\\\"\"\n};\nvar HEXCHARCODE = /^#[xX]([A-Fa-f0-9]+)$/;\nvar CHARCODE = /^#([0-9]+)$/;\nvar NAMED = /^([A-Za-z0-9]+)$/;\nvar EntityParser = /** @class */function () {\n  function EntityParser(named) {\n    this.named = named;\n  }\n  EntityParser.prototype.parse = function (entity) {\n    if (!entity) {\n      return;\n    }\n    var matches = entity.match(HEXCHARCODE);\n    if (matches) {\n      return String.fromCharCode(parseInt(matches[1], 16));\n    }\n    matches = entity.match(CHARCODE);\n    if (matches) {\n      return String.fromCharCode(parseInt(matches[1], 10));\n    }\n    matches = entity.match(NAMED);\n    if (matches) {\n      return this.named[matches[1]] || \"&\" + matches[1] + \";\";\n    }\n  };\n  return EntityParser;\n}();\nvar WSP = /[\\t\\n\\f ]/;\nvar ALPHA = /[A-Za-z]/;\nvar CRLF = /\\r\\n?/g;\nfunction isSpace(char) {\n  return WSP.test(char);\n}\nfunction isAlpha(char) {\n  return ALPHA.test(char);\n}\nfunction preprocessInput(input) {\n  return input.replace(CRLF, '\\n');\n}\nvar EventedTokenizer = /** @class */function () {\n  function EventedTokenizer(delegate, entityParser, mode) {\n    if (mode === void 0) {\n      mode = 'precompile';\n    }\n    this.delegate = delegate;\n    this.entityParser = entityParser;\n    this.mode = mode;\n    this.state = \"beforeData\" /* beforeData */;\n    this.line = -1;\n    this.column = -1;\n    this.input = '';\n    this.index = -1;\n    this.tagNameBuffer = '';\n    this.states = {\n      beforeData: function () {\n        var char = this.peek();\n        if (char === '<' && !this.isIgnoredEndTag()) {\n          this.transitionTo(\"tagOpen\" /* tagOpen */);\n          this.markTagStart();\n          this.consume();\n        } else {\n          if (this.mode === 'precompile' && char === '\\n') {\n            var tag = this.tagNameBuffer.toLowerCase();\n            if (tag === 'pre' || tag === 'textarea') {\n              this.consume();\n            }\n          }\n          this.transitionTo(\"data\" /* data */);\n          this.delegate.beginData();\n        }\n      },\n      data: function () {\n        var char = this.peek();\n        var tag = this.tagNameBuffer;\n        if (char === '<' && !this.isIgnoredEndTag()) {\n          this.delegate.finishData();\n          this.transitionTo(\"tagOpen\" /* tagOpen */);\n          this.markTagStart();\n          this.consume();\n        } else if (char === '&' && tag !== 'script' && tag !== 'style') {\n          this.consume();\n          this.delegate.appendToData(this.consumeCharRef() || '&');\n        } else {\n          this.consume();\n          this.delegate.appendToData(char);\n        }\n      },\n      tagOpen: function () {\n        var char = this.consume();\n        if (char === '!') {\n          this.transitionTo(\"markupDeclarationOpen\" /* markupDeclarationOpen */);\n        } else if (char === '/') {\n          this.transitionTo(\"endTagOpen\" /* endTagOpen */);\n        } else if (char === '@' || char === ':' || isAlpha(char)) {\n          this.transitionTo(\"tagName\" /* tagName */);\n          this.tagNameBuffer = '';\n          this.delegate.beginStartTag();\n          this.appendToTagName(char);\n        }\n      },\n      markupDeclarationOpen: function () {\n        var char = this.consume();\n        if (char === '-' && this.peek() === '-') {\n          this.consume();\n          this.transitionTo(\"commentStart\" /* commentStart */);\n          this.delegate.beginComment();\n        } else {\n          var maybeDoctype = char.toUpperCase() + this.input.substring(this.index, this.index + 6).toUpperCase();\n          if (maybeDoctype === 'DOCTYPE') {\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.transitionTo(\"doctype\" /* doctype */);\n            if (this.delegate.beginDoctype) this.delegate.beginDoctype();\n          }\n        }\n      },\n      doctype: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeDoctypeName\" /* beforeDoctypeName */);\n        }\n      },\n      beforeDoctypeName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else {\n          this.transitionTo(\"doctypeName\" /* doctypeName */);\n          if (this.delegate.appendToDoctypeName) this.delegate.appendToDoctypeName(char.toLowerCase());\n        }\n      },\n      doctypeName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"afterDoctypeName\" /* afterDoctypeName */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypeName) this.delegate.appendToDoctypeName(char.toLowerCase());\n        }\n      },\n      afterDoctypeName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          var nextSixChars = char.toUpperCase() + this.input.substring(this.index, this.index + 5).toUpperCase();\n          var isPublic = nextSixChars.toUpperCase() === 'PUBLIC';\n          var isSystem = nextSixChars.toUpperCase() === 'SYSTEM';\n          if (isPublic || isSystem) {\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n          }\n          if (isPublic) {\n            this.transitionTo(\"afterDoctypePublicKeyword\" /* afterDoctypePublicKeyword */);\n          } else if (isSystem) {\n            this.transitionTo(\"afterDoctypeSystemKeyword\" /* afterDoctypeSystemKeyword */);\n          }\n        }\n      },\n      afterDoctypePublicKeyword: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeDoctypePublicIdentifier\" /* beforeDoctypePublicIdentifier */);\n          this.consume();\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypePublicIdentifierDoubleQuoted\" /* doctypePublicIdentifierDoubleQuoted */);\n          this.consume();\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypePublicIdentifierSingleQuoted\" /* doctypePublicIdentifierSingleQuoted */);\n          this.consume();\n        } else if (char === '>') {\n          this.consume();\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        }\n      },\n      doctypePublicIdentifierDoubleQuoted: function () {\n        var char = this.consume();\n        if (char === '\"') {\n          this.transitionTo(\"afterDoctypePublicIdentifier\" /* afterDoctypePublicIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypePublicIdentifier) this.delegate.appendToDoctypePublicIdentifier(char);\n        }\n      },\n      doctypePublicIdentifierSingleQuoted: function () {\n        var char = this.consume();\n        if (char === \"'\") {\n          this.transitionTo(\"afterDoctypePublicIdentifier\" /* afterDoctypePublicIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypePublicIdentifier) this.delegate.appendToDoctypePublicIdentifier(char);\n        }\n      },\n      afterDoctypePublicIdentifier: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"betweenDoctypePublicAndSystemIdentifiers\" /* betweenDoctypePublicAndSystemIdentifiers */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypeSystemIdentifierDoubleQuoted\" /* doctypeSystemIdentifierDoubleQuoted */);\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypeSystemIdentifierSingleQuoted\" /* doctypeSystemIdentifierSingleQuoted */);\n        }\n      },\n      betweenDoctypePublicAndSystemIdentifiers: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypeSystemIdentifierDoubleQuoted\" /* doctypeSystemIdentifierDoubleQuoted */);\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypeSystemIdentifierSingleQuoted\" /* doctypeSystemIdentifierSingleQuoted */);\n        }\n      },\n      doctypeSystemIdentifierDoubleQuoted: function () {\n        var char = this.consume();\n        if (char === '\"') {\n          this.transitionTo(\"afterDoctypeSystemIdentifier\" /* afterDoctypeSystemIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypeSystemIdentifier) this.delegate.appendToDoctypeSystemIdentifier(char);\n        }\n      },\n      doctypeSystemIdentifierSingleQuoted: function () {\n        var char = this.consume();\n        if (char === \"'\") {\n          this.transitionTo(\"afterDoctypeSystemIdentifier\" /* afterDoctypeSystemIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypeSystemIdentifier) this.delegate.appendToDoctypeSystemIdentifier(char);\n        }\n      },\n      afterDoctypeSystemIdentifier: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        }\n      },\n      commentStart: function () {\n        var char = this.consume();\n        if (char === '-' && this.peek() === '-') {\n          this.transitionTo(\"commentStartDash\" /* commentStartDash */);\n        } else if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.appendToCommentData(char);\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n      commentStartDash: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentEnd\" /* commentEnd */);\n        } else if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.appendToCommentData('-');\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n      comment: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentEndDash\" /* commentEndDash */);\n        } else {\n          this.delegate.appendToCommentData(char);\n        }\n      },\n      commentEndDash: function () {\n        var char = this.consume();\n        if (char === '-' && this.peek() === '-') {\n          this.delegate.appendToCommentData(char);\n        } else if (char === '-') {\n          this.transitionTo(\"commentEnd\" /* commentEnd */);\n        } else {\n          this.delegate.appendToCommentData('-' + char);\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n      commentEnd: function () {\n        var char = this.consume();\n        if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.appendToCommentData('--' + char);\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n      tagName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '>') {\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.appendToTagName(char);\n        }\n      },\n      endTagName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n          this.tagNameBuffer = '';\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n          this.tagNameBuffer = '';\n        } else if (char === '>') {\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n          this.tagNameBuffer = '';\n        } else {\n          this.appendToTagName(char);\n        }\n      },\n      beforeAttributeName: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n          return;\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n          this.consume();\n        } else if (char === '>') {\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '=') {\n          this.delegate.reportSyntaxError('attribute name cannot start with equals sign');\n          this.transitionTo(\"attributeName\" /* attributeName */);\n          this.delegate.beginAttribute();\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        } else {\n          this.transitionTo(\"attributeName\" /* attributeName */);\n          this.delegate.beginAttribute();\n        }\n      },\n      attributeName: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.transitionTo(\"afterAttributeName\" /* afterAttributeName */);\n          this.consume();\n        } else if (char === '/') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '=') {\n          this.transitionTo(\"beforeAttributeValue\" /* beforeAttributeValue */);\n          this.consume();\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '\"' || char === \"'\" || char === '<') {\n          this.delegate.reportSyntaxError(char + ' is not a valid character within attribute names');\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        } else {\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        }\n      },\n      afterAttributeName: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n          return;\n        } else if (char === '/') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '=') {\n          this.consume();\n          this.transitionTo(\"beforeAttributeValue\" /* beforeAttributeValue */);\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"attributeName\" /* attributeName */);\n          this.delegate.beginAttribute();\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        }\n      },\n      beforeAttributeValue: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n        } else if (char === '\"') {\n          this.transitionTo(\"attributeValueDoubleQuoted\" /* attributeValueDoubleQuoted */);\n          this.delegate.beginAttributeValue(true);\n          this.consume();\n        } else if (char === \"'\") {\n          this.transitionTo(\"attributeValueSingleQuoted\" /* attributeValueSingleQuoted */);\n          this.delegate.beginAttributeValue(true);\n          this.consume();\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.transitionTo(\"attributeValueUnquoted\" /* attributeValueUnquoted */);\n          this.delegate.beginAttributeValue(false);\n          this.consume();\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueDoubleQuoted: function () {\n        var char = this.consume();\n        if (char === '\"') {\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"afterAttributeValueQuoted\" /* afterAttributeValueQuoted */);\n        } else if (char === '&') {\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else {\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueSingleQuoted: function () {\n        var char = this.consume();\n        if (char === \"'\") {\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"afterAttributeValueQuoted\" /* afterAttributeValueQuoted */);\n        } else if (char === '&') {\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else {\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueUnquoted: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        } else if (char === '/') {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '&') {\n          this.consume();\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else if (char === '>') {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.consume();\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      afterAttributeValueQuoted: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        } else if (char === '/') {\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '>') {\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        }\n      },\n      selfClosingStartTag: function () {\n        var char = this.peek();\n        if (char === '>') {\n          this.consume();\n          this.delegate.markTagAsSelfClosing();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        }\n      },\n      endTagOpen: function () {\n        var char = this.consume();\n        if (char === '@' || char === ':' || isAlpha(char)) {\n          this.transitionTo(\"endTagName\" /* endTagName */);\n          this.tagNameBuffer = '';\n          this.delegate.beginEndTag();\n          this.appendToTagName(char);\n        }\n      }\n    };\n    this.reset();\n  }\n  EventedTokenizer.prototype.reset = function () {\n    this.transitionTo(\"beforeData\" /* beforeData */);\n    this.input = '';\n    this.tagNameBuffer = '';\n    this.index = 0;\n    this.line = 1;\n    this.column = 0;\n    this.delegate.reset();\n  };\n  EventedTokenizer.prototype.transitionTo = function (state) {\n    this.state = state;\n  };\n  EventedTokenizer.prototype.tokenize = function (input) {\n    this.reset();\n    this.tokenizePart(input);\n    this.tokenizeEOF();\n  };\n  EventedTokenizer.prototype.tokenizePart = function (input) {\n    this.input += preprocessInput(input);\n    while (this.index < this.input.length) {\n      var handler = this.states[this.state];\n      if (handler !== undefined) {\n        handler.call(this);\n      } else {\n        throw new Error(\"unhandled state \" + this.state);\n      }\n    }\n  };\n  EventedTokenizer.prototype.tokenizeEOF = function () {\n    this.flushData();\n  };\n  EventedTokenizer.prototype.flushData = function () {\n    if (this.state === 'data') {\n      this.delegate.finishData();\n      this.transitionTo(\"beforeData\" /* beforeData */);\n    }\n  };\n  EventedTokenizer.prototype.peek = function () {\n    return this.input.charAt(this.index);\n  };\n  EventedTokenizer.prototype.consume = function () {\n    var char = this.peek();\n    this.index++;\n    if (char === '\\n') {\n      this.line++;\n      this.column = 0;\n    } else {\n      this.column++;\n    }\n    return char;\n  };\n  EventedTokenizer.prototype.consumeCharRef = function () {\n    var endIndex = this.input.indexOf(';', this.index);\n    if (endIndex === -1) {\n      return;\n    }\n    var entity = this.input.slice(this.index, endIndex);\n    var chars = this.entityParser.parse(entity);\n    if (chars) {\n      var count = entity.length;\n      // consume the entity chars\n      while (count) {\n        this.consume();\n        count--;\n      }\n      // consume the `;`\n      this.consume();\n      return chars;\n    }\n  };\n  EventedTokenizer.prototype.markTagStart = function () {\n    this.delegate.tagOpen();\n  };\n  EventedTokenizer.prototype.appendToTagName = function (char) {\n    this.tagNameBuffer += char;\n    this.delegate.appendToTagName(char);\n  };\n  EventedTokenizer.prototype.isIgnoredEndTag = function () {\n    var tag = this.tagNameBuffer;\n    return tag === 'title' && this.input.substring(this.index, this.index + 8) !== '</title>' || tag === 'style' && this.input.substring(this.index, this.index + 8) !== '</style>' || tag === 'script' && this.input.substring(this.index, this.index + 9) !== '</script>';\n  };\n  return EventedTokenizer;\n}();\nvar Tokenizer = /** @class */function () {\n  function Tokenizer(entityParser, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.options = options;\n    this.token = null;\n    this.startLine = 1;\n    this.startColumn = 0;\n    this.tokens = [];\n    this.tokenizer = new EventedTokenizer(this, entityParser, options.mode);\n    this._currentAttribute = undefined;\n  }\n  Tokenizer.prototype.tokenize = function (input) {\n    this.tokens = [];\n    this.tokenizer.tokenize(input);\n    return this.tokens;\n  };\n  Tokenizer.prototype.tokenizePart = function (input) {\n    this.tokens = [];\n    this.tokenizer.tokenizePart(input);\n    return this.tokens;\n  };\n  Tokenizer.prototype.tokenizeEOF = function () {\n    this.tokens = [];\n    this.tokenizer.tokenizeEOF();\n    return this.tokens[0];\n  };\n  Tokenizer.prototype.reset = function () {\n    this.token = null;\n    this.startLine = 1;\n    this.startColumn = 0;\n  };\n  Tokenizer.prototype.current = function () {\n    var token = this.token;\n    if (token === null) {\n      throw new Error('token was unexpectedly null');\n    }\n    if (arguments.length === 0) {\n      return token;\n    }\n    for (var i = 0; i < arguments.length; i++) {\n      if (token.type === arguments[i]) {\n        return token;\n      }\n    }\n    throw new Error(\"token type was unexpectedly \" + token.type);\n  };\n  Tokenizer.prototype.push = function (token) {\n    this.token = token;\n    this.tokens.push(token);\n  };\n  Tokenizer.prototype.currentAttribute = function () {\n    return this._currentAttribute;\n  };\n  Tokenizer.prototype.addLocInfo = function () {\n    if (this.options.loc) {\n      this.current().loc = {\n        start: {\n          line: this.startLine,\n          column: this.startColumn\n        },\n        end: {\n          line: this.tokenizer.line,\n          column: this.tokenizer.column\n        }\n      };\n    }\n    this.startLine = this.tokenizer.line;\n    this.startColumn = this.tokenizer.column;\n  };\n  // Data\n  Tokenizer.prototype.beginDoctype = function () {\n    this.push({\n      type: \"Doctype\" /* Doctype */,\n      name: ''\n    });\n  };\n  Tokenizer.prototype.appendToDoctypeName = function (char) {\n    this.current(\"Doctype\" /* Doctype */).name += char;\n  };\n  Tokenizer.prototype.appendToDoctypePublicIdentifier = function (char) {\n    var doctype = this.current(\"Doctype\" /* Doctype */);\n    if (doctype.publicIdentifier === undefined) {\n      doctype.publicIdentifier = char;\n    } else {\n      doctype.publicIdentifier += char;\n    }\n  };\n  Tokenizer.prototype.appendToDoctypeSystemIdentifier = function (char) {\n    var doctype = this.current(\"Doctype\" /* Doctype */);\n    if (doctype.systemIdentifier === undefined) {\n      doctype.systemIdentifier = char;\n    } else {\n      doctype.systemIdentifier += char;\n    }\n  };\n  Tokenizer.prototype.endDoctype = function () {\n    this.addLocInfo();\n  };\n  Tokenizer.prototype.beginData = function () {\n    this.push({\n      type: \"Chars\" /* Chars */,\n      chars: ''\n    });\n  };\n  Tokenizer.prototype.appendToData = function (char) {\n    this.current(\"Chars\" /* Chars */).chars += char;\n  };\n  Tokenizer.prototype.finishData = function () {\n    this.addLocInfo();\n  };\n  // Comment\n  Tokenizer.prototype.beginComment = function () {\n    this.push({\n      type: \"Comment\" /* Comment */,\n      chars: ''\n    });\n  };\n  Tokenizer.prototype.appendToCommentData = function (char) {\n    this.current(\"Comment\" /* Comment */).chars += char;\n  };\n  Tokenizer.prototype.finishComment = function () {\n    this.addLocInfo();\n  };\n  // Tags - basic\n  Tokenizer.prototype.tagOpen = function () {};\n  Tokenizer.prototype.beginStartTag = function () {\n    this.push({\n      type: \"StartTag\" /* StartTag */,\n      tagName: '',\n      attributes: [],\n      selfClosing: false\n    });\n  };\n  Tokenizer.prototype.beginEndTag = function () {\n    this.push({\n      type: \"EndTag\" /* EndTag */,\n      tagName: ''\n    });\n  };\n  Tokenizer.prototype.finishTag = function () {\n    this.addLocInfo();\n  };\n  Tokenizer.prototype.markTagAsSelfClosing = function () {\n    this.current(\"StartTag\" /* StartTag */).selfClosing = true;\n  };\n  // Tags - name\n  Tokenizer.prototype.appendToTagName = function (char) {\n    this.current(\"StartTag\" /* StartTag */, \"EndTag\" /* EndTag */).tagName += char;\n  };\n  // Tags - attributes\n  Tokenizer.prototype.beginAttribute = function () {\n    this._currentAttribute = ['', '', false];\n  };\n  Tokenizer.prototype.appendToAttributeName = function (char) {\n    this.currentAttribute()[0] += char;\n  };\n  Tokenizer.prototype.beginAttributeValue = function (isQuoted) {\n    this.currentAttribute()[2] = isQuoted;\n  };\n  Tokenizer.prototype.appendToAttributeValue = function (char) {\n    this.currentAttribute()[1] += char;\n  };\n  Tokenizer.prototype.finishAttributeValue = function () {\n    this.current(\"StartTag\" /* StartTag */).attributes.push(this._currentAttribute);\n  };\n  Tokenizer.prototype.reportSyntaxError = function (message) {\n    this.current().syntaxError = message;\n  };\n  return Tokenizer;\n}();\nfunction tokenize(input, options) {\n  var tokenizer = new Tokenizer(new EntityParser(HTML5NamedCharRefs), options);\n  return tokenizer.tokenize(input);\n}\nconst LinkifyResult = 'LinkifyResult';\nconst StartTag = 'StartTag';\nconst EndTag = 'EndTag';\nconst Chars = 'Chars';\nconst Comment = 'Comment';\nconst Doctype = 'Doctype';\n\n/**\n * @param {string} str html string to link\n * @param {import('linkifyjs').Opts} [opts] linkify options\n * @returns {string} resulting string\n */\nfunction linkifyHtml(str, opts = {}) {\n  // `tokens` and `token` in this section refer to tokens generated by the\n  // HTML parser, not linkify's parser\n  const tokens = tokenize(str);\n  const linkifiedTokens = [];\n  const linkified = [];\n  const options = new Options(opts, defaultRender);\n\n  // Linkify the tokens given by the parser\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.type === StartTag) {\n      linkifiedTokens.push(token);\n\n      // Ignore all the contents of ignored tags\n      const tagName = token.tagName.toUpperCase();\n      const isIgnored = tagName === 'A' || options.ignoreTags.indexOf(tagName) >= 0;\n      if (!isIgnored) {\n        continue;\n      }\n      let preskipLen = linkifiedTokens.length;\n      skipTagTokens(tagName, tokens, ++i, linkifiedTokens);\n      i += linkifiedTokens.length - preskipLen - 1;\n    } else if (token.type !== Chars) {\n      // Skip this token, it's not important\n      linkifiedTokens.push(token);\n    } else {\n      // Valid text token, linkify it!\n      const linkifedChars = linkifyChars(token.chars, options);\n      linkifiedTokens.push.apply(linkifiedTokens, linkifedChars);\n    }\n  }\n\n  // Convert the tokens back into a string\n  for (let i = 0; i < linkifiedTokens.length; i++) {\n    const token = linkifiedTokens[i];\n    switch (token.type) {\n      case LinkifyResult:\n        linkified.push(token.rendered);\n        break;\n      case StartTag:\n        {\n          let link = '<' + token.tagName;\n          if (token.attributes.length > 0) {\n            link += ' ' + attributeArrayToStrings(token.attributes).join(' ');\n          }\n          if (token.selfClosing) {\n            link += ' /';\n          }\n          link += '>';\n          linkified.push(link);\n          break;\n        }\n      case EndTag:\n        linkified.push(`</${token.tagName}>`);\n        break;\n      case Chars:\n        linkified.push(escapeText(token.chars));\n        break;\n      case Comment:\n        linkified.push(`<!--${escapeText(token.chars)}-->`);\n        break;\n      case Doctype:\n        {\n          let doctype = `<!DOCTYPE ${token.name}`;\n          if (token.publicIdentifier) {\n            doctype += ` PUBLIC \"${token.publicIdentifier}\"`;\n          }\n          if (token.systemIdentifier) {\n            doctype += ` \"${token.systemIdentifier}\"`;\n          }\n          doctype += '>';\n          linkified.push(doctype);\n          break;\n        }\n    }\n  }\n  return linkified.join('');\n}\n\n/**\n\t`tokens` and `token` in this section referes to tokens returned by\n\t`linkify.tokenize`. `linkified` will contain HTML Parser-style tokens\n\t@param {string}\n\t@param {import('linkifyjs').Options}\n*/\nfunction linkifyChars(str, options) {\n  const tokens = tokenize$1(str);\n  const result = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.t === 'nl' && options.get('nl2br')) {\n      result.push({\n        type: StartTag,\n        tagName: 'br',\n        attributes: [],\n        selfClosing: true\n      });\n    } else if (!token.isLink || !options.check(token)) {\n      result.push({\n        type: Chars,\n        chars: token.toString()\n      });\n    } else {\n      result.push({\n        type: LinkifyResult,\n        rendered: options.render(token)\n      });\n    }\n  }\n  return result;\n}\n\n/**\n\tReturns a list of tokens skipped until the closing tag of tagName.\n\n\t* `tagName` is the closing tag which will prompt us to stop skipping\n\t* `tokens` is the array of tokens generated by HTML5Tokenizer which\n\t* `i` is the index immediately after the opening tag to skip\n\t* `skippedTokens` is an array which skipped tokens are being pushed into\n\n\tCaveats\n\n\t* Assumes that i is the first token after the given opening tagName\n\t* The closing tag will be skipped, but nothing after it\n\t* Will track whether there is a nested tag of the same type\n*/\nfunction skipTagTokens(tagName, tokens, i, skippedTokens) {\n  // number of tokens of this type on the [fictional] stack\n  let stackCount = 1;\n  while (i < tokens.length && stackCount > 0) {\n    let token = tokens[i];\n    if (token.type === StartTag && token.tagName.toUpperCase() === tagName) {\n      // Nested tag of the same type, \"add to stack\"\n      stackCount++;\n    } else if (token.type === EndTag && token.tagName.toUpperCase() === tagName) {\n      // Closing tag\n      stackCount--;\n    }\n    skippedTokens.push(token);\n    i++;\n  }\n\n  // Note that if stackCount > 0 here, the HTML is probably invalid\n  return skippedTokens;\n}\nfunction defaultRender({\n  tagName,\n  attributes,\n  content\n}) {\n  return `<${tagName} ${attributesToString(attributes)}>${escapeText(content)}</${tagName}>`;\n}\nfunction escapeText(text) {\n  return text.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\nfunction escapeAttr(attr) {\n  return attr.replace(/\"/g, '&quot;');\n}\nfunction attributesToString(attributes) {\n  const result = [];\n  for (const attr in attributes) {\n    const val = attributes[attr] + '';\n    result.push(`${attr}=\"${escapeAttr(val)}\"`);\n  }\n  return result.join(' ');\n}\nfunction attributeArrayToStrings(attrs) {\n  const attrStrs = [];\n  for (let i = 0; i < attrs.length; i++) {\n    const name = attrs[i][0];\n    const value = attrs[i][1] + '';\n    attrStrs.push(`${name}=\"${escapeAttr(value)}\"`);\n  }\n  return attrStrs;\n}\nexport { linkifyHtml as default };"],"mappings":"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","names":["HTML5NamedCharRefs","HEXCHARCODE","CHARCODE","NAMED","EntityParser","named","entity","matches","WSP","ALPHA","CRLF","isSpace","char","isAlpha","preprocessInput","input","EventedTokenizer","delegate","entityParser","mode","tag","maybeDoctype","nextSixChars","isPublic","isSystem","state","handler","endIndex","chars","count","Tokenizer","options","token","i","doctype","isQuoted","message","tokenize","tokenizer","LinkifyResult","StartTag","EndTag","Chars","Comment","Doctype","linkifyHtml","str","opts","tokens","linkifiedTokens","linkified","Options","defaultRender","tagName","preskipLen","skipTagTokens","linkifedChars","linkifyChars","link","attributeArrayToStrings","escapeText","result","skippedTokens","stackCount","attributes","content","attributesToString","text","escapeAttr","attr","val","attrs","attrStrs","name","value"],"x_google_ignoreList":[0]}