{"version":3,"mappings":"m0IAwBUA,EAAA,YAA8EC,EAAA,GAAsCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAtCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAC,MAAAC,SAAAC,IAAA,aAAAC,GAAAV,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAc9EH,EAAA,YAA8EC,EAAA,GAAsCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAtCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAC,MAAAK,SAAAH,IAAA,aAAAI,GAAAb,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAc9EH,EAAA,YAA8EC,EAAA,GAAsCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAtCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAC,MAAAO,SAAAL,IAAA,aAAAM,GAAAf,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAc9EH,EAAA,YAAiFC,EAAA,GAAyCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAzCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAC,MAAAS,YAAAP,IAAA,aAAAQ,GAAAjB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAiC/EH,EAAA,YAA6FC,EAAA,GAAqDC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAArDC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAY,SAAAC,eAAAC,UAAA,aAAAC,GAAArB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KA2B7FH,EAAA,YAAsFC,EAAA,GAA8CC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA9CC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAY,SAAAC,eAAAG,GAAA,ICnHlG,GAAaC,KAAkC,KAAzC,GAAOA,GAAP,KAAOA,EAAkC,CACpCC,KAAOC,EAAiBC,MAAS,EACjCpB,WAAamB,EAAWC,MAAS,EAE1CC,aAAcC,EAA0D,CACtE,MAAO,MAAKJ,KAAI,EAAGK,MAAMtB,KAAA,CAASqB,CAAI,EAAEnB,IAC1C,IAAAqB,CAAA,CANWP,4CAAkC,IAAAO,CAAA,CAAlCP,wBAAkCQ,UAAA,qCAAAC,OAAA,CAAAR,KAAA,WAAAlB,WAAA,kBAAA2B,MAAA,GAAAC,KAAA,GAAAC,WAAA,IAAAC,yBDNhCC,shBACgCA,4NAQDA,wdAOvBA,qRAOuBA,kaAOvBA,sSAOuBA,kaAOvBA,iYAOuBA,4WAOvBA,sGAaRA,qfACgCA,qBASOA,YAGtC,iBAAgB,0KAAwC,kBAAI,IAC5D,iBAAK,gKAAsC,kBAAM,QAAAC,CAAA,QAAAA,CAAA,IAuB/C,mCAAgB,mKAA8D,qCAAI,IACpG,mCAAK,gBACwB,+BAAS,iBAEtC,+BAAS,KACT,qCAAM,IALY,mCAAgB,iBAAa,iBAAI,eAAW,kBAAK,iCAA6B,qCAAI,IACpG,mCAAK,iCACwB,+BAAS,iBAEtC,+BAAS,KACT,qCAAM,IAAAA,CAAA,CAAAC,EAAA,CAAAD,CAAA,GAAAE,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAf,CAAA,4wCAAAgB,QAAA,SAAAA,CAAAb,CAAA,CAAAC,CAAA,EAAAD,CAAA,KAtHNc,EAAA,MAEE1D,EAAA,YAA8B,YAEL,QACrB2D,EAAA,KAAczD,EAAA,EACdF,EAAA,YAAA2D,EAAA,KAEAzD,EAAA,EAAM,EAGRF,EAAA,YACE0D,EAAA,MACE1D,EAAA,YAAiD,eAC/C2D,EAAA,MAAuEzD,EAAA,EAEvEF,EAAA,aACE4D,EAAA,eAIA5D,EAAA,WAAA2D,EAAA,MAAsFzD,EAAA,EAAO,EAG/F2D,EAAA,GAAAC,GAAA,cACF5D,EAAA,EAEAF,EAAA,aAAiD,eAC/C2D,EAAA,MAA6EzD,EAAA,EAE7EF,EAAA,aACE4D,EAAA,eAIA5D,EAAA,WAAA2D,EAAA,MAA0FzD,EAAA,EAAO,EAGnG2D,EAAA,GAAAE,GAAA,cACF7D,EAAA,EAEAF,EAAA,aAAiD,eAC/C2D,EAAA,MAA6EzD,EAAA,EAE7EF,EAAA,aACE4D,EAAA,eAIA5D,EAAA,WAAA2D,EAAA,MAA0FzD,EAAA,EAAO,EAGnG2D,EAAA,GAAAG,GAAA,cACF9D,EAAA,EAEAF,EAAA,aAAiD,eAC/C2D,EAAA,MAAsFzD,EAAA,EAEtFF,EAAA,aACE4D,EAAA,eAIA5D,EAAA,WAAA2D,EAAA,MAAmGzD,EAAA,EAAO,EAG5G2D,EAAA,GAAAI,GAAA,cACF/D,EAAA,EAAAgE,CAAA,GAGJhE,EAAA,EAAM,EAGRF,EAAA,aAA8B,aAE1B4D,EAAA,aACA5D,EAAA,SAAA2D,EAAA,OAAuBzD,EAAA,EACvBF,EAAA,aAAA2D,EAAA,OAEAzD,EAAA,EAAM,EAGRF,EAAA,aACE0D,EAAA,OAAuC,OAEnC1D,EAAA,aAAwB,eACtB2D,EAAA,OAAoDzD,EAAA,EACpDF,EAAA,cACE0D,EAAA,IAAAS,EAAA,OACEP,EAAA,WAA4D,UAE9DQ,EAAA,EAAAF,CAAA,GACFhE,EAAA,EAEA0D,EAAA,kBAKAC,EAAA,GAAAQ,GAAA,cACFnE,EAAA,EAEAF,EAAA,aAAwB,eACQC,EAAA,UAAGC,EAAA,EAEjCF,EAAA,cACE0D,EAAA,IAAAS,EAAA,OACIP,EAAA,WAAqD,UAMrD5D,EAAA,WAA6B4D,EAAA,SAAiD1D,EAAA,EAChG0D,EAAA,UAKcQ,EAAA,EAAAF,CAAA,GACFhE,EAAA,EAEA0D,EAAA,kBAIAC,EAAA,GAAAS,GAAA,cACFpE,EAAA,EAAAgE,CAAA,KAINhE,EAAA,EAAM,EAAAgE,CAAA,IAAAtB,CAAA,KAnII2B,EAAA,YAAAC,EAAA7C,KAAA,GAmBuBrB,EAAA,IAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,2BAEbH,EAAA,GAAAqE,EAAAH,EAAA1C,aAAA,aAAA8C,CAAA,KAGRtE,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAC,MAAAC,SAAAC,IAAA,EASqBN,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,2BAEbH,EAAA,GAAAqE,EAAAH,EAAA1C,aAAA,aAAA8C,CAAA,KAGRtE,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAC,MAAAK,SAAAH,IAAA,EASqBN,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,2BAEbH,EAAA,GAAAqE,EAAAH,EAAA1C,aAAA,aAAA8C,CAAA,KAGRtE,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAC,MAAAO,SAAAL,IAAA,EASqBN,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,8BAEbH,EAAA,GAAAqE,EAAAH,EAAA1C,aAAA,gBAAA8C,CAAA,KAGRtE,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAC,MAAAS,YAAAP,IAAA,EA8BFN,EAAA,IAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,0CAGIH,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAY,SAAAC,eAAAC,UAAA,EAUlBjB,EAAA,IAAAqE,EAAA,KAGA,UAMA,KAAAC,CAAA,KAMctE,EAAA,EAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,mCAEIH,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAY,SAAAC,eAAAG,GAAA,KAAAoD,YAAA,ECrHLC,GAAWC,GAAAC,GAAAC,GAAAC,GAAAC,GAAEC,GAAmBC,GAAAC,GAAAC,GAAEC,GAASC,EAAMC,EAAa,EAAAC,OAAA;sEAAA,KAErE,GAAOjE,GAAPkE,QAAOlE,EAAkC,eAAAmE,GAAA1F,CAAA,CAAAW,CAAA,KAAAX,CAAA,KCO3CH,EAAA,YAAyCC,EAAA,GAAmBC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAnBC,EAAA,EAAAC,EAAAuF,EAAAC,YAAA,cAAAC,GAAA7F,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GALzCjG,EAAA,aACqCkG,GAAA,yBAAAC,EAAA,CAAAC,EAAAC,CAAA,KAAAP,GAAAQ,EAAA,EAAAC,MAAAC,IAAAV,EAAAW,YAAAN,CAAA,IAAAL,EAAAW,YAAAN,GAAAO,EAAAP,CAAA,KAA0BQ,EAAA,2BAAAP,EAAAC,CAAA,KAAAP,GAAAQ,EAAA,QAAAI,GAAiBZ,EAAAc,cAAA,CAAe,KAD/F1G,EAAA,EAKA2D,EAAA,EAAAgD,GAAA,kBAAA1G,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAJqCyG,GAAA,UAAAhB,EAAAW,WAAA,EACnClC,EAAA,OAAAuB,EAAAiB,UAAA,GAAAC,EAAA,mBAAA5G,CAAA,CAAA6G,OAAA,IAGK3G,EAAA,EAAAiE,EAAA,OAAAuB,EAAAC,YAAA,KCAX,GAAamB,KAA0B,KAAjC,GAAOA,GAAP,KAAOA,EAA0B,CAC5BC,QAAUvF,EAAMwF,SAAQ,EACxBH,QAAUrF,EAAMwF,SAAQ,EAExBC,MAAQzF,EAA2B,EAAE,EAErC0F,UAAY1F,EAAM,EAAK,EACvB2F,WAAa3F,EAAM,EAAK,EAExBmE,YAAcnE,EAAcC,MAAS,EACrCkF,UAAYnF,EAAM,MAAM,EAEjC6E,YAA+B,GAC/Be,WACAC,SAAW,GAEXC,gBAAuC,GAEvCC,aAAW,CACT,KAAKD,gBAAkB,KAAKE,SAAQ,CACtC,EAEAC,gBAAmB/G,GAAU,CAC3B,EAGFgH,WAAYC,EAAmB,CAC7B,KAAKP,WAAaO,EAEd,KAAKC,oBAAmB,IAAO,KACjC,KAAKR,WAAa,QAClB,KAAKf,YAAcsB,EAEvB,EAEAE,iBAAkBC,EAAoB,CACpC,KAAKL,gBAAkBK,CACzB,EAEAC,mBAAiB,CACf,CAGFvB,eAAa,CACX,MAAI,MAAKY,aAAe,QACf,KAAKK,gBAAgB,KAAKpB,WAAW,EAGvC,KAAKoB,gBAAgB,KAAKL,UAAU,CAC7C,EAEAQ,qBAAmB,CACjB,MAAO,CAAC,CAAC,KAAKX,MAAK,EAAGe,KAAKC,GAAKA,EAAEN,KAAO,KAAKP,UAAU,CAC1D,EAEAI,UAAQ,CACN,GAAMU,GAA2B,CAC/BP,GAAI,QACJQ,4JAAO/F,EAGT,MAAO,MAAK6E,MAAK,EAAGmB,OAAO,CAAEF,CAAK,CAAE,CACtC,EAEAG,eAAa,CACX,MAAO,MAAKjB,aAAe,OAC7B,EAEAkB,iBAAkBC,EAAmB,CACnC,KAAKlB,SAAWkB,CAClB,IAAA1G,CAAA,CAtEWiF,4CAA0B,IAAAjF,CAAA,CAA1BiF,wBAA0BhF,UAAA,6BAAAC,OAAA,CAAAgF,QAAA,cAAAF,QAAA,cAAAI,MAAA,YAAAC,UAAA,gBAAAC,WAAA,iBAAAxB,YAAA,kBAAAgB,UAAA,iBAAA6B,SAAA,CAAAC,GAT1B,CACT,CACEC,QAASC,GACTC,YAAaC,GAAW,IAAM/B,CAA0B,EACxDgC,MAAO,GACR,CACF,EAAAC,EAAA,EAAA/G,MAAA,EAAAC,KAAA,EAAAC,OAAA,iOAAAmB,SAAA,QAAAA,CAAA2F,EAAA5E,EAAA,CAAA4E,EAAA,IDfHpJ,EAAA,WAAuC,yBAQnCkG,GAAA,yBAAAC,EAAA,CAAAI,MAAAC,IAAAhC,EAAAgD,WAAArB,CAAA,IAAA3B,EAAAgD,WAAArB,IAAA,IACAQ,EAAA,iCAAiBnC,GAAAoC,cAAA,CAAe,IACjC1G,EAAA,EAED2D,EAAA,EAAAwF,GAAA,KAQFnJ,EAAA,GAAA0C,CAAA,KAhBItC,EAAA,EAAAiE,EAAA,UAAAC,EAAA2C,QAAA,GAAqB,WAAA3C,EAAAiD,QAAA,EACA,QAAAjD,EAAAkD,eAAA,EAGrBZ,GAAA,UAAAtC,EAAAgD,UAAA,EAIFlH,EAAA,EAAAgJ,GAAA9E,EAAAiE,cAAA,WAAA5D,YAAA,ECIW0E,GAAwBzE,GAAWC,GAAAE,GAAAuE,GAAE/D,CAAI,EAAAgE,cAAA,KAEhD,GAAOvC,GAAPwC,QAAOxC,EAA0B,eAAAyC,GAAAxJ,CAAA,CAAAW,CAAA,KAAAX,CAAA,KCVrCuD,EAAA,GAAAC,EAAA,KAAAiG,EAAA,YAAA1F,CAAA,IAAA/D,CAAA,QAAAC,CAAA,CAAAC,CAAA,IACEC,EAAA,GAAAqE,EAAAkF,GAAA,IAAArJ,EAAAsJ,4BAAA,MAAAlF,CAAA,eAAAmF,GAAA5J,CAAA,CAAAW,CAAA,KAAAX,CAAA,KATJH,EAAA,SAEE0D,EAAA,GAAAS,EAAA,KACsDP,EAAA,YACtDQ,EAAA,EAAAF,CAAA,GAEAN,EAAA,QAEAC,EAAA,EAAAmG,GAAA,sBAGF9J,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAHsBC,EAAA,GAAAiE,EAAA,OAAA/D,EAAAyJ,kCAAA,KCGtB,GAAaC,KAA0B,KAAjC,GAAOA,GAAP,KAAOA,EAA0B,CAC7BC,OAASC,EAAOC,EAAa,EAE5BC,WAAa1I,EAAuBC,MAAS,EAE9C0I,aAERC,UAAQ,CACN,KAAKD,aAAe,KAAKJ,OAAOM,cAAa,CAC/C,EAEAR,mCAAiC,CAC/B,MAAO,MAAKM,aAAaG,YAAYC,mBAAmBC,SAAW,CACrE,EAEAd,6BAA2B,CACzB,GAAMe,GAAoB,KAAKN,aAAaG,YAEtCI,EAAcD,EAAkBF,mBAChCI,EAAmBC,GAAgBC,KACrCC,EAAa,EAEjB,OAAWC,KAAcL,GACvBI,GAAcC,EAAaJ,EAG7B,MAAIF,GAAkBO,IAAIC,UAASH,GAAc,GAE1CA,EAAa,KAAKI,iBAAgB,CAC3C,EAEAA,kBAAgB,CACd,MAAOC,UAAS,KAAKjB,WAAU,EAAK,GAAI,EAAE,CAC5C,IAAArI,CAAA,CAjCWiI,4CAA0B,IAAAjI,CAAA,CAA1BiI,wBAA0BhI,UAAA,8BAAAC,OAAA,CAAAmI,WAAA,kBAAAlI,MAAA,EAAAC,KAAA,EAAAC,WAAA,IAAAC,oNDRiB,gBAAQ,4EAAQ,iBAAS,ikBAAAK,CAAA,QAAAA,CAAA,4WAMtB,eAA8C,OAAAD,CAAA,CAAAC,CAAA,eAAAa,QAAA,SAAAA,CAAAb,CAAA,CAAAC,CAAA,EAAAD,CAAA,IATzGiB,EAAA,EAAA2H,GAAA,aAAA5I,CAAA,IAAM2B,EAAA,OAAAC,EAAA8G,iBAAA,OAAAzG,YAAA,ECSOY,EAAMgG,EAAS,EAAAhC,cAAA,KAEtB,GAAOS,GAAPwB,QAAOxB,EAA0B,MCFjC,GAAOyB,IAAP,KAAOA,GAAa,CAChBC,SAAWxB,EAAOyB,EAAU,EAC5BC,cAAgB1B,EAAO2B,EAAa,EAI5CC,kBAAyC,GACzCC,uBAA8C,GAC9CC,yBAAgD,GAEhDC,aAAA,CACE,KAAKH,kBAAoB,CACvB,CAAEjE,GAAI,GAAIQ,sFAA2B,EACrC,CAAER,GAAI,EAAGQ,0IAA2C,EACpD,CAAER,GAAI,IAAM,KAAO,KAAMQ,wBAAuB,EAChD,CAAER,GAAI,IAAM,KAAO,KAAMQ,wBAAuB,EAChD,CAAER,GAAI,KAAO,KAAO,KAAMQ,sBAAqB,EAC/C,CAAER,GAAI,EAAI,KAAO,KAAO,KAAMQ,sBAAqB,EACnD,CAAER,GAAI,GAAK,KAAO,KAAO,KAAMQ,uBAAsB,EACrD,CAAER,GAAI,GAAK,KAAO,KAAO,KAAMQ,uBAAsB,EACrD,CAAER,GAAI,IAAM,KAAO,KAAO,KAAMQ,aAAuB,EACvD,CAAER,GAAI,IAAM,KAAO,KAAO,KAAMQ,aAAuB,EACvD,CAAER,GAAI,IAAM,KAAO,KAAO,KAAMQ,aAAuB,CAAE,EAG3D,KAAK0D,uBAAyB,CAC5B,CAAElE,GAAI,GAAIQ,sFAA2B,EACrC,CAAER,GAAI,EAAGQ,0IAA2C,EACpD,CAAER,GAAI,GAAK,KAAO,KAAMQ,uBAAsB,EAC9C,CAAER,GAAI,GAAK,KAAO,KAAMQ,uBAAsB,EAC9C,CAAER,GAAI,IAAM,KAAO,KAAMQ,wBAAuB,EAChD,CAAER,GAAI,IAAM,KAAO,KAAMQ,wBAAuB,EAChD,CAAER,GAAI,EAAI,KAAO,KAAO,KAAMQ,sBAAqB,EACnD,CAAER,GAAI,EAAI,KAAO,KAAO,KAAMQ,sBAAqB,EACnD,CAAER,GAAI,GAAK,KAAO,KAAO,KAAMQ,YAAsB,EACrD,CAAER,GAAI,GAAK,KAAO,KAAO,KAAMQ,uBAAsB,EACrD,CAAER,GAAI,GAAK,KAAO,KAAO,KAAMQ,uBAAsB,CAAE,EAGzD,KAAK2D,yBAA2B,CAC9B,CAAEnE,GAAI,EAAGQ,gGAAmC,EAC5C,CAAER,GAAI,EAAGQ,MAAO,GAAG,EACnB,CAAER,GAAI,EAAGQ,MAAO,GAAG,EACnB,CAAER,GAAI,EAAGQ,MAAO,GAAG,EACnB,CAAER,GAAI,EAAGQ,MAAO,GAAG,EACnB,CAAER,GAAI,GAAIQ,MAAO,IAAI,EACrB,CAAER,GAAI,GAAIQ,MAAO,IAAI,EACrB,CAAER,GAAI,GAAIQ,MAAO,IAAI,CAAE,CAE3B,EAEA6D,iBAAe,CACb,MAAO,MAAKR,SAASS,IAAkBV,GAAcW,qBAAuB,SAAS,EAClFC,KAAKC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAChE,EAEAE,mBAAoBC,EAAkB,CACpC,MAAO,MAAKhB,SAASiB,IAAkBlB,GAAcW,qBAAuB,UAAWM,CAAI,EACxFL,KAAKC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAChE,IAvDQK,EAJGnB,GAIIW,uBAAuBS,GAAYC,OAAS,kBAAA/K,CAAA,CAJhD0J,8CAAa,IAAA1J,CAAA,CAAb0J,6BAAasB,QAAbtB,GAAauB,IAAA,IAApB,GAAOvB,IAAPwB,iGCuBEnN,EAAA,aAAsFC,EAAA,GAA8CC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA9CC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAY,SAAA+L,kBAAA,aAAAC,GAAAlN,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAiBlFH,EAAA,aAA6FC,EAAA,GAAqDC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAArDC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAA6M,SAAAC,OAAAC,WAAAC,OAAA,aAAAC,GAAAvN,CAAA,CAAAW,CAAA,EAAAX,CAAA,KA0BvFH,EAAA,UAAA2D,EAAA,MAAgGzD,EAAA,aAAAyN,GAAAxN,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAChGH,EAAA,UAAA2D,EAAA,MAA8FzD,EAAA,aAAA0N,GAAAzN,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAgDtGH,EAAA,aAAiFC,EAAA,GAAyCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAzCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAoN,iBAAAC,KAAA,aAAAC,GAAA5N,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAWjFH,EAAA,aAAmFC,EAAA,GAA2CC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA3CC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAoN,iBAAAG,OAAA,aAAAC,GAAA9N,CAAA,CAAAW,CAAA,KAAAX,CAAA,KA2B/EH,EAAA,kBAAyEC,EAAA,GAAwBC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAxBC,EAAA,EAAAC,EAAAC,EAAA0N,kBAAA,aAAAC,GAAAhO,CAAA,CAAAW,CAAA,KAAAX,CAAA,KA8BvEH,EAAA,aAAuEC,EAAA,GAA+BC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA/BC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAA2N,OAAAC,KAAA,aAAAC,GAAAnO,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAEvEH,EAAA,eAAA2D,EAAA,MAAgHzD,EAAA,aAAAqO,GAAApO,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAchHH,EAAA,aAA4EC,EAAA,GAAoCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAApCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAA2N,OAAAI,UAAA,aAAAC,GAAAtO,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAsBlFH,EAAA,aAA0EC,EAAA,GAAkCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAlCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAiO,KAAApE,UAAA,aAAAqE,GAAAxO,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAe1EH,EAAA,aAA+EC,EAAA,GAAuCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAvCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAiO,KAAAE,eAAA,aAAAC,GAAA1O,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAsC7EH,EAAA,aAA6EC,EAAA,GAAqCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAArCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAqO,OAAAC,WAAA,aAAAC,GAAA7O,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAoD7EH,EAAA,aAAwGC,EAAA,GAAgEC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAhEC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAqO,OAAAG,4BAAAC,UAAA,aAAAC,GAAAhP,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAkG5GH,EAAA,aAAmFC,EAAA,GAA2CC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA3CC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAA2O,cAAAF,UAAA,aAAAG,GAAAlP,CAAA,CAAAW,CAAA,KAAAX,CAAA,KA8DzEH,EAAA,aAAiFC,EAAA,GAAyCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAzCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAA6O,OAAAC,YAAAC,GAAA,aAAAC,GAAAtP,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAoFjFH,EAAA,aAAyFC,EAAA,GAAiDC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAjDC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAiP,OAAAC,MAAAC,iBAAA,aAAAC,GAAA1P,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAUzFH,EAAA,aAAwFC,EAAA,GAAgDC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAhDC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAiP,OAAAC,MAAAG,gBAAA,aAAAC,GAAA5P,CAAA,CAAAW,CAAA,KAAAX,CAAA,KA8EtFH,EAAA,aAAuGC,EAAA,GAA+DC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA/DC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAuP,WAAA3O,SAAA4O,gBAAAC,QAAA,aAAAC,GAAAhQ,CAAA,CAAAW,CAAA,KAAAX,CAAA,KA4BnHH,EAAA,aAAsEC,EAAA,GAA8BC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA9BC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAA2P,MAAAC,KAAA,aAAAC,GAAAnQ,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAyClEH,EAAA,aAAoFC,EAAA,GAA4CC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA5CC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAA8P,SAAAC,QAAAC,QAAA,IC5rBhG,GAAaC,KAA+B,KAAtC,GAAOA,GAAP,KAAOA,EAA+B,CAClCC,cAAgBvG,EAAOuB,EAAa,EACpCiF,aAAexG,EAAOyG,EAAY,EAEjClP,KAAOC,EAAiBC,MAAS,EACjCpB,WAAamB,EAAWC,MAAS,EAEjC0I,aAAe3I,EAAwBC,MAAS,EAEzDqM,mBACA4C,0BAAiD,GACjDC,gBAEAC,wBAA+C,GAC/CC,+BAAsD,GAEtDzG,UAAQ,CACN,KAAK0G,wBAAuB,EAC5B,KAAKC,iBAAgB,EACrB,KAAKC,qBAAoB,EAEzB,KAAKL,gBAAkB,CACrB,KAAKH,aAAaS,oBAAmB,EAErC,GAAG,KAAKT,aAAaU,qBAAoB,CAAE,EAG7C,KAAKN,wBAA0B,CAC7B,CAAEjJ,GAAI,IAAO,KAAO,GAAIQ,kCAAuB,EAC/C,CAAER,GAAI,IAAO,KAAO,GAAK,EAAGQ,kCAAwB,EACpD,CAAER,GAAI,IAAO,KAAO,GAAK,EAAGQ,kCAAwB,EACpD,CAAER,GAAI,IAAO,KAAO,GAAK,GAAIQ,mCAAyB,CAAE,EAG1D,KAAK0I,+BAAiC,KAAKN,cAAc3E,kBAAkBuF,OAAOC,GAAMA,EAAEzJ,IAAiB,CAAC,CAC9G,EAEAJ,YAAa8J,EAAsB,CAC7BA,EAAQlH,YAAA,EACV,KAAK2G,wBAAuB,CAEhC,EAEAQ,mBAAiB,CACf,MAAO,MAAKnH,aAAY,EAAGoH,OAAOC,wBAAwBhH,MAC5D,EAEAiH,sBAAoB,CAClB,MAAO,MAAKlB,cAAc3E,iBAC5B,EAEA8F,2BAAyB,CACvB,MAAO,MAAKnB,cAAc1E,sBAC5B,EAEA8F,2CAA4CC,EAAiB,CAC3D,GAAM3G,GAAU,KAAK1J,KAAI,EAAGK,MAAMsL,QAAA,CAAYC,MAAA,CAAUC,UAAA,CAAcnC,OAAA,CACtE,MAAK4G,OAAMC,QAAQ7G,CAAO,EAEnB,CAAC,CAACA,EAAQjD,KAAMjI,GAAcA,IAAM6R,CAAS,EAFhB,EAGtC,EAEAG,mBAAiB,CACf,MAAO,MAAKxQ,KAAI,EAAGK,MAAM0M,IAAA,CAAQpE,UACnC,EAEA8H,sBAAoB,CAClB,MAAO,MAAKzQ,KAAI,EAAGK,MAAM0N,MAAA,CAAUC,KAAA,CAAStE,OAAA,GAAe,EAC7D,EAEAgH,6BAA2B,CACzB,MAAO,CAAE,0BAA2B,CAAC,KAAKD,qBAAoB,CAAE,CAClE,EAEAE,iBAAe,CACb,MAAO,MAAK3Q,KAAI,EAAGK,MAAMoM,MAAA,CAAU/C,OAAA,GAAe,EACpD,EAEAkH,wBAAsB,CACpB,MAAO,CAAE,0BAA2B,CAAC,KAAKD,gBAAe,CAAE,CAC7D,EAEAE,2BAAyB,CACvB,MAAO,MAAK7Q,KAAI,EAAGK,MAAM8M,MAAA,CAAUvB,MAAA,CAAUkF,IAAA,CAAQpH,OAAA,GAAe,EACtE,EAEAqH,8BAA4B,CAC1B,MAAO,MAAKF,0BAAyB,GAAM,KAAK7Q,KAAI,EAAGK,MAAM8M,MAAA,CAAUG,2BAAA,CAA+B5D,OACxG,EAEAsH,oBAAkB,CAChB,MAAO,MAAKhR,KAAI,EAAGK,MAAMoM,MAAA,CAAUC,KAAA,GAAa,EAClD,EAEAuE,sBAAoB,CAClB,MAAO,MAAKjR,KAAI,EAAGK,MAAMsN,MAAA,CAAUC,WAAA,CAAelE,OAAA,GAAe,EACnE,EAEAwH,6BAA2B,CACzB,MAAO,CAAE,0BAA2B,CAAC,KAAKD,qBAAoB,CAAE,CAClE,EAIAE,wBAAsB,CACpB,MAAO,MAAKnR,KAAI,EAAGK,MAAM+Q,kBAAA,CAAsB1H,OAAA,GAAe,EAChE,EAEA2H,qCAAmC,CACjC,MAAO,CAAE,0BAA2B,CAAC,KAAKF,uBAAsB,CAAE,CACpE,EAIAG,0BAAwB,CACtB,MAAO,MAAKtR,KAAI,EAAGK,MAAMgO,UAAA,CAAc3O,QAAA,CAAY4O,eAAA,CAAmB5E,OAAA,GAAe,EACvF,EAEA6F,yBAAuB,CACrB,GAAIgC,GAA2C,GAE3C,KAAK3I,aAAY,EAAG4I,SAAS9H,SAC/B6H,EAAME,KAAK,CAAE7K,wDAAO/F,CAAiB6Q,KAAM,OAAO,CAAE,EAGtDH,EAAQA,EAAM1K,OAAO,CACnB,CAAED,sCAAO/F,CAAqB6Q,KAAM,kBAAkB,EACtD,CAAE9K,gHAAO/F,CAA8B6Q,KAAM,gBAAgB,EAC7D,CAAE9K,8IAAO/F,CAAgC6Q,KAAM,4BAA4B,CAAE,CAC9E,EAED,KAAKvC,0BAA4BoC,EAAMI,IAAI9B,IAAM,CAC/CzJ,GAAIyJ,EAAE6B,KACN9K,MAAOiJ,EAAEjJ,MACTgL,YAAa/B,EAAE6B,MACf,CACJ,EAEQjC,sBAAoB,CAC1B,GAAMoC,GAAoB,KAAK7R,KAAI,EAAG0K,IAAI,4CAA4C,EACtD,KAAK1K,KAAI,EAAG0K,IAAI,4BAA4B,EAEpDoH,aACrBC,UAAUC,GAAoB,CAC7BH,EAAkBI,SAASD,GAAqBH,EAAkBxR,KAAK,EACnE2R,EACFH,EAAkBK,OAAM,EAExBL,EAAkBM,QAAO,CAE7B,EAAC,CACL,EAEQ3C,kBAAgB,CACtB,GAAM4C,GAAgB,KAAKpS,KAAI,EAAG0K,IAAI,gBAAgB,EAEtD0H,EAAcN,aACXlH,KAAKyH,GAAQ,CAAE,EACfN,UAAU,CAAC,CAAEO,EAAUC,CAAQ,IAAM,CAChCD,IAAa,IAASC,IAAa,KACrC,KAAKhG,grBAEH1L,CAEF,KAAKb,KAAI,EAAGwS,WAAW,CACrBC,cAAe,CACb7G,OAAQ,CACN8G,QAAS,CACPhJ,QAAS,MAIhB,EAEL,EAAC,EAEH0I,EAAcO,uBAAsB,CACtC,IAAArS,CAAA,CAjLWyO,4CAA+B,IAAAzO,CAAA,CAA/ByO,wBAA+BxO,UAAA,kCAAAC,OAAA,CAAAR,KAAA,WAAAlB,WAAA,iBAAA8J,aAAA,oBAAA3B,SAAA,CAAAO,EAAA,EAAA/G,MAAA,IAAAC,KAAA,GAAAC,WAAA,IAAAC,6SDyBFC,8lBAWAA,yNA8BJA,qWAOAA,8HAgDAA,kPAYMA,wUAOAA,yCAgDFA,yCAiBAA,iWAWAA,gLAqCFA,+TAWAA,wXAcAA,0NAkCEA,+UAiBFA,6JAWFA,mKAaAA,kTAUMA,8WAoDJA,gVAWAA,yJAcAA,0OAyBMA,gXAOAA,oUA+BNA,oUAkBAA,2CAkBUA,0OA0CVA,yRAOAA,4NAaEA,4TAaAA,uJAmDNA,0EA1rBrBA,iFAGH,gBAA6D,yEAAsL,mCAAI,oRAA5H,gBAA0G,0DAAc,mCAAI,MAAA+R,EAAA,CAAA7R,EAAA,CAAA6R,EAAA,MAAAC,CAAA,CAAAA,CAAA,2BAQ1NhS,wGAOiDA,yOAiB5BA,sFAIrBA,oHACQA,0HACDA,gIACLA,kGA4C5BA,yOACgCA,2NAwBGA,yEAIVA,+FACGA,iDACFA,mEAQWA,oHAiBrCA,2EAEA,iBAA2D,wFAAK,kBAAI,+MAAAiS,EAAA,CAAAA,EAAA,wWAa1DjS,8GAqBqBA,0qBACMA,uRAOvBA,qTASsBA,qHAOtBA,4TAYuCA,oWAiBKA,2CA+B1DA,qKAUiCA,6bACAA,qKAIvBA,+PAYqC,kBAA6F,kFAAY,mBAAI,4VAAAkS,EAAA,CAAAA,EAAA,gaAWlJlS,ogBAcuCA,sVAQIA,0DAO3CA,yrBAmBEA,gwBA4BFA,cAaA,kBAAoG,gMAA8B,mBAAI,4NAAAmS,EAAA,CAAAA,EAAA,6EAWrI,kBAA4D,uHAAc,mBAAI,mmBAAAC,EAAA,CAAAA,EAAA,sEAezFpS,iTAKmCA,qKAO7BA,kFAUNA,qEAckB,kBAAQ,iHAAU,mBAAS,mdAAAqS,EAAA,CAAAA,EAAA,2DAW3B,kBAAQ,yIAAe,mBAAS,mdAAAC,EAAA,CAAAA,EAAA,2mBAcvCtS,0FAKyBA,wBAGtB,kBAAoG,yBAAoJ,uCAAI,iCAAlG,kBAAuE,2BAAuB,uCAAI,6BAAAuS,EAAA,CAAArS,EAAA,CAAAqS,EAAA,MAAAC,EAAA,CAAAA,EAAA,mXAwBxPxS,qKAkBlBA,khBAaWA,2lBACAA,g8BAiBCA,qZAMwEA,iSAE7CA,2SAeUA,gRAIXA,mEAgBtCA,2EAEA,kBAA6D,8CAAS,mBAAI,qIAAAyS,EAAA,CAAAA,EAAA,wWAmC5DzS,kXAaDA,uFAGJ,kBAAsK,0FAAiB,mBAAI,8NAAA0S,EAAA,CAAAA,EAAA,2CAMxI1S,iGAoB5DA,mMAMsBA,sBAsBtBA,2jBAEgCA,kJAWOA,ueAGnBA,ixBAEbA,iRA7oByCA,6UACFA,iaAsHgBA,68QAlM7EkB,EAAA,MACE1D,EAAA,YAA8B,YACL,QACrB2D,EAAA,KAAmBzD,EAAA,EAEnBF,EAAA,YAAAmE,EAAA,KACMP,EAAA,UAAiF,UACvFQ,EAAA,EAAAlE,EAAA,EAAM,EAGRF,EAAA,YAEE0D,EAAA,OACE1D,EAAA,aAAwB,eACtB2D,EAAA,MAAoCzD,EAAA,EAEpC0D,EAAA,2BACF1D,EAAA,EAAAgE,CAAA,GAGFlE,EAAA,aAAiD,eAC/C2D,EAAA,MAA8FzD,EAAA,EAE9F0D,EAAA,gCASAC,EAAA,GAAAsR,GAAA,cACFjV,EAAA,EAEAF,EAAA,aACE0D,EAAA,OAAqC,OAEjC1D,EAAA,eAAA2D,EAAA,MAA4EzD,EAAA,EAE5EF,EAAA,aAAuC,gBACuD,gBAC1F2D,EAAA,MAAmCzD,EAAA,EACnCF,EAAA,gBAAA2D,EAAA,MAA6CzD,EAAA,EAC7CF,EAAA,gBAAA2D,EAAA,MAAiDzD,EAAA,EACjDF,EAAA,gBAAA2D,EAAA,MAAuCzD,EAAA,EAAS,EACzC,EAGX2D,EAAA,GAAAuR,GAAA,cAAAlR,CAAA,KAGNhE,EAAA,EAEAwD,EAAA,OAAqC,OAEE,OAEjC1D,EAAA,aACE4D,EAAA,+BAIF1D,EAAA,EAAAgE,CAAA,KAIJR,EAAA,QAAmC,QAE/B1D,EAAA,aAAwB,+BAKpB0D,EAAA,QACEG,EAAA,GAAAwR,GAAA,gBAA6C,GAAAC,GAAA,gBAAApR,CAAA,GAGlDhE,EAAA,EAAuB,EAAAgE,CAAA,OAMhChE,EAAA,EAAM,EAGRF,EAAA,cAA8B,aACL,SACrB2D,EAAA,MAA0BzD,EAAA,EAC1BF,EAAA,aAAA2D,EAAA,OAEAzD,EAAA,EAAM,EAGRF,EAAA,aAEE0D,EAAA,QAEE1D,EAAA,aACE4D,EAAA,+BAIF1D,EAAA,EAEAF,EAAA,aACE4D,EAAA,+BAIF1D,EAAA,EAEAF,EAAA,aAAwB,gBACtB2D,EAAA,OAA+DzD,EAAA,EAE/DF,EAAA,aAAuC,iBAC2C,iBAC9E2D,EAAA,OAA8BzD,EAAA,EAC9BF,EAAA,iBAAA2D,EAAA,OAAoCzD,EAAA,EACpCF,EAAA,iBAAA2D,EAAA,OAAgCzD,EAAA,EAAS,EAClC,EAGX2D,EAAA,GAAA0R,GAAA,cACFrV,EAAA,EAEAF,EAAA,aAAwB,gBACtB2D,EAAA,OAAiDzD,EAAA,EAAQ0D,EAAA,kBAA2C,+BAOpGC,EAAA,GAAA2R,GAAA,cACFtV,EAAA,EAAAgE,CAAA,GAIJhE,EAAA,EAAM,EAGRF,EAAA,cAA8B,aACL,SACrB2D,EAAA,OAAkBzD,EAAA,EAClBF,EAAA,aAAAmE,EAAA,OACSP,EAAA,YACTQ,EAAA,EAAAlE,EAAA,EAAM,EAGRF,EAAA,aAEE0D,EAAA,QACE1D,EAAA,aAAwB,+BAKpB0D,EAAA,QACE1D,EAAA,WAAA2D,EAAA,OAAkFzD,EAAA,EAElF2D,EAAA,GAAA4R,GAAA,oBAAAvR,CAAA,GAGFR,EAAA,QACE1D,EAAA,aACE4D,EAAA,+BAIF1D,EAAA,EAEAF,EAAA,aACE4D,EAAA,+BAIF1D,EAAA,EAEAF,EAAA,cAA0C,gBACxC2D,EAAA,QAA0CzD,EAAA,EAC1CF,EAAA,gBAAA2D,EAAA,QAAmJzD,EAAA,EAEnJF,EAAA,eACE4D,EAAA,iBAIA5D,EAAA,YAAA2D,EAAA,QAA6EzD,EAAA,EAAO,EAGtF2D,EAAA,IAAA6R,GAAA,cAAuE,IAAAC,GAAA,iBAGzEzV,EAAA,EAEAF,EAAA,eAAuD,iBACrD2D,EAAA,QAA4EzD,EAAA,EAE5EF,EAAA,eACE4D,EAAA,iBAIA5D,EAAA,YAAA2D,EAAA,QAA0FzD,EAAA,EAAO,EAGnG2D,EAAA,IAAA+R,GAAA,cACF1V,EAAA,EAAAgE,CAAA,GAEJhE,EAAA,EAAuB,EAAAgE,CAAA,GAI3BR,EAAA,SACE1D,EAAA,cAAwB,iBACtB2D,EAAA,QAAsFzD,EAAA,EAEtF0D,EAAA,kCAO0B,mCAI1BC,EAAA,IAAAgS,GAAA,cACF3V,EAAA,EAEAF,EAAA,cAAwB,iBACtB2D,EAAA,QAAkGzD,EAAA,EAElG0D,EAAA,kCASAC,EAAA,IAAAiS,GAAA,cACF5V,EAAA,EACAF,EAAA,cACE0D,EAAA,SAAsC,QAElCE,EAAA,gCAAAM,CAAA,KAONhE,EAAA,EAAAgE,CAAA,GAGJhE,EAAA,EAAM,EAGRF,EAAA,eAA8B,cACL,UACrB2D,EAAA,QAAezD,EAAA,EAAK,EAGtBF,EAAA,cAEE0D,EAAA,SAAqC,QAIjC1D,EAAA,cAAwB,iBACtB2D,EAAA,QAA2DzD,EAAA,EAC3DF,EAAA,gBAAA2D,EAAA,QAAiHzD,EAAA,EAEjHF,EAAA,eACE4D,EAAA,iBACA5D,EAAA,YAAA2D,EAAA,QAA2BzD,EAAA,EAAO,EAGpC2D,EAAA,IAAAkS,GAAA,cACF7V,EAAA,EAEAF,EAAA,eAA6C,gCAKzC0D,EAAA,SACE1D,EAAA,YAAAmE,EAAA,QAA8CP,EAAA,aAAqKQ,EAAA,EAAAlE,EAAA,EAAAgE,CAAA,GAEvNhE,EAAA,EAAuB,EAGzBF,EAAA,eAAgD,gCAK9C0D,EAAA,SACE1D,EAAA,YAAA2D,EAAA,QAAqFzD,EAAA,EAAAgE,CAAA,GAEzFhE,EAAA,EAAuB,EAAAgE,CAAA,GAKzBR,EAAA,SACE1D,EAAA,cAAwB,gCAKtB0D,EAAA,SACE1D,EAAA,gBAAA2D,EAAA,QAEAzD,EAAA,EAAAgE,CAAA,GAEFhE,EAAA,EAAuB,EAGzBF,EAAA,cAAwB,iBACtB2D,EAAA,QAA4FzD,EAAA,EAE5FF,EAAA,eACE4D,EAAA,iBAIA5D,EAAA,YAAA2D,EAAA,QAAiHzD,EAAA,EAAO,EAG1H2D,EAAA,IAAAmS,GAAA,cACF9V,EAAA,EAAAgE,CAAA,KAKJR,EAAA,SAA4C,QACL,SAGjC1D,EAAA,cAAwB,gCAKtB0D,EAAA,SACE1D,EAAA,YAAA2D,EAAA,QAA6GzD,EAAA,EAAAgE,CAAA,GAEjHhE,EAAA,EAAuB,EAAAgE,CAAA,OAO7BR,EAAA,SAAwC,SAEpC1D,EAAA,cACE4D,EAAA,gCAKF1D,EAAA,EAAAgE,CAAA,KAIJR,EAAA,SACE1D,EAAA,cAAwB,gCAKpB0D,EAAA,SACE1D,EAAA,YAAA2D,EAAA,QAAuIzD,EAAA,EAAAgE,CAAA,GAE3IhE,EAAA,EAAuB,EAAAgE,CAAA,GAI3BR,EAAA,SACE1D,EAAA,cAAwB,gCAKpB0D,EAAA,SACE1D,EAAA,YAAAmE,EAAA,QAAWP,EAAA,aAAuKQ,EAAA,EAAAlE,EAAA,EAAAgE,CAAA,GAGpLR,EAAA,SACE1D,EAAA,eAAwG,gCAKpG0D,EAAA,SACE1D,EAAA,YAAAmE,EAAA,QACMP,EAAA,aAENQ,EAAA,EAAAlE,EAAA,EAAAgE,CAAA,GAEJhE,EAAA,EAAuB,EAAAgE,CAAA,GAG7BhE,EAAA,EAAuB,EAAAgE,CAAA,GAG7BhE,EAAA,EAAM,EAGRF,EAAA,eAA8B,cACL,UACrB2D,EAAA,QAAuBzD,EAAA,EAAK,EAG9BF,EAAA,cAAyB,eAC+B,iBACpD2D,EAAA,QAAqEzD,EAAA,EAErEF,EAAA,eACE4D,EAAA,iBAIA5D,EAAA,YAAA2D,EAAA,QAA+FzD,EAAA,EAAO,EAGxG2D,EAAA,IAAAoS,GAAA,cACF/V,EAAA,EAAM,EACF,EAGRF,EAAA,eAA8B,cACL,UACrB2D,EAAA,QAAezD,EAAA,EAAK,EAGtBF,EAAA,cAEE0D,EAAA,SAAqC,SAGjC1D,EAAA,cAAwB,gCAKpB0D,EAAA,SACE1D,EAAA,YAAAmE,EAAA,QAAiBP,EAAA,cAAwGQ,EAAA,EAAAlE,EAAA,EAAAgE,CAAA,GAE7HhE,EAAA,EAAuB,EAGzBF,EAAA,cAAwB,gCAKpB0D,EAAA,SACE1D,EAAA,YAAAmE,EAAA,QAAiBP,EAAA,cAA6GQ,EAAA,EAAAlE,EAAA,EAAAgE,CAAA,GAElIhE,EAAA,EAAuB,EAAAgE,CAAA,GAK3BR,EAAA,SACE1D,EAAA,cAAwB,gCAKpB0D,EAAA,SACE1D,EAAA,WAAA2D,EAAA,QAAuHzD,EAAA,EAAAgE,CAAA,GAGzHR,EAAA,SACE1D,EAAA,eAA+C,iBAC7C2D,EAAA,QAAiDzD,EAAA,EAEjDF,EAAA,eAAAmE,EAAA,QACWP,EAAA,aAA6H,aACxIQ,EAAA,EAAAlE,EAAA,EAEA0D,EAAA,iBAKAC,EAAA,IAAAqS,GAAA,cACFhW,EAAA,EAEAF,EAAA,eACE4D,EAAA,gCAIF1D,EAAA,EAEAF,EAAA,eAAkB,gCAKd0D,EAAA,SACE1D,EAAA,YAAA2D,EAAA,QAA2DzD,EAAA,EAAAgE,CAAA,GAE/DhE,EAAA,EAAuB,EAAAgE,CAAA,GAI7BhE,EAAA,EAAuB,EAAAgE,CAAA,KAO/BhE,EAAA,EAAM,EAGRF,EAAA,eAA8B,cACL,UACrB2D,EAAA,QAA2BzD,EAAA,EAAK,EAGlCF,EAAA,cAEE0D,EAAA,SAAqC,SAEjC1D,EAAA,cAAwB,gCAKpB0D,EAAA,SACE1D,EAAA,WAAA2D,EAAA,QAA4FzD,EAAA,EAC5FF,EAAA,WAAA2D,EAAA,QAAmIzD,EAAA,EAAAgE,CAAA,GAEvIhE,EAAA,EAAuB,EAAAgE,CAAA,KAK7BR,EAAA,SAAqC,SAIjC1D,EAAA,cAAwB,gCAKpB0D,EAAA,SACE1D,EAAA,YAAA2D,EAAA,QAAgIzD,EAAA,EAAAgE,CAAA,GAGlIR,EAAA,SAEE1D,EAAA,eAAkE,iBAChE2D,EAAA,QAAoIzD,EAAA,EAEpIF,EAAA,gBAAA2D,EAAA,QAAiGzD,EAAA,EAEjG0D,EAAA,kCASAC,EAAA,IAAAsS,GAAA,cACFjW,EAAA,EAEAF,EAAA,eAAkE,iBAChE2D,EAAA,QAAoEzD,EAAA,EAEpE0D,EAAA,6BAEA5D,EAAA,eAAA2D,EAAA,QAAiFzD,EAAA,EAEjF2D,EAAA,IAAAuS,GAAA,cACFlW,EAAA,EAAAgE,CAAA,GAGJhE,EAAA,EAAuB,EAAAgE,CAAA,KAK/BhE,EAAA,EAAM,EAGRF,EAAA,eAA8B,cACL,UACrB2D,EAAA,QAAmBzD,EAAA,EACnBF,EAAA,cAAAmE,EAAA,QACSP,EAAA,aACTQ,EAAA,EAAAlE,EAAA,EAAM,EAGRF,EAAA,cAEE0D,EAAA,SAAwC,SAGpC1D,EAAA,cACE4D,EAAA,gCAIF1D,EAAA,EAEAF,EAAA,cACE4D,EAAA,gCAIF1D,EAAA,EAAAgE,CAAA,KAIJR,EAAA,SAAyC,SACA,SAGnC1D,EAAA,cAAwB,gCAKpB0D,EAAA,SACE1D,EAAA,YAAA2D,EAAA,QAAkFzD,EAAA,EAAAgE,CAAA,GAEtFhE,EAAA,EAAuB,EAAAgE,CAAA,GAI3BR,EAAA,SACE1D,EAAA,cAAwB,gCAKpB0D,EAAA,SACE1D,EAAA,WAAA2D,EAAA,QAAiFzD,EAAA,EAEjFF,EAAA,YAAAmE,EAAA,QACMP,EAAA,aACNQ,EAAA,EAAAlE,EAAA,EAAAgE,CAAA,GAGFR,EAAA,SACE1D,EAAA,eAA4E,iBAC1E2D,EAAA,QAAgEzD,EAAA,EAChE0D,EAAA,iBAIAC,EAAA,IAAAwS,GAAA,cACFnW,EAAA,EAAAgE,CAAA,GAEJhE,EAAA,EAAuB,EAAAgE,CAAA,OAOjChE,EAAA,EAAM,EAGRF,EAAA,eAA8B,cACL,UACrB2D,EAAA,QAAuBzD,EAAA,EAAK,EAG9BF,EAAA,cAAyB,eAEuB,iBAC5C2D,EAAA,QAAwCzD,EAAA,EAExC0D,EAAA,iBAKAC,EAAA,IAAAyS,GAAA,cACFpW,EAAA,EAEAF,EAAA,eACE4D,EAAA,gCAIF1D,EAAA,EAAM,EAEF,EAGRF,EAAA,eAA8B,cACL,UACrB2D,EAAA,QAAkBzD,EAAA,EAElBF,EAAA,cAAA2D,EAAA,QAEAzD,EAAA,EAAM,EAGRF,EAAA,cAEE0D,EAAA,SAAuC,SAGnC1D,EAAA,cAAwB,iBACtB2D,EAAA,QAAiEzD,EAAA,EAEjEF,EAAA,eAA8B,aAC5B2D,EAAA,QAAiHzD,EAAA,EAEjHF,EAAA,SAAA2D,EAAA,QAAuKzD,EAAA,EAAI,EAG7K0D,EAAA,iBAKAC,EAAA,IAAA0S,GAAA,cACFrW,EAAA,EAAAgE,CAAA,KAKNhE,EAAA,EAAM,EAAAgE,CAAA,IAAAtB,CAAA,KAtuBI2B,EAAA,YAAAC,EAAA7C,KAAA,GAgBgErB,EAAA,IAAAiE,EAAA,QAAAC,EAAAuM,eAAA,EAUpEzQ,EAAA,GAAAiE,EAAA,QAAAC,EAAAsM,yBAAA,EAAmC,gBAM/BxQ,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAY,SAAA+L,kBAAA,EAiBI9M,EAAA,IAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAA6M,SAAAC,OAAAC,WAAAC,OAAA,EA0BOnN,EAAA,IAAAiE,EAAA,OAAAC,EAAAkN,kBAAA,OACApR,EAAA,EAAAiE,EAAA,OAAAC,EAAAkN,kBAAA,KAgDTpR,EAAA,IAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAoN,iBAAAC,KAAA,EAQJxN,EAAA,GAAAiE,EAAA,YAAAC,EAAA/D,WAAA,+BAGIH,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAoN,iBAAAG,OAAA,EA2B6C1N,EAAA,IAAAiE,EAAA,OAAAC,EAAA0J,kBAAA,EAKvB5N,EAAA,GAAAiE,EAAA,UAAAC,EAAA+N,uBAAA,GAOAjS,EAAA,GAAAiE,EAAA,UAAAC,EAAA+N,uBAAA,GAMnBjS,EAAA,EAAAiE,EAAA,UAAAC,EAAA+N,uBAAA,GAOyBjS,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,oBAEdH,EAAA,GAAAqE,EAAAH,EAAA7C,KAAA,EAAAK,MAAAoM,MAAA,CAAAC,KAAA,EAAAzJ,CAAA,MAGRtE,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAA2N,OAAAC,KAAA,EAEO/N,EAAA,EAAAiE,EAAA,OAAAC,EAAAmO,mBAAA,GAGVrS,EAAA,EAAAiE,EAAA,UAAAC,EAAA+N,uBAAA,GAM8BjS,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,yBAEnBH,EAAA,GAAAqE,EAAAH,EAAA7C,KAAA,EAAAK,MAAAoM,MAAA,CAAAI,UAAA,EAAA5J,CAAA,MAGRtE,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAA2N,OAAAI,UAAA,EAcVlO,EAAA,GAAAiE,EAAA,QAAAC,EAAAqN,qBAAA,GAAgC,gBAMwBvR,EAAA,EAAAiE,EAAA,aAAAC,EAAA2N,kBAAA,GAEpD7R,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAiO,KAAApE,UAAA,EASJhK,EAAA,GAAAiE,EAAA,QAAAC,EAAAsN,0BAAA,GAAqC,gBAMjCxR,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAiO,KAAAE,eAAA,EAsCEtO,EAAA,IAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAqO,OAAAC,WAAA,EAkCOzO,EAAA,IAAAiE,EAAA,SAAAC,EAAAgO,0BAAA,GAaoBlS,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,EAAAqO,MAAA,CAAAG,2BAAA,CAAAC,UAAA,GAEnB5O,EAAA,GAAAqE,EAAAH,EAAA7C,KAAA,EAAAK,MAAA8M,MAAA,CAAAG,2BAAA,CAAAC,UAAA,EAAAtK,CAAA,MAGRtE,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAqO,OAAAG,4BAAAC,UAAA,EA6DkD5O,EAAA,IAAAiE,EAAA,UAAAC,EAAAwO,oCAAA,GAgC3B1S,EAAA,IAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,gCAEnBH,EAAA,GAAAqE,EAAAH,EAAA7C,KAAA,EAAAK,MAAAoN,aAAA,CAAAF,UAAA,EAAAtK,CAAA,MAGRtE,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAA2O,cAAAF,UAAA,EAkDO5O,EAAA,IAAAiE,EAAA,UAAAC,EAAAqO,4BAAA,GASqBvS,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,8BAGlBH,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAA6O,OAAAC,YAAAC,GAAA,EAIgBlP,EAAA,GAAAiE,EAAA,UAAAC,EAAAqO,4BAAA,GAOAvS,EAAA,GAAAiE,EAAA,UAAAC,EAAAqO,4BAAA,GA2DAvS,EAAA,IAAAiE,EAAA,UAAAC,EAAA6N,4BAAA,GAQpB/R,EAAA,GAAAiE,EAAA,QAAAC,EAAAyM,8BAAA,EAAwC,gBAMpC3Q,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAiP,OAAAC,MAAAC,iBAAA,EAGgBtP,EAAA,EAAAiE,EAAA,UAAAC,EAAA6N,4BAAA,GAGmC/R,EAAA,GAAAiE,EAAA,QAAAC,EAAAwM,uBAAA,EAInD1Q,EAAA,GAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAiP,OAAAC,MAAAG,gBAAA,EAwEDxP,EAAA,IAAAiE,EAAA,UAAAE,EAAA,GAAA+R,GAAA,CAAAhS,EAAAyO,yBAAA,IAI0B3S,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,oDAEvBH,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAuP,WAAA3O,SAAA4O,gBAAAC,QAAA,EAyBQ5P,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,mBAGpBH,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAA2P,MAAAC,KAAA,EAsC2B/P,EAAA,IAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,iCAGvBH,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAA8P,SAAAC,QAAAC,QAAA,KAAA5L,YAAA,EC1sBdC,GAAW2R,GAAAC,GAAA3R,GAAAC,GAAA2R,GAAA1R,GAAAC,GAAAC,GACXC,GAAmBC,GAAAC,GAAAC,GACnBqR,GACA1P,GACAzB,EACAoR,GACAnR,GACAoR,GACAtR,GACA0E,GACAX,GACAwN,EAAc,EAAApR,OAAA;sEAAA,KAGZ,GAAO+K,GAAPsG,QAAOtG,EAA+B,MCzB5C,GAAauG,KAAwB,KAA/B,GAAOA,GAAP,KAAOA,EAAwB,CAEnCC,2BAAyB,CACvB,MAAO,CACL,CACEnP,GAAI,KACJQ,8FAAO/F,CAEP+Q,wsBAAa/Q,EAEf,CACEuF,GAAI,OACJQ,YAAO/F,EAET,CACEuF,GAAI,OACJQ,YAAO/F,EAET,CACEuF,GAAI,OACJQ,YAAO/F,EAET,CACEuF,GAAI,OACJQ,YAAO/F,EAET,CACEuF,GAAI,OACJQ,YAAO/F,EAET,CACEuF,GAAI,QACJQ,aAAO/F,EAET,CACEuF,GAAI,QACJQ,aAAO/F,EAET,CACEuF,GAAI,QACJQ,aAAO/F,CACR,CAEL,EAEA2U,qBAAsBxV,EAAe,CACnC,MAAOA,GAAKK,MAAM0I,WAAA,CAAeW,OAAA,GAAe,EAClD,EAEA+L,aAAczV,EAAe,CAC3B,MAAOA,GAAKK,MAAM0I,WAAA,CAAeU,GAAA,CAAOC,OAAA,GAAe,EACzD,EAEAgM,yBAA0B1V,EAAe,CACvC,MAAOA,GAAKK,MAAM0I,WAAA,CAAe4M,aAAA,CAAiBjM,OAAA,GAAe,EACnE,EAEAkM,0BAA2B5V,EAAe,CACxC,MAAOA,GAAKK,MAAMwV,IAAA,CAAQ9M,WAAA,CAAe4M,aAAA,CAAiBjM,OAAA,GAAe,EAC3E,EAEAoM,gBAAiB9V,EAAe,CAC9B,MAAOA,GAAKK,MAAM0V,WAAA,CAAerM,OAAA,GAAe,EAClD,EAEAsM,cAAehW,EAAe,CAC5B,MAAOA,GAAKK,MAAMwV,IAAA,CAAQnM,OAAA,GAAe,EAC3C,EAEAuM,yBAA0BjW,EAAe,CACvC,MAAOA,GAAKK,MAAMwV,IAAA,CAAQ9M,WAAA,CAAeW,OAAA,GAAe,EAC1D,EAEAwM,2BAA4BlW,EAAe,CACzC,GAAMmW,GAAqBnW,EAAKK,MAAM0I,WAAA,CAAeW,OAAA,CAC/C0M,EAAqBpW,EAAKK,MAAM0I,WAAA,CAAesN,OAAA,CAC/CC,EAAyBtW,EAAKK,MAAMwV,IAAA,CAAQ9M,WAAA,CAAeW,OAAA,CAC3D6M,EAAyBvW,EAAKK,MAAMwV,IAAA,CAAQ9M,WAAA,CAAesN,OAAA,CAG7DG,EAAa,CAACL,GAAsB,CAACC,EAAqB,EAC9DI,IAAe,CAACF,GAA0B,CAACC,EAAyB,EAGpE,GAAIlW,GAAQ,EACZ,MAAI8V,KAAoB9V,GAAS,CAAC+V,GAAsB,GACpDE,IAAwBjW,GAAS,CAACkW,GAA0B,GAEzD,CACLlW,QACAoW,OAAQD,EACRE,KAAMC,yJAAmE,CAAEtW,OAAK,CAAE,EAEtF,IAAAC,CAAA,CA7FWgV,4CAAwB,IAAAhV,CAAA,CAAxBgV,2BAAwBhK,QAAxBgK,EAAwB/J,IAAA,IAA/B,GAAO+J,GAAPsB,QAAOtB,EAAwB,MCR9B,GAAMuB,IAA8C,CACzDC,WAAY,CAAEC,GAAWtR,QAAQ,EACjCuR,SAAU,CACRvR,qCAAU5E,GAIDoW,GAA2D,CACtEH,WAAY,CAAEC,GAAWG,UAAU,GAAG,CAAC,EACvCF,SAAU,CACRG,sQAAWtW,GAIFuW,GAA0D,CACrEN,WAAY,CAAEC,GAAWtR,QAAQ,EACjCuR,SAAU,CACRvR,sKAAU5E,GAIDwW,GAA2C,CACtDP,WAAY,CAAEC,GAAWtR,SAAUsR,GAAWO,IAAI,CAAC,EAAGP,GAAWQ,QAAQ,QAAQ,CAAC,EAClFP,SAAU,CACRvR,gIAAU5E,CACVyW,yKAAKzW,CACL0W,2KAAS1W,GAIA2W,GAA6C,CACxDV,WAAY,CAAEC,GAAWtR,SAAUsR,GAAWO,IAAI,EAAE,EAAGP,GAAWQ,QAAQ,UAAU,CAAC,EACrFP,SAAU,CACRvR,oKAAU5E,CACVyW,8XAAKzW,CACL0W,+MAAS1W,GAIA4W,GAAmD,CAC9DX,WAAY,CAAEC,GAAWtR,SAAUsR,GAAWO,IAAI,CAAC,EAAGP,GAAWQ,QAAQ,QAAQ,CAAC,EAClFP,SAAU,CACRvR,sQAAU5E,CACVyW,wUAAKzW,CACL0W,iTAAS1W,GAIA6W,GAA4C,CACvDZ,WAAY,CAAEC,GAAWtR,SAAUsR,GAAWrI,KAAK,EACnDsI,SAAU,CACRvR,yPAAU5E,CACV6N,kVAAO7N,GAIE8W,GAAoD,CAC/Db,WAAY,CAAEC,GAAWtR,SAAUsR,GAAWO,IAAI,CAAC,CAAC,EACpDN,SAAU,CACRvR,8MAAU5E,CACVyW,sWAAKzW,GAII+W,GAAoD,CAC/Dd,WAAY,CAAEC,GAAWtR,SAAUsR,GAAWO,IAAI,CAAC,CAAC,EACpDN,SAAU,CACRvR,2CAAU5E,CACVyW,wDAAKzW,GAIIgX,GAAkD,CAC7Df,WAAY,CAAEC,GAAWtR,SAAUsR,GAAWO,IAAI,EAAE,CAAC,EACrDN,SAAU,CACRvR,iRAAU5E,CACVyW,2YAAKzW,GAIIiX,GAAmD,CAC9DhB,WAAY,CAAEC,GAAWtR,SAAUsR,GAAWO,IAAI,EAAE,CAAC,EACrDN,SAAU,CACRvR,iCAAU5E,CACVyW,+CAAKzW,GAIIkX,GAA+C,CAC1DjB,WAAY,CAAEC,GAAWtR,SAAUsR,GAAWO,IAAI,EAAE,CAAC,EACrDN,SAAU,CACRvR,8UAAU5E,CACVyW,0aAAKzW,GAIImX,GAA4D,CACvElB,WAAY,CAAEC,GAAWtR,SAAUsR,GAAWO,IAAI,CAAC,EAAGP,GAAWQ,QAAQ,QAAQ,CAAC,EAClFP,SAAU,CACRvR,uWAAU5E,CACVyW,kcAAKzW,CACL0W,kZAAS1W,GAIAoX,GAAwC,CACnDnB,WAAY,CAAEC,GAAWtR,SAAUsR,GAAWO,IAAI,CAAC,EAAGP,GAAWQ,QAAQ,QAAQ,CAAC,EAClFP,SAAU,CACRvR,0PAAU5E,CACVyW,mZAAKzW,CACL0W,6VAAS1W,GAIAqX,GAA4C,CACvDpB,WAAY,CAAEC,GAAWtR,SAAUsR,GAAWO,IAAI,CAAC,CAAC,EACpDN,SAAU,CACRvR,kMAAU5E,CACVyW,wMAAKzW,GAIIsX,GAAkD,CAC7DrB,WAAY,CAAEC,GAAWtR,SAAUsR,GAAWO,IAAI,CAAC,CAAC,EACpDN,SAAU,CACRvR,6QAAU5E,CACVyW,wRAAKzW,GAGIuX,GAA4D,CACvEtB,WAAY,CAAEC,GAAWtR,SAAUsR,GAAWO,IAAI,CAAC,CAAC,EACpDN,SAAU,CACRvR,uTAAU5E,CACVyW,6WAAKzW,0BCnIPoB,EAAA,QAEAF,EAAA,GAAAS,EAAA,KACEP,EAAA,SACFQ,EAAA,EAAAF,CAAA,KCFF,GAAa8V,KAAyB,KAAhC,GAAOA,GAAP,KAAOA,EAAyB,CAC3BC,aAAerY,EAAM,GAAO,CAAEsY,UAAWC,EAAgB,CAAE,IAAAlY,CAAA,CADzD+X,4CAAyB,IAAA/X,CAAA,CAAzB+X,wBAAyB9X,UAAA,4BAAAC,OAAA,CAAA8X,aAAA,oBAAA7X,MAAA,EAAAC,KAAA,EAAAC,WAAA,IAAAC,QDNpC,gBAAqI,uBAAiN,mCAAI,wBAA1K,gBAA6I,6BAAyB,mCAAI,iCAOxV,gBAA6G,4JAA0B,iBAAI,kHAAAI,CAAA,CAAAC,CAAA,0YAAAa,QAAA,SAAAA,CAAAb,CAAA,CAAAC,CAAA,EAAAD,CAAA,KAR/Ic,EAAA,GAAAS,EAAA,KACEP,EAAA,SAA4J,SAC9JQ,EAAA,EAAAF,CAAA,GAEAL,EAAA,EAAAuW,GAAA,MAAAxX,CAAA,KAAAtC,EAAA,GAAAgJ,GAAA9E,EAAAyV,aAAA,WAAAxQ,aAAA,MCGM,GAAOuQ,GAAPK,QAAOL,EAAyB,eAAAM,GAAAna,CAAA,CAAAW,CAAA,KAAAX,CAAA,KCiB5BH,EAAA,YAAyFC,EAAA,GAAiDC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAjDC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAA8Z,uBAAAC,OAAA,ICXnG,GAAaC,KAAqB,KAA5B,GAAOA,GAAP,KAAOA,EAAqB,CACxBC,aAAetQ,EAAOuQ,EAAmB,EAExChZ,KAAOC,EAAiBC,MAAS,EACjCpB,WAAamB,EAAWC,MAAS,EAE1C+Y,uBAEAC,2BAAyB,CACvB,MAAO,MAAKH,aAAaG,0BAAyB,CACpD,IAAA5Y,CAAA,CAVWwY,4CAAqB,IAAAxY,CAAA,CAArBwY,wBAAqBvY,UAAA,uBAAAC,OAAA,CAAAR,KAAA,WAAAlB,WAAA,kBAAA2B,MAAA,GAAAC,KAAA,EAAAC,WAAA,IAAAC,qKDPjBC,mHAMyCA,meAZ1DkB,EAAA,KAAmC,KAI/B1D,EAAA,WAAuC,WACd,QACrB2D,EAAA,KAA0BzD,EAAA,EAAK,EAGjCF,EAAA,WAAyB,WAEC,aACtB2D,EAAA,KAAwDzD,EAAA,EACxDF,EAAA,YACE4D,EAAA,4BACF1D,EAAA,EAEA0D,EAAA,8BAOAC,EAAA,GAAAiX,GAAA,cACF5a,EAAA,EAAM,EACF,EAAAgE,CAAA,MAAAtB,CAAA,KA1BE2B,EAAA,YAAAC,EAAA7C,KAAA,GAmBFrB,EAAA,IAAAiE,EAAA,yBAAAC,EAAAqW,0BAAA,GAAsD,oBAAqB,YAAArW,EAAA/D,WAAA,qCAKvEH,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAA8Z,uBAAAC,OAAA,KAAA3V,YAAA,ECbHC,GAAWG,GAAAC,GAAEE,GAAmBC,GAAAC,GAAAC,GAAEyU,GAA2BlD,GAA2BrR,CAAI,EAAAE,OAAA;sEAAA,KAEnG,GAAO8U,GAAPM,QAAON,EAAqB,UAAAO,EAAA,CAAA7a,CAAA,kBAAAA,CAAA,YAAA8a,GAAA9a,CAAA,CAAAW,CAAA,KAAAX,CAAA,KCiCxBH,EAAA,aAAwEC,EAAA,GAAgCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAhCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAY,SAAA6Z,IAAA,aAAAC,GAAAhb,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAWxEH,EAAA,aAAoFC,EAAA,GAA4CC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA5CC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAY,SAAA+Z,gBAAA,aAAAC,GAAAlb,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAqDpFH,EAAA,aAAiFC,EAAA,GAAyCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAzCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAY,SAAAia,aAAA,aAAAC,GAAApb,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAoC/EH,EAAA,aAAuFC,EAAA,GAA+CC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA/CC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAY,SAAAma,OAAAC,YAAA,aAAAC,GAAAvb,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAWvFH,EAAA,aAAuFC,EAAA,GAA+CC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA/CC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAY,SAAAma,OAAAG,YAAA,aAAAC,GAAAzb,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAWvFH,EAAA,aAAsFC,EAAA,GAA8CC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA9CC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAY,SAAAma,OAAAK,WAAA,aAAAC,GAAA3b,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAoBpFuD,EAAA,GAAAC,EAAA,MAAAO,CAAA,cAAA6X,GAAA5b,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAIAuD,EAAA,GAAAS,EAAA,MACuGP,EAAA,QAEvGQ,EAAA,EAAAF,CAAA,cAAA8X,GAAA7b,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAYJH,EAAA,aAAqFC,EAAA,GAA6CC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA7CC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAY,SAAA4a,iBAAA,ICrK/F,GAAaC,KAAgC,KAAvC,GAAOA,GAAP,KAAOA,EAAgC,CACnCxB,aAAetQ,EAAOuQ,EAAmB,EACzCwB,SAAW/R,EAAOgS,CAAQ,EAC1BC,gBAAkBjS,EAAOkS,EAAe,EACxCnS,OAASC,EAAOC,EAAa,EAE5B1I,KAAOC,EAAiBC,MAAS,EACjCpB,WAAamB,EAAWC,MAAS,EAEjC0a,cAAgB3a,EAA2B,EAAE,EAC7C4a,cAAgB5a,EAA2B,EAAE,EAEtD6a,kBACAC,gBAAgC,GAEhCC,UAAiC,CAC/B,CACE5U,GAAI,cACJQ,4CAAO/F,EAET,CACEuF,GAAI,OACJQ,YAAO/F,EAET,CACEuF,GAAI,OACJQ,YAAO/F,EAET,CACEuF,GAAI,UACJQ,wDAAO/F,CACR,EAGK+H,aAER,GAAIqS,eAAY,CACd,MAAO,MAAKzS,OAAOM,cAAa,EAAGpJ,SAAS6Z,IAC9C,EAEA1Q,UAAQ,CACN,KAAKD,aAAe,KAAKJ,OAAOM,cAAa,EAE7C,KAAKoS,kBAAiB,CACxB,EAEAhC,2BAAyB,CACvB,MAAO,MAAKH,aAAaG,0BAAyB,CACpD,EAEAiC,eAAgBC,EAAkB,CAChC,KAAKV,gBAAgBW,qBAAqBD,CAAQ,EAC/CrJ,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,0FAAkC,EAEhD,KAAKC,iBAAgB,CACvB,GAEAC,MAAQC,GAA2BC,GAA0B,CAAED,MAAKnC,2CAAM1Y,CAAmB2Z,SAAU,KAAKA,QAAQ,CAAE,EACvH,CACL,EAEAoB,gBAAc,CACZ,KAAKlB,gBAAgBmB,qBAAoB,EACtC9J,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,oFAAkC,EAEhD,KAAKC,iBAAgB,CACvB,GAEAC,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEAyP,eAAgBV,EAAkB,CAChC,KAAKV,gBAAgBqB,qBAAqBX,CAAQ,EAC/CrJ,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,0FAAkC,EAEhD,KAAKC,iBAAgB,CACvB,GAEAC,MAAQC,GAA2BC,GAA0B,CAAED,MAAKnC,2CAAM1Y,CAAmB2Z,SAAU,KAAKA,QAAQ,CAAE,EACvH,CACL,EAEAwB,gBAAc,CACZ,KAAKtB,gBAAgBuB,qBAAoB,EACtClK,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,oFAAkC,EAEhD,KAAKC,iBAAgB,CACvB,GAEAC,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEQ6O,mBAAiB,CACvB,KAAKJ,kBAAoBoB,GAAM,KAAKtT,aAAalJ,SAASyc,QAAS,OAAO,GAAGzK,KAC7E,KAAKqJ,gBAAkB,KAAKnS,aAAalJ,SAAS0c,OACpD,EAEQZ,kBAAgB,CACtB,KAAKhT,OAAO6T,YAAW,EACpBtK,UAAUuK,GAAS,CAClB,KAAK1T,aAAe0T,EAEpB,KAAKpB,kBAAiB,CACxB,EAAC,CACL,IAAA5a,CAAA,CAlHWia,4CAAgC,IAAAja,CAAA,CAAhCia,wBAAgCha,UAAA,mCAAAC,OAAA,CAAAR,KAAA,WAAAlB,WAAA,iBAAA8b,cAAA,oBAAAC,cAAA,qBAAApa,MAAA,IAAAC,KAAA,GAAAC,WAAA,IAAAC,6IDuCDC,mHAcAA,mXA4GdA,iEArMbA,4GAKsBA,mWAGNA,+CAWMA,kfAGNA,gdACmE,iBAA8D,oBAAgB,kBAAI,SAAAY,CAAA,CAAAA,CAAA,qBAU7IZ,sGAWYA,2DAWLA,+KAaDA,uSAcDA,yBAcIA,gHACLA,iBAe5BA,qEAE+C,iBAAI,SAAK,kBAAK,eAAA0b,EAAA,CAAAA,EAAA,eAO9B1b,+IACHA,0BAUYA,sCACVA,0DAWUA,yDAWDA,2CAiBvCA,qEAEA,iBAA2D,wFAAK,kBAAI,4LAAA2b,EAAA,CAAAA,EAAA,gHA+B3C3b,8GASQA,uIASQA,8GACbA,wGAa5BA,wKAMiCA,4RACLA,kLASMA,6kBACNA,kSASWA,geACXA,+MASKA,4WACLA,8GAa5BA,4TAMuCA,mNACXA,4DAhHZA,2HAKoF,+BAAM,6GAAAM,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAf,CAAA,CAAA2b,CAAA,CAAAC,CAAA,CAAAC,EAAA,CAAAJ,EAAA,CAAAK,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAV,EAAA,CAAAW,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,CAAA,CAAAC,EAAA,CAAA3K,EAAA,CAAAC,CAAA,CAAA2K,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,8iCAAAjd,CAAA,8IAAAC,CAAA,umCAAAC,CAAA,4uCAAAY,QAAA,SAAAA,CAAAb,CAAA,CAAAC,CAAA,EAAAD,CAAA,KAjM3Hc,EAAA,MAAmC,MAI/B1D,EAAA,YAA8B,YACL,QACrB2D,EAAA,KAAiBzD,EAAA,EAAK,EAGxBF,EAAA,YAAyB,YACC,cACtB2D,EAAA,KAAwCzD,EAAA,EAExCF,EAAA,aAA8B,WAC5B2D,EAAA,MAAqEzD,EAAA,EAAI,EAG3EF,EAAA,8BAG8B2G,EAAA,wBAAAR,EAAA,OAAgB3B,GAAAiZ,eAAAtX,CAAA,CAAsB,IAAC,gCAAiB3B,GAAAmZ,eAAA,CAAgB,IACrGzd,EAAA,EAAuB,EAG1BF,EAAA,aAAwB,eACtB2D,EAAA,MAAmCzD,EAAA,EAEnCF,EAAA,aAA8B,WAC5B2D,EAAA,MAAwHzD,EAAA,EACxHF,EAAA,QAAAmE,EAAA,MAAwFP,EAAA,WAAmFQ,EAAA,EAAAlE,EAAA,EAAI,EAGjLF,EAAA,8BAEkC2G,EAAA,wBAAAR,EAAA,OAAgB3B,GAAAsY,eAAA3W,CAAA,CAAsB,IAAC,gCAAiB3B,GAAA+Y,eAAA,CAAgB,IACzGrd,EAAA,EAAuB,EAG1BF,EAAA,aAAwB,eACtB2D,EAAA,MAAmCzD,EAAA,EAEnC0D,EAAA,eAKAC,EAAA,GAAAgc,GAAA,cACF3f,EAAA,EAEAF,EAAA,aAAwB,eACtB2D,EAAA,MAA4DzD,EAAA,EAE5D0D,EAAA,kBAKAC,EAAA,GAAAic,GAAA,cACF5f,EAAA,EAEAF,EAAA,aAAwB,eACtB2D,EAAA,MAAiDzD,EAAA,EACjDF,EAAA,aACE4D,EAAA,+BACF1D,EAAA,EAEA0D,EAAA,8BAKF1D,EAAA,EAEAF,EAAA,aAAwB,eACtB2D,EAAA,MAA6DzD,EAAA,EAE7DF,EAAA,UACE4D,EAAA,4BAOF1D,EAAA,EAAM,EAGRF,EAAA,aAAwB,eACtB2D,EAAA,OAA4EzD,EAAA,EAE5EF,EAAA,UACE4D,EAAA,4BAOF1D,EAAA,EAAM,EAGRF,EAAA,aAAwB,eACtB2D,EAAA,OAAsDzD,EAAA,EACtDF,EAAA,aAAA2D,EAAA,OAAsIzD,EAAA,EAEtI0D,EAAA,eAKAC,EAAA,GAAAkc,GAAA,cACF7f,EAAA,EAAM,EAEF,EAGRF,EAAA,aAA8B,aACL,SACrB2D,EAAA,OAAezD,EAAA,EACfF,EAAA,aAAAmE,EAAA,OACwDP,EAAA,SACxDQ,EAAA,EAAAlE,EAAA,EAAM,EAGRF,EAAA,aAAyB,aAEyB,eAC9C2D,EAAA,OAAkDzD,EAAA,EAAQ0D,EAAA,iBAC1D5D,EAAA,aAAA2D,EAAA,OAAiKzD,EAAA,EAEjK0D,EAAA,8BAIF1D,EAAA,EAEAwD,EAAA,OACE1D,EAAA,aAAwB,eACtB2D,EAAA,OAA0DzD,EAAA,EAC1DF,EAAA,aAAA2D,EAAA,OAA4DzD,EAAA,EAE5D0D,EAAA,eAKAC,EAAA,GAAAmc,GAAA,cACF9f,EAAA,EAEAF,EAAA,aAAwB,eACtB2D,EAAA,OAA0DzD,EAAA,EAE1D0D,EAAA,eAKAC,EAAA,GAAAoc,GAAA,cACF/f,EAAA,EAEAF,EAAA,aAAwB,eACtB2D,EAAA,OAAwDzD,EAAA,EAExD0D,EAAA,eAKAC,EAAA,GAAAqc,GAAA,cACFhgB,EAAA,EAAAgE,CAAA,GAGJhE,EAAA,EAAM,EAIRF,EAAA,aAA8B,aACL,SACrB2D,EAAA,OAAuCzD,EAAA,EACvCF,EAAA,aAAAmE,EAAA,OACSP,EAAA,WACTQ,EAAA,EAAAlE,EAAA,EAAM,EAGRF,EAAA,aAAyB,aACC,8BAEpB6D,EAAA,IAAAsc,GAAA,sBAAgC,IAAAC,GAAA,sBAUlClgB,EAAA,EAAuB,EAGzBF,EAAA,cACE4D,EAAA,0BAMAC,EAAA,IAAAwc,GAAA,cACFngB,EAAA,EAEAF,EAAA,cAAwB,gBACtB2D,EAAA,QAAqCzD,EAAA,EAAQ0D,EAAA,kBAA2C,+BAM1F1D,EAAA,EAEAF,EAAA,cAAwB,gBACtB2D,EAAA,QAAuDzD,EAAA,EAAQ0D,EAAA,kBAA2C,+BAM5G1D,EAAA,EAEAF,EAAA,cAAwB,gBACtB2D,EAAA,QAAsEzD,EAAA,EAAQ0D,EAAA,kBAC9E5D,EAAA,cAAA2D,EAAA,QAAoIzD,EAAA,EAEpI0D,EAAA,+BAIF1D,EAAA,EAAM,EAEF,EAGRF,EAAA,cAA8B,cACL,UACrB2D,EAAA,QAA8BzD,EAAA,EAAK,EAGrCF,EAAA,cAAyB,cAEC,gBACtB2D,EAAA,QAAmEzD,EAAA,EAAQ0D,EAAA,kBAC3E5D,EAAA,cAAA2D,EAAA,QAA4EzD,EAAA,EAE5E0D,EAAA,+BAIF1D,EAAA,EAEAF,EAAA,cAAwB,gBACtB2D,EAAA,QAA0EzD,EAAA,EAAQ0D,EAAA,kBAClF5D,EAAA,cAAA2D,EAAA,QAAkIzD,EAAA,EAElI0D,EAAA,+BAIF1D,EAAA,EAEAF,EAAA,cAAwB,gBACtB2D,EAAA,QAA6FzD,EAAA,EAAQ0D,EAAA,kBACrG5D,EAAA,cAAA2D,EAAA,QAAyGzD,EAAA,EAEzG0D,EAAA,+BAIF1D,EAAA,EAEAF,EAAA,cAAwB,gBACtB2D,EAAA,QAAiFzD,EAAA,EAAQ0D,EAAA,kBACzF5D,EAAA,cAAA2D,EAAA,QAAyFzD,EAAA,EAEzF0D,EAAA,+BAIF1D,EAAA,EAAM,EAEF,EAGRF,EAAA,cAA8B,cACL,UACrB2D,EAAA,QAA0BzD,EAAA,EAAK,EAGjCF,EAAA,cAAyB,cAEC,iBACtB2D,EAAA,QAA4FzD,EAAA,EAC5FF,EAAA,cAAA2D,EAAA,QAAsGzD,EAAA,EAEtG0D,EAAA,gCAIF1D,EAAA,EAAM,EAEF,EAAAgE,CAAA,MAAAtB,CAAA,KApTE2B,EAAA,YAAAC,EAAA7C,KAAA,GAmBuCrB,EAAA,IAAAiE,EAAA,WAAAC,EAAAoY,YAAA,EAAyB,UAAApY,EAAAkY,eAAA,EAclEpc,EAAA,IAAAiE,EAAA,mBAAsB,YAAAC,EAAAiY,iBAAA,EAUCnc,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,EAAAY,SAAA6Z,IAAA,GAGnB5a,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAY,SAAA6Z,IAAA,EAQJ5a,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,iCAGIH,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAY,SAAA+Z,gBAAA,EAWJ9a,EAAA,GAAAiE,EAAA,yBAAAC,EAAAqW,0BAAA,GAAsD,oBAAqB,YAAArW,EAAA/D,WAAA,2BAW5CH,EAAA,GAAAiE,EAAA,iBAAAC,EAAAgY,cAAA,GAAkC,sBAcnClc,EAAA,GAAAiE,EAAA,iBAAAC,EAAA+X,cAAA,GAAkC,sBAchCjc,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,EAAAY,SAAAia,aAAA,GAG5Bhb,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAY,SAAAia,aAAA,EAsBJhb,EAAA,IAAAiE,EAAA,YAAAC,EAAA/D,WAAA,4BAWiCH,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,EAAAY,SAAAma,OAAAC,YAAA,GAG3Bnb,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAY,SAAAma,OAAAC,YAAA,EAQ2Bnb,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,EAAAY,SAAAma,OAAAG,YAAA,GAG3Brb,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAY,SAAAma,OAAAG,YAAA,EAQ0Brb,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA,EAAAY,SAAAma,OAAAK,WAAA,GAG1Bvb,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAY,SAAAma,OAAAK,WAAA,EAkCNvb,EAAA,IAAAiE,EAAA,QAAAC,EAAAmY,SAAA,EAKIrc,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAY,SAAA4a,iBAAA,EAQJ3b,EAAA,GAAAiE,EAAA,YAAAC,EAAA/D,WAAA,qBASAH,EAAA,GAAAiE,EAAA,YAAAC,EAAA/D,WAAA,6BAUAH,EAAA,GAAAiE,EAAA,YAAAC,EAAA/D,WAAA,qCAoBAH,EAAA,IAAAiE,EAAA,YAAAC,EAAA/D,WAAA,6BAUAH,EAAA,GAAAiE,EAAA,YAAAC,EAAA/D,WAAA,8BAUAH,EAAA,GAAAiE,EAAA,YAAAC,EAAA/D,WAAA,mCAUAH,EAAA,GAAAiE,EAAA,YAAAC,EAAA/D,WAAA,6BAoBAH,EAAA,IAAAiE,EAAA,YAAAC,EAAA/D,WAAA,sCAAAoE,YAAA,ECrRRC,GAAWC,GAAAE,GAAAC,GACXE,GAAmBC,GAAAC,GAAAC,GACnB+a,GACAC,GACAC,GACAC,GAAYjb,GAAAC,EACZuU,GACAlD,GACA4J,GACA9J,GACAC,GACA8J,GACAjb,EAAa,EAAAC,OAAA;sEAAA,KAGX,GAAOuW,GAAP0E,QAAO1E,EAAgC,eAAA2E,GAAA1gB,CAAA,CAAAW,CAAA,EAAAX,CAAA,KCxB/BuD,EAAA,GAAAC,EAAA,MAAAO,CAAA,cAAA4c,GAAA3gB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAuCEH,EAAA,YAAgFC,EAAA,GAAwCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAxCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAA+W,KAAAuJ,gBAAA,aAAAC,GAAA7gB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAYhFH,EAAA,YAA4EC,EAAA,GAAoCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAApCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAA+W,KAAAyJ,YAAA,aAAAC,GAAA/gB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAQ5EH,EAAA,YAA2EC,EAAA,GAAmCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAnCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAA+W,KAAA2J,WAAA,aAAAC,GAAAjhB,CAAA,CAAAW,CAAA,EAAAX,CAAA,KA4B3EuD,EAAA,GAAAC,EAAA,MAAAO,CAAA,cAAAmd,GAAAlhB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAoBAH,EAAA,YAAmFC,EAAA,GAA2CC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA3CC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAA+W,KAAA9M,YAAA4W,IAAAC,GAAA,aAAAC,GAAArhB,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAezEyD,EAAA,YAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAAohB,SAAA,CAAKld,EAAA,YAAAmd,EAAAnO,YAAAoO,EAAA,aAAAC,GAAAzhB,CAAA,CAAAW,CAAA,EAAAX,CAAA,IADP0D,EAAA,EAAAge,GAAA,gCAAAC,GAAA3hB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KALJH,EAAA,YAAwE,6BAKpE6D,EAAA,EAAAke,GAAA,aAGF7hB,EAAA,EAAuB,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GALrBC,EAAA,EAAA0hB,GAAA,YAAAN,EAAAnZ,KAAA,EADAhE,EAAA,YAAA/D,EAAAyhB,iBAAAP,EAAA3Z,EAAA,GAA6C,kBAAA2Z,EAAA3Z,EAAA,EAG/BzH,EAAA,EAAAiE,EAAA,OAAAmd,EAAAnO,WAAA,aAAA2O,GAAA/hB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAwCxBuD,EAAA,GAAAC,EAAA,MAAAO,CAAA,IAAA/D,CAAA,QAAAC,CAAA,CAAAC,CAAA,GACEC,EAAA,EAAAqE,EAAAnE,EAAAqX,2BAAA,EAAA7V,KAAA,EACFxB,EAAAqX,2BAAA,EAAAQ,IAAA,EAAAzT,CAAA,eAAAud,GAAAhiB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAEAuD,EAAA,GAAAC,EAAA,MAAAO,CAAA,IAAA/D,CAAA,QAAAC,CAAA,CAAAC,CAAA,GACEC,EAAA,EAAAqE,EAAAnE,EAAAqX,2BAAA,EAAA7V,KAAA,EACFxB,EAAAqX,2BAAA,EAAAQ,IAAA,EAAAzT,CAAA,eAAAwd,GAAAjiB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAUFH,EAAA,YAAmFC,EAAA,GAA2CC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA3CC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAA+W,KAAA9M,YAAAsN,OAAA,aAAAqK,GAAAliB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KASnFH,EAAA,YAAmFC,EAAA,GAA2CC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA3CC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAA+W,KAAA9M,YAAA4X,OAAA,IC9K/F,GAAaC,KAA8B,KAArC,GAAOA,GAAP,KAAOA,EAA8B,CACjC5R,cAAgBvG,EAAOuB,EAAa,EACpC6W,yBAA2BpY,EAAO6M,EAAwB,EAEzDtV,KAAOC,EAAiBC,MAAS,EACjCpB,WAAamB,EAAWC,MAAS,EACjC0I,aAAe3I,EAAwBC,MAAS,EAEzDqK,yBAAgD,GAChDuW,oBAA2C,GAE3CC,uBAA8C,GAC9CC,gBAAsC,GAEtCnY,UAAQ,CACN,KAAK0B,yBAA2B,KAAKyE,cAAczE,yBAEnD,KAAKwW,uBAAyB,CAC5B,CAAE3a,GAAI,GAAIQ,6FAA0B,EACpC,CAAER,GAAI,IAAO,KAAMQ,4BAAwB,EAC3C,CAAER,GAAI,IAAO,KAAO,EAAGQ,kCAAyB,EAChD,CAAER,GAAI,IAAO,KAAO,EAAGQ,wCAAyB,EAChD,CAAER,GAAI,IAAO,KAAO,GAAIQ,yCAA0B,CAAE,EAGtD,KAAKoa,gBAAkB,KAAKH,yBAAyBtL,0BAAyB,CAChF,EAEAvP,YAAa8J,EAAsB,CAC7BA,EAAQlH,YAAA,GACV,KAAKkY,oBAAsB,KAAKG,iCAAgC,EAEpE,EAEAA,kCAAgC,CAG9B,MAFiB,MAAKrY,aAAY,EAAGiN,KAAK9M,YAAYmY,kBAEtCvP,IAAIwP,GACdA,IAAM,UACD,CAAE/a,GAAI+a,EAAGva,2EAAO/F,CAAoB+Q,2SAAoE,EAG1G,CAAExL,GAAI+a,EAAGva,MAAOua,CAAC,CACzB,CACH,EAEAb,iBAAkB9W,EAAkB,CAClC,MAAO,gCAAkCA,CAC3C,EAEA4X,iBAAe,CACb,MAAO,MAAKxY,aAAY,EAAGiN,KAAKwL,KAAKC,IACvC,EAEAtL,eAAa,CACX,MAAO,MAAK6K,yBAAyB7K,cAAc,KAAKhW,KAAI,CAAE,CAChE,EAEA4V,2BAAyB,CACvB,MAAO,MAAKiL,yBAAyBjL,0BAA0B,KAAK5V,KAAI,CAAE,CAC5E,EAEAuhB,sBAAoB,CAClB,MAAO,CAAE,0BAA2B,CAAC,KAAKvL,cAAa,CAAE,CAC3D,EAEAwL,iCAA+B,CAC7B,MAAO,CAAE,0BAA2B,CAAC,KAAKxL,cAAa,GAAM,CAAC,KAAKC,yBAAwB,CAAE,CAC/F,EAEAwL,sCAAoC,CAClC,MAAO,CAAE,0BAA2B,CAAC,KAAKzL,cAAa,GAAM,CAAC,KAAKC,yBAAwB,GAAM,KAAKL,0BAAyB,CAAE,CACnI,EAEAK,0BAAwB,CACtB,MAAO,MAAK4K,yBAAyB5K,yBAAyB,KAAKjW,KAAI,CAAE,CAC3E,EAEAkW,4BAA0B,CACxB,MAAO,MAAK2K,yBAAyB3K,2BAA2B,KAAKlW,KAAI,CAAE,CAC7E,IAAAM,CAAA,CAhFWsgB,4CAA8B,IAAAtgB,CAAA,CAA9BsgB,wBAA8BrgB,UAAA,iCAAAC,OAAA,CAAAR,KAAA,WAAAlB,WAAA,iBAAA8J,aAAA,oBAAA3B,SAAA,CAAAO,EAAA,EAAA/G,MAAA,IAAAC,KAAA,GAAAC,WAAA,IAAAC,ocDCCC,qVAQAA,oQA8GIA,+PAeRA,gDAhKzBA,oXAEgCA,8gBAgBvBA,+aACqE,eAAuB,QAAAW,CAAA,CAAAA,CAAA,saAkBrDX,6bAORA,kGAEHA,iJAIvBA,wcAOsBA,kGACCA,iJAIvBA,4RAOqBA,2GAgBnCA,45BACgCA,4FAqBJA,0JAKaA,muBAEJA,gNAW3BA,wVAsB0CA,uFAiB7C,iBAA4D,uHAAc,kBAAI,6qBAAAoc,EAAA,CAAAA,EAAA,8KAQdpc,2PAuBjCA,ycACLA,qKAtLfA,mRAuFEA,kIA2EA,eAAwC,KAAC,eAAuC,kHAAAyc,CAAA,QAAAA,CAAA,qIAI/E,eAAwC,KAAC,eAAuC,+GAAAlc,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAf,CAAA,CAAA2b,CAAA,CAAAC,CAAA,CAAAC,EAAA,CAAAJ,EAAA,CAAAK,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAV,EAAA,CAAAW,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,CAAA,8ZAAAtc,CAAA,iJAAAC,CAAA,s+BAAAC,CAAA,iKAAAC,CAAA,ukBAAAW,QAAA,SAAAA,CAAAb,CAAA,CAAAC,CAAA,EAAAD,CAAA,KAxLpHc,EAAA,MAEE1D,EAAA,YAA8B,YACL,QACrB2D,EAAA,KAAazD,EAAA,EAEbF,EAAA,YAAA2D,EAAA,KAEAzD,EAAA,EAAM,EAGRF,EAAA,YAEE0D,EAAA,MAEE1D,EAAA,YAAwB,8BAEpB6D,EAAA,GAAAwf,GAAA,sBAIA3f,EAAA,OACE1D,EAAA,UAAA2D,EAAA,MAA2FzD,EAAA,EAC3FF,EAAA,UAAA2D,EAAA,MAAsGzD,EAAA,EAAAgE,CAAA,GAGxGR,EAAA,OAEE1D,EAAA,aACE4D,EAAA,8BAKF1D,EAAA,EAEAF,EAAA,aAA0F,8BAKtF0D,EAAA,OAAAC,EAAA,MAAAO,CAAA,GAGFhE,EAAA,EAAuB,EAGzBF,EAAA,aAA2D,eACzD2D,EAAA,MAAsFzD,EAAA,EAEtFF,EAAA,cAAA2D,EAAA,MAAwDzD,EAAA,EAExDF,EAAA,aACE4D,EAAA,eACA5D,EAAA,WAAA2D,EAAA,MAAsFzD,EAAA,EAAO,EAG/F2D,EAAA,GAAAyf,GAAA,cACFpjB,EAAA,EAEAF,EAAA,aAA2D,eACzD2D,EAAA,MAA0EzD,EAAA,EAC1EF,EAAA,cAAA2D,EAAA,MAAwDzD,EAAA,EAExDF,EAAA,aACE4D,EAAA,eACA5D,EAAA,WAAA2D,EAAA,OAAkFzD,EAAA,EAAO,EAG3F2D,EAAA,GAAA0f,GAAA,cACFrjB,EAAA,EAEAF,EAAA,aAA2D,eACzD2D,EAAA,OAAmDzD,EAAA,EAEnD0D,EAAA,2BAEAC,EAAA,GAAA2f,GAAA,cACFtjB,EAAA,EAAAgE,CAAA,GAGJhE,EAAA,EAAuB,EAAAgE,CAAA,GAG7BhE,EAAA,EAAM,EAGRF,EAAA,aAAyB,aACA,SACrB2D,EAAA,OAAoBzD,EAAA,EACpBF,EAAA,aAAA2D,EAAA,OAEAzD,EAAA,EAAM,EAGRF,EAAA,aAEE0D,EAAA,OAAmC,OAG/B1D,EAAA,aAA2D,8BAIvD6D,EAAA,GAAA4f,GAAA,sBAGFvjB,EAAA,EAAuB,EAGzBF,EAAA,aAAkD,YAChD2D,EAAA,OAA6CzD,EAAA,EAE7CF,EAAA,aAAmD,aAEL,eAC1C2D,EAAA,OAAoDzD,EAAA,EAEpDF,EAAA,cAAA2D,EAAA,OAAgHzD,EAAA,EAEhHF,EAAA,aACE4D,EAAA,eACA5D,EAAA,WAAMC,EAAA,UAAGC,EAAA,EAAO,EAGlB2D,EAAA,GAAA6f,GAAA,cACFxjB,EAAA,EAEAF,EAAA,aAAuB,SACrB2D,EAAA,OAAqCzD,EAAA,EAErCF,EAAA,aAEE0D,EAAA,OACEG,EAAA,GAAA8f,GAAA,cAAAzf,CAAA,GAYFlE,EAAA,aAAwB,8BAKpB0D,EAAA,OAAAC,EAAA,OAAAO,CAAA,GAGFhE,EAAA,EAAuB,EACnB,EACF,EACF,EACF,EAGRF,EAAA,aAAyG,8BAKrG0D,EAAA,OACE1D,EAAA,WAAAmE,EAAA,OACMP,EAAA,WAENQ,EAAA,EAAAlE,EAAA,EAAAgE,CAAA,GAEJhE,EAAA,EAAuB,EAGzBF,EAAA,aAA2E,eACzE2D,EAAA,OAAkGzD,EAAA,EAElGF,EAAA,cACE6D,EAAA,GAAA+f,GAAA,uBAA+D,GAAAC,GAAA,uBAOjE3jB,EAAA,EAEA0D,EAAA,gCAOAC,EAAA,GAAAigB,GAAA,cACF5jB,EAAA,EAEAF,EAAA,aAAgF,gBAC9E2D,EAAA,QAAiEzD,EAAA,EACjEF,EAAA,eAAA2D,EAAA,QAAkGzD,EAAA,EAElG0D,EAAA,4BAEAC,EAAA,IAAAkgB,GAAA,cACF7jB,EAAA,EAAAgE,CAAA,KAKNhE,EAAA,EAAM,EAAAgE,CAAA,IAAAtB,CAAA,KAlNI2B,EAAA,YAAAC,EAAA7C,KAAA,GAuBUrB,EAAA,IAAAqE,EAAAH,EAAAue,gBAAA,GAAAne,CAAA,KAKctE,EAAA,GAAAiE,EAAA,UAAAC,EAAA0e,qBAAA,GAQ+B5iB,EAAA,GAAAiE,EAAA,UAAAC,EAAA0e,qBAAA,GAW/B5iB,EAAA,GAAAiE,EAAA,UAAAC,EAAA0e,qBAAA,GAOR5iB,EAAA,GAAAqE,EAAAH,EAAA7C,KAAA,EAAAK,MAAAwV,IAAA,CAAAuJ,gBAAA,EAAAnc,CAAA,KAGRtE,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAA+W,KAAAuJ,gBAAA,EAGgBzgB,EAAA,EAAAiE,EAAA,UAAAC,EAAA0e,qBAAA,GAMR5iB,EAAA,GAAAqE,EAAAH,EAAA7C,KAAA,EAAAK,MAAAwV,IAAA,CAAAyJ,YAAA,EAAArc,CAAA,KAGRtE,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAA+W,KAAAyJ,YAAA,EAGgB3gB,EAAA,EAAAiE,EAAA,UAAAC,EAAA0e,qBAAA,GAGuB5iB,EAAA,GAAAiE,EAAA,QAAAC,EAAAke,sBAAA,EAEvCpiB,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAA+W,KAAA2J,WAAA,EAuBY7gB,EAAA,IAAAiE,EAAA,UAAAC,EAAA0e,qBAAA,GAajB5iB,EAAA,GAAAiE,EAAA,UAAAC,EAAA2e,gCAAA,GAYK7iB,EAAA,IAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAA+W,KAAA9M,YAAA4W,IAAAC,GAAA,EASkDjhB,EAAA,GAAAiE,EAAA,UAAAC,EAAAme,eAAA,EA2BHriB,EAAA,GAAAiE,EAAA,UAAAC,EAAA2e,gCAAA,GAcnC7iB,EAAA,GAAAiE,EAAA,UAAAC,EAAA4e,qCAAA,GAIL9iB,EAAA,GAAAiE,EAAA,OAAAC,EAAAqT,2BAAA,EAAAO,MAAA,EAIA9X,EAAA,EAAAiE,EAAA,QAAAC,EAAAqT,2BAAA,EAAAO,MAAA,EAQf9X,EAAA,EAAAiE,EAAA,QAAAC,EAAA0H,wBAAA,EAAkC,gBAI9B5L,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAA+W,KAAA9M,YAAAsN,OAAA,EAGqB1X,EAAA,EAAAiE,EAAA,UAAAC,EAAA4e,qCAAA,GAImD9iB,EAAA,GAAAiE,EAAA,QAAAC,EAAAie,mBAAA,EAExEniB,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAA+W,KAAA9M,YAAA4X,OAAA,KAAAzd,YAAA,EC1LdC,GAAWC,GAAAC,GAAAC,GAAAC,GACXE,GAAmBC,GAAAC,GAAAC,GACnBsR,GACA8J,GACAnb,GACAC,EACA8D,GACAya,GACApN,GACA1P,EAA0B,EAAAvB,OAAA;sEAAA,KAGxB,GAAO4c,GAAP0B,QAAO1B,EAA8B,eAAA2B,GAAA/jB,CAAA,CAAAW,CAAA,EAAAX,CAAA,KCO7BuD,EAAA,GAAAC,EAAA,MAAAO,CAAA,cAAAigB,GAAAhkB,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAqDUuD,EAAA,GACE1D,EAAA,OAAA2D,EAAA,MAA6EzD,EAAA,EAAAgE,CAAA,cAAAkgB,GAAAjkB,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAe/EuD,EAAA,GAAAS,EAAA,MACEP,EAAA,YAAuC,OAGvC5D,EAAA,QACE4D,EAAA,QAAsC,QACc,QAEtD1D,EAAA,EAEA0D,EAAA,OACFQ,EAAA,EAAAF,CAAA,cAAAmgB,GAAAlkB,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAaMuD,EAAA,GAAAC,EAAA,MAAAO,CAAA,GAA4FN,EAAA,QAC5FF,EAAA,GAAAC,EAAA,MAAAO,CAAA,GAAgIN,EAAA,QAChIF,EAAA,GAAAC,EAAA,MAAAO,CAAA,cAAAogB,GAAAnkB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAqBZH,EAAA,YAA8EC,EAAA,GAAsCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAtCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAiK,YAAA4W,IAAAC,GAAA,aAAAgD,GAAApkB,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAcpEyD,EAAA,YAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAAohB,SAAA,CAAKld,EAAA,YAAAmd,EAAAnO,YAAAoO,EAAA,aAAA6C,GAAArkB,CAAA,CAAAW,CAAA,EAAAX,CAAA,IADP0D,EAAA,EAAA4gB,GAAA,gCAAAC,GAAAvkB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KALJH,EAAA,YAAoE,6BAKhE6D,EAAA,EAAA8gB,GAAA,aAGFzkB,EAAA,EAAuB,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GALrBC,EAAA,EAAA0hB,GAAA,YAAAN,EAAAnZ,KAAA,EADAhE,EAAA,YAAA/D,EAAAyhB,iBAAAP,EAAA3Z,EAAA,GAA6C,kBAAA2Z,EAAA3Z,EAAA,EAG/BzH,EAAA,EAAAiE,EAAA,OAAAmd,EAAAnO,WAAA,aAAAqR,GAAAzkB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAuC5BuD,EAAA,GAAAC,EAAA,MAAAO,CAAA,IAAA/D,CAAA,QAAAC,CAAA,CAAAC,CAAA,GACEC,EAAA,EAAAqE,EAAAnE,EAAAqX,2BAAA,EAAA7V,KAAA,EACFxB,EAAAqX,2BAAA,EAAAQ,IAAA,EAAAzT,CAAA,eAAAigB,GAAA1kB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAEAuD,EAAA,GAAAC,EAAA,MAAAO,CAAA,IAAA/D,CAAA,QAAAC,CAAA,CAAAC,CAAA,GACEC,EAAA,EAAAqE,EAAAnE,EAAAqX,2BAAA,EAAA7V,KAAA,EACFxB,EAAAqX,2BAAA,EAAAQ,IAAA,EAAAzT,CAAA,eAAAkgB,GAAA3kB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAWFH,EAAA,YAA8EC,EAAA,GAAsCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAtCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAiK,YAAAsN,OAAA,aAAA+M,GAAA5kB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAY9EH,EAAA,YAAkFC,EAAA,GAA0CC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA1CC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAiK,YAAAqE,WAAA,aAAAiW,GAAA7kB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KASlFH,EAAA,YAA8EC,EAAA,GAAsCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAtCC,EAAA,EAAAC,EAAAC,EAAAC,WAAA,EAAAiK,YAAA4X,OAAA,aAAA2C,GAAA9kB,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAwB5EuD,EAAA,MACE1D,EAAA,UAAA2D,EAAA,MAAyEzD,EAAA,EAAAgE,CAAA,KC7OvF,GAAaghB,KAA2B,KAAlC,GAAOA,GAAP,KAAOA,EAA2B,CAC9BvU,cAAgBvG,EAAOuB,EAAa,EACpC6W,yBAA2BpY,EAAO6M,EAAwB,EAC1DkF,SAAW/R,EAAOgS,CAAQ,EAEzBza,KAAOC,EAAiBC,MAAS,EACjCpB,WAAamB,EAAWC,MAAS,EACjC0I,aAAe3I,EAAwBC,MAAS,EAEzDqK,yBAAgD,GAChDuW,oBAA2C,GAC3C3X,YAAkC,GAElCqa,0BAA4B,GAE5B3a,UAAQ,CACN,KAAK0B,yBAA2B,KAAKyE,cAAczE,yBACnD,KAAKpB,YAAc,KAAK0X,yBAAyBtL,0BAAyB,EAE1E,KAAKkO,uBAAsB,CAC7B,EAEAzd,YAAa8J,EAAsB,CAC7BA,EAAQlH,YAAA,GACV,KAAKkY,oBAAsB,KAAKG,iCAAgC,EAEhE,KAAKuC,0BAA4B,KAAK5a,aAAY,EAAG8a,MAAMC,KAAKC,WAAWC,KAAK,GAAG,EAEvF,EAEA5C,kCAAgC,CAG9B,MAFiB,MAAKrY,aAAY,EAAGG,YAAYmY,kBAEjCvP,IAAIwP,GACdA,IAAM,UACD,CAAE/a,GAAI+a,EAAGva,2EAAO/F,CAAoB+Q,2SAAoE,EAG1G,CAAExL,GAAI+a,EAAGva,MAAOua,CAAC,CACzB,CACH,EAEAb,iBAAkB9W,EAAkB,CAClC,MAAO,2BAA6BA,CACtC,EAEAkM,0BAAwB,CACtB,MAAO,MAAKmL,yBAAyBnL,yBAAyB,KAAK1V,KAAI,CAAE,CAC3E,EAEAwV,sBAAoB,CAClB,MAAO,MAAKqL,yBAAyBrL,qBAAqB,KAAKxV,KAAI,CAAE,CACvE,EAEAyV,cAAY,CACV,MAAO,MAAKoL,yBAAyBpL,aAAa,KAAKzV,KAAI,CAAE,CAC/D,EAEA8V,iBAAe,CACb,MAAO,MAAK+K,yBAAyB/K,gBAAgB,KAAK9V,KAAI,CAAE,CAClE,EAEA8jB,6BAA2B,CACzB,MAAO,CAAE,0BAA2B,CAAC,KAAKtO,qBAAoB,CAAE,CAClE,EAEAuO,qBAAmB,CACjB,MAAO,CAAE,0BAA2B,CAAC,KAAKtO,aAAY,CAAE,CAC1D,EAEAuO,kCAAgC,CAC9B,MAAO,CAAE,0BAA2B,CAAC,KAAKxO,qBAAoB,GAAM,KAAKE,yBAAwB,CAAE,CACrG,EAEAuO,wBAAsB,CACpB,MAAO,CAAE,0BAA2B,CAAC,KAAKnO,gBAAe,CAAE,CAC7D,EAEAI,4BAA0B,CACxB,MAAO,MAAK2K,yBAAyB3K,2BAA2B,KAAKlW,KAAI,CAAE,CAC7E,EAEQyjB,wBAAsB,CAC5B,GAAMS,GAAqB,KAAKlkB,KAAI,EAAG0K,IAAI,qBAAqB,EAC1DyZ,EAAqB,KAAKnkB,KAAI,EAAG0K,IAAI,qBAAqB,EAC1D0Z,EAAa,KAAKpkB,KAAI,EAAG0K,IAAI,yBAAyB,EACtD2Z,EAAmB,KAAKrkB,KAAI,EAAG0K,IAAI,+BAA+B,EAExE2Z,EAAiBvS,aACdC,UAAUQ,GAAW,CAChBA,IAAa,IAAS6R,EAAW/jB,QAAU,KAC7C+jB,EAAWnS,SAAS,EAAI,EAExB,KAAKuI,SAAS8J,6uBAEZ,GACA,GAAK,EAGX,EAAC,EAEHF,EAAWtS,aACRC,UAAUQ,GAAW,CAChBA,IAAa,IAAS8R,EAAiBhkB,QAAU,KACnDgkB,EAAiBpS,SAAS,EAAI,EAE9B,KAAKuI,SAAS8J,2xBAGZ,GACA,GAAK,EAGX,EAAC,EAEHJ,EAAmBpS,aAChBC,UAAUQ,GAAW,CAChBA,IAAa,IACf4R,EAAmBlS,SAAS,EAAK,CAErC,EAAC,EAEHiS,EAAmBvR,uBAAsB,EACzC0R,EAAiB1R,uBAAsB,EACvCwR,EAAmBxR,uBAAsB,EACzCyR,EAAWzR,uBAAsB,CACnC,IAAArS,CAAA,CA9HWijB,4CAA2B,IAAAjjB,CAAA,CAA3BijB,wBAA2BhjB,UAAA,8BAAAC,OAAA,CAAAR,KAAA,WAAAlB,WAAA,iBAAA8J,aAAA,oBAAA3B,SAAA,CAAAO,EAAA,EAAA/G,MAAA,IAAAC,KAAA,GAAAC,WAAA,IAAAC,+MDiBMC,qLAWAA,sLAYAA,6GAgBEA,iIAeAA,sLAuBMA,oQAkDNA,sMAeVA,8HA2EAA,uOAWAA,qnBA7QnBA,0JAOqB,iBAA2I,qGAAc,kBAAI,8MAAAe,CAAA,CAAAA,CAAA,mGAQtLf,qiCAEgCA,mCAmBAA,qiBAQdA,4SAWDA,6eACAA,ktBAWAA,2CAOeA,ydA8C0BA,qKAiBnBA,2xBAEAA,mJAWLA,qUAoBkBA,uFAiB/C,iBAA4D,uHAAc,kBAAI,8kBAAA2b,EAAA,CAAAA,EAAA,8NAQtB3b,iOAwBzBA,kcACLA,qKAIvBA,sJAOwBA,sWACDA,+EAc/BA,kqBACgCA,uFA0B3B,kBAA4D,uHAAc,mBAAI,sqBAAA4c,EAAA,CAAAA,EAAA,4KAnPjE5c,kZAsDCA,cAgBR,gBAAQ,wEAAsB,iBAAS,IASvC,iCAAG,stBAA4E,mCAAI,IANnF,gBAAI,IAGF,gDAAI,wPAAiD,mDAAK,IAA1D,gDAAI,iTAAiD,mDAAK,IAA1D,gDAAI,0XAAiD,mDAAK,IAC5D,iBAAK,IAEL,iCAAG,8bAA4E,mCAAI,IAAA8c,EAAA,CAAA5c,EAAA,CAAA4c,EAAA,MAAAC,EAAA,CAAAA,EAAA,gQAc5D/c,8cACAA,2fACAA,iHA0EhB,eAAwC,KAAC,eAAuC,gJAAAmd,EAAA,CAAAA,EAAA,qIAI/E,eAAwC,KAAC,eAAuC,gJAAAC,EAAA,QAAAA,EAAA,6ZA0DzFpd,wjGA5QzBkB,EAAA,MAEE1D,EAAA,YACE4D,EAAA,YACA5D,EAAA,YAAyB,YAEc,UACnC2D,EAAA,KAEAzD,EAAA,EAEA0D,EAAA,QAEA5D,EAAA,UAAAmE,EAAA,KACgCP,EAAA,WAChCQ,EAAA,EAAAlE,EAAA,EAAO,EACH,EACF,EAGRF,EAAA,aAA8B,aACL,SACrB2D,EAAA,MAAoBzD,EAAA,EAEpBF,EAAA,aAAA2D,EAAA,MAGAzD,EAAA,EAAM,EAGRF,EAAA,aAEE0D,EAAA,OAEE1D,EAAA,UAAK,8BAED6D,EAAA,GAAAqiB,GAAA,sBAIAxiB,EAAA,OAEE1D,EAAA,aAA6C,YAC3C2D,EAAA,MAAoCzD,EAAA,EAEpCF,EAAA,aAAkE,8BAK9D0D,EAAA,OACE1D,EAAA,WAAA2D,EAAA,MAAkIzD,EAAA,EAAAgE,CAAA,GAEtIhE,EAAA,EAAuB,EAGzBF,EAAA,aAAkE,8BAK9D0D,EAAA,OACE1D,EAAA,UAAA2D,EAAA,MAAoFzD,EAAA,EACpFF,EAAA,UAAA2D,EAAA,MAAyFzD,EAAA,EAAAgE,CAAA,GAE7FhE,EAAA,EAAuB,EAGzBF,EAAA,aAA+F,8BAK3F0D,EAAA,OACE1D,EAAA,UAAA2D,EAAA,MAAuHzD,EAAA,EAAAgE,CAAA,GAE3HhE,EAAA,EAAuB,EACnB,EAGRF,EAAA,aAAkD,YAChD2D,EAAA,MAAqCzD,EAAA,EAErCwD,EAAA,OACE1D,EAAA,aAAkE,8BAK9D6D,EAAA,GAAAsiB,GAAA,sBAKFjmB,EAAA,EAAuB,EAAAgE,CAAA,GAI3BR,EAAA,OACE1D,EAAA,aAAkE,8BAM9D6D,EAAA,GAAAuiB,GAAA,sBAeA1iB,EAAA,OAEE1D,EAAA,aAA0D,8BAKtD0D,EAAA,OAAAC,EAAA,OAAAO,CAAA,GAEAL,EAAA,GAAAwiB,GAAA,sBAKJnmB,EAAA,EAAuB,EAAAgE,CAAA,GAI3BhE,EAAA,EAAuB,EAAAgE,CAAA,GAK3BlE,EAAA,aAAsF,eACpF2D,EAAA,OAAiDzD,EAAA,EAEjDF,EAAA,cAAA2D,EAAA,OAA+GzD,EAAA,EAE/GF,EAAA,aACE4D,EAAA,eACA5D,EAAA,WAAMC,EAAA,UAAGC,EAAA,EAAO,EAGlB2D,EAAA,GAAAyiB,GAAA,cACFpmB,EAAA,EAEAF,EAAA,aAAkE,aAChE2D,EAAA,OAAsDzD,EAAA,EAEtDF,EAAA,aACE0D,EAAA,OACEG,EAAA,GAAA0iB,GAAA,cAAAriB,CAAA,GAYFlE,EAAA,8BAIE0D,EAAA,OAAAC,EAAA,OAAAO,CAAA,GACFhE,EAAA,EAAuB,EACnB,EACF,EAAAgE,CAAA,GAIZhE,EAAA,EAAuB,EAGzBF,EAAA,aAAqG,8BAKjG0D,EAAA,OACE1D,EAAA,WAAAmE,EAAA,OACMP,EAAA,WAENQ,EAAA,EAAAlE,EAAA,EAAAgE,CAAA,GAEJhE,EAAA,EAAuB,EAGzBF,EAAA,aAA4E,eAC1E2D,EAAA,OAAqFzD,EAAA,EAErFF,EAAA,cACE6D,EAAA,GAAA2iB,GAAA,uBAA+D,GAAAC,GAAA,uBAOjEvmB,EAAA,EAEA0D,EAAA,gCAQAC,EAAA,GAAA6iB,GAAA,cACFxmB,EAAA,EAEAF,EAAA,aAAuE,eACrE2D,EAAA,OAAqEzD,EAAA,EACrEF,EAAA,cAAA2D,EAAA,OAAkHzD,EAAA,EAElHF,EAAA,aACE4D,EAAA,eACA5D,EAAA,YAAA2D,EAAA,QAA2BzD,EAAA,EAAO,EAGpC2D,EAAA,IAAA8iB,GAAA,cACFzmB,EAAA,EAEAF,EAAA,cAAuE,gBACrE2D,EAAA,QAAwDzD,EAAA,EACxDF,EAAA,eAAA2D,EAAA,QAA6FzD,EAAA,EAE7F0D,EAAA,4BAEAC,EAAA,IAAA+iB,GAAA,cACF1mB,EAAA,EAAAgE,CAAA,GAIJhE,EAAA,EAAM,EAGRF,EAAA,cAA8B,cACL,UACrB2D,EAAA,QAAqBzD,EAAA,EACrBF,EAAA,cAAA2D,EAAA,QAEAzD,EAAA,EAAM,EAGRF,EAAA,cAEE0D,EAAA,QACE1D,EAAA,cAAkE,+BAK9D6D,EAAA,IAAAgjB,GAAA,uBAGF3mB,EAAA,EAAuB,EAGzBF,EAAA,cAA2F,+BAKvF0D,EAAA,QACE1D,EAAA,YAAAmE,EAAA,QACMP,EAAA,YAENQ,EAAA,EAAAlE,EAAA,EAAAgE,CAAA,GAEJhE,EAAA,EAAuB,EAAAgE,CAAA,GAG7BhE,EAAA,EAAM,EAAAgE,CAAA,IAAAtB,CAAA,KA/RI2B,EAAA,YAAAC,EAAA7C,KAAA,GAmC2ErB,EAAA,IAAAiE,EAAA,kBAUjDjE,EAAA,GAAAiE,EAAA,UAAAC,EAAAihB,4BAAA,GAWAnlB,EAAA,GAAAiE,EAAA,UAAAC,EAAAihB,4BAAA,GAY6BnlB,EAAA,GAAAiE,EAAA,UAAAC,EAAAihB,4BAAA,GAgB3BnlB,EAAA,GAAAiE,EAAA,UAAAC,EAAAihB,4BAAA,GAeAnlB,EAAA,GAAAiE,EAAA,UAAAC,EAAAihB,4BAAA,GAIpBnlB,EAAA,EAAAiE,EAAA,kBAmB0BjE,EAAA,GAAAiE,EAAA,UAAAC,EAAAkhB,oBAAA,GAqBYplB,EAAA,GAAAiE,EAAA,UAAAC,EAAAihB,4BAAA,GAUpCnlB,EAAA,GAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAiK,YAAA4W,IAAAC,GAAA,EAGgBjhB,EAAA,EAAAiE,EAAA,UAAAC,EAAAihB,4BAAA,GAKkCnlB,EAAA,GAAAiE,EAAA,UAAAC,EAAAsG,WAAA,EA0BPxK,EAAA,GAAAiE,EAAA,UAAAC,EAAAihB,4BAAA,GAc9BnlB,EAAA,GAAAiE,EAAA,UAAAC,EAAAmhB,iCAAA,GAIVrlB,EAAA,GAAAiE,EAAA,OAAAC,EAAAqT,2BAAA,EAAAO,MAAA,EAIA9X,EAAA,EAAAiE,EAAA,QAAAC,EAAAqT,2BAAA,EAAAO,MAAA,EAQf9X,EAAA,EAAAiE,EAAA,QAAAC,EAAA0H,wBAAA,EAAkC,gBAK9B5L,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAiK,YAAAsN,OAAA,EAGgB1X,EAAA,EAAAiE,EAAA,UAAAC,EAAAmhB,iCAAA,GAShBrlB,EAAA,GAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAiK,YAAAqE,WAAA,EAGgBzO,EAAA,EAAAiE,EAAA,UAAAC,EAAAmhB,iCAAA,GAIoDrlB,EAAA,GAAAiE,EAAA,QAAAC,EAAAie,mBAAA,EAEpEniB,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA,EAAAiK,YAAA4X,OAAA,EAmBgBhiB,EAAA,GAAAiE,EAAA,UAAAC,EAAAihB,4BAAA,GAKqBnlB,EAAA,GAAAiE,EAAA,QAAAC,EAAA2S,qBAAA,GAMS7W,EAAA,EAAAiE,EAAA,UAAAC,EAAAohB,uBAAA,MAAA/gB,YAAA,EC9P1DC,GAAWC,GAAAC,GAAAC,GAAAC,GACXE,GAAmBC,GAAAC,GAAAC,GACnBsR,GACA8J,GACAnb,GACAwe,GACAve,EACAmR,GACA1P,GACAqC,EAAsB,EAAA5D,OAAA;sEAAA,KAGpB,GAAOuf,GAAP4B,QAAO5B,EAA2B,eAAA6B,GAAA5mB,CAAA,CAAAW,CAAA,EAAAX,CAAA,KC7BxCH,EAAA,iBAAA2D,EAAA,KAEAzD,EAAA,aAAA8mB,GAAA7mB,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAUQyD,EAAA,yBAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAkBkE,EAAA,OAAAuB,EAAAnE,IAAA,EAAa,aAAAmE,EAAArF,UAAA,aAAAwmB,GAAA9mB,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAQ/ByD,EAAA,qCAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA8BkE,EAAA,OAAAuB,EAAAnE,IAAA,EAAa,aAAAmE,EAAArF,UAAA,EAA0B,gBAAAqF,EAAAyW,aAAA,EAAgC,gBAAAzW,EAAA0W,aAAA,aAAA0K,GAAA/mB,CAAA,CAAAW,CAAA,KAAAX,CAAA,IASrGyD,EAAA,oCAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA6BkE,EAAA,OAAAuB,EAAAnE,IAAA,EAAa,aAAAmE,EAAArF,UAAA,EAA0B,eAAAqF,EAAAyE,YAAA,aAAA4c,GAAAhnB,CAAA,CAAAW,CAAA,KAAAX,CAAA,IASpEyD,EAAA,gCAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAyBkE,EAAA,OAAAuB,EAAAnE,IAAA,EAAa,aAAAmE,EAAArF,UAAA,EAA0B,eAAAqF,EAAAyE,YAAA,aAAA6c,GAAAjnB,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAShEyD,EAAA,mCAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAA4BkE,EAAA,OAAAuB,EAAAnE,IAAA,EAAa,aAAAmE,EAAArF,UAAA,EAA0B,eAAAqF,EAAAyE,YAAA,aAAA8c,GAAAlnB,CAAA,CAAAW,CAAA,KAAAX,CAAA,IASnEyD,EAAA,uCAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAgCkE,EAAA,OAAAuB,EAAAnE,IAAA,EAAa,aAAAmE,EAAArF,UAAA,aAAA6mB,GAAAnnB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAAAonB,CAAA,QAgB3C3jB,EAAA,QAAA4jB,CAAA,IAAArnB,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CACEnhB,EAAA,EAAAqE,EAAA8iB,CAAA,EAAA7iB,CAAA,eAAA8iB,GAAAvnB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KALNH,EAAA,YAAAmE,EAAA,KAGEnE,EAAA,QACE6D,EAAA,EAAA8jB,GAAA,aAGFznB,EAAA,EACFkE,EAAA,EAAAlE,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAJ0BC,EAAA,GAAAiE,EAAA,UAAAuB,EAAA8hB,cAAA,cAAAC,GAAA1nB,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAM1BH,EAAA,aAAA2D,EAAA,MAEAzD,EAAA,aAAA4nB,GAAA3nB,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAEAH,EAAA,UAAA2D,EAAA,MAEAzD,EAAA,ICZN,GAAa6nB,KAA0B,KAAjC,GAAOA,GAAP,KAAOA,UAAkCC,GAAY,CAC/CC,oBAAsB7d,EAAO8d,EAAmB,EAClDC,OAAS/d,EAAOge,EAAM,EACtBC,MAAQje,EAAOke,EAAc,EAC7BnM,SAAW/R,EAAOgS,CAAQ,EAC1BzL,cAAgBvG,EAAOuB,EAAa,EACpC4c,WAAane,EAAOoe,EAAiB,EACrCC,cAAgBre,EAAOC,EAAa,EACpCmY,yBAA2BpY,EAAO6M,EAAwB,EAElEyR,UAEAC,aACApe,aAEA4I,SAEAoJ,cAAqC,GACrCC,cAAqC,GAErChS,UAAQ,CACN,KAAKD,aAAe,KAAKke,cAAche,cAAa,EAEpD,GAAMme,GAA+D,CACnEvnB,SAAU,CACR6Z,KAAM1C,GACN4C,iBAAkBxC,GAClBrF,YAAa,KAEbsV,OAAQ,GACR5M,kBAAmB,KAEnB6M,MAAO,KACPC,cAAe,KAEfC,eAAgB,KAChBC,sBAAuB,KACvBC,cAAe,KACfC,oBAAqB,KACrBC,cAAe,KAEfC,oBAAqB,KAErBC,WAAY,KACZC,UAAW,KAEXjO,cAAe,KACfkO,QAAS,CACPC,KAAM,MAERjO,OAAQ,CACNC,aAAciO,GACd/N,aAAc+N,GACd7N,YAAa6N,IAGftc,mBAAoB,KAEpB9L,eAAgB,CACdC,WAAY,KACZE,IAAK,OAGTkoB,MAAO,CACLlc,QAAS,MAEX8C,SAAU,CACRC,QAAS,CACPC,SAAUsI,KAGd6Q,OAAQ,CACNrc,OAAQ,CACNsc,UAAW,CACTC,wBAAyB,OAG7BC,KAAM,CACJC,MAAO,CACLC,6BAA8B,QAIpCvpB,MAAO,CACLC,SAAU,CACRC,KAAMoY,IAERjY,SAAU,CACRH,KAAMoY,IAER/X,SAAU,CACRL,KAAMoY,IAER7X,YAAa,CACXP,KAAMoY,KAGV5K,OAAQ,CACN/C,QAAS,KACTgD,MAAO8K,GACP+Q,iBAAkB,KAClBC,0BAA2B,KAC3B3b,WAAY4K,IAEdtK,OAAQ,CACNvB,OAAQ,CACNwB,YAAa8K,GACbpH,KAAM,CACJpH,QAAS,MAEX+e,QAAS,CACP/e,QAAS,OAGb4D,4BAA6B,CAC3B5D,QAAS,KACT6D,WAAY0K,IAEdjK,MAAO,CACLtE,QAAS,OAGbqE,OAAQ,CACNC,MAAO,CACLtE,QAAS,KACTuE,kBAAmBmK,GACnBjK,iBAAkBgK,KAGtBxM,SAAU,CACRC,OAAQ,CACNC,WAAY,CACVnC,QAAS,KACToC,QAAS,QAIf2C,MAAO,CACLC,MAAOgJ,IAETgR,YAAa,CACXhf,QAAS,MAEXqD,KAAM,CACJ4b,QAAS,CACP/c,OAAQ,CACNlC,QAAS,OAGbf,WAAYigB,GACZ3b,gBAAiB4b,IAEnBpb,cAAe,CACbF,WAAYyK,IAEdjP,YAAa,CACXW,QAAS,KACT2M,QAASsB,GACTmR,0BAA2B,KAC3BC,gBAAiB,KACjBpI,QAAS,KACTvT,YAAa8K,GACb/O,YAAa,GACb6f,kCAAmC,KACnCC,aAAc,CACZC,KAAM,MAERzf,IAAK,CACHC,QAAS,KACTyf,mBAAoB,MAEtBC,UAAW,CACT1f,QAAS,MAEXiM,cAAe,CACbjM,QAAS,MAEXiW,IAAK,CACHC,IAAKhI,KAGT/B,KAAM,CACJnM,QAAS,KAET8V,YAAa3H,GACbuH,iBAAkBtH,GAClBwH,aAAcvH,GACdsR,YAAa,KACbC,eAAgB,CACd5f,QAAS,MAGXX,YAAa,CACXW,QAAS,KACT2M,QAASsB,GACTgJ,QAAS,KACTxX,YAAa,GACb6f,kCAAmC,KACnCrT,cAAe,CACbjM,QAAS,MAEXiW,IAAK,CACHC,IAAKhI,MAIX7B,YAAa,CACXrM,QAAS,KACTiM,cAAe,CACbjM,QAAS,OAGb0H,mBAAoB,CAClB1H,QAAS,KACTiM,cAAe,CACbjM,QAAS,OAGb6f,UAAW,CACTC,OAAQ,CACN9f,QAAS,OAGb+I,cAAe,CACb7G,OAAQ,CACN8G,QAAS,CACPhJ,QAAS,QAIf+f,UAAW,CACT/pB,SAAU,CACRgK,QAAS,KACTggB,eAAgB,OAGpBrb,WAAY,CACV3O,SAAU,CACRiqB,eAAgB,CACdjgB,QAAS,MAEX4E,gBAAiB,CACf5E,QAAS,KACT6E,SAAUwZ,MAIhB7b,iBAAkB,CAChBxC,QAAS,KACTyC,MAAO,KACPyd,YAAa,KACbvd,QAAS,MAEXsB,OAAQ,CACNkc,UAAW,CACT7b,MAAO,KACP8b,UAAW,MAEblc,YAAa,CACXlE,QAAS,KACTmE,IAAKka,GACLgC,mBAAoB,KACpBC,gBAAiB,OAIrBpR,uBAAwB,CACtBC,QAAS,MAGXrZ,YAAa,CACXkK,QAAS,OAIPugB,EAAgB,CACpBlhB,YAAa,CACXI,YAAa,IAEf0M,KAAM,CACJ9M,YAAa,CACXI,YAAa,MAKnB,OAAWK,KAAc,MAAKqX,yBAAyBtL,0BAAyB,EAC9E0U,EAAclhB,YAAYI,YAAYK,EAAWpD,EAAE,EAAI,QACvD6gB,EAAcle,YAAYI,YAAYK,EAAWpD,EAAE,EAAI,KAEvD6jB,EAAcpU,KAAK9M,YAAYI,YAAYK,EAAWpD,EAAE,EAAI,QAC5D6gB,EAAcpR,KAAK9M,YAAYI,YAAYK,EAAWpD,EAAE,EAAI,KAG9D,KAAK8jB,UAAUjD,CAAa,EAExB,KAAKP,MAAMyD,SAASC,UACtB,KAAKC,YAAY,KAAK3D,MAAMyD,SAASC,QAAQ,EAG/C,KAAKE,wBAAuB,EAC5B,KAAKC,2BAA0B,EAE1B,KAAKC,gBAAe,GACvB,KAAKxqB,KAAKmS,QAAO,CAErB,EAEAsY,eAAa,CAEX,GADA,KAAKC,WAAU,EACX,CAAC,KAAK1qB,KAAK2qB,MAAO,OAEtB,GAAMtqB,GAA+BuqB,GAAM,KAAK5D,aAAc,KAAKhnB,KAAK6qB,YAAW,CAAE,EAErFC,GAAS,CACP,KAAK9b,cAAchE,mBAAmB+f,GAAK1qB,EAAO,wBAAwB,CAAC,EAC3E,KAAKumB,WAAWoE,uBAAuB3qB,EAAMuY,uBAAuBC,OAAO,CAAC,CAC7E,EACE9G,UAAU,CACTuJ,KAAMA,CAAC,CAAE2P,CAAS,IAAM,CACtB,GAAMrS,GAAyB,CAAEC,QAASxY,EAAMuY,uBAAuBC,OAAO,EAE9E,KAAKmO,aAAekE,GAAAC,GAAA,GAAKF,GAAL,CAAgBrS,wBAAsB,GAG1D,KAAKkO,cAAczK,YAAW,EAC3BtK,UAAUuK,GAAS,CAClB,KAAK1T,aAAe0T,CACtB,EAAC,EAEH,KAAK8O,WAAU,EAEf,KAAK5Q,SAASe,0IAAyC,CACzD,GAEAE,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEAme,iBAAe,CACb,MAAO,MAAK5hB,aAAayiB,SAASC,cAAcC,QAAQC,UAAY,EACtE,EAEAC,sBAAoB,CAClB,MAAI,OAAKC,oCAAmC,CAG9C,EAEAA,qCAAmC,CACjC,MACE,OAAK7K,yBAAyBrL,qBAAqB,KAAKxV,IAAI,IAAM,IAClE,KAAK6gB,yBAAyB7K,cAAc,KAAKhW,IAAI,GACrD,KAAKA,KAAKK,MAAMwV,IAAA,CAAQwT,WAAA,GAAmB,GAM/C,EAEAgB,YAAasB,EAAoB,CAC/B,KAAK5E,UAAY4E,EAEjB,KAAKnF,OAAOoF,SAAS,GAAI,CAAExB,SAAU,KAAKrD,SAAS,CAAE,CACvD,EAEAd,eAAa,CACX,MAAO,MAAKK,oBAAoBL,cAAc,KAAKnnB,UAAU,CAC/D,EAEQssB,YAAU,CAChB,KAAKprB,KAAKwS,WAAW,KAAKwU,YAAY,CACxC,EAEQsD,yBAAuB,CAC7BQ,GAAS,CACP,KAAK9b,cAAcvE,gBAAe,EAClC,KAAKmc,WAAWiF,oBAAmB,CAAE,CACtC,EAAE9Z,UAAU,CACXuJ,KAAMA,CAAC,CAAEgB,EAAQ9K,CAAQ,IAAM,CAC7B,KAAKwV,aAAekE,GAAAC,GAAA,GAAK7O,GAAL,CAAa1D,uBAAwBpH,CAAQ,GAEjE,KAAK4Z,WAAU,EACf,KAAKU,eAAc,CACrB,GAEArQ,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACH,EAEQke,4BAA0B,CAChCO,GAAS,CACP,KAAKhE,cAAciF,kBAAiB,EACpC,KAAKjF,cAAckF,mBAAkB,CAAE,CACxC,EAAEja,UAAU,CACXuJ,KAAMA,CAAC,CAAEsM,EAAWD,CAAU,IAAM,CAClC,KAAK/M,cAAgBgN,EAAUjW,IAAIsa,IAAM,CAAErlB,MAAOqlB,EAAErlB,MAAOR,GAAI6lB,EAAE7lB,EAAE,EAAG,EACtE,KAAKyU,cAAgB8M,EAAWhW,IAAIsa,IAAM,CAAErlB,MAAOqlB,EAAErlB,MAAOR,GAAI6lB,EAAE7lB,EAAE,EAAG,CACzE,GAEAqV,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACH,IAAA/L,CAAA,CAnZW8lB,8DAAyB,IAAA8F,GAAzB9F,CAAyB,UAAA9lB,CAAA,CAAzB8lB,wBAAyB7lB,UAAA,4BAAA0G,SAAA,CAAAklB,EAAA,EAAA1rB,MAAA,GAAAC,KAAA,EAAAC,WAAA,IAAAC,gIDgB4BC,mFA1FjCA,4GAWRA,uEAQAA,qDASAA,gGASAA,4GASAA,6EASAA,wlBAkBjB,gBAAI,IACF,kCAA0C,KACxC,iBAAW,KACb,oCAAK,IACP,iBAAK,QAAAa,CAAA,CAAAA,CAAA,0eAGgGb,2gBAIjEA,o4BApF5CxC,EAAA,WAAA2D,EAAA,KAA8CzD,EAAA,EAE9C2D,EAAA,EAAAkqB,GAAA,mBAIA/tB,EAAA,aAAyB,cAE0B2G,EAAA,0BAAAR,EAAA,CAAAI,MAAAH,GAAAC,CAAA,EAAAK,EAAkBlC,EAAAwnB,YAAA7lB,CAAA,CAAmB,KAEpFzC,EAAA,MACE1D,EAAA,UAAA2D,EAAA,KAA2BzD,EAAA,EAE3B2D,EAAA,EAAAmqB,GAAA,sBAAA9pB,CAAA,GAKFR,EAAA,OACE1D,EAAA,WAAA2D,EAAA,MAA8BzD,EAAA,EAE9B2D,EAAA,GAAAoqB,GAAA,sBAAA/pB,CAAA,GAMFR,EAAA,OACE1D,EAAA,WAAA2D,EAAA,MAAwBzD,EAAA,EAExB2D,EAAA,GAAAqqB,GAAA,sBAAAhqB,CAAA,GAMFR,EAAA,OACE1D,EAAA,WAAA2D,EAAA,MAAkCzD,EAAA,EAElC2D,EAAA,GAAAsqB,GAAA,sBAAAjqB,CAAA,GAMFR,EAAA,OACE1D,EAAA,WAAA2D,EAAA,MAAiCzD,EAAA,EAEjC2D,EAAA,GAAAuqB,GAAA,sBAAAlqB,CAAA,GAMFR,EAAA,OACE1D,EAAA,WAAA2D,EAAA,MAA2BzD,EAAA,EAE3B2D,EAAA,GAAAwqB,GAAA,sBAAAnqB,CAAA,GAKJhE,EAAA,EAEA0D,EAAA,aAEA5D,EAAA,aACE4D,EAAA,aACA5D,EAAA,aAEE6D,EAAA,GAAAyqB,GAAA,cAAgG,GAAAC,GAAA,eAUO,GAAAC,GAAA,eAQvGxuB,EAAA,eAEE2G,EAAA,mBAAAJ,MAAAH,GAAAC,CAAA,EAAAK,EAASlC,EAAA4nB,cAAA,CAAe,KAF1BlsB,EAAA,EAIC,EACG,EACF,MAAA0C,CAAA,QAAAE,CAAA,CAAA2rB,EAAA,IA5FkBnuB,EAAA,GAAAiE,EAAA,QAAAC,EAAA2nB,gBAAA,GAIpB7rB,EAAA,EAAAiE,EAAA,YAAAC,EAAA7C,IAAA,EAEsBrB,EAAA,EAAAiE,EAAA,WAAAC,EAAAkkB,SAAA,EAwDrBpoB,EAAA,IAAAiE,EAAA,eAAAmqB,CAAA,EAMuDpuB,EAAA,GAAAiE,EAAA,QAAAC,EAAA7C,KAAA2qB,OAAA9nB,EAAA2nB,gBAAA,GAUC7rB,EAAA,EAAAiE,EAAA,QAAAC,EAAA6oB,oCAAA,GAI7C/sB,EAAA,EAAAiE,EAAA,QAAAC,EAAA2nB,gBAAA,GAOV7rB,EAAA,EAAAiE,EAAA,YAAAC,EAAA7C,KAAA2qB,OAAA,CAAA9nB,EAAA4oB,qBAAA,IAAA5oB,EAAA2nB,gBAAA,MAAAtnB,YAAA,ECpCJY,EACAX,GAAW6pB,GAAAzpB,GACXE,GAAmBC,GACnBupB,GACAC,GACAC,GACAC,GACAC,GACAvU,GACAyB,GACAxL,GACAwU,GACA3C,GACA7gB,GACAutB,GACAjL,GACAjN,EAAc,EAAApR,OAAA;sEAAA,KAGZ,GAAOoiB,GAAPmH,QAAOnH,EAA0B,MCrEhC,GAAMoH,IAAuB,CAClC,CACE9b,KAAM,SACN+b,YAAa,CAAEC,EAAc,EAC7BziB,KAAM,CACJ0iB,UAAWC,EAAUC,sBAEvBC,SAAU,CACR,CACEpc,KAAM,GACNqc,WAAY,cACZC,UAAW,QAEb,CACEtc,KAAM,cACNuc,UAAW7H,GACXnb,KAAM,CACJijB,KAAM,CACJC,oPAAOttB,GAGZ,EAEJ,ECnBH,GAAautB,KAAkB,KAAzB,GAAOA,GAAP,KAAOA,EAAkB,GAAA9tB,CAAA,CAAlB8tB,4CAAkB,IAAA9tB,CAAA,CAAlB8tB,wBAAkB7tB,UAAA,oBAAAE,MAAA,EAAAC,KAAA,EAAAC,OAAA,uBAAAmB,SAAA,QAAAA,CAAA2F,EAAA5E,EAAA,CAAA4E,EAAA,GCT/BxF,EAAA,6BAAAiB,YAAA,EDOamrB,EAAuB,EAAAvmB,cAAA,KAE9B,GAAOsmB,GAAPE,QAAOF,EAAkB,eAAAG,GAAA/vB,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GEF3BjG,EAAA,YAAqB,YACE,iCACO2G,EAAA,kBAAAR,EAAA,CAAAC,EAAAC,CAAA,KAAAP,GAAAQ,EAAA,QAAAI,GAAUZ,EAAAqqB,SAAAhqB,CAAA,CAAgB,KAAEjG,EAAA,EAA2B,EAC7E,aAAAkwB,GAAAjwB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAKRH,EAAA,QAAI,WACF2D,EAAA,KAAiDzD,EAAA,EACjDF,EAAA,WAAA2D,EAAA,KAA4BzD,EAAA,EAC5BF,EAAA,WAAAmE,EAAA,KAA4HP,EAAA,mBAA2CQ,EAAA,EAAAlE,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAjIC,EAAA,GAAAiE,EAAA,aAAAuB,EAAAuqB,WAAA,aAAAC,GAAAnwB,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAK7CjG,EAAA,QAAI,WACsB,eAC2B2G,EAAA,sBAAA4pB,GAAAnqB,EAAAoqB,CAAA,EAAA/O,UAAA3b,EAAAQ,EAAA,QAAAI,GAASZ,EAAA2qB,eAAAF,CAAA,CAA4B,KAAtF5sB,EAAA,KAAmGzD,EAAA,EAAS,EAE9GF,EAAA,QAAI,UACiI,YAE/H4D,EAAA,wBACA5D,EAAA,SACEC,EAAA,GACAD,EAAA,cAAoBC,EAAA,IAA8CC,EAAA,EAAO,EACrE,EACF,EACJ,EAGNF,EAAA,SAAIC,EAAA,IAAA2J,EAAA,cAA8C1J,EAAA,EAAK,MAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAXlDnhB,EAAA,GAAAiE,EAAA,OAAAgsB,EAAAG,eAAAlhB,IAAAmhB,EAAA,EAEkBrwB,EAAA,GAAAiE,EAAA,QAAAgsB,EAAAG,cAAA,EAEfpwB,EAAA,GAAAswB,EAAA,IAAAL,EAAAG,eAAAG,YAAA,KACoBvwB,EAAA,GAAAC,EAAAgwB,EAAAG,eAAAI,YAAA,EAMxBxwB,EAAA,GAAAC,EAAAsJ,GAAA,KAAA0mB,EAAAQ,UAAA,qBAAAC,GAAA7wB,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAQAuD,EAAA,GAAAC,EAAA,KAAAO,CAAA,cAAA+sB,GAAA9wB,CAAA,CAAAW,CAAA,EAAAX,CAAA,KACAuD,EAAA,GAAAC,EAAA,KAAAO,CAAA,cAAAgtB,GAAA/wB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAJNH,EAAA,QAAI,WACgB,YAEd6D,EAAA,EAAAstB,GAAA,uBAAkC,EAAAC,GAAA,uBAEpClxB,EAAA,EAAM,EACH,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAHcC,EAAA,GAAAiE,EAAA,OAAAuB,EAAAwJ,MAAA,EACAhP,EAAA,EAAAiE,EAAA,QAAAuB,EAAAwJ,MAAA,ICrBzB,GAAa+hB,KAAkC,KAAzC,GAAOA,GAAP,KAAOA,UAA0CC,GAAgC,CACrFC,KAAOC,GAAuBC,SAE9BC,eAAa,CACX,MAAO,mCACT,IAAAzvB,CAAA,CALWovB,8DAAiC,IAAAxD,GAAjCwD,CAAiC,UAAApvB,CAAA,CAAjCovB,wBAAiCnvB,UAAA,oCAAA0G,SAAA,CAAAklB,EAAA,EAAA1rB,MAAA,EAAAC,KAAA,GAAAC,WAAA,IAAAC,uDDXGC,qDACtBA,0EACuG,gBAA8B,qBAAa,QAAAM,CAAA,CAAAA,CAAA,yKAUvGN,uEAH+BA,iSAsBzDA,+GACCA,uxBAhD7CxC,EAAA,eAGoD2G,EAAA,sBAAAR,EAAA,OAAc3B,GAAAmtB,SAAAxrB,CAAA,CAAgB,IAGhFtC,EAAA,EAAA+tB,GAAA,qBAAiC,EAAAC,GAAA,qBAQD,EAAAC,GAAA,sBAQe,EAAAC,GAAA,sBA+BjD7xB,EAAA,GAAA0C,CAAA,IApDE2B,EAAA,QAAAC,EAAAwtB,eAAA,EAAyB,WAAc,YAAAxtB,EAAAytB,aAAA,GAA+B,eAAAztB,EAAAytB,YAAA,EAA8B,OAAAztB,EAAA0tB,WAAA,EAChF,qBAAA1tB,EAAA2tB,kBAAA,EAA0C,QAAA3tB,EAAA4tB,WAAAC,KAAA,EAA2B,YAAA7tB,EAAA8tB,KAAAC,KAAA,EACjE,YAAA/tB,EAAA8tB,KAAAE,KAAA,EAAyB,4BACnB,4BAAAhuB,EAAAiuB,sBAAA,KAAA5tB,YAAA,ECa5B6tB,GAAWC,GAAAC,GAAAC,GAAAC,GACXC,GACAC,GACAC,GACAC,GACAC,GACA1tB,EACA2tB,EAAU,EAAAztB,OAAA;oDAAA,KAGR,GAAO0rB,GAAPgC,QAAOhC,EAAkC,eAAAiC,GAAAnzB,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GCnB3CjG,EAAA,YAAqB,YACO,eACe2G,EAAA,mBAAAP,EAAAmtB,CAAA,KAAAC,GAAAltB,EAAA,QAAAI,GAAS8sB,EAAAC,kBAAA,CAAmB,KAAC,uBAAArtB,EAAAmtB,CAAA,KAAAC,GAAAltB,EAAA,QAAAI,GAAc8sB,EAAAC,kBAAA,CAAmB,KACnG7vB,EAAA,uBACAF,EAAA,GAAAC,EAAA,KAAAO,CAAA,GACFhE,EAAA,EAAS,EAGXF,EAAA,YAAqB,iCACO2G,EAAA,kBAAAR,EAAA,CAAAC,EAAAmtB,CAAA,KAAAC,GAAAltB,EAAA,QAAAI,GAAU8sB,EAAArD,SAAAhqB,CAAA,CAAgB,KAAEjG,EAAA,EAA2B,EAC7E,aAAAwzB,GAAAvzB,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAKRH,EAAA,QAAI,WACF2D,EAAA,KAAiDzD,EAAA,EACjDF,EAAA,WAAA2D,EAAA,KAA6BzD,EAAA,EAC7BF,EAAA,WAAAmE,EAAA,KAA4HP,EAAA,mBAA2CQ,EAAA,EAAAlE,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAjIC,EAAA,GAAAiE,EAAA,aAAAivB,EAAAnD,WAAA,aAAAsD,GAAAxzB,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAK7CjG,EAAA,QAAI,WACsB,eAC2B2G,EAAA,sBAAAitB,GAAAxtB,EAAAytB,CAAA,EAAApS,UAAA+R,EAAAltB,EAAA,QAAAI,GAAS8sB,EAAAM,cAAAF,CAAA,CAA0B,KAApFjwB,EAAA,KAAiGzD,EAAA,EAAS,EAE5GF,EAAA,QAAI,UAEAC,EAAA,GACA2D,EAAA,uBACF1D,EAAA,EAAI,EAENF,EAAA,QAAIC,EAAA,GAAA2J,EAAA,cAA6C1J,EAAA,EAAK,MAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CALjDnhB,EAAA,GAAAiE,EAAA,kBAAAqvB,EAAAG,cAAAC,KAAArD,EAAA,EACDrwB,EAAA,EAAAswB,EAAA,IAAAgD,EAAAG,cAAAC,KAAA,KAIA1zB,EAAA,GAAAC,EAAAsJ,GAAA,KAAA+pB,EAAA7C,UAAA,qBAAAkD,GAAA9zB,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAQAuD,EAAA,GAAAC,EAAA,KAAAO,CAAA,cAAAgwB,GAAA/zB,CAAA,CAAAW,CAAA,EAAAX,CAAA,KACAuD,EAAA,GAAAC,EAAA,KAAAO,CAAA,cAAAiwB,GAAAh0B,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAJNH,EAAA,QAAI,WACgB,YAEd6D,EAAA,EAAAuwB,GAAA,uBAAkC,EAAAC,GAAA,uBAEpCn0B,EAAA,EAAM,EACH,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAHcC,EAAA,GAAAiE,EAAA,OAAAivB,EAAAlkB,MAAA,EACAhP,EAAA,EAAAiE,EAAA,QAAAivB,EAAAlkB,MAAA,ICrBzB,GAAaglB,KAAiC,KAAxC,GAAOA,GAAP,KAAOA,UAAyCC,GAA+B,CACnFhD,KAAOC,GAAuBC,SAE9BC,eAAa,CACX,MAAO,kCACT,IAAAzvB,CAAA,CALWqyB,8DAAgC,IAAAzG,GAAhCyG,CAAgC,UAAAryB,CAAA,CAAhCqyB,wBAAgCpyB,UAAA,mCAAA0G,SAAA,CAAAklB,EAAA,EAAA1rB,MAAA,EAAAC,KAAA,GAAAC,WAAA,IAAAC,kGD4BkBC,sGA7ClCA,2DAYoBA,+CACtBA,0EACuG,gBAA8B,qBAAa,QAAAQ,CAAA,CAAAA,CAAA,qLAU3FR,uEAHiBA,8VAgBvDA,yGACCA,k6BAlD7CxC,EAAA,eAIgB2G,EAAA,sBAAAR,EAAA,CAAAI,MAAAH,GAAAC,CAAA,EAAAK,EAAclC,EAAAmtB,SAAAxrB,CAAA,CAAgB,KAG5CtC,EAAA,EAAA2wB,GAAA,qBAAiC,EAAAC,GAAA,sBAeD,EAAAC,GAAA,uBAQc,EAAAC,GAAA,sBAyBhDz0B,EAAA,EAEAF,EAAA,iCAA6E2G,EAAA,mBAAAR,EAAA,CAAAI,MAAAH,GAAAC,CAAA,EAAAK,EAAWlC,EAAAowB,iBAAAzuB,CAAA,CAAwB,KAAEjG,EAAA,GAAA0C,CAAA,IAxDhH2B,EAAA,QAAAC,EAAAqwB,cAAA,EAAwB,YAAArwB,EAAAytB,aAAA,GAA+B,eAAAztB,EAAAytB,YAAA,EAA8B,OAAAztB,EAAA0tB,WAAA,EACjE,qBAAA1tB,EAAA2tB,kBAAA,EAA0C,QAAA3tB,EAAA4tB,WAAAC,KAAA,EAA2B,YAAA7tB,EAAA8tB,KAAAC,KAAA,EACjE,YAAA/tB,EAAA8tB,KAAAE,KAAA,EAAyB,WACpC,qBAAyD,4BACxC,4BAAAhuB,EAAAiuB,sBAAA,KAAA5tB,YAAA,ECa5BiwB,GACApC,GAAWC,GAAAC,GAAAC,GAAAC,GACXC,GACAC,GACAC,GACAE,GACA1tB,EACAsvB,GACA3B,EAAU,EAAAztB,OAAA;oEAAA,KAGR,GAAO2uB,GAAPU,QAAOV,EAAiC,UAAAW,EAAA,CAAA90B,CAAA,IAAA+0B,IAAA,CAAA/0B,CAAA,YAAAg1B,GAAAh1B,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GCrB1CjG,EAAA,YAAqB,YACE,iCACgC2G,EAAA,kBAAAR,EAAA,CAAAC,EAAAC,CAAA,KAAAP,GAAAQ,EAAA,QAAAI,GAAUZ,EAAAqqB,SAAAhqB,CAAA,CAAgB,KAAEjG,EAAA,EAA2B,EACtG,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GADsBC,EAAA,GAAAiE,EAAA,UAAAuB,EAAAsvB,YAAA,aAAAC,GAAAl1B,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAM9BH,EAAA,QAAI,WACmC,aACnC2D,EAAA,KAAmDzD,EAAA,EAAO,EAE5DF,EAAA,WAAsC,aACpC2D,EAAA,KAA0CzD,EAAA,EAAO,EAEnDF,EAAA,WAAAmE,EAAA,KAA8FP,EAAA,mBAAsCQ,EAAA,EAAAlE,EAAA,EACpIF,EAAA,YAAA2D,EAAA,MAAoDzD,EAAA,EACpDF,EAAA,YAAA2D,EAAA,MAAsDzD,EAAA,EACtDF,EAAA,YAAAmE,EAAA,MAAwHP,EAAA,oBAA2CQ,EAAA,EAAAlE,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAHnJC,EAAA,GAAAiE,EAAA,aAAAuB,EAAAuqB,WAAA,EAGsB/vB,EAAA,GAAAiE,EAAA,aAAAuB,EAAAuqB,WAAA,aAAAiF,GAAAn1B,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAM3CH,EAAA,QAA+B,aAC7B2D,EAAA,KAAgFzD,EAAA,EAAO,aAAAq1B,GAAAp1B,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAGzFH,EAAA,WACE4D,EAAA,+BACF1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAsC,CAAA,CAAAvC,CAAA,CAAAqhB,SAAA,CAAA7e,CAAA,CAAAxC,CAAA,CAAAo1B,QAAA,CAD0Bl1B,EAAA,EAAAiE,EAAA,cAAAkxB,CAAA,EAA0B,WAAAC,CAAA,aAAAC,GAAAx1B,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAc5CH,EAAA,aAAA2D,EAAA,KAA8IzD,EAAA,aAAA01B,GAAAz1B,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAWpJH,EAAA,aAAA2D,EAAA,KAAiFzD,EAAA,aAAA21B,GAAA11B,CAAA,CAAAW,CAAA,KAAAX,CAAA,KA/BrFH,EAAA,QACE6D,EAAA,EAAAiyB,GAAA,aAA+B,EAAAC,GAAA,aAQ/B/1B,EAAA,WACE4D,EAAA,2BAIF1D,EAAA,EAEAF,EAAA,QAAI,sBACqD,SAEnD6D,EAAA,EAAAmyB,GAAA,eAGF91B,EAAA,EAAM,EACQ,EAGlBF,EAAA,QACE4D,EAAA,6BACF1D,EAAA,EAEAF,EAAA,SACE6D,EAAA,GAAAoyB,GAAA,eACF/1B,EAAA,EAEAF,EAAA,SACEC,EAAA,IAAA2J,EAAA,cACF1J,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAA9e,CAAA,CAAA7B,CAAA,CAAA00B,QAAA,CAAA5yB,CAAA,CAAAvC,CAAA,GAnCAC,EAAA,EAAAiE,EAAA,QAAAkxB,EAAAS,MAAA,EAIoB51B,EAAA,EAAAiE,EAAA,OAAAkxB,EAAAS,MAAA,EAMrB51B,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAgxB,CAAA,GAAgC,UAAA5vB,EAAAqwB,qBAAA,EAC4B,QAAAV,CAAA,EAK/Cn1B,EAAA,GAAAiE,EAAA,QAAAkxB,EAAApQ,KAAA,EAEX/kB,EAAA,GAAAgJ,GAAAmsB,EAAA1zB,OAAA,QAQiBzB,EAAA,GAAAiE,EAAA,QAAAkxB,EAAApQ,KAAA,EAId/kB,EAAA,GAAAiE,EAAA,OAAAkxB,EAAAW,WAAA,EAIP91B,EAAA,GAAAswB,EAAA,IAAA/mB,GAAA,MAAA4rB,EAAA1E,UAAA,yBAAAsF,GAAAl2B,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAMJH,EAAA,QAAI,WACoC,YACI,YAEpB,aAChB2D,EAAA,KAA0DzD,EAAA,EAC1D0D,EAAA,aACF1D,EAAA,EAEAF,EAAA,YACE4D,EAAA,iBACF1D,EAAA,EAAM,EAEF,EACH,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CARwCnhB,EAAA,GAAAiE,EAAA,YAAA+xB,EAAAC,WAAA5U,EAAA,EAI7BrhB,EAAA,GAAAiE,EAAA,QAAA+xB,EAAAjR,KAAA,aAAAmR,GAAAr2B,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAYZuD,EAAA,GAAAC,EAAA,MAAAO,CAAA,cAAAuyB,GAAAt2B,CAAA,CAAAW,CAAA,EAAAX,CAAA,KACAuD,EAAA,GAAAC,EAAA,MAAAO,CAAA,cAAAwyB,GAAAv2B,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAJNH,EAAA,QAAI,WACgB,YAEd6D,EAAA,EAAA8yB,GAAA,uBAAkC,EAAAC,GAAA,uBAEpC12B,EAAA,EAAM,EACH,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAHcC,EAAA,GAAAiE,EAAA,OAAAuB,EAAAwJ,MAAA,EACAhP,EAAA,EAAAiE,EAAA,QAAAuB,EAAAwJ,MAAA,ICpDzB,GAAaunB,KAAwB,KAA/B,GAAOA,GAAP,KAAOA,UAAgCC,GAAS,CAC1CzO,MAAQje,EAAOke,EAAc,EAC7BH,OAAS/d,EAAOge,EAAM,EACxBjM,SAAW/R,EAAOgS,CAAQ,EAC1BqM,cAAgBre,EAAOC,EAAa,EACpC0sB,eAAiB3sB,EAAO4sB,EAAc,EACtCC,sBAAwB7sB,EAAO8sB,EAAiB,EAChDC,iBAAmB/sB,EAAOgtB,EAAe,EACzCC,aAAejtB,EAAOktB,EAAY,EAE1CC,UAA0D,GAC1DtF,aAAe,EACfK,KAAiB,CAAEC,MAAO,YAAaC,MAAO,EAAE,EAChDJ,WAA6B,CAAEoF,MAAO,KAAKtF,YAAaG,MAAO,CAAC,EAChEoF,oBAEAtB,sBAA4D,GAE5Df,aAAsC,CACpC,CACEtF,+GAAOttB,CACPitB,SAAU,CACR,CACEztB,MAAO,YACPuG,iLAAO/F,EAET,CACER,MAAO,cACPuG,6IAAO/F,CACR,EAEJ,EAGH2J,aAAA,CACE,MAAK,EAEL,KAAKgqB,sBAAwB,CAC3B,CACE,CACE5tB,qHAAO/F,CACPk1B,SAAU,GACVC,YAAaC,GAAcA,EAAW71B,OAAS81B,GAAmBC,uBAEpE,CACEvvB,mLAAO/F,CACPu1B,QAASH,GAAa,CACpB,KAAKX,sBAAsBe,aAAaJ,EAAWvS,MAAMtd,EAAE,EAAEwE,KAC3D0rB,GAAUn3B,GAAK,KAAKm2B,sBAAsBiB,WAAW,CAAE,CAAEC,QAASP,EAAWvS,MAAMtd,GAAIqwB,WAAY,EAAI,CAAE,CAAE,CAAC,CAAC,EAC7G1kB,UAAU,CACVuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,0CAA0B0a,EAAWvS,MAAMnK,IAAI,sLAA4B,EACzF,KAAKmd,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACH,GACA2pB,YAAaC,GAAcA,EAAW71B,OAAS81B,GAAmBC,sBACnE,EAEH,CACE,CACEvvB,8FAAO/F,CACPk1B,SAAU,IAEZ,CACEnvB,4FAAO/F,CACPu1B,QAASH,GAAc,KAAKI,aAAaJ,CAAU,GAGrD,CACErvB,kDAAO/F,CACPu1B,QAAeH,GAAaU,GAAA,uBACd,KAAM,MAAKvB,eAAewB,qRAEnB,KAEP,IAEZ,KAAKlB,aAAamB,YAAYZ,EAAWvS,MAAMtd,EAAE,EAC9C2L,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,oFAAiC,EAC/C,KAAKmb,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,IACD,CACF,CAEL,EAEAxD,UAAQ,CACe,KAAKie,cAAche,cAAa,EAGpC2J,cAAc7G,OAAO8G,QAAQhJ,UAC5C,KAAKosB,oBAAsBI,GAAmBY,QAGhD,KAAKC,WAAU,CACjB,EAEAhH,eAAa,CACX,MAAO,yBACT,EAEAiH,OAAQlP,EAAY,CAClB,MAAO,MAAK0N,iBAAiByB,mBAAmB,CAAEC,SAAUpP,CAAI,CAAE,CACpE,EAEMuO,aAAcc,EAAqB,OAAAR,IAAA,sBACvC,GAAMS,2dAAiBv2B,EAEX,KAAM,MAAKu0B,eAAewB,QAAQQ,wFAAkC,KACpE,IAEZ,KAAK9B,sBAAsBe,aAAac,EAAMzT,MAAMtd,EAAE,EACnD2L,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,0CAA0B4b,EAAMzT,MAAMnK,IAAI,yFAAa,EACrE,KAAKmd,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,KAEAgrB,cAAeF,EAAqB,CAClC,MAAOG,IAA0B,CAC/BC,SAAUC,GAAkB,CAC1B3pB,IAAK4pB,GAAoBN,EAAMzT,MAAOtY,GAAYssB,eAAe,EAEjEvJ,MAAO,GACPwJ,aAAc,GACf,EACDC,YAAaT,EAAMzT,MAAMkU,YACzBC,WAAYV,EAAMzT,MAAMnK,KACzB,CACH,EAEUue,oBAAkB,CAC1B,KAAKxC,sBAAsByC,WAAW,CACpCtH,WAAY,KAAKA,WACjBE,KAAM,KAAKA,KACXhjB,OAAQ,KAAKA,OACd,EAAEoE,UAAU,CACXuJ,KAAY0c,GAAarB,GAAA,sBACvB,KAAKrG,aAAe0H,EAAWC,MAE/B,KAAKrC,UAAYoC,EAAW/sB,KAE5B,OAAWitB,KAAW,MAAKtC,UACzBuC,OAAOC,OAAOF,EAAS,CACrBtD,WAAY,KAAM,MAAKoC,OAAOkB,EAAQ3D,MAAM,EAC7C,CAEL,IAEA9Y,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACH,IAAA/L,CAAA,CApKW40B,4CAAuB,IAAA50B,CAAA,CAAvB40B,wBAAuB30B,UAAA,0BAAA0G,SAAA,CAAAklB,EAAA,EAAA1rB,MAAA,EAAAC,KAAA,GAAAC,WAAA,IAAAC,6DDzBOC,2DAGAA,2CAEyD,gBAAyB,qBAAa,QAAAM,CAAA,CAAAA,CAAA,uFACzFN,yFACAA,qCAC6E,iBAA8B,uBAAa,QAAAS,CAAA,CAAAA,CAAA,mDAiB7IT,8WAQUA,gNAlBKA,qBAkBuGA,yFAWpEA,mHAerBA,gSAiBbA,oMACCA,o6CA/F7CxC,EAAA,gBAGgB2G,EAAA,sBAAAR,EAAA,OAAc3B,GAAAmtB,SAAAxrB,CAAA,CAAgB,IAI5CtC,EAAA,EAAAm2B,GAAA,sBAAiC,EAAAC,GAAA,uBAQD,EAAAC,GAAA,wBAeqC,EAAAC,GAAA,sBAyChB,EAAAC,GAAA,sBA6BvDl6B,EAAA,GAAA0C,CAAA,IAnGE2B,EAAA,QAAAC,EAAA+yB,SAAA,EAAmB,YAAA/yB,EAAAytB,aAAA,GAA+B,eAAAztB,EAAAytB,YAAA,EAA8B,OAAAztB,EAAA0tB,WAAA,EAAqB,QAAA1tB,EAAA4tB,WAAAC,KAAA,EAA2B,qBAAA7tB,EAAA2tB,kBAAA,EACvF,YAAA3tB,EAAA8tB,KAAAC,KAAA,EAAyB,YAAA/tB,EAAA8tB,KAAAE,KAAA,EAAyB,WAC9E,qBAAyD,4BACxC,4BAAAhuB,EAAAiuB,sBAAA,GAAsD,kBAAAjuB,EAAA61B,YAAA,IAAAx1B,YAAA,ECwBlF6tB,GAAWC,GAAAC,GAAAC,GAAAyH,GAAAxH,GACXC,GACAC,GACAC,GACAxtB,EACA80B,GACAC,GACAh1B,GACAi1B,GACAtH,GACAuH,GACAtH,GACAuH,EAAuB,EAAAh1B,OAAA;oDAAA,KAGrB,GAAOkxB,GAAP+D,QAAO/D,EAAwB,MChC/B,GAAOgE,IAAP,KAAOA,GAAwB,CAC3BjvB,SAAWxB,EAAOyB,EAAU,EAC5BC,cAAgB1B,EAAO2B,EAAa,EACpC+uB,YAAc1wB,EAAO2wB,EAAW,EAIxCC,kBAAmBC,EAIlB,CACC,GAAM,CAAE7I,aAAYE,OAAMhjB,QAAM,EAAK2rB,EAE/BzrB,EAAMqrB,GAAyBK,sBAEjCC,EAAS,GAAIC,MACjBD,SAAS,KAAKL,YAAYO,iBAAiBF,EAAQ/I,EAAYE,CAAI,EAE/DhjB,IACF6rB,EAASA,EAAOG,OAAO,SAAUhsB,CAAM,GAGlC,KAAK1D,SAASS,IAAkCmD,EAAK,CAAE2rB,QAAM,CAAE,EACnE5uB,KACCC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAE5D,EAEA8uB,mBAAoBN,EAInB,CACC,GAAM,CAAEO,eAAcC,qBAAoBC,sBAAoB,EAAKT,EAE7DzrB,EAAMqrB,GAAyBK,sBAAwB,IAAMM,EAAazzB,GAAK,UAC/E4zB,EAAoC,CAAEF,qBAAoBC,sBAAoB,EAEpF,MAAO,MAAK9vB,SAASgwB,KAAKpsB,EAAKmsB,CAAI,EAChCpvB,KAAKC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAChE,EAEAovB,mBAAoBZ,EAInB,CACC,GAAM,CAAEO,eAAcC,qBAAoBC,sBAAoB,EAAKT,EAE7DzrB,EAAMqrB,GAAyBK,sBAAwB,IAAMM,EAAazzB,GAAK,UAC/E4zB,EAAoC,CAAEF,qBAAoBC,sBAAoB,EAEpF,MAAO,MAAK9vB,SAASgwB,KAAKpsB,EAAKmsB,CAAI,EAChCpvB,KAAKC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAChE,EAEAqvB,oBAAqBC,EAAuD,CAC1E,GAAMC,GAAgBC,GAASF,CAAgB,EAE/C,MAAOG,IAAKF,CAAa,EACtBzvB,KACC4vB,GAAUt5B,GAAK,KAAK+I,SAASwwB,OAAOvB,GAAyBK,sBAAwB,IAAMr4B,EAAEkF,EAAE,CAAC,EAChGs0B,GAAO,EACP7vB,GAAW6Q,GAAO,KAAKvR,cAAcY,YAAY2Q,CAAG,CAAC,CAAC,CAE5D,IA7DQvQ,EALG+tB,GAKIK,wBAAwBnuB,GAAYC,OAAS,+BAAA/K,CAAA,CALjD44B,8CAAwB,IAAA54B,CAAA,CAAxB44B,6BAAwB5tB,QAAxB4tB,GAAwB3tB,IAAA,IAA/B,GAAO2tB,IAAPyB,GCRC,GAAMC,IAAiE,CAC5E9jB,WAAY,CAAEC,GAAWtR,SAAUsR,GAAW8jB,UAAU,CAAC,EAAG9jB,GAAWG,UAAU,GAAI,CAAC,EACtFF,SAAU,CACRvR,wJAAU5E,CACVi6B,qQAAWj6B,CACXsW,wQAAWtW,4HCLTk6B,GAAA,GAAAlV,CAAA,IAAArnB,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAiCC,EAAA,EAAAqE,EAAAmB,EAAA01B,aAAA/qB,QAAA,EAAA7L,CAAA,eAAA+3B,GAAAx8B,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAAAonB,CAAA,QACjCmV,GAAA,GAAAlV,CAAA,IAAArnB,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAiCC,EAAA,EAAAqE,EAAAmB,EAAA01B,aAAA/qB,QAAA,EAAA7L,CAAA,eAAAg4B,GAAAz8B,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAWjCH,EAAA,iBAAA2D,EAAA,KAEAzD,EAAA,aAAA28B,GAAA18B,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAQIH,EAAA,UAAAmE,EAAA,KAC2BP,EAAA,QAC3BQ,EAAA,EAAAlE,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAFiCkE,EAAA,UAAAE,EAAA,EAAAq4B,GAAAh3B,EAAAi3B,8BAAA,IACFz8B,EAAA,GAAAqE,EAAAmB,EAAA01B,aAAAnrB,KAAA,EAAAzL,CAAA,eAAAo4B,GAAA78B,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAG/BH,EAAA,iBAAAmE,EAAA,KACwFP,EAAA,QACxFQ,EAAA,EAAAlE,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAD4FC,EAAA,GAAAqE,EAAAmB,EAAA01B,aAAAnrB,KAAA,EAAAzL,CAAA,eAAAq4B,GAAA98B,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAV9FuD,EAAA,GACE1D,EAAA,OAAAmE,EAAA,KACEP,EAAA,YAA0B,QAC5BQ,EAAA,EAAAlE,EAAA,EAEA2D,EAAA,EAAAq5B,GAAA,YAAiH,EAAAC,GAAA,mBAAAj5B,CAAA,IAAA/D,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAH3EC,EAAA,GAAAqE,EAAAmB,EAAA01B,aAAA/qB,QAAA,EAAA7L,CAAA,IAGlCtE,EAAA,EAAAiE,EAAA,OAAAuB,EAAAs3B,eAAA,GAIO98B,EAAA,EAAAiE,EAAA,QAAAuB,EAAAs3B,eAAA,cAAAC,GAAAl9B,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAUXH,EAAA,iBAAAmE,EAAA,KACwFP,EAAA,QACxFQ,EAAA,EAAAlE,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAD4FC,EAAA,GAAAqE,EAAAmB,EAAA01B,aAAAnrB,KAAA,EAAAzL,CAAA,eAAA04B,GAAAn9B,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAN9FuD,EAAA,GACE1D,EAAA,UAAAmE,EAAA,KAC2BP,EAAA,QAAiC,YAC5DQ,EAAA,EAAAlE,EAAA,EAEA2D,EAAA,EAAA05B,GAAA,mBAAAr5B,CAAA,IAAA/D,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAJQC,EAAA,EAAAiE,EAAA,UAAAE,EAAA,EAAAq4B,GAAAh3B,EAAAi3B,8BAAA,IACuBz8B,EAAA,GAAAqE,EAAAmB,EAAA01B,aAAAnrB,KAAA,EAAAzL,CAAA,IAGpBtE,EAAA,EAAAiE,EAAA,QAAAuB,EAAAs3B,eAAA,cAAAI,GAAAr9B,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAcbH,EAAA,YACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IADEC,EAAA,EAAAswB,EAAA,IAAA9qB,EAAArF,WAAAg7B,mBAAA,gBAAAgC,GAAAt9B,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GArDRjG,EAAA,WAA0B,WACxBmE,EAAA,KACEN,EAAA,EAAA65B,GAAA,uBAAiC,EAAAC,GAAA,uBAEnCv5B,EAAA,EAAAlE,EAAA,EAEAF,EAAA,eAAiE2G,EAAA,mBAAAP,EAAAC,CAAA,KAAAP,GAAAQ,EAAA,QAAAI,GAASZ,EAAA83B,KAAA,CAAM,KAC9Eh6B,EAAA,uBACF1D,EAAA,EAAS,EAGXF,EAAA,aAAoC2G,EAAA,sBAAAP,EAAAC,CAAA,KAAAP,GAAAQ,EAAA,QAAAI,GAAYZ,EAAA+3B,oBAAA,CAAqB,KACnE79B,EAAA,YAEE6D,EAAA,EAAAi6B,GAAA,mBAIA99B,EAAA,aACE6D,EAAA,GAAAk6B,GAAA,uBAAiC,GAAAC,GAAA,uBAuBnC99B,EAAA,EAEAF,EAAA,aAAwB,eACtB2D,EAAA,MAA+DzD,EAAA,EAE/D0D,EAAA,kBAKAC,EAAA,GAAAo6B,GAAA,cAGF/9B,EAAA,EAEAF,EAAA,aACE4D,EAAA,8BAIF1D,EAAA,EAAM,EAGRF,EAAA,aAAiC,eAG7B2G,EAAA,mBAAAP,EAAAC,CAAA,KAAAP,GAAAQ,EAAA,QAAAI,GAASZ,EAAA83B,KAAA,CAAM,KAAC,uBAAAx3B,EAAAC,CAAA,KAAAP,GAAAQ,EAAA,QAAAI,GAAcZ,EAAA83B,KAAA,CAAM,KAFtC19B,EAAA,EAKA0D,EAAA,eACF1D,EAAA,EAAM,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAtEWC,EAAA,GAAAiE,EAAA,OAAAuB,EAAAo4B,SAAA,GACA59B,EAAA,EAAAiE,EAAA,OAAAuB,EAAAq4B,SAAA,GAQF79B,EAAA,GAAAiE,EAAA,YAAAuB,EAAAnE,IAAA,EAGGrB,EAAA,GAAAiE,EAAA,QAAAuB,EAAA01B,aAAA4C,aAAA,EAKC99B,EAAA,GAAAiE,EAAA,OAAAuB,EAAAo4B,SAAA,GAcA59B,EAAA,EAAAiE,EAAA,OAAAuB,EAAAq4B,SAAA,GAgBb79B,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAA+R,GAAA1Q,EAAArF,WAAAg7B,kBAAA,GAGIn7B,EAAA,EAAAiE,EAAA,OAAAuB,EAAArF,WAAAg7B,kBAAA,EAOoEn7B,EAAA,GAAAiE,EAAA,YAAAuB,EAAAs3B,eAAA,GAYvD98B,EAAA,GAAAiE,EAAA,QAAAuB,EAAAu4B,eAAA,GAA0B,YAAAv4B,EAAAnE,KAAA2qB,KAAA,ICpDrD,GAAagS,KAAkC,KAAzC,GAAOA,GAAP,KAAOA,UAA0CtW,GAAY,CACvDC,oBAAsB7d,EAAO8d,EAAmB,EAClD/d,OAASC,EAAOC,EAAa,EAC7Bk0B,aAAen0B,EAAOo0B,EAAQ,EAC9BriB,SAAW/R,EAAOgS,CAAQ,EAC1BqiB,oBAAsBr0B,EAAOywB,EAAwB,EAEpD6D,MAAQC,GAAoB,OAAO,EAEnCC,sBAAwBC,GAAM,EAEvCrD,aAEQsD,YACAC,YAERv0B,UAAQ,CACN,KAAKqhB,UAAU,CACb4P,mBAAoBc,GACpBb,qBAAsB,KACvB,CACH,EAEAwC,UAAQ,CACN,MAAO,MAAKa,cAAgB,QAC9B,EAEAZ,UAAQ,CACN,MAAO,MAAKY,cAAgB,QAC9B,EAEAC,UAAWxD,EAAgCjK,EAAyB,CAClE,KAAKwN,YAAcxN,EACnB,KAAKiK,aAAeA,EAEpB,KAAK75B,KAAKwS,WAAW,CACnBunB,qBAAsB,CAAC,KAAK0B,eAAc,GAAM5B,EAAa4C,gBAAkB,GAChF,EAED,KAAKU,YAAc,KAAKP,aAAaU,KAAK,KAAKP,MAAK,EAAI,CAAEQ,SAAU,EAAI,CAAE,CAC5E,EAEAtB,MAAI,CACF,KAAKj8B,KAAKw9B,MAAK,EAEf,KAAKL,YAAYM,MAAK,CACxB,EAEAf,gBAAc,CACZ,MAAI,MAAKH,SAAQ,6OAKnB,EAEAL,qBAAmB,CACjB,MAAI,MAAKK,SAAQ,EAAW,KAAK3C,mBAAkB,EAE5C,KAAKM,mBAAkB,CAChC,EAEAuB,gBAAc,CACZ,MAAO,MAAKjzB,OAAOM,cAAa,EAAG4F,MAAMhF,OAC3C,EAEA0xB,+BAA6B,CAC3B,MAAO,MAAKp7B,KAAKK,MAAM05B,oBACzB,EAEQH,oBAAkB,CACxB,KAAKkD,oBAAoBlD,mBAAmB,CAC1CC,aAAc,KAAKA,aACnBC,mBAAoB,KAAK95B,KAAKK,MAAMy5B,mBACpCC,qBAAsB,KAAK/5B,KAAKK,MAAM05B,qBACvC,EAAEhoB,UAAU,CACXuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,WAAoB,KAAKse,aAAa/qB,QAAQ,mFAAkB,EAE9E,KAAKmuB,sBAAsBS,KAAI,EAC/B,KAAKzB,KAAI,CACX,GAEAxgB,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACH,EAEQ6tB,oBAAkB,CACxB,KAAK4C,oBAAoB5C,mBAAmB,CAC1CL,aAAc,KAAKA,aACnBC,mBAAoB,KAAK95B,KAAKK,MAAMy5B,mBACpCC,qBAAsB,KAAK/5B,KAAKK,MAAM05B,qBACvC,EAAEhoB,UAAU,CACXuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,WAAoB,KAAKse,aAAa/qB,QAAQ,6HAAwB,EAEpF,KAAKmuB,sBAAsBS,KAAI,EAC/B,KAAKzB,KAAI,CACX,GAEAxgB,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACH,IAAA/L,CAAA,CAtGWq8B,8DAAiC,IAAAzQ,GAAjCyQ,CAAiC,UAAAr8B,CAAA,CAAjCq8B,wBAAiCp8B,UAAA,oCAAAo9B,UAAA,QAAAA,CAAAl2B,EAAA5E,EAAA,CAAA4E,EAAA,GAAAm2B,EAAA,CAAA18B,CAAA,CAAA67B,KAAA,CAAAc,EAAA,IAAA58B,CAAA,IAAA68B,EAAA,KAAAC,OAAA,EAAAd,qBAAA,0BAAAh2B,QAAA,EAAA+2B,EAAA,EAAAv9B,KAAA,GAAAC,IAAA,GAAAC,MAAA,CAAAA,CAAA,QAAAK,CAAA,CAAAA,CAAA,gJDbNH,6RAsDJA,+CAOkBA,YAjEhD,kCAAiC,+CACO,mCAA2B,uEAAa,yEAAe,IAA/F,kCAAiC,2DAAO,mCAA2B,uEAAa,yEAAe,IAAAM,CAAA,CAAAJ,EAAA,CAAAI,CAAA,MAAAC,CAAA,CAAAA,CAAA,yLA0CxDP,wiBA/B2BA,YAO5D,gBAAQ,oDAAS,iBAAS,QAAM,gBAAI,mBAA2B,qBAAK,8OAAAU,CAAA,CAAAA,CAAA,qNAI3C,gBAAI,mBAAwB,qBAAK,+jBAAAC,CAAA,CAAAA,CAAA,mjBAI4B,gBAAI,mBAAwB,qBAAK,kOAAAC,CAAA,CAAAA,CAAA,kJAM9F,gBAAI,mBAAwB,qBAAK,iPAA8C,gBAAQ,0DAAQ,iBAAS,0MAAAC,CAAA,QAAAA,CAAA,gZAI3C,gBAAI,mBAAwB,qBAAK,mSAAAP,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,0DAAAV,CAAA,yeAAAC,CAAA,oFAAAC,CAAA,sOAAAY,QAAA,SAAAA,CAAAb,CAAA,CAAAC,CAAA,EAAAD,CAAA,IAxCnIiB,EAAA,EAAA+7B,GAAA,2BAAAC,EAAA,IAAAh7B,YAAA,ECkBaY,EAAMqvB,GAAqBhwB,GAAW6pB,GAAA5pB,GAAAE,GAAAC,GAAEE,GAAmBC,GAAAC,GAAEE,GAASqR,GAA2BE,EAAc,EAAAtN,cAAA,KAEtH,GAAO60B,GAAPwB,QAAOxB,EAAkC,eAAAyB,GAAA5/B,CAAA,CAAAW,CAAA,KAAAX,CAAA,IChBvCF,EAAA,GAAAE,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAAuwB,EAAA,WAAApwB,EAAAs4B,MAAA,EAAAzoB,MAAA,gBAAA2vB,GAAA7/B,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAEAH,EAAA,QAAmCC,EAAA,GAAqBC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAArBC,EAAA,EAAAswB,EAAA,KAAApwB,EAAAs4B,MAAA,EAAAzoB,MAAA,eAAA4vB,GAAA9/B,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAAnC0D,EAAA,EAAAq8B,GAAA,YAAA//B,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAKkE,EAAA,QAAA/D,EAAAs4B,MAAA,EAAAsF,aAAA,aAAA+B,GAAAhgC,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAHP0D,EAAA,EAAAu8B,GAAA,KAAsC,EAAAC,GAAA,UAAAlgC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAtCiJ,GAAA9I,EAAAs4B,MAAA,EAAAsF,gBAAA,mBAAAkC,GAAAngC,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAMAF,EAAA,GAAAE,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAuwB,EAAA,IAAApwB,EAAAs4B,MAAA,EAAAzoB,MAAA,OCCN,GAAakwB,KAAsB,KAA7B,GAAOA,GAAP,KAAOA,EAAsB,CACxBzH,MAAQl3B,EAA+BC,MAAS,EAChD2+B,2BAA6B5+B,EAAwBC,OAAW,CAAEqY,UAAWC,EAAgB,CAAE,EAExGsmB,UAAQ,CACN,MAAI,MAAK3H,MAAK,EAAGsF,sgBAKnB,IAAAn8B,CAAA,CAVWs+B,4CAAsB,IAAAt+B,CAAA,CAAtBs+B,wBAAsBr+B,UAAA,yBAAAC,OAAA,CAAA22B,MAAA,YAAA0H,2BAAA,kCAAAp+B,MAAA,EAAAC,KAAA,EAAAC,OAAA,gCAAAmB,SAAA,QAAAA,CAAA2F,EAAA5E,EAAA,CAAA4E,EAAA,IDVnC1F,EAAA,GACE1D,EAAA,SACE6D,EAAA,EAAA68B,GAAA,KAAoC,EAAAC,GAAA,KAStCzgC,EAAA,EAAAgE,CAAA,IAAAtB,CAAA,KAVGtC,EAAA,EAAAiE,EAAA,iBAAAC,EAAAs0B,MAAA,EAAAzoB,MAAAsgB,EAAA,EAAkC,QAAAnsB,EAAAi8B,SAAA,GACnCngC,EAAA,EAAAgJ,GAAA9E,EAAAg8B,2BAAA,UAAA37B,YAAA,ECMSY,CAAI,EAAAE,OAAA;mEAAA,KAEX,GAAO46B,GAAPK,QAAOL,EAAsB,UAAAM,EAAA,8BAAAC,EAAA,CAAA3gC,CAAA,IAAA+0B,IAAA,CAAA/0B,CAAA,YAAA4gC,GAAA5gC,CAAA,CAAAW,CAAA,KAAAX,CAAA,ICA3ByD,EAAA,2BAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAEEkE,EAAA,UAAAivB,EAAAwN,WAAA,EAAuB,QAAAxN,EAAAyN,YAAA,aAAAC,GAAA/gC,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAJ7BjG,EAAA,YAAqB,YAEjB6D,EAAA,EAAAs9B,GAAA,6BAKFjhC,EAAA,EAEAF,EAAA,YAAqB,iCACO2G,EAAA,kBAAAR,EAAA,CAAAC,EAAAmtB,CAAA,KAAAC,GAAAltB,EAAA,QAAAI,GAAU8sB,EAAArD,SAAAhqB,CAAA,CAAgB,KAAEjG,EAAA,EAA2B,EAC7E,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GARDC,EAAA,GAAAiE,EAAA,OAAAivB,EAAA4N,kBAAA,cAAAC,GAAAlhC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAaPH,EAAA,QAAI,WAEA4D,EAAA,8BACF1D,EAAA,EACAF,EAAA,WAAqC,aACnC2D,EAAA,KAAmDzD,EAAA,EAAO,EAE5DF,EAAA,WAAsC,aACpC2D,EAAA,KAA0CzD,EAAA,EAAO,EAEnDF,EAAA,WAAA2D,EAAA,MAA4BzD,EAAA,EAC5BF,EAAA,YAAA2D,EAAA,MAA0BzD,EAAA,EAC1BF,EAAA,YAAA2D,EAAA,MAA4BzD,EAAA,EAC5BF,EAAA,YAAA2D,EAAA,MAAwCzD,EAAA,EACxCF,EAAA,YAAAmE,EAAA,MAAoHP,EAAA,oBAAuCQ,EAAA,EAAAlE,EAAA,EAC3JF,EAAA,YAAA2D,EAAA,MAAwCzD,EAAA,EACxCF,EAAA,YAAAmE,EAAA,MAAgIP,EAAA,oBAA2CQ,EAAA,EAAAlE,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAF3JC,EAAA,IAAAiE,EAAA,aAAAivB,EAAAnD,WAAA,EAEsB/vB,EAAA,GAAAiE,EAAA,aAAAivB,EAAAnD,WAAA,aAAAiR,GAAAnhC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAiDzCH,EAAA,YACE4D,EAAA,uBACF1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAFkDld,EAAA,QAAAg9B,EAAAC,MAAAj5B,KAAA,aAAAk5B,GAAAthC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAIlDH,EAAA,YACE4D,EAAA,uBACF1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAFkDld,EAAA,QAAAg9B,EAAAC,MAAAj5B,KAAA,aAAAm5B,GAAAvhC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAhDtDH,EAAA,WAAoC,WAEhC4D,EAAA,wBACF1D,EAAA,EAEAF,EAAA,WACE4D,EAAA,+BACF1D,EAAA,EAEAF,EAAA,WACE4D,EAAA,2BAIF1D,EAAA,EAEAF,EAAA,QAAI,YAC0B,SACrB,WACGC,EAAA,IAA2BC,EAAA,EACjCF,EAAA,cAAoBC,EAAA,IAAqCC,EAAA,EAAO,EAC5D,EACF,EAGRF,EAAA,SACE4D,EAAA,4BACF1D,EAAA,EAEAF,EAAA,SAAI,aAC0B,UACrB,WACGC,EAAA,IAAgCC,EAAA,EACtCF,EAAA,cAAoBC,EAAA,IAAqCC,EAAA,EAAO,EAC5D,EACF,EAGRF,EAAA,YACEC,EAAA,IACFC,EAAA,EAEAF,EAAA,YAEE6D,EAAA,GAAA89B,GAAA,cAAoH,GAAAC,GAAA,cAOtH1hC,EAAA,EAEAF,EAAA,YACEC,EAAA,IACFC,EAAA,EAEAF,EAAA,YAAgDC,EAAA,IAAA2J,EAAA,cAA+C1J,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA00B,QAAA,CAAA7yB,CAAA,CAAA7B,CAAA,CAAA2gB,SAAA,CAAA7e,CAAA,CAAAvC,CAAA,GAzDlGkE,EAAA,iBAAAg9B,CAAA,EAEiBjhC,EAAA,GAAAiE,EAAA,QAAAg9B,CAAA,EAIOjhC,EAAA,GAAAiE,EAAA,cAAAg9B,CAAA,EAA4B,WAAA7L,CAAA,EAKlDp1B,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAA+R,GAAAkf,CAAA,GAAgC,UAAAlC,EAAAqO,mBAAA,EAC0B,QAAAN,CAAA,EAOlDjhC,EAAA,GAAAC,EAAAghC,EAAA9wB,QAAA,EACcnQ,EAAA,GAAAC,EAAAghC,EAAAO,kBAAA,EAMJxhC,EAAA,GAAAiE,EAAA,QAAAg9B,CAAA,EAAsB,6BAAA/N,EAAArJ,yBAAA,EAMhC7pB,EAAA,GAAAC,EAAAghC,EAAAQ,aAAA,EACczhC,EAAA,GAAAC,EAAAghC,EAAAS,kBAAA,EAKiB1hC,EAAA,EAAAiE,EAAA,aAAAg9B,EAAAU,kBAAA,EACzC3hC,EAAA,EAAAswB,EAAA,IAAA2Q,EAAAU,mBAAA,KAG8B3hC,EAAA,EAAAiE,EAAA,cAAAg9B,CAAA,EAExBjhC,EAAA,EAAAiE,EAAA,OAAAivB,EAAA0O,uBAAAX,CAAA,GAIAjhC,EAAA,EAAAiE,EAAA,OAAAivB,EAAA2O,uBAAAZ,CAAA,GAKmCjhC,EAAA,EAAAiE,EAAA,aAAAg9B,EAAA9F,kBAAA,EACzCn7B,EAAA,EAAAswB,EAAA,IAAA2Q,EAAA9F,mBAAA,KAGiBn7B,EAAA,EAAAiE,EAAA,cAAAg9B,CAAA,EAA6BjhC,EAAA,EAAAC,EAAAsJ,GAAA,MAAA03B,EAAAxQ,UAAA,qBAAAqR,GAAAjiC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAc1CH,EAAA,SAA6C,aAC3C2D,EAAA,MAAiEzD,EAAA,EACjE0D,EAAA,aACF1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CADyCnhB,EAAA,GAAAiE,EAAA,YAAA89B,EAAAC,uBAAA3gB,EAAA,aAAA4gB,GAAApiC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAXjDH,EAAA,QAAI,WACgB,YACiB,YACb,YACI,aAClB2D,EAAA,MAAiEzD,EAAA,EACjE0D,EAAA,aACF1D,EAAA,EAEA2D,EAAA,EAAA2+B,GAAA,cAIFtiC,EAAA,EAAM,EACF,EACH,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAT0CnhB,EAAA,GAAAiE,EAAA,YAAA89B,EAAAI,uBAAA9gB,EAAA,EAGnCrhB,EAAA,EAAAiE,EAAA,OAAA89B,EAAA5G,kBAAA,aAAAiH,GAAAviC,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAcRuD,EAAA,GAAAC,EAAA,MAAAO,CAAA,cAAAy+B,GAAAxiC,CAAA,CAAAW,CAAA,EAAAX,CAAA,KACAuD,EAAA,GAAAC,EAAA,MAAAO,CAAA,cAAA0+B,GAAAziC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAJNH,EAAA,QAAI,WACgB,YAEd6D,EAAA,EAAAg/B,GAAA,uBAAkC,EAAAC,GAAA,uBAEpC5iC,EAAA,EAAM,EACH,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAHcC,EAAA,GAAAiE,EAAA,OAAAivB,EAAAlkB,MAAA,EACAhP,EAAA,EAAAiE,EAAA,QAAAivB,EAAAlkB,MAAA,IC5FzB,GAAayzB,KAA0B,KAAjC,GAAOA,GAAP,KAAOA,UAAkCjM,GAA2B,CAC9DzO,MAAQje,EAAOke,EAAc,EAC7BH,OAAS/d,EAAOge,EAAM,EACxBje,OAASC,EAAOC,EAAa,EAC7B8R,SAAW/R,EAAOgS,CAAQ,EAC1B+a,iBAAmB/sB,EAAOgtB,EAAe,EACzCL,eAAiB3sB,EAAO4sB,EAAc,EACtCgM,yBAA2B54B,EAAOywB,EAAwB,EAEzDoI,yBAA2BtE,GAA6C,0BAA0B,EAE3G3C,cAA6G,GAC7G/J,aAAe,EACfK,KAAiB,CAAEC,MAAO,YAAaC,MAAO,EAAE,EAChDJ,WAA6B,CAAEoF,MAAO,KAAKtF,YAAaG,MAAO,CAAC,EAEhEwP,oBAA4D,GAC5Db,YAAoD,GAEpD5L,aAAsC,GAEtCjL,0BAEAhe,aAAA,CACE,MAAK,EAEL,KAAK01B,oBAAsB,CACzB,CACE,CACEt5B,gHAAO/F,CACPu1B,QAASyD,GAAgB,KAAK0H,oCAAoC1H,EAAc,QAAQ,EACxF7D,YAAa6D,GAAgBA,EAAagG,MAAMz5B,KAAOo7B,GAAsBC,SAE/E,CACE76B,4HAAO/F,CACPu1B,QAASyD,GAAgB,KAAK0H,oCAAoC1H,EAAc,QAAQ,EACxF7D,YAAa6D,GAAgBA,EAAagG,MAAMz5B,KAAOo7B,GAAsBC,SAE/E,CACE76B,gHAAO/F,CACP+Q,qYAAa/Q,CACbu1B,QAASyD,GAAgB,KAAKM,oBAAoB,CAAEN,CAAY,CAAE,EACnE,CACF,EAGH,KAAKwF,YAAc,CACjB,CACEz4B,kDAAO/F,CACPu1B,QAASiE,GAAiB,KAAKF,oBAAoBE,CAAa,EACjE,CAEL,EAEAxxB,UAAQ,CACN,KAAKkuB,WAAU,EAEf,KAAKvuB,OAAOk5B,UAAS,EAClB3vB,UAAUuK,GAAS,CAClB,KAAKkM,0BAA4BlM,EAAO7P,OAAO+b,yBACjD,EAAC,CACL,EAEAuH,eAAa,CACX,MAAO,2BACT,EAEAwQ,uBAAwB1G,EAA8B,CACpD,MAAOA,GAAagG,MAAMz5B,KAAOo7B,GAAsBG,QACzD,EAEAnB,uBAAwB3G,EAA8B,CACpD,MAAOA,GAAagG,MAAMz5B,KAAOo7B,GAAsBI,QACzD,EAEAC,yBAAuB,CACrB,KAAKnL,WAAU,CACjB,EAEUoB,oBAAkB,CAC1B,KAAKuJ,yBAAyBhI,kBAAkB,CAC9C5I,WAAY,KAAKA,WACjBE,KAAM,KAAKA,KACXhjB,OAAQ,KAAKA,OACd,EAAEoE,UAAU,CACXuJ,KAAY0c,GAAarB,GAAA,sBACvB,KAAKrG,aAAe0H,EAAWC,MAC/B,KAAKoC,cAAgBrC,EAAW/sB,KAEhC,OAAW4uB,KAAgB,MAAKQ,cAC9BR,EAAaiH,uBAAyB,KAAM,MAAK9J,OAAO6C,EAAayG,kBAAkB,EACvFzG,EAAa8G,uBAAyB,KAAM,MAAK3J,OAAO6C,EAAaC,kBAAkB,CAE3F,IAEAre,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACH,EAEQk1B,oCAAqC1H,EAAgCjK,EAAyB,CACpG,KAAK0R,yBAAwB,EAAGjE,UAAUxD,EAAcjK,CAAI,CAC9D,EAEcuK,oBAAqBE,EAAiC,OAAA1D,IAAA,sBAClE,GAAMmL,GAAY,CAAEjM,MAAOwE,EAAcpxB,OAAQ6F,SAAUurB,EAAc,CAAC,EAAEvrB,QAAQ,EAE9EzC,EAAUsK,gcAEdmrB,CAAS,GAGC,KAAM,MAAK1M,eAAewB,QAAQvqB,8CAA0B,KAC5D,IAEZ,KAAKg1B,yBAAyBlH,oBAAoBE,CAAa,EAC5DtoB,UAAU,CACTuJ,KAAMA,IAAK,CACT,GAAMjP,GAAUsK,+eAEdmrB,CAAS,EAGX,KAAKtnB,SAASe,QAAQlP,CAAO,EAC7B,KAAKqqB,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,KAEQ2qB,OAAQlP,EAAY,CAC1B,MAAO,MAAK0N,iBAAiByB,mBAAmB,CAAEC,SAAUpP,CAAI,CAAE,CACpE,IAAAxnB,CAAA,CApIW8gC,4CAAyB,IAAA9gC,CAAA,CAAzB8gC,wBAAyB7gC,UAAA,2BAAAo9B,UAAA,QAAAA,CAAAl2B,EAAA5E,EAAA,CAAA4E,EAAA,GAAAm2B,EAAA,CAAA18B,CAAA,CAAAogC,wBAAA,CAAApC,EAAA,IAAAj+B,CAAA,IAAA68B,EAAA,KAAA72B,QAAA,EAAA+2B,EAAA,EAAAv9B,KAAA,GAAAC,IAAA,IAAAC,MAAA,CAAAA,CAAA,QAAAK,CAAA,CAAAA,CAAA,oGD5BkBH,6GAedA,iEAGCA,2DAGAA,qDAEhBA,gBACAA,yCACAA,wHACAA,mEAC+F,iBAA0B,uBAAa,QAAAY,CAAA,CAAAA,CAAA,wFACtIZ,mEAC2G,iBAA8B,sBAAa,QAAAc,CAAA,CAAAA,CAAA,2GAOtHd,2DAU/BA,yHAuD+BA,iGAKAA,8TAafA,6IACCA,i3DAnI7CxC,EAAA,gBAGgB2G,EAAA,sBAAAR,EAAA,CAAAI,MAAAH,GAAAC,CAAA,EAAAK,EAAclC,EAAAmtB,SAAAxrB,CAAA,CAAgB,KAC5CD,GAAA,2BAAAC,EAAA,CAAAI,MAAAH,GAAAC,CAAA,EAAAG,GAAAhC,EAAAy8B,aAAA96B,CAAA,IAAA3B,EAAAy8B,aAAA96B,GAAAO,EAAAP,CAAA,KAGAtC,EAAA,EAAA6/B,GAAA,sBAAiC,EAAAC,GAAA,uBAgBD,EAAAC,GAAA,wBAqBuC,EAAAC,GAAA,sBA8DhB,EAAAC,GAAA,sBA8BzD5jC,EAAA,EAEAF,EAAA,wCAAyD2G,EAAA,mCAAAJ,MAAAH,GAAAC,CAAA,EAAAK,EAAyBlC,EAAAg/B,wBAAA,CAAyB,KAAEtjC,EAAA,GAAA0C,CAAA,KAzI3G2B,EAAA,QAAAC,EAAAw3B,aAAA,EAAuB,YAAAx3B,EAAAytB,aAAA,GAA+B,eAAAztB,EAAAytB,YAAA,EAA8B,OAAAztB,EAAA0tB,WAAA,EAAqB,QAAA1tB,EAAA4tB,WAAAC,KAAA,EAA2B,qBAAA7tB,EAAA2tB,kBAAA,EAC3F,YAAA3tB,EAAA8tB,KAAAC,KAAA,EAAyB,YAAA/tB,EAAA8tB,KAAAE,KAAA,EAAyB,WAC9E,qBACb1rB,GAAA,YAAAtC,EAAAy8B,YAAA,EAA6B18B,EAAA,4BAA8B,4BAAAC,EAAAiuB,sBAAA,GAAsD,kBAAAjuB,EAAA61B,YAAA,KAAAx1B,YAAA,ECoB/GiwB,GACApC,GAAWC,GAAAC,GAAAC,GAAAkR,GAAAzJ,GAAAxH,GAAAkR,GAAAC,GACXlR,GACAttB,EACA+0B,GACAxH,GACAC,GACAsH,GACA/0B,GACA+6B,GACApN,GACAmL,GACAlL,EAAU,EAAAztB,OAAA;qDAAA;qEAAA,KAGR,GAAOo9B,GAAPmB,QAAOnB,EAA0B,MC7BvC,GAAaoB,KAA8B,KAArC,GAAOA,GAAP,KAAOA,EAA8B,GAAAliC,CAAA,CAA9BkiC,4CAA8B,IAAAliC,CAAA,CAA9BkiC,wBAA8BjiC,UAAA,mBAAAE,MAAA,EAAAC,KAAA,EAAAC,WAAA,IAAAC,sqBCVlBC,0bACKA,0FAD9BxC,EAAA,UAAA2D,EAAA,KAAsJzD,EAAA,EACtJF,EAAA,UAAA2D,EAAA,KAA6FzD,EAAA,EAE7F0D,EAAA,4CAAAiB,YAAA,EDIIu/B,EAAmC,EAAA36B,cAAA,KAGjC,GAAO06B,GAAPE,QAAOF,EAA8B,MEDpC,GAAMG,IAA2B,CACtC,CACEjxB,KAAM,aACNoc,SAAU,CACR,CACEpc,KAAM,GACNqc,WAAY,cACZC,UAAW,QAEb,CACEtc,KAAM,eACNqc,WAAY,cACZC,UAAW,QAEb,CACEtc,KAAM,oBACNqc,WAAY,cACZC,UAAW,QAEb,CACEtc,KAAM,cACNuc,UAAWG,GACXX,YAAa,CAAEC,EAAc,EAC7BziB,KAAM,CACJ0iB,UAAWC,EAAUgV,cACrB1U,KAAM,CACJC,4CAAOttB,IAKb,CACE6Q,KAAM,kBACNqc,WAAY,oBACZC,UAAW,QAEb,CACEtc,KAAM,uBACNqc,WAAY,oBACZC,UAAW,QAEb,CACEtc,KAAM,4BACNqc,WAAY,oBACZC,UAAW,QAEb,CACEtc,KAAM,kBACNqc,WAAY,oBACZC,UAAW,QAEb,CACEtc,KAAM,oBACNuc,UAAWiH,GACXzH,YAAa,CAAEC,EAAc,EAC7BziB,KAAM,CACJ0iB,UAAWC,EAAUiV,uBACrB3U,KAAM,CACJC,iIAAOttB,IAKb,CACE6Q,KAAM,qBACNuc,UAAWmT,GACX3T,YAAa,CAAEC,EAAc,EAC7BziB,KAAM,CACJ0iB,UAAWC,EAAUkV,qBACrB5U,KAAM,CACJC,yJAAOttB,IAMb,CACE6Q,KAAM,iBACNqc,WAAY,sBACZC,UAAW,QAEb,CACEtc,KAAM,sBACNqc,WAAY,gCACZC,UAAW,QAGb,CACEtc,KAAM,qBACNuc,UAAWyB,GACXjC,YAAa,CAAEC,EAAc,EAC7BziB,KAAM,CACJ0iB,UAAWC,EAAUmV,0BACrB7U,KAAM,CACJC,0JAAOttB,IAIb,CACE6Q,KAAM,oBACNuc,UAAW0E,GACXlF,YAAa,CAAEC,EAAc,EAC7BziB,KAAM,CACJ0iB,UAAWC,EAAUoV,yBACrB9U,KAAM,CACJC,uBAAOttB,IAKb,CACE6Q,KAAM,qBACNuc,UAAWuU,GACX/U,YAAa,CAAEC,EAAc,EAC7BziB,KAAM,CACJ0iB,UAAWC,EAAUqV,8BACrB/U,KAAM,CACJC,qEAAOttB,GAGZ,EAEJ,ECjHG,GAAOqiC,IAAP,KAAOA,GAAgB,CACnBj5B,SAAWxB,EAAOyB,EAAU,EAC5BC,cAAgB1B,EAAO2B,EAAa,EACpC+uB,YAAc1wB,EAAO2wB,EAAW,EAChC+J,cAAgB16B,EAAO26B,EAAa,EAI5CC,mBAAoBjjC,EAAqB,CACvC,MAAIA,KAASkjC,GAAWC,wEAK1B,EAEAC,WACEC,EACAC,EACA/S,EAAY,CAEZ,GAAMF,GAAa,KAAK0I,YAAYwK,0BAA0BD,CAAmB,EAE7ElK,EAAS,GAAIC,MACjBD,SAAS,KAAKL,YAAYO,iBAAiBF,EAAQ/I,EAAYE,CAAI,EACnE6I,EAASA,EAAOG,OAAO,aAAc8J,EAAWG,SAAQ,CAAE,EAEnD,KAAK35B,SAASS,IAAgCw4B,GAAiBW,gBAAiB,CAAErK,QAAM,CAAE,EAC9F5uB,KAAKC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAChE,EAEAg5B,uBACEL,EACAC,EACA/S,EACAhjB,EAAe,CAEf,GAAM8iB,GAAa,KAAK0I,YAAYwK,0BAA0BD,CAAmB,EAE7ElK,EAAS,GAAIC,MACjBD,SAAS,KAAKL,YAAYO,iBAAiBF,EAAQ/I,EAAYE,CAAI,EACnE6I,EAASA,EAAOG,OAAO,aAAc8J,EAAWG,SAAQ,CAAE,EAEtDj2B,IAAQ6rB,EAASA,EAAOG,OAAO,SAAUhsB,CAAM,GAE5C,KAAK1D,SAASS,IAAqCw4B,GAAiBW,gBAAkB,aAAc,CAAErK,QAAM,CAAE,EAClH5uB,KAAKC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAChE,EAEAi5B,UAAWC,EAAe,CACxB,GAAMtyB,GAAOwxB,GAAiBW,gBAAkB,IAAMG,EAEtD,MAAO,MAAK/5B,SAASS,IAAoBgH,CAAI,EAC1C9G,KAAKC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAChE,EAEAm5B,4BAA6BC,EAAoBT,EAA2B,CAC1E,GAAMO,GAAU,KAAKb,cAAcgB,cAAcD,EAAYT,CAAU,EACjE/xB,EAAOwxB,GAAiBW,gBAAkB,IAAMG,EAAU,uBAEhE,MAAO,MAAK/5B,SAASS,IAA8BgH,CAAI,EACpD9G,KACCC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAE5D,EAEAs5B,qBAAsBF,EAAoBT,EAA6BY,EAAa,CAClF,GAAML,GAAU,KAAKb,cAAcgB,cAAcD,EAAYT,CAAU,EACjE/xB,EAAOwxB,GAAiBW,gBAAkB,IAAMG,EAAU,YAEhE,MAAO,MAAK/5B,SAASiB,IAAIwG,EAAM,CAAE2yB,UAAQ,CAAE,EACxCz5B,KAAKC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAChE,EAEAw5B,UAAWJ,EAAoBT,EAA2B,CACxD,GAAMzJ,GAAqB,CACzBgK,QAAS,KAAKb,cAAcgB,cAAcD,EAAYT,CAAU,GAGlE,MAAO,MAAKx5B,SAASgwB,KAAKiJ,GAAiBW,gBAAkB,aAAc7J,CAAI,EAC5EpvB,KAAKC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAChE,EAEA0e,OAAQ0a,EAAoBT,EAA2B,CACrD,GAAMzJ,GAAqB,CACzBgK,QAAS,KAAKb,cAAcgB,cAAcD,EAAYT,CAAU,GAGlE,MAAO,MAAKx5B,SAASgwB,KAAKiJ,GAAiBW,gBAAkB,UAAW7J,CAAI,EACzEpvB,KAAKC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAChE,EAEAy5B,QAASP,EAAe,CACtB,GAAMhK,GAA8B,CAClCgK,WAGF,MAAO,MAAK/5B,SAASgwB,KAAKiJ,GAAiBW,gBAAkB,WAAY7J,CAAI,EAC1EpvB,KAAKC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAChE,EAEA05B,qBAAsBpkC,EAAuBmZ,EAAY,CAKvD,MAAO,0CAJYnZ,IAASkjC,GAAWC,OACnC,SACA,OAEuD,IAAIhqB,CAAI,EACrE,IArGQpO,EANG+3B,GAMIW,kBAAkBz4B,GAAYC,OAAS,mBAAA/K,CAAA,CAN3C4iC,8CAAgB,IAAA5iC,CAAA,CAAhB4iC,6BAAgB53B,QAAhB43B,GAAgB33B,IAAA,IAAvB,GAAO23B,IAAPuB,+DCPOC,IAAmB,KAA1B,GAAOA,GAAP,KAAOA,EAAmB,CACtBC,iBAAmBl8B,EAAOy6B,EAAgB,EAEzClzB,OAAS/P,EAA4CC,MAAS,EAC9D0kC,QAAU3kC,EAAcC,MAAS,EACjCujC,WAAaxjC,EAAuBC,MAAS,EAEtDskC,qBAAsBjrB,EAAY,CAChC,MAAO,MAAKorB,iBAAiBH,qBAAqB,KAAKf,WAAU,EAAIlqB,CAAI,CAC3E,IAAAjZ,CAAA,CATWokC,4CAAmB,IAAApkC,CAAA,CAAnBokC,wBAAmBnkC,UAAA,qBAAAC,OAAA,CAAAwP,OAAA,aAAA40B,QAAA,cAAAnB,WAAA,kBAAAoB,mBAAAhwB,GAAApU,MAAA,GAAAC,KAAA,EAAAC,WAAA,IAAAC,kKCJoFC,gIAIkBA,oZAXtIxC,EAAA,WAAyB,WACA,WACE,YACKC,EAAA,GAAmBC,EAAA,EAE7CF,EAAA,YAA6BC,EAAA,GAAeC,EAAA,EAE5CF,EAAA,SACE4D,EAAA,sBACF1D,EAAA,EAEAF,EAAA,SACE4D,EAAA,uBACF1D,EAAA,EAEAumC,GAAA,IAEAzmC,EAAA,YACEymC,GAAA,MACFvmC,EAAA,EAAM,EAGRF,EAAA,aAAwB,aACcC,EAAA,IAA0BC,EAAA,EAAM,EAChE,EACF,GAAA0C,CAAA,KAtBwBtC,EAAA,GAAAC,EAAAiE,EAAAmN,OAAA,EAAAuJ,IAAA,EAEG5a,EAAA,GAAAC,EAAAiE,EAAA+hC,QAAA,GAEoCjmC,EAAA,EAAAiE,EAAA,OAAAC,EAAAmN,OAAA,EAAAwB,SAAAwd,EAAA,EAIArwB,EAAA,GAAAiE,EAAA,OAAAC,EAAA2hC,qBAAA3hC,EAAAmN,OAAA,EAAAuJ,IAAA,EAAAyV,EAAA,EAY7BrwB,EAAA,GAAAC,EAAAiE,EAAAmN,OAAA,EAAA4B,WAAA,KAAA1O,YAAA,EDd7BiwB,EAAmB,EAAAnvB,OAAA;+DAAA,KAE1B,GAAO0gC,GAAPK,QAAOL,EAAmB,eAAAM,GAAAxmC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KEXhCH,EAAA,WACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GADEC,EAAA,EAAAswB,EAAA,IAAApwB,EAAAomC,mBAAA;CAAA,aAAAC,GAAA1mC,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAOMyD,EAAA,iBAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAC2BkE,EAAA,eAAA/D,EAAAsmC,kBAAAC,CAAA,GAA0C,iCAAAC,GAAA7mC,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAIrEjG,EAAA,kBAC0D2G,EAAA,mBAAAP,EAAAytB,CAAA,KAAAkT,GAAAzgC,EAAA,EAAAmb,UAAAjhB,EAAA8F,EAAA,QAAAI,GAASlG,EAAA2qB,OAAA4b,CAAA,CAAc,KAGhF7mC,EAAA,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAHkFkE,EAAA,UAAA/D,EAAAymC,WAAAF,CAAA,GAA8B,QAAAvmC,EAAA0mC,eAAAH,CAAA,GAE/E,sBAAA//B,EAAA,YAAArE,CAAA,CAAAskC,UAAA,CAAA7mC,CAAA,GAAAuC,CAAA,CAAAwkC,cAAA,CAAA/mC,CAAA,cAAAgnC,GAAAjnC,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAXxCvC,EAAA,GACE1D,EAAA,sBAAuF,WAEnF6D,EAAA,EAAAwjC,GAAA,mBAGC,EAAAC,GAAA,mBAQDtnC,EAAA,wBACE2G,EAAA,sBAAAogC,GAAA3gC,EAAAmtB,CAAA,EAAA9R,UAAAjhB,EAAA8F,EAAA,QAAAI,GAASlG,EAAAylC,UAAAc,CAAA,CAAiB,KAG3B7mC,EAAA,EAAmB,EAChB,EAAAgE,CAAA,OAAA/D,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAlBQC,EAAA,EAAAiE,EAAA,SAAAwiC,CAAA,EAAiB,UAAAA,EAAAR,OAAA,EAA2B,aAAA/lC,EAAA4kC,UAAA,EAGrD9kC,EAAA,GAAAiE,EAAA,QAAA/D,EAAA+mC,QAAAR,CAAA,GAKsBzmC,EAAA,EAAAiE,EAAA,OAAA/D,EAAAgnC,kBAAAT,CAAA,GAOMzmC,EAAA,EAAAiE,EAAA,sBAAwB,WAAA/D,EAAAymC,WAAAF,CAAA,GAAAvmC,EAAA2mC,eAAAJ,CAAA,KCM/D,GAAaU,KAA4B,KAAnC,GAAOA,GAAP,KAAOA,EAA4B,CAC/B3C,cAAgB16B,EAAO26B,EAAa,EACpCuB,iBAAmBl8B,EAAOy6B,EAAgB,EAC1C1oB,SAAW/R,EAAOgS,CAAQ,EAC1B2a,eAAiB3sB,EAAO4sB,EAAc,EACtC7O,OAAS/d,EAAOge,EAAM,EACtBC,MAAQje,EAAOke,EAAc,EAErC8c,WAEAhT,WAAkC,CAChCsV,YAAa,EACbC,aAAc,GACdC,WAAY,MAEdtV,KAAO,OAEPuV,QAA4B,GAC5BC,SAAwC,GACxCC,aAA4C,GAE5CC,cAAgB,GAAIC,MAEpBz9B,UAAQ,CACN,GAAI,CAAC,KAAK6d,MAAMyD,SAASoc,YAAY9C,UAAA,CAAe,CAClD,GAAM8C,GAAc,CAAE9C,WAAYH,GAAWC,MAAM,EAEnD,KAAK/c,OAAOoF,SAAS,GAAI,CAAE2a,cAAaC,WAAY,EAAI,CAAE,CAC5D,EAEA,KAAK9f,MAAM6f,YAAYx0B,UAAU00B,GAAQ,CAClCA,EAAMhD,UAAA,GAEX,KAAKA,WAAa75B,SAAS68B,EAAMhD,UAAA,CAAe,EAAE,EAElD,KAAKiD,cAAa,EACpB,EAAC,CACH,EAEAA,eAAa,CACX,KAAKR,QAAU,GACfS,GAAiB,KAAKlW,UAAU,EAEhC,KAAKmW,gBAAe,CACtB,EAEAA,iBAAe,CACb,KAAKjC,iBAAiBnB,WAAW,KAAKC,WAAY,KAAKhT,WAAY,KAAKE,IAAI,EACzE5e,UAAU,CACTuJ,KAAMxQ,GAAM,CACV,KAAKo7B,QAAU,KAAKA,QAAQr/B,OAAOiE,EAAIG,IAAI,EAC3C,KAAKwlB,WAAWwV,WAAan7B,EAAImtB,MAEjC,KAAKoO,cAAc/qB,KAAKxQ,EAAIG,IAAI,CAClC,GAEAwQ,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEAw6B,gBAAc,CACPC,GAAa,KAAKrW,UAAU,IAEjC,KAAKA,WAAWsV,aAAe,EAE/B,KAAKa,gBAAe,EACtB,EAEA3B,oBAAkB,CAChB,MAAI,MAAKxB,aAAeH,GAAWC,0UAKrC,EAEAsC,kBAAmB71B,EAAsB,CACvC,MAAOA,GAAO+2B,eAAiBC,GAAch3B,EAAO+2B,cAAe/2B,EAAO40B,OAAO,EAAI,CACvF,EAEAW,eAAgBv1B,EAAsB,CACpC,8FAA6BA,EAAO+2B,aAAa,cACnD,CAEAzB,WAAYt1B,EAAsB,CAChC,MAAO,CAAC,CAAC,KAAKm2B,SAAS,KAAKc,aAAaj3B,CAAM,CAAC,CAClD,EAEAw1B,eAAgBx1B,EAAsB,CACpC,MAAO,CAAC,CAAC,KAAKo2B,aAAa,KAAKa,aAAaj3B,CAAM,CAAC,CACtD,EAEA41B,QAAS51B,EAAsB,CAC7B,MAAOA,GAAO5P,OAASkjC,GAAW4D,KACpC,EAEM5C,UAAWt0B,EAAsB,OAAA2mB,IAAA,sBACrC,GAAMwQ,GAAY,KAAKF,aAAaj3B,CAAM,EACtC,KAAKo2B,aAAae,CAAS,IAEnB,KAAM,MAAK/R,eAAewB,uLACQ5mB,EAAOuJ,IAAI,iDACnC,KAEV,KAEZ,KAAK6sB,aAAae,CAAS,EAAI,GAE/B,KAAKxC,iBAAiBL,UAAUt0B,EAAOuJ,KAAMvJ,EAAO5P,IAAI,EACrD2R,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,WAAoBvL,EAAOuJ,IAAI,yDAAe,EAE5D,KAAK2sB,QAAU,KAAKA,QAAQt2B,OAAOuR,GAAKA,EAAE5H,OAASvJ,EAAOuJ,IAAI,EAC9D6tB,GAAyB,KAAK3W,UAAU,EAExC,KAAK2V,aAAae,CAAS,EAAI,EACjC,GAEA1rB,MAAOC,GAAM,CACX,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC/B,KAAK+5B,aAAae,CAAS,EAAI,EACjC,GACD,EACL,KAEM3d,OAAQxZ,EAAsB,OAAA2mB,IAAA,sBAClC,GAAMwQ,GAAY,KAAKF,aAAaj3B,CAAM,EACtC,KAAKm2B,SAASgB,CAAS,GAEvB,KAAKE,eAAer3B,CAAM,IAChB,KAAM,MAAKolB,eAAewB,iyBAGpC,CAAE0Q,6IAA6C,CAAE,KAGvC,KAGd,KAAKnB,SAASgB,CAAS,EAAI,GAE3B,KAAKxC,iBAAiBnb,OAAOxZ,EAAOuJ,KAAMvJ,EAAO5P,IAAI,EAClDwK,KAAI,EACJmH,UAAU,CACTuJ,KAAMxQ,GAAM,CACV,KAAKq7B,SAASgB,CAAS,EAAI,GAE3B,KAAK3sB,SAASe,WAAoBvL,EAAOuJ,IAAI,qEAAW,EAExD4e,OAAOC,OAAOpoB,EAAQlF,CAAG,CAC3B,GAEA2Q,MAAOC,GAAM,CACX,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC/B,KAAK85B,SAASgB,CAAS,EAAI,EAC7B,GACD,EACL,KAEAhC,kBAAmBn1B,EAAsB,CACvC,MAAO,CAAE,SAAU,WAAY,UAAW,OAAQ,KAAKmzB,cAAcgB,cAAcn0B,EAAOuJ,KAAMvJ,EAAO5P,IAAI,CAAC,CAC9G,EAEAokC,qBAAsBjrB,EAAY,CAChC,MAAO,MAAKorB,iBAAiBH,qBAAqB,KAAKf,WAAYlqB,CAAI,CACzE,EAEQ0tB,aAAcj3B,EAAsB,CAC1C,MAAOA,GAAOuJ,KAAOvJ,EAAO5P,IAC9B,EAEQinC,eAAgBr3B,EAAsB,CAC5C,GAAI,CAACA,EAAO+2B,cAAe,MAAO,GAElC,GAAMQ,GAAc39B,SAASoG,EAAO+2B,cAAcS,MAAM,GAAG,EAAE,CAAC,CAAC,EACzDC,EAAe79B,SAASoG,EAAO40B,QAAQ4C,MAAM,GAAG,EAAE,CAAC,CAAC,EAE1D,MAAOD,GAAcE,CACvB,IAAAnnC,CAAA,CAnLWwlC,4CAA4B,IAAAxlC,CAAA,CAA5BwlC,wBAA4BvlC,UAAA,+BAAAE,MAAA,EAAAC,KAAA,EAAAC,WAAA,IAAAC,6DDlB4CC,4DAYpEA,4mBArBjBqB,EAAA,EAAAwlC,GAAA,aAIArpC,EAAA,WAAwC2G,EAAA,gCAAgBnC,GAAAgkC,eAAA,CAAgB,IACtE3kC,EAAA,EAAAylC,GAAA,sBAsBFppC,EAAA,GAAA0C,CAAA,KA3ByB2B,EAAA,OAAAC,EAAA4tB,WAAAwV,aAAA,GAIiDtnC,EAAA,EAAAiE,EAAA,iBAAAC,EAAAwjC,cAAAuB,aAAA,GACvCjpC,EAAA,EAAAiE,EAAA,UAAAC,EAAAqjC,OAAA,KAAAhjC,YAAA,ECc/BY,EACA+jC,GACAxlB,GACAqiB,GACAoD,GACAC,EAAqB,EAAA/jC,OAAA;yEAAA,KAGnB,GAAO8hC,GAAPkC,QAAOlC,EAA4B,eAAAmC,GAAAzpC,CAAA,CAAAW,CAAA,EAAAX,CAAA,KC3BzCH,EAAA,iBAAA2D,EAAA,KAEAzD,EAAA,aAAA2pC,GAAA1pC,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAQQuD,EAAA,GAAAC,EAAA,KAAAO,CAAA,cAAA4lC,GAAA3pC,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAEAuD,EAAA,GAAAC,EAAA,KAAAO,CAAA,cAAA6lC,GAAA5pC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KANJH,EAAA,SACE4D,EAAA,uBAEAC,EAAA,EAAAmmC,GAAA,oBAAuB,EAAAC,GAAA,oBAKzB/pC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GALEC,EAAA,GAAAgJ,GAAA9I,EAAA0pC,cAAA,kBAAAC,GAAAhqC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KASFH,EAAA,SACE4D,EAAA,uBAEAF,EAAA,GAAAC,EAAA,KAAAO,CAAA,GAGFhE,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAFIC,EAAA,GAAAqE,EAAAnE,EAAA4xB,WAAAwV,UAAA,EAA4BpnC,EAAA4xB,WAAAwV,UAAA,EAAsBpnC,EAAA8O,MAAA,EAAA1K,CAAA,eAAAwlC,GAAAjqC,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAU1DH,EAAA,YAAA2D,EAAA,KAEAzD,EAAA,aAAAmqC,GAAAlqC,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAMQH,EAAA,aAAA2D,EAAA,KAA4EzD,EAAA,aAAAoqC,GAAAnqC,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAE5EH,EAAA,aAAA2D,EAAA,KAGSzD,EAAA,aAAAqqC,GAAApqC,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAETH,EAAA,aAAA2D,EAAA,KAGYzD,EAAA,aAAAsqC,GAAArqC,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAIZyD,EAAA,uBAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GACwDkE,EAAA,eAAA/D,EAAAsmC,kBAAA2D,CAAA,GAA0C,iCAAAC,GAAAvqC,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAIlGjG,EAAA,kBACqC2G,EAAA,mBAAAP,EAAAoqB,CAAA,KAAAia,GAAAnkC,EAAA,EAAAmb,UAAAjhB,EAAA8F,EAAA,QAAAI,GAASlG,EAAA0lC,QAAAuE,CAAA,CAAe,KAG5DvqC,EAAA,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAFCkE,EAAA,UAAA/D,EAAAmqC,aAAAF,CAAA,GAAgC,sBAAAzjC,EAAA,YAAArE,CAAA,CAAAgoC,YAAA,CAAAvqC,CAAA,cAAAwqC,GAAAzqC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAxBxCuD,EAAA,GACE1D,EAAA,uBAA6F,YAEzF6D,EAAA,EAAAgnC,GAAA,eAAmE,EAAAC,GAAA,eAKlE,EAAAC,GAAA,eAMH7qC,EAAA,EAEAF,EAAA,YACE6D,EAAA,EAAAmnC,GAAA,yBAGC,EAAAC,GAAA,oBAOH/qC,EAAA,EAAM,EAAAgE,CAAA,IAAA/D,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GA1BQC,EAAA,EAAAiE,EAAA,SAAAkmC,CAAA,EAAiB,UAAAA,EAAA/B,aAAA,EAAiC,aAAAloC,EAAA4kC,UAAA,EAElD9kC,EAAA,GAAAiE,EAAA,OAAAkmC,EAAAS,SAAA,EAGT5qC,EAAA,EAAAiE,EAAA,OAAAkmC,EAAAU,QAAA,EAKA7qC,EAAA,EAAAiE,EAAA,OAAAkmC,EAAAW,WAAA,EAOA9qC,EAAA,GAAAiE,EAAA,OAAAkmC,EAAAS,YAAA,KAAA1qC,EAAA0pC,cAAA,GAKA5pC,EAAA,EAAAiE,EAAA,OAAAkmC,EAAAS,YAAA,MC3BX,GAAaG,KAAqB,KAA5B,GAAOA,GAAP,KAAOA,EAAqB,CACxBvG,cAAgB16B,EAAO26B,EAAa,EACpCuB,iBAAmBl8B,EAAOy6B,EAAgB,EAC1C1oB,SAAW/R,EAAOgS,CAAQ,EAC1B2a,eAAiB3sB,EAAO4sB,EAAc,EACtC7O,OAAS/d,EAAOge,EAAM,EACtBC,MAAQje,EAAOke,EAAc,EAErC8c,WAEAhT,WAAkC,CAChCsV,YAAa,EACbC,aAAc,GACdC,WAAY,MAEdtV,KAAO,YAEPhjB,OAAS,GACTg8B,YAAc,GAEdzD,QAAiC,GACjC0D,WAA0C,GAC1CC,gBAAkB,GAElBxD,cAAgB,GAAIC,MAEZwD,cAAgB,GAAIxD,MAE5Bz9B,UAAQ,CACN,GAAI,CAAC,KAAK6d,MAAMyD,SAASoc,YAAY9C,UAAA,CAAe,CAClD,GAAM8C,GAAc,CAAE9C,WAAYH,GAAWC,MAAM,EAEnD,KAAK/c,OAAOoF,SAAS,GAAI,CAAE2a,aAAW,CAAE,CAC1C,EAEA,KAAK7f,MAAM6f,YAAYx0B,UAAU00B,GAAQ,CAClCA,EAAMhD,UAAA,GAEX,KAAKA,WAAa75B,SAAS68B,EAAMhD,UAAA,CAAe,EAAE,EAClD,KAAK91B,OAAS84B,EAAM94B,MAAA,EAAa,GAEjC,KAAK+4B,cAAa,EACpB,EAAC,EAED,KAAKoD,cAAclC,aAAY,EAC5Bh9B,KACCm/B,GAAa,GAAG,EAChBC,GAAoB,CAAE,EAEvBj4B,UAAUpE,GAAU,KAAK6Y,OAAOoF,SAAS,GAAI,CAAE2a,YAAa,CAAE54B,QAAM,EAAIs8B,oBAAqB,OAAO,CAAE,CAAC,CAC5G,EAEAC,eAAgBC,EAAY,CAC1B,GAAMC,GAASD,EAAMC,OAErB,KAAKN,cAAcxuB,KAAK8uB,EAAO/pC,KAAK,CACtC,EAEAqmC,eAAa,CACXC,GAAiB,KAAKlW,UAAU,EAChC,KAAKyV,QAAU,GAEf,KAAKU,gBAAe,CACtB,EAEAA,iBAAe,CACb,KAAK+C,YAAc,GAEnB,KAAKhF,iBAAiBb,uBAAuB,KAAKL,WAAY,KAAKhT,WAAY,KAAKE,KAAM,KAAKhjB,MAAM,EAClGoE,UAAU,CACTuJ,KAAMxQ,GAAM,CACV,KAAK6+B,YAAc,GAEnB,KAAKzD,QAAU,KAAKA,QAAQr/B,OAAOiE,EAAIG,IAAI,EAC3C,KAAKwlB,WAAWwV,WAAan7B,EAAImtB,MAEjC,KAAKoO,cAAc/qB,KAAKxQ,EAAIG,IAAI,CAClC,GAEAwQ,MAAOC,GAAM,CACX2uB,GAAO5uB,MAAMC,CAAG,EAEhB,GAAMrP,kVAAUxL,CAChB,KAAK2Z,SAASiB,MAAMpP,CAAO,CAC7B,GACD,CACL,EAEAw6B,gBAAc,CACPC,GAAa,KAAKrW,UAAU,IAEjC,KAAKA,WAAWsV,aAAe,EAE/B,KAAKa,gBAAe,EACtB,EAEAoC,aAAch5B,EAA2B,CACvC,MAAO,CAAC,CAAC,KAAK45B,WAAW55B,EAAOg0B,OAAO,CACzC,EAEAmB,kBAAmBn1B,EAA2B,CAC5C,MAAO,CAAE,SAAU,WAAY,UAAW,OAAQ,KAAKmzB,cAAcgB,cAAcn0B,EAAOuJ,KAAM,KAAKkqB,UAAU,CAAC,CAClH,EAEA8E,eAAa,CACX,MAAO,MAAK9E,aAAeH,GAAW4D,KACxC,EAEM3C,QAASv0B,EAA2B,OAAA2mB,IAAA,sBACpC,KAAKiT,WAAW55B,EAAOg0B,OAAO,IAEtB,KAAM,MAAK5O,eAAewB,6KAEhB5mB,EAAOuJ,IAAI,IAAG,KAExB,KAEZ,KAAKqwB,WAAW55B,EAAOg0B,OAAO,EAAI,GAElC,KAAKW,iBAAiBJ,QAAQv0B,EAAOg0B,OAAO,EACzCjyB,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKsuB,WAAW55B,EAAOg0B,OAAO,EAAI,GAClC,KAAK6F,gBAAkB,GAEvB,KAAKrvB,SAASe,WAAoBvL,EAAOuJ,IAAI,iFAAa,EAE1DvJ,EAAOu5B,UAAY,EACrB,GAEA9tB,MAAOC,GAAM,CACX,KAAKkuB,WAAW55B,EAAOg0B,OAAO,EAAI,GAElC,KAAKxpB,SAASiB,MAAMC,EAAIrP,OAAO,CACjC,GACD,EACL,OAAA/L,CAAA,CAxIWopC,4CAAqB,IAAAppC,CAAA,CAArBopC,wBAAqBnpC,UAAA,uBAAAE,MAAA,EAAAC,KAAA,EAAAC,WAAA,IAAAC,wCDLoDC,yeAlB3DA,kHAEAA,2OAUSA,iDAA5B,eAA2B,IAACypC,CAA4D,0BAAM,eAAY,WAAAhpC,CAAA,CAAAA,CAAA,miBAsBjFT,sdAKAA,iEAOhBA,6EAhB0DA,6EAKlEA,8EAKAA,8jCAlDTqB,EAAA,EAAAqoC,GAAA,kBAIAlsC,EAAA,WACE6D,EAAA,EAAAsoC,GAAA,WAAe,EAAAC,GAAA,WAsBfpsC,EAAA,YAAwB,cACH2G,EAAA,iBAAAR,EAAA,OAAS3B,GAAAqnC,eAAA1lC,CAAA,CAAsB,IAAlDjG,EAAA,EAA2G,EACvG,EAGR2D,EAAA,EAAAwoC,GAAA,cAIArsC,EAAA,YAAwC2G,EAAA,gCAAgBnC,GAAAgkC,eAAA,CAAgB,IACtE3kC,EAAA,EAAAyoC,GAAA,uBA+BFpsC,EAAA,GAAA0C,CAAA,KApE4C2B,EAAA,OAAAC,EAAAgnC,eAAA,EAK1ClrC,EAAA,GAAAgJ,GAAA9E,EAAA8K,OAAA,MAYAhP,EAAA,EAAAgJ,GAAA9E,EAAA8K,QAAA,CAAA9K,EAAA8mC,YAAA,MAe4BhrC,EAAA,GAAAiE,EAAA,OAAAC,EAAA4tB,WAAAwV,aAAA,GAI4CtnC,EAAA,EAAAiE,EAAA,iBAAAC,EAAAwjC,cAAAuB,aAAA,GACvCjpC,EAAA,EAAAiE,EAAA,UAAAC,EAAAqjC,OAAA,KAAAhjC,YAAA,ECf/BY,EACAqvB,GACAyX,GACA/C,GACAxlB,GACAqiB,GACAmG,GACA/C,GACA1yB,EAAc,EAAApR,OAAA;iEAAA,KAGZ,GAAO0lC,GAAPoB,QAAOpB,EAAqB,eAAAqB,GAAAvsC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KCzB9BH,EAAA,WACE4D,EAAA,6BACF1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,IAFgDkE,EAAA,KAAAuB,EAAA6mC,aAAAC,CAAA,GACvBtsC,EAAA,EAAAiE,EAAA,SAAAuB,EAAA+mC,gBAAAD,CAAA,GAAmC,OAAA9mC,EAAAnE,IAAA,EAAc,UAAAirC,CAAA,EAAoB,aAAA9mC,EAAArF,UAAA,aAAAqsC,GAAA3sC,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAFhGjG,EAAA,YAAsC2G,EAAA,sBAAAP,EAAAC,CAAA,KAAAP,GAAAQ,EAAA,SAAAI,GAAYZ,EAAAsmB,cAAA,CAAe,KAC/DvoB,EAAA,EAAAkpC,GAAA,aAIAnpC,EAAA,aACF1D,EAAA,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IANmEkE,EAAA,YAAAuB,EAAAnE,IAAA,EACxCrB,EAAA,EAAAiE,EAAA,UAAAuB,EAAAknC,kBAAA,EAI4E1sC,EAAA,EAAAiE,EAAA,YAAAuB,EAAAnE,KAAA2qB,KAAA,aAAA2gB,GAAA9sC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAGvGH,EAAA,YAAA2D,EAAA,KAEAzD,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IADEC,EAAA,EAAAqE,EAAAmB,EAAAonC,eAAA,EAAAtoC,CAAA,eAAAuoC,GAAAhtC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAhBJuD,EAAA,GAEE1D,EAAA,UACE0D,EAAA,GAAczD,EAAA,GAAAiE,CAAA,GACdjE,EAAA,GACFC,EAAA,EAEA2D,EAAA,EAAAupC,GAAA,cAAsF,EAAAC,GAAA,aAAAnpC,CAAA,IAAA/D,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAJtEC,EAAA,GAAAC,EAAAuF,EAAAonC,eAAA,EACd5sC,EAAA,EAAAswB,EAAA,IAAA9qB,EAAA6L,OAAAuJ,KAAA,KAGK5a,EAAA,EAAAiE,EAAA,OAAAuB,EAAAwnC,sBAAA,GAQDhtC,EAAA,EAAAiE,EAAA,QAAAuB,EAAAwnC,sBAAA,KCIR,GAAaC,KAA6B,KAApC,GAAOA,GAAP,KAAOA,UAAqCvlB,GAAY,CAClDC,oBAAsB7d,EAAO8d,EAAmB,EAClD4c,cAAgB16B,EAAO26B,EAAa,EACpCyI,iBAAmBpjC,EAAOy6B,EAAgB,EAC1C1oB,SAAW/R,EAAOgS,CAAQ,EAC1BqxB,MAAQrjC,EAAOsjC,EAAY,EAC3BrlB,MAAQje,EAAOke,EAAc,EAErC3W,OACAq7B,mBAAqD,GACrDE,gBAEQS,IACAhI,QAERn7B,UAAQ,CACN,KAAKmjC,IAAM,KAAKtlB,MAAM8S,OAAOznB,UAC3Bk6B,GAAc,CACZ,KAAKjI,QAAUiI,EAAYjI,OAAA,CAE3B,KAAKkI,WAAW,KAAKlI,OAAO,CAC9B,EAAC,CAEL,EAEAmI,aAAW,CACL,KAAKH,KAAK,KAAKA,IAAII,YAAW,CACpC,EAEA3hB,eAAa,CACX,GAAM4Z,GAAW,KAAKrkC,KAAKK,MAE3B,KAAKwrC,iBAAiBzH,qBAAqB,KAAKp0B,OAAOuJ,KAAM,KAAKvJ,OAAO5P,KAAMikC,CAAQ,EACpFtyB,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,wHAAoC,CACpD,GAEAE,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEAs/B,uBAAqB,CACnB,MAAOr7B,OAAMC,QAAQ,KAAK86B,kBAAkB,GAAK,KAAKA,mBAAmBpiC,SAAW,CACtF,EAEAiiC,gBAAiBmB,EAAqC,CACpD,GAAMC,GAAS,KAAKnJ,cAAcoJ,4BAA4B,KAAKvI,OAAO,EAE1E,MAAKsI,IAAQpB,gBAENoB,EAAOpB,gBAAgB,CAAEmB,UAASG,WAAY,KAAKxsC,KAAKK,KAAK,CAAE,EAFjC,EAGvC,EAEA2qC,aAAcqB,EAAqC,CACjD,GAAKA,EAAQ9yB,KAEb,MAAO8yB,GAAQ9yB,KAAO,UACxB,EAEQ2yB,WAAYlI,EAAe,CACjC,KAAK6H,iBAAiB9H,UAAUC,CAAO,EACpCp5B,KAAK0rB,GAAUtmB,GACP,KAAK67B,iBAAiB5H,4BAA4Bj0B,EAAOuJ,KAAMvJ,EAAO5P,IAAI,EAC9EwK,KAAK+G,GAAI1G,IAAS,CAAE+E,SAAQq7B,mBAAoBpgC,EAAKogC,kBAAkB,EAAG,CAAC,CAC/E,CAAC,EACDt5B,UAAU,CACTuJ,KAAamxB,GAAkC9V,GAAA,MAAlC8V,GAAkC,UAAlC,CAAEz8B,SAAQq7B,oBAAkB,EAAM,CAC7C,KAAKr7B,OAASA,EAEd,KAAKq7B,mBAAqB,KAAM,MAAKqB,kBAAkBrB,CAAkB,EAEzE,KAAKE,gBAAkB,KAAKM,iBAAiBxI,mBAAmB,KAAKrzB,OAAO5P,IAAI,EAEhF,KAAKusC,kBAAiB,CACxB,IAEAlxB,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEQsgC,mBAAiB,CACvB,GAAMC,GAAkC,GAClCC,EAAsB,GAE5B,OAAWR,KAAW,MAAKhB,mBACzBuB,EAAaP,EAAQ9yB,IAAI,EAAI,KAC7BszB,EAAeR,EAAQ9yB,IAAI,EAAI,KAAKuzB,WAAWT,EAAQ9yB,IAAI,EAG7D,KAAK2Q,UAAU0iB,CAAY,EAE3B,KAAK5sC,KAAKwS,WAAWq6B,CAAc,EAEnC,KAAKf,MAAMiB,UAAU,oCAAqC,eAAgB,CAAE/I,QAAS,KAAKA,OAAO,CAAE,CACrG,EAEQ8I,WAAYvzB,EAAY,CAC9B,GAAM8qB,GAAW,KAAKr0B,OAAOq0B,SAE7B,MAAIA,KAAW9qB,CAAI,IAAMrZ,OAAkBmkC,EAAS9qB,CAAI,EAErC,KAAK8xB,mBAAmB5kC,KAAKvF,GAAKA,EAAEqY,OAASA,CAAI,EAElDzN,OACpB,EAEc4gC,kBAAmBrI,EAAwC,OAAA1N,IAAA,sBACvE,OAAW0V,KAAWhI,GACpB,KAAM,MAAKlB,cAAc6J,iBAAiB,KAAKhJ,QAASqI,CAAO,EAGjE,MAAOhI,EACT,OAAA/jC,CAAA,CAjHWsrC,8DAA4B,IAAA1f,GAA5B0f,CAA4B,UAAAtrC,CAAA,CAA5BsrC,wBAA4BrrC,UAAA,+BAAA0G,SAAA,CAAAklB,EAAA,EAAA1rB,MAAA,EAAAC,KAAA,EAAAC,WAAA,IAAAC,wCDHhC,eAAqB,oGAAAI,CAAA,yUAAAc,QAAA,SAAAA,CAAAb,CAAA,CAAAC,CAAA,EAAAD,CAAA,IAhB9BiB,EAAA,EAAA+qC,GAAA,sBAAAhsC,CAAA,IAAe2B,EAAA,OAAAC,EAAAmN,MAAA,IAAA9M,YAAA,ECiBFY,EAAMX,GAAW6pB,GAAAzpB,GAAEE,GAAmBC,GAAE2e,GAAO6qB,EAAyB,EAAAplC,cAAA,KAE/E,GAAO8jC,GAAPuB,QAAOvB,EAA6B,MCZnC,GAAMwB,IAAwB,CACnC,CACE17B,KAAM,UACN+b,YAAa,CAAEC,EAAc,EAC7BziB,KAAM,CACJ0iB,UAAWC,EAAUyf,gBAEvBvf,SAAU,CACR,CACEpc,KAAM,GACNqc,WAAY,8BACZC,UAAW,QAEb,CACEtc,KAAM,iBACNuc,UAAW6X,GACX76B,KAAM,CACJijB,KAAM,CACJC,4KAAOttB,IAIb,CACE6Q,KAAM,SACNuc,UAAWyb,GACXz+B,KAAM,CACJijB,KAAM,CACJC,uFAAOttB,IAIb,CACE6Q,KAAM,gBACNuc,UAAW2d,GACX3gC,KAAM,CACJijB,KAAM,CACJC,6FAAOttB,GAGZ,EAEJ,ECvCG,GAAOysC,IAAP,KAAOA,GAAY,CACfrjC,SAAWxB,EAAOyB,EAAU,EAC5BC,cAAgB1B,EAAO2B,EAAa,EAI5CmjC,UAAQ,CACN,MAAO,MAAKtjC,SAASS,IAAW4iC,GAAaE,cAAc,EACxD5iC,KACCC,GAAW6Q,GAAO,KAAKvR,cAAcY,YAAY2Q,CAAG,CAAC,CAAC,CAE5D,IAPQvQ,EAJGmiC,GAIIE,iBAAiBpiC,GAAYC,OAAS,wBAAA/K,CAAA,CAJ1CgtC,8CAAY,IAAAhtC,CAAA,CAAZgtC,6BAAYhiC,QAAZgiC,GAAY/hC,IAAA,IAAnB,GAAO+hC,IAAPG,GCCN,GAAaC,KAAc,KAArB,GAAOA,GAAP,KAAOA,EAAc,CACjBC,aAAellC,EAAO6kC,EAAY,EAClC9yB,SAAW/R,EAAOgS,CAAQ,EAElCmzB,MAEA/kC,UAAQ,CACN,KAAKglC,KAAI,CACX,EAEAA,MAAI,CACF,KAAKF,aAAaJ,SAAQ,EACvBx7B,UAAU,CACTuJ,KAAMsyB,GAAS,KAAKA,MAAQA,EAE5BnyB,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,IAAA/L,CAAA,CAjBWotC,4CAAc,IAAAptC,CAAA,CAAdotC,wBAAcntC,UAAA,mBAAAE,MAAA,GAAAC,KAAA,EAAAC,WAAA,IAAAC,wCCVLC,8SAEgC,gBAAQ,mBAAe,qBAAS,SAAAK,CAAA,CAAAA,CAAA,ubAE9EL,keAEGA,0RACAA,4MACAA,oHAGHA,0EAEa,iBAAM,eAAW,kBAAO,uGAAAG,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,eAAAO,QAAA,SAAAA,CAAAb,CAAA,CAAAC,CAAA,EAAAD,CAAA,KAb7C5C,EAAA,UAAA2D,EAAA,KAAgCzD,EAAA,EAEhCF,EAAA,OAAAmE,EAAA,KAAsDP,EAAA,YAAiCQ,EAAA,EAAAlE,EAAA,EAEvFF,EAAA,OAAA2D,EAAA,KAAiFzD,EAAA,EACjFF,EAAA,QAAI,QACF2D,EAAA,KAAqFzD,EAAA,EACrFF,EAAA,SAAA2D,EAAA,MAAqDzD,EAAA,EACrDF,EAAA,SAAA2D,EAAA,MAA4CzD,EAAA,EAAK,EAGnDF,EAAA,QAAA2D,EAAA,MAAAzD,EAAA,EAAkB0D,EAAA,QAClB5D,EAAA,SAAI,SACFmE,EAAA,MAAmBP,EAAA,WAA0CQ,EAAA,EAAAlE,EAAA,EAAK,GAAA0C,CAAA,KAXNtC,EAAA,GAAAqE,EAAAH,EAAA+qC,OAAA,UAAA/qC,EAAA+qC,MAAAE,EAAA,EAAA7qC,CAAA,OAAAe,MAAA;8DDQxD,GAAO0pC,GAAPK,QAAOL,EAAc,MEErB,GAAOM,IAAP,KAAOA,GAAU,CACb/jC,SAAWxB,EAAOyB,EAAU,EAC5BivB,YAAc1wB,EAAO2wB,EAAW,EAChCjvB,cAAgB1B,EAAO2B,EAAa,EAI5C6jC,SAAU3U,EAKT,CACC,GAAM,CAAE4U,WAAUC,UAAS1d,aAAYE,MAAI,EAAK2I,EAE5CE,EAAS,GAAIC,MACjBD,SAAS,KAAKL,YAAYO,iBAAiBF,EAAQ/I,EAAYE,CAAI,EAE/Dwd,IAAY,QAAO3U,EAASA,EAAOG,OAAO,UAAWwU,CAAO,GAEzD,KAAKlkC,SAASS,IAAqBsjC,GAAWI,aAAe,IAAIF,GAAY,EAAE,GAAI,CAAE1U,QAAM,CAAE,EACjG5uB,KACC+G,GAAI7G,GAAO,KAAKX,cAAckkC,6BAA6BvjC,EAAK,CAAE,YAAa,cAAe,YAAY,EAAI,SAAS,CAAC,EACxH6G,GAAI7G,GAAO,KAAKX,cAAcmkC,sBAAsBxjC,EAAK,KAAKyjC,gBAAgBC,KAAK,IAAI,CAAC,CAAC,EACzF78B,GAAI7G,GAAO,KAAKX,cAAcmkC,sBAAsBxjC,EAAK,KAAK2jC,YAAYD,KAAK,IAAI,CAAC,CAAC,EACrF3jC,GAAW6Q,GAAO,KAAKvR,cAAcY,YAAY2Q,CAAG,CAAC,CAAC,CAE5D,EAEQ6yB,gBAAiBG,EAAQ,CAC/B,GAAMzjC,GAAO0jC,KAAKC,UAAUF,EAAIzjC,KAAM,KAAM,CAAC,EAE7C,MAAOktB,QAAOC,OAAOsW,EAAK,CAAEzjC,MAAI,CAAE,CACpC,EAEQwjC,YAAaC,EAAQ,CAC3B,MAAOvW,QAAOC,OAAOsW,EAAK,CAAEG,OAAQ,GAAGH,EAAItoC,EAAE,IAAIsoC,EAAItuC,IAAI,EAAE,CAAE,CAC/D,IAhCQ+K,EALG6iC,GAKII,eAAehjC,GAAYC,OAAS,gBAAA/K,CAAA,CALxC0tC,8CAAU,IAAA1tC,CAAA,CAAV0tC,6BAAU1iC,QAAV0iC,GAAUziC,IAAA,IAAjB,GAAOyiC,IAAPc,uFC0BAzwC,EAAA,WAAA2D,EAAA,KAA4FzD,EAAA,aAAAwwC,GAAAvwC,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAC5FH,EAAA,WAAA2D,EAAA,KAAmGzD,EAAA,aAAAywC,GAAAxwC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KARrGH,EAAA,QAAI,WACmC,aACnC2D,EAAA,KAAmDzD,EAAA,EAAO,EAE5DF,EAAA,WAAA2D,EAAA,KAAsCzD,EAAA,EACtCF,EAAA,WAAA2D,EAAA,KAA+DzD,EAAA,EAC/DF,EAAA,WAAAmE,EAAA,KAAwEP,EAAA,YAAqCQ,EAAA,EAAAlE,EAAA,EAC7G2D,EAAA,GAAA+sC,GAAA,aAAuF,GAAAC,GAAA,aAEvF7wC,EAAA,YAAAmE,EAAA,MAA2IP,EAAA,oBAA2CQ,EAAA,EAAAlE,EAAA,EACtLF,EAAA,YAAA2D,EAAA,MAA6DzD,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAHLC,EAAA,IAAAiE,EAAA,OAAA/D,EAAAqvC,WAAA,OACGvvC,EAAA,EAAAiE,EAAA,OAAA/D,EAAAswC,kBAAA,GACLxwC,EAAA,EAAAiE,EAAA,aAAA/D,EAAA6vB,WAAA,aAAA0gB,GAAA5wC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAmB3DH,EAAA,WAA4E,aACTC,EAAA,GAAeC,EAAA,EAAO,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAD5DkE,EAAA,cAAAysC,CAAA,EACJ1wC,EAAA,EAAAiE,EAAA,UAAA/D,EAAAywC,mBAAAD,EAAAxP,KAAA,GAA0ClhC,EAAA,EAAAC,EAAAywC,EAAAxP,KAAA,aAAA0P,GAAA/wC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAIjEuD,EAAA,GAAuCzD,EAAA,GAAAiE,CAAA,IAAA/D,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAAohB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAAAC,EAAA,EAAAC,EAAAC,EAAA2wC,YAAAH,CAAA,cAAAI,GAAAjxC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KADzCH,EAAA,WACE6D,EAAA,EAAAwtC,GAAA,uBACFnxC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAF4DkE,EAAA,cAAAysC,CAAA,EAC3C1wC,EAAA,EAAAiE,EAAA,OAAA/D,EAAA8wC,YAAAN,CAAA,cAAAO,GAAApxC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAlBnBH,EAAA,QAAI,WAEA4D,EAAA,+BACF1D,EAAA,EAEAF,EAAA,WAA+DC,EAAA,GAAYC,EAAA,EAE3EF,EAAA,WAAgD,aAC8BC,EAAA,GAAcC,EAAA,EAAO,EAGnGF,EAAA,WAAoDC,EAAA,GAAkBC,EAAA,EAEtE2D,EAAA,GAAA2tC,GAAA,aAA4E,GAAAC,GAAA,aAQ5EzxC,EAAA,YAAgDC,EAAA,IAAmBC,EAAA,EAEnEF,EAAA,YAAiB,UACVC,EAAA,IAAqBC,EAAA,EAC1BF,EAAA,UAAKC,EAAA,IAAmBC,EAAA,EAAM,EAC3B,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA00B,QAAA,CAAA7yB,CAAA,CAAA7B,CAAA,CAAA2gB,SAAA,CAAA7e,CAAA,CAAAvC,CAAA,GAxBqBC,EAAA,GAAAiE,EAAA,cAAAysC,CAAA,EAAmB,WAAAU,CAAA,EAGnBpxC,EAAA,EAAAiE,EAAA,cAAAysC,CAAA,EAAmB,QAAAA,EAAAjpC,EAAA,EAAkBzH,EAAA,EAAAC,EAAAywC,EAAAjpC,EAAA,EAEnCzH,EAAA,EAAAiE,EAAA,cAAAysC,CAAA,EACM1wC,EAAA,EAAAiE,EAAA,UAAA/D,EAAAmxC,sBAAAX,EAAAjvC,IAAA,GAA4CzB,EAAA,EAAAC,EAAAywC,EAAAjvC,IAAA,EAG9CzB,EAAA,EAAAiE,EAAA,cAAAysC,CAAA,EAAoB1wC,EAAA,EAAAC,EAAAywC,EAAAY,QAAA,EAEFtxC,EAAA,EAAAiE,EAAA,OAAA/D,EAAAqvC,WAAA,OAI7CvvC,EAAA,EAAAiE,EAAA,OAAA/D,EAAAswC,kBAAA,GAIuBxwC,EAAA,EAAAiE,EAAA,cAAAysC,CAAA,EAAoB1wC,EAAA,EAAAC,EAAAywC,EAAAjgB,SAAA,EAGzCzwB,EAAA,GAAAC,EAAAywC,EAAAa,WAAA,EACAvxC,EAAA,GAAAC,EAAAywC,EAAAc,UAAA,aAAAC,GAAA5xC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAuBTH,EAAA,WAAwC,WACpB,SACXC,EAAA,GAAeC,EAAA,EAAM,EACvB,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CADEnhB,EAAA,GAAAC,EAAAyxC,EAAA50B,KAAA,aAAA60B,GAAA9xC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAnBTH,EAAA,QAAI,WACgB,SACXC,EAAA,GAKUC,EAAA,EAAM,EAClB,EAGPF,EAAA,QAAI,WACgB,SACXC,EAAA,GAAcC,EAAA,EAAM,EACtB,EAGP2D,EAAA,EAAAquC,GAAA,cAAA/xC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAfSnhB,EAAA,GAAAC,EAAA4xC,GAAA,EAAA37B,GAAA,QAAAw7B,EAAAjqC,GAAA,SAAAiqC,EAAAjwC,KAAA,iBAAAiwC,EAAAH,aAAA,qBAAAG,EAAAF,YAAA,MAAAtsB,KAAA;CAAA,GAWAllB,EAAA,GAAAC,EAAAyxC,EAAAplC,IAAA,EAIctM,EAAA,EAAAiE,EAAA,OAAAytC,EAAA50B,KAAA,aAAAg1B,GAAAjyC,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAcXuD,EAAA,GAAAC,EAAA,MAAAO,CAAA,cAAAmuC,GAAAlyC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAEAuD,EAAA,GAAAS,EAAA,MAAsBP,EAAA,UAAsCQ,EAAA,EAAAF,CAAA,IAAA/D,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAhCC,EAAA,GAAAqE,EAAAnE,EAAAsvC,OAAA,EAAAlrC,CAAA,eAAA0tC,GAAAnyC,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAH9B0D,EAAA,EAAA0uC,GAAA,oBAAyB,EAAAC,GAAA,oBAAAryC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAzBiJ,GAAA9I,EAAAsvC,UAAA,sBAAA2C,GAAAtyC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAOEuD,EAAA,GAAAS,EAAA,MAAsBP,EAAA,aAAgFQ,EAAA,EAAAF,CAAA,IAAA/D,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAA1EC,EAAA,GAAAiE,EAAA,UAAA/D,EAAAywC,mBAAAzwC,EAAAqvC,QAAA,GAAyClrC,EAAAnE,EAAAqvC,QAAA,EAAAjrC,CAAA,eAAA8tC,GAAAvyC,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAErEuD,EAAA,GAAAS,EAAA,MAAsBP,EAAA,UAA0B,aAA0FQ,EAAA,EAAAF,CAAA,IAAA/D,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAA/DC,EAAA,GAAAiE,EAAA,UAAA/D,EAAAywC,mBAAAzwC,EAAAqvC,QAAA,GAA/ClrC,EAAAnE,EAAAsvC,OAAA,EAAatvC,EAAAqvC,QAAA,EAAAjrC,CAAA,eAAA+tC,GAAAxyC,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAH3C0D,EAAA,EAAA+uC,GAAA,oBAAyB,EAAAC,GAAA,oBAAA1yC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAzBiJ,GAAA9I,EAAAsvC,UAAA,sBAAA/nC,GAAA5H,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAXVH,EAAA,QAAI,WACgB,YACQ,YAEpB6D,EAAA,EAAAivC,GAAA,KAA0B,EAAAC,GAAA,KAa5B7yC,EAAA,EAAM,EACF,EACH,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAfCC,EAAA,GAAAgJ,GAAA9I,EAAAqvC,WAAA,aCtEZ,GAAamD,KAAc,KAArB,GAAOA,GAAP,KAAOA,UAAsBlc,GAAS,CAClC3a,SAAW/R,EAAOgS,CAAQ,EAC1B62B,YAAc7oC,EAAOulC,EAAU,EAKvCE,SAA2B,MAC3BqD,UAA8B,CAAE,MAAO,SAAU,YAAa,SAAU,UAAW,SAAS,EAC5FC,cAAqC,KAAKD,UAAU5/B,IAAI8/B,IAAM,CAC5DrrC,GAAIqrC,EACJ7qC,MAAO6qC,EACPC,QAAS,KAAKpC,mBAAmBmC,CAAC,GAClC,EAEFtD,QAAyB,MACzBwD,SAA4B,CAC1B,MAEA,sBACA,qBACA,sCACA,6BACA,2BACA,2BACA,wBACA,aACA,6BACA,qBACA,QACA,iBACA,4BACA,uBACA,sBACA,yBACA,SACA,0BACA,uBACA,oBACA,eACA,oBACA,mBACA,uBACA,oBACA,sBACA,oBAAoB,EAEtBC,aAAoC,KAAKD,SAAShgC,IAAIjL,IAAM,CAAEN,GAAIM,EAAGE,MAAOF,CAAC,EAAG,EAEhFmrC,KAAc,GACdvhB,aACAK,KAAiB,CAAEC,MAAO,YAAaC,MAAO,EAAE,EAChDJ,WAA6B,CAAEoF,MAAO,KAAKtF,YAAaG,MAAO,CAAC,EAEhE7nB,UAAQ,CACN,KAAKipC,oBAAmB,EACxB,KAAK/a,WAAU,CACjB,EAEAhH,eAAa,CACX,MAAO,eACT,EAEAuf,mBAAoBzP,EAAqB,CACvC,OAAQA,GACN,IAAK,SACH,MAAO,CAAE,WAAY,YAAY,EACnC,IAAK,YACH,MAAO,CAAE,WAAY,aAAa,EACpC,IAAK,UACH,MAAO,CAAE,WAAY,aAAa,EACpC,IAAK,SACH,MAAO,CAAE,WAAY,WAAW,EAClC,IAAK,UACH,MAAO,CAAE,WAAY,cAAc,CACvC,EAEA,MAAO,EACT,EAEAkS,yBAAuB,CACrB,KAAKthB,WAAWC,MAAQ,EAExB,KAAKgG,WAAU,EACf,KAAKsb,oBAAmB,CAC1B,EAEA7C,mBAAiB,CACf,MAAO,MAAKhB,UAAY,OAAS,KAAKA,UAAY,mBACpD,EAEAwB,YAAasC,EAAQ,CACnB,MAAOA,GAAI7xC,OAAS,mBACtB,EAEAovC,YAAayC,EAAQ,CACnB,MAAIA,GAAIpS,QAAU,SAAiBoS,EAAIC,SAAW,IAE3C,EACT,EAEAC,SAAO,CACL,KAAKN,KAAO,GACZ,KAAKvhB,aAAe,EAEpB,KAAKoG,WAAU,CACjB,EAEAsZ,sBAAuB5vC,EAAY,CACjC,MAAO,MAAKgyC,eAAe,OAAQhyC,CAAI,CACzC,EAEU03B,oBAAkB,CAC1B,GAAIoW,GAAW,KAAKA,SAChB,KAAKA,WAAa,QAAOA,EAAW,MAExC,KAAKoD,YACFrD,SAAS,CACRC,WACAC,QAAS,KAAKA,QACd1d,WAAY,KAAKA,WACjBE,KAAM,KAAKA,KACZ,EACA5e,UAAU,CACTuJ,KAAM0c,GAAa,CACjB,KAAK6Z,KAAO7Z,EAAW/sB,KACvB,KAAKqlB,aAAe0H,EAAWC,KACjC,GAEAxc,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEQylC,qBAAmB,CACzB,GAAMjS,GAAQwS,GAAqBC,QAAQjB,EAAckB,QAAQ,EAC7D1S,GAASA,IAAU,cAAa,KAAKqO,SAAWrO,GAEpD,GAAMsO,GAAUkE,GAAqBC,QAAQjB,EAAcmB,OAAO,EAC9DrE,GAAWA,IAAY,cAAa,KAAKA,QAAUA,EACzD,EAEQ6D,qBAAmB,CACzBK,GAAqBI,QAAQpB,EAAckB,SAAU,KAAKrE,QAAQ,EAClEmE,GAAqBI,QAAQpB,EAAcmB,QAAS,KAAKrE,OAAO,CAClE,IA5IQhjC,EAJGkmC,EAIIkB,WAAW,mBAClBpnC,EALGkmC,EAKImB,UAAU,kBAAAlyC,CAAA,CALd+wC,8DAAa,IAAAnlB,GAAbmlB,CAAa,UAAA/wC,CAAA,CAAb+wC,wBAAa9wC,UAAA,cAAA0G,SAAA,CAAAklB,EAAA,EAAA1rB,MAAA,GAAAC,KAAA,GAAAC,WAAA,IAAAC,uDDhBOC,wEAlBHA,4GASCA,iEAsBYA,aAEDA,6BACuBA,mEACa,iBAAO,uHAAsB,kBAAQ,QAAAU,CAAA,CAAAA,CAAA,+CAG8B,iBAA8B,sBAAa,QAAAC,CAAA,CAAAA,CAAA,sHAC3IX,iEAH4CA,2DACIA,8GAqE9DA,uDAEG,gBAAM,mBAAa,qBAAO,iEAAAgB,CAAA,CAAAA,CAAA,4DAI1B,gBAA+C,mBAAc,qBAAO,oDAAAf,CAAA,QAAAA,CAAA,uGAEpE,gBAAM,mBAAa,qBAAO,gDAAqB,gBAA+C,mBAAc,qBAAO,MAAAG,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAf,CAAA,mSAAAE,CAAA,ihDAAAc,QAAA,SAAAA,CAAAb,CAAA,CAAAC,CAAA,EAAAD,CAAA,KApHzJ5C,EAAA,YAA8B,YACK,cAC/B2D,EAAA,KAAkCzD,EAAA,EAElCF,EAAA,0BAEyBkG,GAAA,yBAAAC,EAAA,CAAAI,MAAAC,IAAAhC,EAAAsrC,QAAA3pC,CAAA,IAAA3B,EAAAsrC,QAAA3pC,IAAA,IAAsBQ,EAAA,iCAAiBnC,GAAAkvC,wBAAA,CAAyB,IACxFxzC,EAAA,EAAoB,EAGvBF,EAAA,YAAiC,cAC/B2D,EAAA,KAAoCzD,EAAA,EAEpCF,EAAA,0BAE0BkG,GAAA,yBAAAC,EAAA,CAAAI,MAAAC,IAAAhC,EAAAqrC,SAAA1pC,CAAA,IAAA3B,EAAAqrC,SAAA1pC,IAAA,IAAuBQ,EAAA,iCAAiBnC,GAAAkvC,wBAAA,CAAyB,IAC1FxzC,EAAA,EAAoB,EAGvBF,EAAA,YAA4B,mBAC2B2G,EAAA,yBAASnC,GAAAsvC,QAAA,CAAS,IAAE5zC,EAAA,EAAY,EACjF,EAGRF,EAAA,iBAGE2G,EAAA,sBAAAR,EAAA,OAAc3B,GAAAmtB,SAAAxrB,CAAA,CAAgB,IAG9BtC,EAAA,GAAAwwC,GAAA,uBAAgC,GAAAC,GAAA,wBAe8B,GAAAC,GAAA,sBA+BhB,GAAAC,GAAA,sBAgDhDt0C,EAAA,GAAA0C,CAAA,KAtHMtC,EAAA,GAAAiE,EAAA,QAAAC,EAAA+uC,YAAA,EAAuBzsC,GAAA,UAAAtC,EAAAsrC,OAAA,EASvBxvC,EAAA,GAAAiE,EAAA,QAAAC,EAAA2uC,aAAA,EAAwBrsC,GAAA,UAAAtC,EAAAqrC,QAAA,EAU5BvvC,EAAA,GAAAiE,EAAA,QAAAC,EAAAgvC,IAAA,EAAc,WAAc,YAAAhvC,EAAAytB,aAAA,GAA+B,eAAAztB,EAAAytB,YAAA,EAA8B,OAAAztB,EAAA0tB,WAAA,EAAqB,QAAA1tB,EAAA4tB,WAAAC,KAAA,EAA2B,qBAAA7tB,EAAA2tB,kBAAA,EAChG,YAAA3tB,EAAA8tB,KAAAC,KAAA,EAAyB,YAAA/tB,EAAA8tB,KAAAE,KAAA,EAAyB,QAAAhuB,EAAA4tB,WAAAC,KAAA,EAChB,aAAAoiB,GAAA,GAAA/vC,EAAA,GAAuC,4BACpF,4BAAAF,EAAAiuB,sBAAA,GAAsD,kBAAAjuB,EAAA61B,YAAA,KAAAx1B,YAAA,ECJlFC,GAAWG,GAAAuE,GACXhE,GACAikC,GACA/W,GAAWC,GAAAC,GAAAC,GAAAyH,GAAAxH,GACXC,GACAttB,EACAwtB,GACAsH,GACAhxB,GACA4pB,EAAoB,EAAAxtB,OAAA;wDAAA,KAGlB,GAAOqtC,GAAP0B,QAAO1B,EAAc,MChCrB,GAAO2B,IAAP,KAAa,CACjBC,KACAC,WACA/mC,MACAE,QACA6hB,KAEAilB,GACAC,OACAC,OAEA7oC,YAAa8oC,EAAQ,CACnB,KAAKL,KAAO,GAAIM,MAAKD,EAAIE,SAAS,EAClC,KAAKN,WAAa,KAAKD,KAAKQ,eAAc,EAC1C,KAAKtnC,MAAQmnC,EAAInnC,MACjB,KAAKE,QAAUinC,EAAIjnC,QAEnB,GAAMqnC,GAAU3oB,GAAKuoB,EAAK,YAAa,QAAS,UAAW,OAAO,EAIlE,GAFInb,OAAOwb,KAAKD,CAAO,EAAEzqC,SAAW,IAAG,KAAKilB,KAAOygB,KAAKC,UAAU8E,EAASxzC,OAAW,CAAC,GAEnFozC,EAAInnC,QAAU,QAChB,GAAI,CACF,GAAME,GAAUsiC,KAAKiF,MAAMN,EAAIjnC,OAAO,EAEtC,KAAK8mC,GAAK9mC,EAAQU,KAClB,KAAKqmC,OAAS/mC,EAAQ+mC,OACtB,KAAKC,OAAShnC,EAAQgnC,OAEtB,KAAKnlB,KAAOygB,KAAKC,UAAUviC,EAAS,KAAM,CAAC,EAC3C,KAAKA,QAAU,EACjB,QAASqP,EAAK,CACZ2uB,GAAO5uB,MAAM,8BAA+BC,CAAG,CACjD,EAEJ,GC9BI,GAAOm4B,IAAP,KAAOA,GAAW,CACd5pC,SAAWxB,EAAOyB,EAAU,EAC5BivB,YAAc1wB,EAAO2wB,EAAW,EAChCjvB,cAAgB1B,EAAO2B,EAAa,EAK5C0pC,QAASxa,EAMR,CACC,GAAM,CAAEya,aAAYC,YAAWC,UAASC,WAAS,EAAK5a,EAElDE,EAAS,GAAIC,MACjBD,EAASA,EAAOG,OAAO,YAAaqa,CAAS,EAExCD,IAAYva,EAASA,EAAOG,OAAO,QAASL,EAAQntB,KAAK,GAC1D8nC,IAASza,EAASA,EAAOG,OAAO,UAAWL,EAAQ2a,OAAO,GAC1DC,IAAW1a,EAAS,KAAKL,YAAYgb,eAAe3a,EAAQ,YAAa0a,CAAS,GAEtF,GAAMxiC,GAAOqiC,EACTF,GAAYO,mBACZP,GAAYQ,aAEhB,MAAO,MAAKpqC,SAASS,IAAcgH,EAAM,CAAE8nB,QAAM,CAAE,EAChD5uB,KACC+G,GAAI2iC,GAAQA,EAAK3iC,IAAIzQ,GAAK,GAAI8xC,IAAO9xC,CAAC,CAAC,CAAC,EACxC2J,GAAW6Q,GAAO,KAAKvR,cAAcY,YAAY2Q,CAAG,CAAC,CAAC,CAE5D,IA5BQvQ,EALG0oC,GAKIQ,eAAejpC,GAAYC,OAAS,uBAC3CF,EANG0oC,GAMIO,qBAAqBhpC,GAAYC,OAAS,6BAAA/K,CAAA,CAN9CuzC,8CAAW,IAAAvzC,CAAA,CAAXuzC,6BAAWvoC,QAAXuoC,GAAWtoC,IAAA,IAAlB,GAAOsoC,IAAPU,oGCFEl2C,EAAA,eAAgFC,EAAA,GAAyBC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAApDld,EAAA,QAAA4xC,EAAApuC,EAAA,EAA2BzH,EAAA,EAAAC,EAAA41C,EAAA5tC,KAAA,aAAA6tC,GAAAj2C,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAW9EF,EAAA,GAAA2J,EAAA,aAA4D5J,EAAA,UAAA2D,EAAA,KAAczD,EAAA,EAAOD,EAAA,SAAAE,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAjF40B,GAAA,IAAAC,EAAA/tC,MAAA,KAAAsB,GAAA,IAAAysC,EAAAvuC,GAAAuuC,EAAAC,UAAA,oBAAAC,GAAAr2C,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAUAH,EAAA,aAAoDC,EAAA,YAAQC,EAAA,EAAQD,EAAA,IAAAE,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAApCld,EAAA,UAAAkyC,EAAA1uC,EAAA,EAAoCzH,EAAA,GAAAswB,EAAA,IAAA6lB,EAAAluC,MAAA,gBAAAmuC,GAAAv2C,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAQxEjG,EAAA,uBAIEkG,GAAA,yBAAAC,EAAA,CAAAC,EAAAuwC,CAAA,KAAAC,GAAAtwC,EAAA,GAAAC,MAAAC,IAAAowC,EAAAf,UAAA1vC,CAAA,IAAAywC,EAAAf,UAAA1vC,GAAAO,EAAAP,CAAA,KAAwBQ,EAAA,2BAAAP,EAAAuwC,CAAA,KAAAC,GAAAtwC,EAAA,SAAAI,GAAiBkwC,EAAA9C,QAAA,CAAS,KACnD5zC,EAAA,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IADCyG,GAAA,UAAA8vC,EAAAf,SAAA,aAAAgB,GAAA12C,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GA3BJjG,EAAA,SAAK,cACH2D,EAAA,KAA2CzD,EAAA,EAE3CF,EAAA,0BAAkEkG,GAAA,yBAAAC,EAAA,CAAAC,EAAAoqB,CAAA,KAAAomB,GAAAtwC,EAAA,EAAAC,MAAAC,IAAAowC,EAAAjB,UAAAxvC,CAAA,IAAAywC,EAAAjB,UAAAxvC,GAAAO,EAAAP,CAAA,KAAwBQ,EAAA,2BAAAP,EAAAoqB,CAAA,KAAAomB,GAAAtwC,EAAA,QAAAI,GAAiBkwC,EAAA9C,QAAA,CAAS,KAClHjwC,EAAA,EAAAizC,GAAA,sBAGF52C,EAAA,EAAoB,EAGtBF,EAAA,SAAK,cACH2D,EAAA,KAAqCzD,EAAA,EAErCF,EAAA,0BAA8DkG,GAAA,yBAAAC,EAAA,CAAAC,EAAAoqB,CAAA,KAAAomB,GAAAtwC,EAAA,EAAAC,MAAAC,IAAAowC,EAAA9oC,MAAA3H,CAAA,IAAAywC,EAAA9oC,MAAA3H,GAAAO,EAAAP,CAAA,KAAoBQ,EAAA,2BAAAP,EAAAoqB,CAAA,KAAAomB,GAAAtwC,EAAA,QAAAI,GAAiBkwC,EAAA9C,QAAA,CAAS,KAC1GjwC,EAAA,EAAAkzC,GAAA,sBAGF72C,EAAA,EAAoB,EAGtBF,EAAA,UAAK,eACH2D,EAAA,MAA8CzD,EAAA,EAE9C2D,EAAA,GAAAmzC,GAAA,yBAMF92C,EAAA,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GA1B8CC,EAAA,GAAAiE,EAAA,QAAAqyC,EAAAK,WAAA,EAAsBnwC,GAAA,UAAA8vC,EAAAjB,SAAA,EAU3Br1C,EAAA,GAAAiE,EAAA,QAAAqyC,EAAAM,YAAA,EAAuBpwC,GAAA,UAAA8vC,EAAA9oC,KAAA,EAW3DxN,EAAA,GAAAiE,EAAA,QAAAqyC,EAAAlB,WAAA,cAAAyB,GAAAh3C,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAYPH,EAAA,SAAA2D,EAAA,KAAoCzD,EAAA,aAAAk3C,GAAAj3C,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAGlCyD,EAAA,uBAAAzD,CAAA,IAAAE,CAAA,OAAAD,CAAA,CAAAquB,EAAA,KAGoBlqB,EAAA,iBAAA8yC,CAAA,aAAAC,GAAAn3C,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAGpBH,EAAA,SAAA2D,EAAA,KAAuDzD,EAAA,aAAAq3C,GAAAp3C,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAQnDH,EAAA,eAAA2D,EAAA,KAA6DzD,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAAlBnhB,EAAA,EAAAqE,EAAA6yC,EAAA1C,EAAA,EAAAlwC,CAAA,eAAA6yC,GAAAt3C,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAC3CH,EAAA,eAAqDC,EAAA,GAAoCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAApCnhB,EAAA,EAAA+1C,GAAA,GAAAmB,EAAAzC,OAAA,OAAAyC,EAAAxC,OAAA,eAAA0C,GAAAv3C,CAAA,CAAAW,CAAA,KAAAX,CAAA,KANvDH,EAAA,YAAuH,aAC7FC,EAAA,GAAeC,EAAA,EAEvCF,EAAA,aAAuBC,EAAA,GAAsBC,EAAA,EAE7C2D,EAAA,EAAA8zC,GAAA,iBAA2C,EAAAC,GAAA,iBAG3C33C,EAAA,GAEAD,EAAA,SAAKC,EAAA,GAAcC,EAAA,EAAM,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAVmBld,EAAA,UAAAszC,GAAA,EAAA/a,GAAA0a,EAAA1pC,QAAA,QAAA0pC,EAAA1pC,QAAA,SACpBxN,EAAA,GAAAC,EAAAi3C,EAAA1pC,KAAA,EAEDxN,EAAA,GAAAswB,EAAA,IAAA4mB,EAAA3C,WAAA,KAECv0C,EAAA,EAAAiE,EAAA,OAAAizC,EAAA1C,EAAA,EACWx0C,EAAA,EAAAiE,EAAA,OAAAizC,EAAAzC,MAAA,EAEnCz0C,EAAA,EAAAswB,EAAA,IAAA4mB,EAAAxpC,QAAA,KAEK1N,EAAA,GAAAC,EAAAi3C,EAAA3nB,IAAA,ICzCb,GAAaioB,KAAa,KAApB,GAAOA,GAAP,KAAOA,EAAa,CAChBC,YAAc3tC,EAAOorC,EAAW,EAChCr5B,SAAW/R,EAAOgS,CAAQ,EAC1B47B,aAAe5tC,EAAO6tC,EAAmB,EAIxCC,YAAcvZ,GAAmC,aAAa,EAC9DwZ,YAAcxZ,GAAmC,aAAa,EAEvEyZ,QAAU,GAEVC,QACAC,KAAiB,GAEjBrB,YAAmE,GACnEC,aAAwD,GACxDqB,eAAgE,GAEhE5C,UACA7nC,MACA0qC,QACA3C,UAAsB,GAEtBrrC,UAAQ,CACN,KAAKiuC,iBAAgB,EACrB,KAAKC,kBAAiB,EACtB,KAAKC,oBAAmB,EAExB,KAAKC,oBAAmB,EAExB,KAAKpJ,KAAI,CACX,EAEAsE,SAAO,CACL,KAAKwE,KAAO,GAEZ,KAAKN,aAAa5D,QAAQ0D,EAAce,uBAAwB,KAAKL,OAAO,EAE5E,KAAKhJ,KAAI,CACX,EAEAA,MAAI,CACF,KAAK4I,QAAU,GAEf,GAAMvC,GAAY,KAAKA,UAAUjrC,SAAW,EACxC,KAAKirC,UACLh0C,OAEJ,KAAKk2C,YAAYtC,QAAQ,CACvBC,WAAY,KAAKA,WAAU,EAC3B5nC,MAAO,KAAKA,MACZ6nC,UAAW,KAAKA,UAChBE,YACD,EAAEniC,UAAU,CACXuJ,KAAMq7B,GAAO,CACX,KAAKA,KAAOA,EAEZ,KAAKD,QAAU,KAAKC,KAAKhlC,IAAIsa,GAAK,GAAGA,EAAE9f,KAAK,IAAI8f,EAAEinB,UAAU,IAAIjnB,EAAE5f,OAAO,IAAI4f,EAAEiC,IAAI,EAAE,EAAErK,KAAK;CAAI,EAEhGszB,WAAW,IAAK,CACd,KAAKZ,YAAW,EAAGa,cAAcC,eAAe,CAAEC,MAAO,MAAOC,OAAQ,SAAS,CAAE,CACrF,EAAC,CACH,GAEA97B,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAE7CmrC,SAAUA,IAAM,KAAKf,QAAU,GAChC,CACH,EAEA1C,YAAU,CACR,MAAO,MAAK8C,UAAY,OAC1B,EAEAC,kBAAgB,CACd,GAAMW,GAAW,GAAIlE,QACrBkE,EAASC,SAASD,EAASE,SAAQ,EAAK,CAAC,EAEzC,GAAMC,GAAU,GAAIrE,QACpBqE,EAAQC,QAAQD,EAAQE,QAAO,EAAK,CAAC,EAErC,GAAMC,GAAW,GAAIxE,QACrBwE,EAASF,QAAQE,EAASD,QAAO,EAAK,CAAC,EAEvC,KAAKxC,YAAc,CACjB,CACElvC,GAAI2xC,EAASC,YAAW,EACxBpxC,oGAAO/F,CACP+zC,WAAY,aAEd,CACExuC,GAAIwxC,EAAQI,YAAW,EACvBpxC,uFAAO/F,CACP+zC,WAAY,SAEd,CACExuC,GAAIqxC,EAASO,YAAW,EACxBpxC,iFAAO/F,CACP+zC,WAAY,aACb,EAGH,KAAKZ,UAAYyD,EAASO,YAAW,CACvC,EAEAjB,mBAAiB,CACf,KAAKxB,aAAe,CAClB,CACEnvC,GAAI,QACJQ,wDAAO/F,EAET,CACEuF,GAAI,OACJQ,oEAAO/F,EAET,CACEuF,GAAI,OACJQ,4FAAO/F,EAET,CACEuF,GAAI,QACJQ,4CAAO/F,CACR,EAGH,KAAKsL,MAAQ,MACf,EAEA6qC,qBAAmB,CACjB,KAAKJ,eAAiB,CACpB,CACExwC,GAAI,WACJQ,qHAAO/F,EAET,CACEuF,GAAI,QACJQ,iFAAO/F,CACR,CAEL,EAEQo2C,qBAAmB,CACzB,KAAKJ,QAAU,KAAKR,aAAa/D,QAAQ6D,EAAce,sBAAsB,EAEzE,KAAKL,UAAY,YAAc,KAAKA,UAAY,UAAS,KAAKA,QAAU,QAC9E,IA7IQ1rC,EALGgrC,EAKIe,yBAAyB,8BAAA52C,CAAA,CAL7B61C,4CAAa,IAAA71C,CAAA,CAAb61C,wBAAa51C,UAAA,mBAAAo9B,UAAA,QAAAA,CAAAl2B,EAAA5E,EAAA,CAAA4E,EAAA,IAAAm2B,EAAA,CAAA18B,CAAA,CAAAq1C,WAAA,CAAA0B,EAAA,IAAAra,EAAA,CAAA18B,CAAA,CAAAs1C,WAAA,CAAA0B,EAAA,KAAAj3C,CAAA,IAAA68B,EAAA,MAAAr9B,KAAA,IAAAC,IAAA,GAAAC,MAAA,CAAAA,CAAA,QAAAK,CAAA,CAAAA,CAAA,mDDeqBH,oIASTA,8HAA+BA,wEAnDtCA,4DAoCOA,wEAzBCA,gGAULA,oKAUDA,+CAhBgDA,8DA+BrDA,yEASwBA,gCAQE,eAAY,8CAAAM,CAAA,CAAAE,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,yKAAAX,CAAA,+EAAAC,CAAA,SAAAC,CAAA,yWAAAE,CAAA,iHAAAA,CAAA,8CAAAH,CAAA,SAAAC,CAAA,6MAAAY,QAAA,SAAAA,CAAAb,CAAA,CAAAC,CAAA,KAAAD,CAAA,QAAAE,CAAA,CAAAmD,CAAA,GAlElEjG,EAAA,YAAoB,SAEb,cACH2D,EAAA,KAAmCzD,EAAA,EAEnCF,EAAA,YAAuC,eACfkG,GAAA,yBAAAC,EAAA,CAAAI,MAAAH,GAAAC,CAAA,EAAAG,GAAAhC,EAAAg0C,QAAAryC,CAAA,IAAA3B,EAAAg0C,QAAAryC,GAAAO,EAAAP,CAAA,KAAsBQ,EAAA,2BAAAJ,MAAAH,GAAAC,CAAA,EAAAK,EAAiBlC,EAAAsvC,QAAA,CAAS,KACpEjwC,EAAA,EAAAi2C,GAAA,iBACF55C,EAAA,EAAS,EACL,EAGR2D,EAAA,EAAAk2C,GAAA,MAiCA/5C,EAAA,kBAAqE2G,EAAA,mBAAAJ,MAAAH,GAAAC,CAAA,EAAAK,EAASlC,EAAAsvC,QAAA,CAAS,KAAE5zC,EAAA,EAAY,EAGvGF,EAAA,YACE6D,EAAA,GAAAm2C,GAAA,cAEAh6C,EAAA,iBACE6D,EAAA,GAAAo2C,GAAA,yBAIC,GAAAC,GAAA,cAIDl6C,EAAA,iBACE6D,EAAA,GAAAs2C,GAAA,gBAYFj6C,EAAA,EAAM,EACF,GAAA0C,CAAA,KApEoBtC,EAAA,GAAAwG,GAAA,UAAAtC,EAAAg0C,OAAA,EACcl4C,EAAA,EAAAiE,EAAA,UAAAC,EAAA+zC,cAAA,EAKxCj4C,EAAA,EAAAgJ,GAAA9E,EAAAkxC,WAAA,QAqCMp1C,EAAA,GAAAiE,EAAA,OAAAC,EAAA4zC,OAAA,EAID93C,EAAA,GAAAiE,EAAA,OAAAC,EAAA8zC,KAAA1tC,SAAA,GAKGtK,EAAA,EAAAiE,EAAA,QAAAC,EAAA4zC,SAAA5zC,EAAA8zC,KAAA1tC,SAAA,GAGiBtK,EAAA,GAAAiE,EAAA,UAAAC,EAAA8zC,IAAA,KAAAzzC,YAAA,EC3CvBC,GAAW2R,GAAAC,GAAAC,GAAA1R,GAAAuE,GACXwa,GACAve,EACAD,GACA40C,GACA3Q,GACArW,GACAinB,GACA9wC,GACAoX,EAAyB,EAAAhb,OAAA;wDAAA,KAGvB,GAAOmyC,GAAPwC,QAAOxC,EAAa,MCfpB,GAAOyC,IAAP,KAAOA,GAAa,CAChB3uC,SAAWxB,EAAOyB,EAAU,EAC5B1B,OAASC,EAAOC,EAAa,EAC7BywB,YAAc1wB,EAAO2wB,EAAW,EAChCjvB,cAAgB1B,EAAO2B,EAAa,EAI5CyuC,uBAAwBvf,EAGvB,CACC,GAAM,CAAE7I,aAAYE,MAAI,EAAK2I,EAEzBE,EAAS,GAAIC,MACjBD,SAAS,KAAKL,YAAYO,iBAAiBF,EAAQ/I,EAAYE,CAAI,EAE5D,KAAK1mB,SAASS,IAAyCkuC,GAAcE,gBAAkB,uBAAwB,CAAEtf,QAAM,CAAE,EAC7H5uB,KAAKC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAChE,EAEAiuC,eAAa,CACX,MAAO,MAAK9uC,SAASgwB,KAAK2e,GAAcE,gBAAkB,gCAAiC,EAAE,EAC1FluC,KAAKC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAChE,EAEAkuC,YAAaC,EAA8B,CACzC,MAAO,MAAKhvC,SAASwwB,OAAOme,GAAcE,gBAAkB,wBAA0BG,EAAM7yC,EAAE,EAC3FwE,KAAKC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAChE,EAIAouC,eAAgB5f,EAIf,CACC,GAAM,CAAE7I,aAAYE,OAAMhjB,QAAM,EAAK2rB,EAEjCE,EAAS,GAAIC,MACjBD,SAAS,KAAKL,YAAYO,iBAAiBF,EAAQ/I,EAAYE,CAAI,EAE/DhjB,IACF6rB,EAAS,KAAK2f,sBAAsBxrC,EAAQ6rB,CAAM,GAG7C1O,GAAS,CACd,KAAK7gB,SAASS,IAAgCkuC,GAAcE,gBAAkB,QAAS,CAAEtf,QAAM,CAAE,EACjG,KAAKhxB,OAAO4wC,gBAAe,CAAE,CAC9B,EAAExuC,KACD+G,GAAI,CAAC,CAAE7G,EAAKuuC,CAAY,IAAM,CAC5B,GAAMC,GAAUxuC,EAAIG,KAAK0G,IAAIsgC,GACpB/mB,GAAAC,GAAA,GACF8mB,GADE,CAGLpS,MAAO,CACLz5B,GAAI6rC,EAAIpS,MAAMz5B,GACdQ,MAAO2yC,GAAkBtH,EAAIpS,MAAMj5B,MAAOyyC,CAAY,GAExDG,QAAS7K,KAAKC,UAAUqD,EAAIuH,QAAS,KAAM,CAAC,EAC5CC,eAAgB9K,KAAKC,UAAUqD,EAAIwH,eAAgB,KAAM,CAAC,GAE7D,EAED,MAAO,CACLxhB,MAAOntB,EAAImtB,MACXhtB,KAAMquC,EAEV,EAAC,EACD3nC,GAAI7G,GAAO,KAAKX,cAAckkC,6BAA6BvjC,EAAK,CAAE,YAAa,YAAa,YAAY,EAAI,SAAS,CAAC,EACtHD,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAE1D,EAEQquC,sBAAuBxrC,EAAgB6rB,EAAkB,CAC/D,GAAMkgB,GAAU,KAAKvgB,YAAYwgB,uBAAuBhsC,EAAQ,CAC9DisC,WAAY,CACVC,OAAQ,SACRC,SAAU,GACV1jB,QAAS50B,GAAI,CACX,GAAIA,IAAM,YAAa,MAAOu4C,IAAeC,UAC7C,GAAIx4C,IAAM,aAAc,MAAOu4C,IAAeE,WAC9C,GAAIz4C,IAAM,UAAW,MAAOu4C,IAAeG,QAC3C,GAAI14C,IAAM,UAAW,MAAOu4C,IAAetY,QAC3C,GAAIjgC,IAAM,yBAA0B,MAAOu4C,IAAeI,uBAC1D,GAAI34C,IAAM,iBAAkB,MAAOu4C,IAAeK,cAGpD,IAEH,EAED,MAAO,MAAKjhB,YAAYkhB,gBAAgB7gB,EAAQkgB,CAAO,CACzD,EAIAY,WAAYC,EAAgC,CAC1C,GAAM1I,GAAOvX,GAASigB,CAAO,EAE7B,MAAOhgB,IAAKsX,CAAI,EACbjnC,KACC4vB,GAAUyX,GAAO,KAAKhoC,SAASgwB,KAAK2e,GAAcE,gBAAkB,SAAW7G,EAAIuI,KAAO,UAAW,EAAE,CAAC,EACxG9f,GAAO,EACP7vB,GAAW6Q,GAAO,KAAKvR,cAAcY,YAAY2Q,CAAG,CAAC,CAAC,CAE5D,EAEA++B,WAAYF,EAAgC,CAC1C,GAAM1I,GAAOvX,GAASigB,CAAO,EAE7B,MAAOhgB,IAAKsX,CAAI,EACbjnC,KACC4vB,GAAUyX,GAAO,KAAKhoC,SAASwwB,OAAOme,GAAcE,gBAAkB,SAAW7G,EAAIuI,IAAI,CAAC,EAC1F9f,GAAO,EACP7vB,GAAW6Q,GAAO,KAAKvR,cAAcY,YAAY2Q,CAAG,CAAC,CAAC,CAE5D,EAIAg/B,YAAaphB,EAGZ,CACC,GAAM,CAAE7I,aAAYE,MAAI,EAAK2I,EAEzBE,EAAS,GAAIC,MACjBD,SAAS,KAAKL,YAAYO,iBAAiBF,EAAQ/I,EAAYE,CAAI,EAE5D,KAAK1mB,SAASS,IAAwBkuC,GAAcE,gBAAkB,IAAK,CAAEtf,QAAM,CAAE,EACzF5uB,KAAKC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAChE,EAEA6vC,aAAcC,EAAc,CAC1B,MAAO,MAAK3wC,SAASwwB,OAAOme,GAAcE,gBAAkB,IAAM8B,EAAOx0C,EAAE,EACxEwE,KAAKC,GAAWC,GAAO,KAAKX,cAAcY,YAAYD,CAAG,CAAC,CAAC,CAChE,IApIQK,EANGytC,GAMIE,kBAAkB1tC,GAAYC,OAAS,mBAAA/K,CAAA,CAN3Cs4C,8CAAa,IAAAt4C,CAAA,CAAbs4C,6BAAattC,QAAbstC,GAAartC,IAAA,IAApB,GAAOqtC,IAAPiC,6BCPFx8C,EAAA,QAAI,WAEA4D,EAAA,8BACF1D,EAAA,EACAF,EAAA,WAAqC,aACnC2D,EAAA,KAAmDzD,EAAA,EAAO,EAE5DF,EAAA,WAAsC,aACpC2D,EAAA,KAA0CzD,EAAA,EAAO,EAEnDF,EAAA,WAAA2D,EAAA,MAAyBzD,EAAA,EACzBF,EAAA,YAAA2D,EAAA,MAAyBzD,EAAA,EACzBF,EAAA,YAAAmE,EAAA,MAAoHP,EAAA,oBAAuCQ,EAAA,EAAAlE,EAAA,EAC3JF,EAAA,YAAAmE,EAAA,MAA0HP,EAAA,oBAA0CQ,EAAA,EAAAlE,EAAA,EACpKF,EAAA,YAAAmE,EAAA,MAA0HP,EAAA,oBAA0CQ,EAAA,EAAAlE,EAAA,EACpKF,EAAA,YAAA2D,EAAA,MAAiDzD,EAAA,EACjDF,EAAA,YAAAmE,EAAA,MAA2HP,EAAA,oBAA2CQ,EAAA,EAAAlE,EAAA,EACtKF,EAAA,YAAA2D,EAAA,MAA6DzD,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GALxBC,EAAA,IAAAiE,EAAA,aAAA/D,EAAA6vB,WAAA,EACA/vB,EAAA,GAAAiE,EAAA,aAAA/D,EAAA6vB,WAAA,EACA/vB,EAAA,GAAAiE,EAAA,aAAA/D,EAAA6vB,WAAA,EAEC/vB,EAAA,GAAAiE,EAAA,aAAA/D,EAAA6vB,WAAA,aAAAosB,GAAAt8C,CAAA,CAAAW,CAAA,KAAAX,CAAA,IASzCyD,EAAA,2BAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAEEkE,EAAA,UAAA/D,EAAAwgC,WAAA,EAAuB,QAAAxgC,EAAAygC,YAAA,aAAAyb,GAAAv8C,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAJ7BjG,EAAA,YAAqB,YAEjB6D,EAAA,EAAA84C,GAAA,6BAKFz8C,EAAA,EAEAF,EAAA,YAA4C,iCACsB2G,EAAA,kBAAAR,EAAA,CAAAC,EAAAmtB,CAAA,KAAA/yB,GAAA8F,EAAA,QAAAI,GAAUlG,EAAA2vB,SAAAhqB,CAAA,CAAgB,KAAEjG,EAAA,EAE5FF,EAAA,kBAAqD2G,EAAA,mBAAAP,EAAAmtB,CAAA,KAAA/yB,GAAA8F,EAAA,QAAAI,GAASlG,EAAA63B,WAAA,CAAY,KAAEn4B,EAAA,EAAY,EACpF,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAVDC,EAAA,GAAAiE,EAAA,OAAA/D,EAAA4gC,kBAAA,GAOoC9gC,EAAA,GAAAiE,EAAA,UAAA/D,EAAA40B,YAAA,aAAAwnB,GAAAz8C,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAqCvCuD,EAAA,GAAyCzD,EAAA,GAAAiE,CAAA,IAAA/D,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAAAnhB,EAAA,EAAAswB,EAAA,GAAAisB,EAAAhJ,SAAA,gBAAAiJ,GAAA38C,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAIzCH,EAAA,YACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAFqDkE,EAAA,UAAA/D,EAAAu8C,yBAAAF,EAAAN,OAAArhC,IAAA,GACnD5a,EAAA,EAAAswB,EAAA,IAAAisB,EAAAN,OAAArhC,KAAA,gBAAA8hC,GAAA78C,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAlCNH,EAAA,WAAiC,WAE7B4D,EAAA,wBACF1D,EAAA,EAEAF,EAAA,WACE4D,EAAA,+BACF1D,EAAA,EAEAF,EAAA,WACE4D,EAAA,2BAIF1D,EAAA,EAEAF,EAAA,QAAIC,EAAA,GAAoBC,EAAA,EAExBF,EAAA,QAAI,cAC4GC,EAAA,IAAoBC,EAAA,EAAO,EAG3IF,EAAA,SAAI,cACwGC,EAAA,IAA2BC,EAAA,EAAO,EAG9IF,EAAA,SAAIC,EAAA,IAAwBC,EAAA,EAE5BF,EAAA,SACE6D,EAAA,GAAAo5C,GAAA,uBACF/8C,EAAA,EAEAF,EAAA,SACE6D,EAAA,GAAAq5C,GAAA,cAGFh9C,EAAA,EACAF,EAAA,SAAIC,EAAA,IAAyBC,EAAA,EAE7BF,EAAA,YAAiB,UACVC,EAAA,IAAyBC,EAAA,EAC9BF,EAAA,UAAKC,EAAA,IAAyBC,EAAA,EAAM,EACjC,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA00B,QAAA,CAAA7yB,CAAA,CAAA7B,CAAA,CAAA2gB,SAAA,CAAA7e,CAAA,CAAAvC,CAAA,GA1CHkE,EAAA,iBAAAs4C,CAAA,EAEiBv8C,EAAA,GAAAiE,EAAA,QAAAs4C,CAAA,EAIOv8C,EAAA,GAAAiE,EAAA,cAAAs4C,CAAA,EAAyB,WAAAM,CAAA,EAMpB78C,EAAA,GAAAiE,EAAA,UAAA/D,EAAA48C,OAAA,EAAmB,QAAAP,CAAA,EAI9Cv8C,EAAA,GAAAC,EAAAs8C,EAAAV,IAAA,EAG8B77C,EAAA,GAAAiE,EAAA,QAAAs4C,EAAA96C,IAAA,EAAwB,UAAAvB,EAAA68C,yBAAAR,EAAA96C,IAAA,GAAsDzB,EAAA,EAAAC,EAAAs8C,EAAA96C,IAAA,EAI9EzB,EAAA,GAAAiE,EAAA,QAAAs4C,EAAArb,MAAAj5B,KAAA,EAA+B,UAAA/H,EAAA88C,mBAAAT,CAAA,GAA2Cv8C,EAAA,EAAAC,EAAAs8C,EAAArb,MAAAj5B,KAAA,EAGxGjI,EAAA,GAAAC,EAAAs8C,EAAAjL,QAAA,EAGatxC,EAAA,GAAAiE,EAAA,OAAAs4C,EAAAhJ,QAAA,EAITvzC,EAAA,GAAAiE,EAAA,OAAAs4C,EAAAN,QAAA,UAAAM,EAAAN,OAAArhC,IAAA,EAIJ5a,EAAA,GAAAC,EAAAs8C,EAAA9rB,SAAA,EAGGzwB,EAAA,GAAAC,EAAAs8C,EAAAU,SAAA,EACAj9C,EAAA,GAAAC,EAAAs8C,EAAAW,UAAA,aAAAC,GAAAt9C,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAwBLH,EAAA,YAAkDC,EAAA,GAAqBC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAArBnhB,EAAA,EAAAC,EAAAm9C,EAAAtgC,KAAA,aAAAugC,GAAAx9C,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAlBtDH,EAAA,QAAI,WACgB,YAEdC,EAAA,GAAgD2D,EAAA,QAChD3D,EAAA,GAAgD2D,EAAA,QAChD3D,EAAA,GAAgD2D,EAAA,QAClD1D,EAAA,EAEAF,EAAA,YAAkB,aAChB2D,EAAA,OAAqBzD,EAAA,EACrBF,EAAA,UAAKC,EAAA,IAAuBC,EAAA,EAAM,EAGpCF,EAAA,aAAkB,aAChB2D,EAAA,OAA6BzD,EAAA,EAC7BF,EAAA,UAAKC,EAAA,IAA8BC,EAAA,EAAM,EAG3C2D,EAAA,GAAA+5C,GAAA,cACF19C,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAhBDnhB,EAAA,GAAAswB,EAAA,iBAAA8sB,EAAAG,QAAA,UAAAH,EAAAG,OAAA1B,OAAA,SACA77C,EAAA,GAAAswB,EAAA,iBAAA8sB,EAAAH,WAAA,SACAj9C,EAAA,GAAAswB,EAAA,gBAAA8sB,EAAAF,YAAA,SAKKl9C,EAAA,GAAAC,EAAAm9C,EAAAvC,OAAA,EAKA76C,EAAA,GAAAC,EAAAm9C,EAAAtC,cAAA,EAGD96C,EAAA,EAAAiE,EAAA,OAAAm5C,EAAAtgC,KAAA,aAAA0gC,GAAA39C,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAMVH,EAAA,QAAI,WACgB,YAEd0D,EAAA,GAAAC,EAAA,MAAAO,CAAA,GACFhE,EAAA,EAAM,EACH,IC5FX,GAAa69C,KAAuB,KAA9B,GAAOA,GAAP,KAAOA,UAA+BjnB,GAAoB,CACtDknB,cAAgB5zC,EAAOmwC,EAAa,EACpCp+B,SAAW/R,EAAOgS,CAAQ,EAC1B2a,eAAiB3sB,EAAO4sB,EAAc,EAE9CinB,WAAmC,GACnChsB,aAAe,EAEfK,KAAiB,CAAEC,MAAO,YAAaC,MAAO,EAAE,EAChDJ,WAA6B,CAAEoF,MAAO,KAAKtF,YAAaG,MAAO,CAAC,EAEhE+qB,QAAyC,GACzCpc,YAA+C,GAE/C5L,aAAsC,CACpC,CACEtF,+GAAOttB,CACPitB,SAAU,CACR,CACEztB,MAAO,kBACPuG,qHAAO/F,EAET,CACER,MAAO,6CACPuG,yGAAO/F,EAET,CACER,MAAO,mBACPuG,gHAAO/F,EAET,CACER,MAAO,qCACPuG,yGAAO/F,CACR,EAEJ,EAGHgI,UAAQ,CACN,KAAK4yC,QAAU,CACb,CACE,CACE70C,sHAAO/F,CACPu1B,QAAS6b,GAAO,KAAKqI,WAAW,CAAErI,CAAG,CAAE,EACvCjc,YAAaic,GAAO,KAAKsK,aAAatK,CAAG,EAC1C,EAEH,CACE,CACErrC,gHAAO/F,CACPu1B,QAAS6b,GAAO,KAAKwI,WAAW,CAAExI,CAAG,CAAE,EACxC,CACF,EAGH,KAAK5S,YAAc,CACjB,CACE,CACEz4B,4CAAO/F,CACPu1B,QAASyb,GAAQ,KAAKyI,WAAWzI,CAAI,EACrC7b,YAAa6b,GAAQA,EAAK2K,MAAMC,GAAK,KAAKF,aAAaE,CAAC,CAAC,EAC1D,EAEH,CACE,CACE71C,kDAAO/F,CACPu1B,QAASyb,GAAQ,KAAK4I,WAAW5I,CAAI,EACtC,CACF,EAGH,KAAK9a,WAAU,CACjB,EAEAhH,eAAa,CACX,MAAO,wBACT,EAEMuqB,WAAYzI,EAAiB,OAAAlb,IAAA,sBACjC,GAAMtqB,GAAUsK,kkBAEd,CAAEkf,MAAOgc,EAAK5oC,MAAM,CAAE,GAGZ,KAAM,MAAKmsB,eAAewB,QAAQvqB,wCAA0B,KAE5D,IAEZ,KAAKgwC,cAAc/B,WAAWzI,CAAI,EAC/B9/B,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKob,WAAU,EAEf,KAAKlc,SAASe,QACZ5E,mOAEE,CAAEkf,MAAOgc,EAAK5oC,MAAM,CAAE,CACvB,CAEL,GAEAwS,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,KAEMouC,WAAY5I,EAAiB,OAAAlb,IAAA,sBACjC,GAAMtqB,GAAUsK,ynBAEd,CAAEkf,MAAOgc,EAAK5oC,MAAM,CAAE,GAGZ,KAAM,MAAKmsB,eAAewB,QAAQvqB,8CAA0B,KAE5D,IAEZ,KAAKgwC,cAAc5B,WAAW5I,CAAI,EAC/B9/B,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKob,WAAU,EAEf,KAAKlc,SAASe,QACZ5E,uNAEE,CAAEkf,MAAOgc,EAAK5oC,MAAM,CAAE,CACvB,CAEL,GAEAwS,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,KAEAsvC,mBAAoB1J,EAAc,CAChC,OAAQA,EAAIpS,MAAMz5B,IAChB,IAAK2zC,IAAeG,QACpB,IAAKH,IAAeK,eAClB,MAAO,eAET,IAAKL,IAAeC,UAClB,MAAO,gBAET,IAAKD,IAAetY,QACpB,IAAKsY,IAAeI,uBAClB,MAAO,gBAET,QACE,MAAO,YACX,EACF,CAEAiB,yBAA0B/6C,EAAa,CACrC,MAAO,MAAK+xC,eAAe,SAAU/xC,CAAK,CAC5C,EAEAq7C,yBAA0Br7C,EAAa,CACrC,MAAO,MAAK+xC,eAAe,OAAQ/xC,CAAK,CAC1C,EAEUy3B,oBAAkB,CAC1B,KAAKukB,cAAcnD,eAAe,CAAEzoB,WAAY,KAAKA,WAAYE,KAAM,KAAKA,KAAMhjB,OAAQ,KAAKA,MAAM,CAAE,EACpGoE,UAAU,CACTuJ,KAAM0c,GAAa,CACjB,KAAKskB,WAAatkB,EAAW/sB,KAC7B,KAAKqlB,aAAe0H,EAAWC,KACjC,GAEAxc,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEQkwC,aAActK,EAAc,CAClC,MAAOA,GAAIpS,MAAMz5B,KAAO2zC,GAAetY,SACrCwQ,EAAIpS,MAAMz5B,KAAO2zC,GAAeE,YAChChI,EAAIpS,MAAMz5B,KAAO2zC,GAAeI,sBACpC,IAAA75C,CAAA,CA9KW87C,8DAAsB,IAAAlwB,GAAtBkwB,CAAsB,UAAA97C,CAAA,CAAtB87C,wBAAsB77C,UAAA,yBAAA0G,SAAA,CAAAklB,EAAA,EAAA1rB,MAAA,EAAAC,KAAA,GAAAC,WAAA,IAAAC,yGDvBOC,iEAGCA,2DAGAA,eAEhBA,6BACAA,mEAC+F,iBAA0B,uBAAa,QAAAS,CAAA,CAAAA,CAAA,2DACjC,iBAA6B,sBAAa,QAAAC,CAAA,CAAAA,CAAA,2DAC1C,iBAA6B,sBAAa,QAAAC,CAAA,CAAAA,CAAA,mDACzHX,uDACgF,iBAA8B,sBAAa,QAAAa,CAAA,CAAAA,CAAA,sHAC3Hb,4GASOA,2DASnBA,mHAQmBA,2DAU5BA,6GA4CLA,oKAKAA,8KAaMA,o1DA3H7BxC,EAAA,gBAGgB2G,EAAA,sBAAAR,EAAA,OAAc3B,GAAAmtB,SAAAxrB,CAAA,CAAgB,IAC5CD,GAAA,2BAAAC,EAAA,CAAAI,MAAAC,IAAAhC,EAAAy8B,aAAA96B,CAAA,IAAA3B,EAAAy8B,aAAA96B,IAAA,IAGAtC,EAAA,EAAAw6C,GAAA,uBAAgC,EAAAC,GAAA,sBAsBC,EAAAC,GAAA,wBAmBmC,EAAAC,GAAA,uBA+ChB,EAAAC,GAAA,sBAiCtDv+C,EAAA,GAAA0C,CAAA,KA/HE2B,EAAA,QAAAC,EAAAy5C,UAAA,EAAoB,YAAAz5C,EAAAytB,aAAA,GAA+B,eAAAztB,EAAAytB,YAAA,EAA8B,OAAAztB,EAAA0tB,WAAA,EAAqB,QAAA1tB,EAAA4tB,WAAAC,KAAA,EAA2B,qBAAA7tB,EAAA2tB,kBAAA,EACxF,YAAA3tB,EAAA8tB,KAAAC,KAAA,EAAyB,YAAA/tB,EAAA8tB,KAAAE,KAAA,EAAyB,WAC9E,qBACb1rB,GAAA,YAAAtC,EAAAy8B,YAAA,EAA6B18B,EAAA,4BAA8B,4BAAAC,EAAAiuB,sBAAA,GAAsD,kBAAAjuB,EAAA61B,YAAA,KAAAx1B,YAAA,ECiB/G6tB,GAAWC,GAAAC,GAAAC,GAAAkR,GAAAzJ,GAAAxH,GAAAkR,GAAAC,GACXlR,GACAE,GACAxtB,EACA+0B,GACAxH,GACAyW,GACAlP,GACA/0B,GACA2tB,EAAoB,EAAA1pB,cAAA,KAGlB,GAAOs0C,GAAPW,QAAOX,EAAuB,eAAAY,GAAAx+C,CAAA,CAAAW,CAAA,KAAAX,CAAA,KC1BhCH,EAAA,QAAI,WACoC,aACpC2D,EAAA,KAA0CzD,EAAA,EAAO,EAEnDF,EAAA,WAAA2D,EAAA,KAAyBzD,EAAA,EACzBF,EAAA,WAAA2D,EAAA,KAAgCzD,EAAA,EAChCF,EAAA,WAAA2D,EAAA,KAAuBzD,EAAA,EACvBF,EAAA,YAAA2D,EAAA,MAAiCzD,EAAA,EACjCF,EAAA,YAAAmE,EAAA,MAA2HP,EAAA,oBAA2CQ,EAAA,EAAAlE,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAhIC,EAAA,IAAAiE,EAAA,aAAA/D,EAAA6vB,WAAA,aAAAuuB,GAAAz+C,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAK7CH,EAAA,QAAI,WAEA4D,EAAA,2BAIF1D,EAAA,EAEAF,EAAA,QAAIC,EAAA,GAAiBC,EAAA,EAErBF,EAAA,QAAIC,EAAA,GAAwBC,EAAA,EAE5BF,EAAA,QAAIC,EAAA,GAAeC,EAAA,EAEnBF,EAAA,QAAIC,EAAA,IAAA2J,EAAA,cAA0C1J,EAAA,EAE9CF,EAAA,SAAIC,EAAA,IAAA2J,EAAA,cAAwC1J,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAZlBC,EAAA,GAAAiE,EAAA,UAAA/D,EAAA48C,OAAA,EAAmB,QAAAyB,CAAA,EAI9Cv+C,EAAA,GAAAC,EAAAs+C,EAAA3jC,IAAA,EAEA5a,EAAA,GAAAC,EAAAs+C,EAAAtrC,WAAA,EAEAjT,EAAA,GAAAC,EAAAs+C,EAAApP,EAAA,EAEAnvC,EAAA,GAAAC,EAAAsJ,GAAA,KAAAg1C,EAAAC,YAAA,UAEAx+C,EAAA,GAAAC,EAAAsJ,GAAA,MAAAg1C,EAAA9tB,UAAA,qBAAAguB,GAAA5+C,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAKNH,EAAA,QAAI,WACgB,YAEd0D,EAAA,GAAAC,EAAA,KAAAO,CAAA,GACFhE,EAAA,EAAM,EACH,ICvBX,GAAa8+C,KAAoB,KAA3B,GAAOA,GAAP,KAAOA,UAA4BloB,GAAiB,CAChDknB,cAAgB5zC,EAAOmwC,EAAa,EACpCp+B,SAAW/R,EAAOgS,CAAQ,EAC1B2a,eAAiB3sB,EAAO4sB,EAAc,EAE9CioB,QAAoB,GACpBhtB,aAAe,EAEfK,KAAiB,CAAEC,MAAO,YAAaC,MAAO,EAAE,EAChDJ,WAA6B,CAAEoF,MAAO,KAAKtF,YAAaG,MAAO,CAAC,EAEhE+qB,QAAsC,GAEtC5yC,UAAQ,CACN,KAAK4yC,QAAU,CACb,CACE,CACE70C,kDAAO/F,CACPu1B,QAASmnB,GAAS,KAAK5C,aAAa4C,CAAK,EAC1C,CACF,EAGH,KAAKxmB,WAAU,CACjB,EAEAhH,eAAa,CACX,MAAO,qBACT,EAEM4qB,aAAcC,EAAc,OAAAjkB,IAAA,uBACpB,KAAM,MAAKvB,eAAewB,ohBAEjBgkB,EAAOrhC,IAAI,GAAE,KAGtB,IAEZ,KAAK8iC,cAAc1B,aAAaC,CAAM,EACnC7oC,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKob,WAAU,EACf,KAAKlc,SAASe,gGAAkC,CAClD,GAEAE,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,KAEUyrB,oBAAkB,CAC1B,KAAKukB,cAAc3B,YAAY,CAAEjqB,WAAY,KAAKA,WAAYE,KAAM,KAAKA,IAAI,CAAE,EAC5E5e,UAAU,CACTuJ,KAAM0c,GAAa,CACjB,KAAKslB,QAAUtlB,EAAW/sB,KAC1B,KAAKqlB,aAAe0H,EAAWC,KACjC,GAEAxc,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,IAAA/L,CAAA,CA3DW+8C,8DAAmB,IAAAnxB,GAAnBmxB,CAAmB,UAAA/8C,CAAA,CAAnB+8C,wBAAmB98C,UAAA,qBAAA0G,SAAA,CAAAklB,EAAA,EAAA1rB,MAAA,EAAAC,KAAA,GAAAC,WAAA,IAAAC,uDDdWC,6BAEhBA,2DACAA,aACAA,4GACAA,uDACsG,iBAA8B,sBAAa,QAAAS,CAAA,CAAAA,CAAA,mDAShJT,wLAoBCA,mpBA5C7BxC,EAAA,eAGgB2G,EAAA,sBAAAR,EAAA,OAAc3B,GAAAmtB,SAAAxrB,CAAA,CAAgB,IAG5CtC,EAAA,EAAAs7C,GAAA,sBAAgC,EAAAC,GAAA,uBAaS,EAAAC,GAAA,sBA8B3Cn/C,EAAA,GAAA0C,CAAA,IAhDE2B,EAAA,QAAAC,EAAAy6C,OAAA,EAAiB,YAAAz6C,EAAAytB,aAAA,GAA+B,eAAAztB,EAAAytB,YAAA,EAA8B,OAAAztB,EAAA0tB,WAAA,EAAqB,QAAA1tB,EAAA4tB,WAAAC,KAAA,EAA2B,qBAAA7tB,EAAA2tB,kBAAA,EACrF,YAAA3tB,EAAA8tB,KAAAC,KAAA,EAAyB,YAAA/tB,EAAA8tB,KAAAE,KAAA,EAAyB,WAC9E,4BACiB,4BAAAhuB,EAAAiuB,sBAAA,KAAA5tB,YAAA,ECW5B6tB,GAAWC,GAAAC,GAAAC,GAAAC,GACXC,GACAE,GACAuH,GACArH,GACAC,EAAU,EAAA3pB,cAAA,KAGR,GAAOu1C,GAAPM,QAAON,EAAoB,eAAAO,GAAAp/C,CAAA,CAAAW,CAAA,KAAAX,CAAA,KChB7BH,EAAA,QAAI,WACoC,aACpC2D,EAAA,KAA0CzD,EAAA,EAAO,EAEnDF,EAAA,WAAA2D,EAAA,KAA0BzD,EAAA,EAC1BF,EAAA,WAAAmE,EAAA,KAA2HP,EAAA,mBAA2CQ,EAAA,EAAAlE,EAAA,EACtKF,EAAA,WAAA2D,EAAA,MAA6DzD,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GADvBC,EAAA,GAAAiE,EAAA,aAAA/D,EAAA6vB,WAAA,aAAAmvB,GAAAr/C,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAM7CjG,EAAA,YAAqB,YACO,kBACgD2G,EAAA,mBAAAP,EAAAmtB,CAAA,KAAA/yB,GAAA8F,EAAA,QAAAI,GAASlG,EAAAk6C,cAAA,CAAe,KAAEx6C,EAAA,EAAY,EAC1G,aAAAu/C,GAAAt/C,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAKRH,EAAA,QAAI,WAEA4D,EAAA,2BAIF1D,EAAA,EAEAF,EAAA,QACEC,EAAA,GAEA2D,EAAA,uBAIF1D,EAAA,EAEAF,EAAA,QAAIC,EAAA,GAAA2J,EAAA,aAAoD1J,EAAA,EAExDF,EAAA,QAAIC,EAAA,IAA8CC,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAfxBC,EAAA,GAAAiE,EAAA,UAAA/D,EAAA48C,OAAA,EAAmB,QAAAsC,CAAA,EAKhDp/C,EAAA,GAAAswB,EAAA,IAAA8uB,EAAAC,kBAAA,KAGEr/C,EAAA,EAAAiE,EAAA,QAAAm7C,EAAAC,iBAAA,EAKAr/C,EAAA,GAAAC,EAAAsJ,GAAA,IAAA61C,EAAA3uB,UAAA,UAEAzwB,EAAA,GAAAC,EAAAm/C,EAAAE,sBAAA,aAAAC,GAAA1/C,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAKNH,EAAA,QAAI,WACgB,YAEd0D,EAAA,GAAAC,EAAA,KAAAO,CAAA,GACFhE,EAAA,EAAM,EACH,ICzBX,GAAa4/C,KAAqC,KAA5C,GAAOA,GAAP,KAAOA,UAA6ChpB,GAAkC,CAClFknB,cAAgB5zC,EAAOmwC,EAAa,EACpCp+B,SAAW/R,EAAOgS,CAAQ,EAC1B2a,eAAiB3sB,EAAO4sB,EAAc,EAE9C+oB,mBAAgD,GAChD9tB,aAAe,EAEfK,KAAiB,CAAEC,MAAO,YAAaC,MAAO,EAAE,EAChDJ,WAA6B,CAAEoF,MAAO,KAAKtF,YAAaG,MAAO,CAAC,EAEhE+qB,QAAuD,GAEvD5yC,UAAQ,CACN,KAAK4yC,QAAU,CACb,CACE,CACE70C,0GAAO/F,CACPu1B,QAAS6iB,GAAS,KAAKD,YAAYC,CAAK,EACzC,CACF,EAGH,KAAKliB,WAAU,CACjB,EAEAhH,eAAa,CACX,MAAO,sCACT,EAEAgpB,eAAa,CACX,KAAKsD,cAActD,cAAa,EAC7BhnC,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKob,WAAU,EACf,KAAKlc,SAASe,6MAAgD,CAChE,GAEAE,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEM2sC,YAAaC,EAA8B,OAAAtiB,IAAA,uBACnC,KAAM,MAAKvB,eAAewB,2tBAEA,KAG1B,IAEZ,KAAKylB,cAAcrD,YAAYC,CAAK,EACjClnC,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKob,WAAU,EACf,KAAKlc,SAASe,yKAA8C,CAC9D,GAEAE,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,KAEUyrB,oBAAkB,CAC1B,KAAKukB,cAAcxD,uBAAuB,CAAEpoB,WAAY,KAAKA,WAAYE,KAAM,KAAKA,IAAI,CAAE,EACvF5e,UAAU,CACTuJ,KAAM0c,GAAa,CACjB,KAAKomB,mBAAqBpmB,EAAW/sB,KACrC,KAAKqlB,aAAe0H,EAAWC,KACjC,GAEAxc,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,IAAA/L,CAAA,CAvEW69C,8DAAoC,IAAAjyB,GAApCiyB,CAAoC,UAAA79C,CAAA,CAApC69C,wBAAoC59C,UAAA,wCAAA0G,SAAA,CAAAklB,EAAA,EAAA1rB,MAAA,EAAAC,KAAA,GAAAC,WAAA,IAAAC,uDDrBNC,yCAEhBA,uDACsG,gBAA8B,qBAAa,QAAAM,CAAA,CAAAA,CAAA,gHAC3HN,wHAOIA,2DAUzBA,yKAQ4DA,yKAC5DA,qUAcCA,s0BArD7BxC,EAAA,eAGgB2G,EAAA,sBAAAR,EAAA,OAAc3B,GAAAmtB,SAAAxrB,CAAA,CAAgB,IAG5CtC,EAAA,EAAAm8C,GAAA,sBAAgC,EAAAC,GAAA,qBAWC,EAAAC,GAAA,sBAQmB,EAAAC,GAAA,qBAiCtDjgD,EAAA,GAAA0C,CAAA,IAzDE2B,EAAA,QAAAC,EAAAu7C,kBAAA,EAA4B,YAAAv7C,EAAAytB,aAAA,GAA+B,eAAAztB,EAAAytB,YAAA,EAA8B,OAAAztB,EAAA0tB,WAAA,EAAqB,QAAA1tB,EAAA4tB,WAAAC,KAAA,EAA2B,qBAAA7tB,EAAA2tB,kBAAA,EAChG,YAAA3tB,EAAA8tB,KAAAC,KAAA,EAAyB,YAAA/tB,EAAA8tB,KAAAE,KAAA,EAAyB,WAC9E,4BACiB,4BAAAhuB,EAAAiuB,sBAAA,KAAA5tB,YAAA,ECgB5B6tB,GAAWC,GAAAC,GAAAC,GAAAC,GACXC,GACAE,GACAwW,GACAjP,GACA6f,GACAlnB,GACAC,EAAU,EAAAztB,OAAA;kFAAA,KAGR,GAAOm6C,GAAPM,QAAON,EAAqC,MCvB3C,GAAMO,IAAwB,CACnC,CACEhtC,KAAM,UACN+b,YAAa,CAAEC,EAAc,EAC7BziB,KAAM,CACJ0iB,UAAWC,EAAU+wB,gBAEvB7wB,SAAU,CACR,CACEpc,KAAM,GACNqc,WAAY,YACZC,UAAW,QAGb,CACEtc,KAAM,YACNuc,UAAWmuB,GACXnxC,KAAM,CACJijB,KAAM,CACJC,oJAAOttB,IAKb,CACE6Q,KAAM,eACNuc,UAAWovB,GACXpyC,KAAM,CACJijB,KAAM,CACJC,gKAAOttB,IAKb,CACE6Q,KAAM,2BACNuc,UAAWkwB,GACXlzC,KAAM,CACJijB,KAAM,CACJC,iQAAOttB,GAGZ,EAEJ,EC3CI,GAAM+9C,IAAuB,CAClC,CACEltC,KAAM,SACNoc,SAAU,CACR,CACEpc,KAAM,GACNqc,WAAY,OACZC,UAAW,QAEb,CACEtc,KAAM,OACN+b,YAAa,CAAEC,EAAc,EAC7BO,UAAWojB,GACXpmC,KAAM,CACJijB,KAAM,CACJP,UAAWC,EAAUixB,YACrB1wB,kDAAOttB,IAIb,CACE6Q,KAAM,OACN+b,YAAa,CAAEC,EAAc,EAC7BO,UAAWkoB,GACXlrC,KAAM,CACJijB,KAAM,CACJP,UAAWC,EAAUkxB,YACrB3wB,kDAAOttB,IAIb,CACE6Q,KAAM,QACN+b,YAAa,CAAEC,EAAc,EAC7BO,UAAWyf,GACXziC,KAAM,CACJijB,KAAM,CACJP,UAAWC,EAAUmxB,aACrB5wB,kDAAOttB,IAKb,GAAG69C,EAAa,EAEnB,EC1CH,GAAaM,KAAwB,KAA/B,GAAOA,GAAP,KAAOA,EAAwB,CAC3BC,KAAOx2C,EAAOy2C,EAAW,EACzB12C,OAASC,EAAOC,EAAa,EAErCy2C,YAAqC,GAErCt2C,UAAQ,CACN,KAAKL,OAAO42C,eAAertC,UAAU,IAAM,KAAKstC,UAAS,CAAE,EAE3D,KAAKA,UAAS,CAChB,EAEQA,WAAS,CAwBf,GAvBA,KAAKF,YAAc,GAEf,KAAKG,SAAS1xB,EAAUgV,aAAa,GACvC,KAAKuc,YAAY1tC,KAAK,CACpB7K,4CAAO/F,CACP0+C,WAAY,gCACb,EAGC,KAAKD,SAAS1xB,EAAUkV,oBAAoB,GAC9C,KAAKqc,YAAY1tC,KAAK,CACpB7K,0EAAO/F,CACP0+C,WAAY,uCACb,EAGC,KAAKD,SAAS1xB,EAAUiV,sBAAsB,GAChD,KAAKsc,YAAY1tC,KAAK,CACpB7K,mGAAO/F,CACP0+C,WAAY,sCACb,EAGC,KAAKD,SAAS1xB,EAAUmV,yBAAyB,GAAK,KAAKuc,SAAS1xB,EAAUoV,wBAAwB,EAAG,CAC3G,GAAMwc,GAA4B,CAChC54C,8DAAO/F,CACP0+C,WAAY,GACZzxB,SAAU,IAGR,KAAKwxB,SAAS1xB,EAAUmV,yBAAyB,GACnDyc,EAAK1xB,SAASrc,KAAK,CACjB7K,0JAAO/F,CACP0+C,WAAY,uCACb,EAGC,KAAKD,SAAS1xB,EAAUoV,wBAAwB,GAClDwc,EAAK1xB,SAASrc,KAAK,CACjB7K,qHAAO/F,CACP0+C,WAAY,sCACb,EAGHC,EAAKD,WAAaC,EAAK1xB,SAAS,CAAC,EAAEyxB,WAEnC,KAAKJ,YAAY1tC,KAAK+tC,CAAI,CAC5B,EAEI,KAAKF,SAAS1xB,EAAUqV,6BAA6B,GACvD,KAAKkc,YAAY1tC,KAAK,CACpB7K,qEAAO/F,CACP0+C,WAAY,uCACb,CAEL,EAEQD,SAAUG,EAAoB,CACpC,MAAO,MAAKR,KAAKS,QAAO,EAAGJ,SAASG,CAAK,CAC3C,IAAAn/C,CAAA,CAxEW0+C,4CAAwB,IAAA1+C,CAAA,CAAxB0+C,wBAAwBz+C,UAAA,0BAAAE,MAAA,EAAAC,KAAA,EAAAC,WAAA,IAAAC,6DCPDC,mCAH0HA,4UAD9JxC,EAAA,WAAkB,SACoF2G,EAAA,iBAAAR,EAAA,CAAAC,EAAAC,CAAA,KAAAi7C,GAAAC,GAAA,GAASp7C,SAAAq7C,eAAA,EAAuB96C,EAAE46C,EAAAG,MAAA,CAAoB,KAA1J99C,EAAA,KAA6KzD,EAAA,EAE7KF,EAAA,WACE4D,EAAA,0BACF1D,EAAA,EAEAF,EAAA,aACE4D,EAAA,mBACF1D,EAAA,EAAM,GAAA0C,CAAA,KAL4DtC,EAAA,GAAAiE,EAAA,cAAAC,EAAAs8C,WAAA,KAAAj8C,YAAA,EDKvD68C,GAAyBC,EAAY,EAAAl4C,cAAA,KAE5C,GAAOk3C,GAAPiB,QAAOjB,EAAwB,MEArC,GAAakB,KAAsB,KAA7B,GAAOA,GAAP,KAAOA,EAAsB,CACzBjB,KAAOx2C,EAAOy2C,EAAW,EAEjCC,YAAqC,GAErCt2C,UAAQ,CACN,KAAKw2C,UAAS,CAChB,EAEQA,WAAS,CACf,KAAKF,YAAc,GAEf,KAAKG,SAAS1xB,EAAUuyB,YAAY,GACtC,KAAKhB,YAAY1tC,KAAK,CACpB7K,gFAAO/F,CACP0+C,WAAY,wBACb,EAGC,KAAKD,SAAS1xB,EAAUwyB,cAAc,GACxC,KAAKjB,YAAY1tC,KAAK,CACpB7K,sCAAO/F,CACP0+C,WAAY,yBACZhZ,YAAa,CACX54B,OAAQ,gBAEX,EAGC,KAAK2xC,SAAS1xB,EAAUyyB,gBAAgB,GAC1C,KAAKlB,YAAY1tC,KAAK,CACpB7K,0EAAO/F,CACP0+C,WAAY,2BACb,CAEL,EAEQD,SAAUG,EAAoB,CACpC,MAAO,MAAKR,KAAKS,QAAO,EAAGJ,SAASG,CAAK,CAC3C,IAAAn/C,CAAA,CAvCW4/C,4CAAsB,IAAA5/C,CAAA,CAAtB4/C,wBAAsB3/C,UAAA,wBAAAE,MAAA,EAAAC,KAAA,EAAAC,WAAA,IAAAC,qCCPCC,mCAHwHA,sUAD5JxC,EAAA,WAAkB,SACkF2G,EAAA,iBAAAR,EAAA,CAAAC,EAAAC,CAAA,KAAAi7C,GAAAC,GAAA,GAASp7C,SAAAq7C,eAAA,EAAuB96C,EAAE46C,EAAAG,MAAA,CAAoB,KAAxJ99C,EAAA,KAA2KzD,EAAA,EAE3KF,EAAA,WACE4D,EAAA,0BACF1D,EAAA,EAEAF,EAAA,aACE4D,EAAA,mBACF1D,EAAA,EAAM,GAAA0C,CAAA,KALwDtC,EAAA,GAAAiE,EAAA,cAAAC,EAAAs8C,WAAA,KAAAj8C,YAAA,EDKnD68C,GAAyBC,EAAY,EAAAl4C,cAAA,KAE5C,GAAOo4C,GAAPI,QAAOJ,EAAsB,MEAnC,GAAaK,KAAsB,KAA7B,GAAOA,GAAP,KAAOA,EAAsB,CACzBtB,KAAOx2C,EAAOy2C,EAAW,EACzB12C,OAASC,EAAOC,EAAa,EAErCy2C,YAAqC,GAErCt2C,UAAQ,CACN,KAAKL,OAAO42C,eAAertC,UAAU,IAAM,KAAKstC,UAAS,CAAE,EAE3D,KAAKA,UAAS,CAChB,EAEQA,WAAS,CACf,KAAKF,YAAc,GAEnB,KAAKqB,wBAAuB,EAC5B,KAAKC,qBAAoB,EACzB,KAAKC,iBAAgB,EACrB,KAAKC,iBAAgB,EACrB,KAAKC,iBAAgB,CACvB,EAEQH,sBAAoB,CACrB,KAAKnB,SAAS1xB,EAAUizB,oBAAoB,GAEjD,KAAK1B,YAAY1tC,KAAK,CACpB7K,8DAAO/F,CACP0+C,WAAY,yCACZzxB,SAAU,CACR,CACElnB,iFAAO/F,CACP0+C,WAAY,0CAEd,CACE34C,oEAAO/F,CACP0+C,WAAY,0CAEd,CACE34C,iFAAO/F,CACP0+C,WAAY,kDACb,EAEJ,CACH,EAEQiB,yBAAuB,CACzB,KAAKlB,SAAS1xB,EAAUC,oBAAoB,GAC9C,KAAKsxB,YAAY1tC,KAAK,CAAE7K,gFAAO/F,CAA0B0+C,WAAY,wBAAwB,CAAE,CAEnG,EAEQmB,kBAAgB,CAClB,KAAKpB,SAAS1xB,EAAUyf,cAAc,GACxC,KAAK8R,YAAY1tC,KAAK,CACpB7K,2EAAO/F,CACP0+C,WAAY,0BACZhZ,YAAa,CACX9C,WAAYH,GAAWC,QAEzBzV,SAAU,CACR,CACElnB,yBAAO/F,CACP0+C,WAAY,yCACZhZ,YAAa,CACX9C,WAAYH,GAAWC,SAG3B,CACE38B,uFAAO/F,CACP0+C,WAAY,iCACZhZ,YAAa,CACX9C,WAAYH,GAAWC,SAG3B,CACE38B,wBAAO/F,CACP0+C,WAAY,yCACZhZ,YAAa,CACX9C,WAAYH,GAAW4D,QAG3B,CACEtgC,qBAAO/F,CACP0+C,WAAY,iCACZhZ,YAAa,CACX9C,WAAYH,GAAW4D,OAE1B,EAEJ,CAEL,EAEQyZ,kBAAgB,CAClB,CAAC,KAAKG,uBAAsB,GAAM,CAAC,KAAKxB,SAAS1xB,EAAU+wB,cAAc,GAE7E,KAAKQ,YAAY1tC,KAAK,CACpB7K,eAAO/F,CACP0+C,WAAY,8CACZzxB,SAAU,CACR,CACElnB,qHAAO/F,CACP0+C,WAAY,+CAGd,CACE34C,yGAAO/F,CACP0+C,WAAY,4CAGd,CACE34C,uIAAO/F,CACP0+C,WAAY,0DACb,EAEJ,CACH,EAEQqB,kBAAgB,CACtB,GAAMG,GAAmC,CACvCn6C,kDAAO/F,CACP0+C,WAAY,GACZzxB,SAAU,IAGR,KAAKwxB,SAAS1xB,EAAUixB,WAAW,GACrCkC,EAAYjzB,SAASrc,KAAK,CACxB7K,yGAAO/F,CACP0+C,WAAY,8BACb,EAGC,KAAKD,SAAS1xB,EAAUkxB,WAAW,GACrCiC,EAAYjzB,SAASrc,KAAK,CACxB7K,kDAAO/F,CACP0+C,WAAY,8BACb,EAGC,KAAKD,SAAS1xB,EAAUmxB,YAAY,GACtCgC,EAAYjzB,SAASrc,KAAK,CACxB7K,kDAAO/F,CACP0+C,WAAY,+BACb,EAGCwB,EAAYjzB,SAAS7kB,SAAW,IAEpC83C,EAAYxB,WAAawB,EAAYjzB,SAAS,CAAC,EAAEyxB,WAEjD,KAAKJ,YAAY1tC,KAAKsvC,CAAW,EACnC,EAEQzB,SAAUG,EAAoB,CACpC,MAAO,MAAKR,KAAKS,QAAO,EAAGJ,SAASG,CAAK,CAC3C,EAEQqB,wBAAsB,CAC5B,GAAMxkC,GAAS,KAAK9T,OAAOM,cAAa,EAExC,MAAOwT,GAAOvT,YAAY4M,cAAcjM,SACtC4S,EAAOzG,KAAK9M,YAAY4M,cAAcjM,SACtC4S,EAAOvG,YAAYJ,cAAcjM,SACjC4S,EAAOlL,mBAAmBuE,cAAcjM,OAC5C,IAAApJ,CAAA,CApKWigD,4CAAsB,IAAAjgD,CAAA,CAAtBigD,wBAAsBhgD,UAAA,wBAAAE,MAAA,EAAAC,KAAA,EAAAC,WAAA,IAAAC,6DCPCC,mCAHwHA,oUAD5JxC,EAAA,WAAkB,SACkF2G,EAAA,iBAAAR,EAAA,CAAAC,EAAAC,CAAA,KAAAi7C,GAAAC,GAAA,GAASp7C,SAAAq7C,eAAA,EAAuB96C,EAAE46C,EAAAG,MAAA,CAAoB,KAAxJ99C,EAAA,KAA2KzD,EAAA,EAE3KF,EAAA,WACE4D,EAAA,0BACF1D,EAAA,EAEAF,EAAA,aACE4D,EAAA,mBACF1D,EAAA,EAAM,GAAA0C,CAAA,KALsDtC,EAAA,GAAAiE,EAAA,cAAAC,EAAAs8C,WAAA,KAAAj8C,YAAA,EDKjD68C,GAAyBC,EAAY,EAAAl4C,cAAA,KAE5C,GAAOy4C,GAAPS,QAAOT,EAAsB,eAAAU,GAAAziD,CAAA,CAAAW,CAAA,KAAAX,CAAA,IED3ByD,EAAA,2BAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAEEkE,EAAA,UAAAuB,EAAAk7B,WAAA,EAAuB,QAAAl7B,EAAAm7B,YAAA,aAAA4hB,GAAA1iD,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAJ7BjG,EAAA,YAAqB,YAEjB6D,EAAA,EAAAi/C,GAAA,6BAKF5iD,EAAA,EAEAF,EAAA,YAAqB,iCACiC2G,EAAA,kBAAAR,EAAA,CAAAC,EAAAC,CAAA,KAAAP,GAAAQ,EAAA,QAAAI,GAAUZ,EAAAqqB,SAAAhqB,CAAA,CAAgB,KAAEjG,EAAA,EAA2B,EACvG,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GARDC,EAAA,GAAAiE,EAAA,OAAAuB,EAAAs7B,kBAAA,GAOuB9gC,EAAA,GAAAiE,EAAA,UAAAuB,EAAAi9C,aAAA,aAAAC,GAAA7iD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAM9BH,EAAA,QAAI,WAEA4D,EAAA,8BACF1D,EAAA,EACAF,EAAA,WAAA2D,EAAA,KAAkDzD,EAAA,EAClDF,EAAA,WAAA2D,EAAA,KAA6BzD,EAAA,EAC7BF,EAAA,WAAAmE,EAAA,KAAqHP,EAAA,mBAAuCQ,EAAA,EAAAlE,EAAA,EAC5JF,EAAA,YAAAmE,EAAA,MAA2HP,EAAA,oBAAuCQ,EAAA,EAAAlE,EAAA,EAClKF,EAAA,YAAAmE,EAAA,MAA2HP,EAAA,oBAA2CQ,EAAA,EAAAlE,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAFhIC,EAAA,GAAAiE,EAAA,aAAAuB,EAAAuqB,WAAA,EACA/vB,EAAA,GAAAiE,EAAA,aAAAuB,EAAAuqB,WAAA,EACA/vB,EAAA,GAAAiE,EAAA,aAAAuB,EAAAuqB,WAAA,aAAA4yB,GAAA9iD,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAWzCjG,EAAA,kBAAqF2G,EAAA,mBAAAP,EAAAoqB,CAAA,KAAA0yB,GAAA58C,EAAA,EAAAmb,UAAA3b,EAAAQ,EAAA,QAAAI,GAASZ,EAAAq9C,eAAA,CAAAD,CAAA,EAA0B,KAAEhjD,EAAA,aAAAkjD,GAAAjjD,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAC1HjG,EAAA,kBAAsF2G,EAAA,mBAAAP,EAAAi9C,CAAA,KAAAH,GAAA58C,EAAA,EAAAmb,UAAA3b,EAAAQ,EAAA,QAAAI,GAASZ,EAAAw9C,eAAA,CAAAJ,CAAA,EAA0B,KAAEhjD,EAAA,aAAAqjD,GAAApjD,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAE3HjG,EAAA,yBAAsD2G,EAAA,mBAAAP,EAAAo9C,CAAA,KAAAN,GAAA58C,EAAA,EAAAmb,UAAA3b,EAAAQ,EAAA,QAAAI,GAASZ,EAAA29C,gBAAA,CAAAP,CAAA,EAA2B,KAAEhjD,EAAA,aAAAwjD,GAAAvjD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAU5FH,EAAA,aAAA2D,EAAA,KAAoFzD,EAAA,aAAAyjD,GAAAxjD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KACpFH,EAAA,aAAA2D,EAAA,KAAmFzD,EAAA,aAAA0jD,GAAAzjD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KACnFH,EAAA,aAAA2D,EAAA,KAAkFzD,EAAA,aAAA2jD,GAAA1jD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KArBtFH,EAAA,QAAI,WAEA4D,EAAA,wBACF1D,EAAA,EAEAF,EAAA,WACE6D,EAAA,EAAAigD,GAAA,oBAA0H,EAAAC,GAAA,oBACC,EAAAC,GAAA,2BAG7H9jD,EAAA,EACAF,EAAA,QAAI,UAEAC,EAAA,GACA2D,EAAA,wBACF1D,EAAA,EAAI,EAGNF,EAAA,SACE6D,EAAA,GAAAogD,GAAA,eAA4E,GAAAC,GAAA,eACA,GAAAC,GAAA,eAE9EjkD,EAAA,EAEAF,EAAA,SAAIC,EAAA,IAAgCC,EAAA,EACpCF,EAAA,SAAIC,EAAA,IAAA2J,EAAA,cAAwC1J,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAvB9BC,EAAA,GAAAiE,EAAA,QAAA2+C,CAAA,EAIL5iD,EAAA,GAAAiE,EAAA,OAAA2+C,EAAA1hB,QAAA,YACAlhC,EAAA,EAAAiE,EAAA,OAAA2+C,EAAA1hB,QAAA,YAEOlhC,EAAA,EAAAiE,EAAA,OAAA2+C,EAAA1hB,QAAA,YAGhBlhC,EAAA,GAAAiE,EAAA,OAAA2+C,EAAAkB,SAAA50C,IAAAmhB,EAAA,EACDrwB,EAAA,EAAAswB,EAAA,IAAA9qB,EAAAu+C,kBAAAnB,CAAA,OAMK5iD,EAAA,GAAAiE,EAAA,OAAA2+C,EAAA1hB,QAAA,YACAlhC,EAAA,EAAAiE,EAAA,OAAA2+C,EAAA1hB,QAAA,WACAlhC,EAAA,EAAAiE,EAAA,OAAA2+C,EAAA1hB,QAAA,YAGLlhC,EAAA,GAAAC,EAAA2iD,EAAAoB,MAAA,SACAhkD,EAAA,GAAAC,EAAAsJ,GAAA,MAAAq5C,EAAAnyB,UAAA,qBAAAwzB,GAAApkD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAQAuD,EAAA,GAAAC,EAAA,KAAAO,CAAA,cAAAsgD,GAAArkD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KACAuD,EAAA,GAAAC,EAAA,KAAAO,CAAA,cAAAugD,GAAAtkD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAJNH,EAAA,QAAI,WACgB,YAEd6D,EAAA,EAAA6gD,GAAA,uBAAkC,EAAAC,GAAA,uBAEpCzkD,EAAA,EAAM,EACH,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAHcC,EAAA,GAAAiE,EAAA,OAAAuB,EAAAwJ,MAAA,EACAhP,EAAA,EAAAiE,EAAA,QAAAuB,EAAAwJ,MAAA,ICpCzB,GAAas1C,KAAuB,KAA9B,GAAOA,GAAP,KAAOA,UAA+B9tB,GAAsB,CACxDC,eAAiB3sB,EAAO4sB,EAAc,EACtC7a,SAAW/R,EAAOgS,CAAQ,EAC1ByoC,cAAgBz6C,EAAO06C,EAAqB,EAEpD15B,UAA2B,GAC3B6G,aAAe,EACfK,KAAiB,CAAEC,MAAO,YAAaC,MAAO,EAAE,EAChDJ,WAA6B,CAAEoF,MAAO,KAAKtF,YAAaG,MAAO,CAAC,EAEhE0wB,cAAuC,GAEvC/hB,YAA+C,GAE/Cx2B,UAAQ,CACN,KAAKkuB,WAAU,EAEf,KAAKqqB,cAAgB,KAAK8B,cAAcE,wBAAuB,EAE/D,KAAK/jB,YAAc,CACjB,CACEz4B,8DAAO/F,CACPu1B,QAASitB,GAAW,KAAK1B,eAAe0B,CAAO,EAC/CrtB,YAAaqtB,GAAWA,EAAQ7G,MAAM8G,GAAKA,EAAEzjB,QAAU,UAAU,GAEnE,CACEj5B,0EAAO/F,CACPu1B,QAASitB,GAAW,KAAK7B,eAAe6B,CAAO,EAC/CrtB,YAAaqtB,GAAWA,EAAQ7G,MAAM8G,GAAKA,EAAEzjB,QAAU,UAAU,GAEnE,CACEj5B,kDAAO/F,CACPu1B,QAASitB,GAAW,KAAKvB,gBAAgBuB,CAAO,EAChDrtB,YAAaqtB,GAAWA,EAAQ7G,MAAM8G,GAAKA,EAAEzjB,QAAU,UAAU,EAClE,CAEL,EAEA9P,eAAa,CACX,MAAO,wBACT,EAEAyxB,eAAgB6B,EAAsB,CACpC,KAAKH,cAAc1B,eAAe6B,CAAO,EACtCtxC,UAAU,CACTuJ,KAAMA,IAAK,CACT,GAAMjP,GAAUsK,+fAEd,CAAEkf,MAAOwtB,EAAQp6C,OAAQs6C,aAAc,KAAKb,kBAAkBW,EAAQ,CAAC,CAAC,CAAC,CAAE,EAE7E,KAAK7oC,SAASe,QAAQlP,CAAO,EAE7B,KAAKqqB,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEMs1C,eAAgB0B,EAAsB,OAAA1sB,IAAA,sBAC1C,GAAMtqB,GAAUsK,ggBAEd,CAAEkf,MAAOwtB,EAAQp6C,OAAQs6C,aAAc,KAAKb,kBAAkBW,EAAQ,CAAC,CAAC,CAAC,CAAE,GAGjE,KAAM,MAAKjuB,eAAewB,QAAQvqB,0DAA0B,KAC5D,IAEZ,KAAK62C,cAAcvB,eAAe0B,CAAO,EACtCtxC,UAAU,CACTuJ,KAAMA,IAAK,CACT,GAAMjP,GAAUsK,uhBAEd,CAAEkf,MAAOwtB,EAAQp6C,OAAQs6C,aAAc,KAAKb,kBAAkBW,EAAQ,CAAC,CAAC,CAAC,CAAE,EAE7E,KAAK7oC,SAASe,QAAQlP,CAAO,EAE7B,KAAKqqB,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,KAEMy1C,gBAAiBuB,EAAsB,OAAA1sB,IAAA,sBAC3C,GAAMmL,GAAY,CAAEjM,MAAOwtB,EAAQp6C,OAAQs6C,aAAc,KAAKb,kBAAkBW,EAAQ,CAAC,CAAC,CAAC,EAEvFh3C,sVAAUxL,CACdwL,GAAW,eAEXA,GAAWsK,0hBAETmrB,CAAS,GAGC,KAAM,MAAK1M,eAAewB,QAAQvqB,8CAA0B,KAC5D,IAEZ,KAAK62C,cAAcM,eAAeH,CAAO,EACtCtxC,UAAU,CACTuJ,KAAMA,IAAK,CACT,GAAMjP,GAAUsK,+fAEdmrB,CAAS,EAGX,KAAKtnB,SAASe,QAAQlP,CAAO,EAE7B,KAAKqqB,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,KAEAq2C,kBAAmBe,EAAmB,CACpC,MAAOA,GAAOhB,SAASlpC,KAAO,IAAMkqC,EAAOhB,SAASpwB,IACtD,EAEUyF,oBAAkB,CAC1B,KAAKorB,cAAcQ,aAAa,CAAEjzB,WAAY,KAAKA,WAAYE,KAAM,KAAKA,KAAMhjB,OAAQ,KAAKA,MAAM,CAAE,EAClGoE,UAAU,CACTuJ,KAAM0c,GAAa,CACjB,KAAKvO,UAAYuO,EAAW/sB,KAC5B,KAAKqlB,aAAe0H,EAAWC,KACjC,GAEAxc,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,IAAA/L,CAAA,CAjIW2iD,8DAAsB,IAAA/2B,GAAtB+2B,CAAsB,UAAA3iD,CAAA,CAAtB2iD,wBAAsB1iD,UAAA,wBAAA0G,SAAA,CAAAklB,EAAA,EAAA1rB,MAAA,EAAAC,KAAA,GAAAC,WAAA,IAAAC,wGDxBqBC,6GAedA,2DAEOA,iEACtBA,mEACgG,gBAA0B,sBAAa,QAAAQ,CAAA,CAAAA,CAAA,gBACjC,iBAA0B,sBAAa,QAAAC,CAAA,CAAAA,CAAA,+CACvC,iBAA8B,sBAAa,QAAAC,CAAA,CAAAA,CAAA,2GAOvHV,6EAIoBA,iEACAA,4NAKfA,qDAO0BA,iEACAA,6EACFA,8TAYtCA,mOACCA,wkDAvE7CxC,EAAA,gBAGgB2G,EAAA,sBAAAR,EAAA,OAAc3B,GAAAmtB,SAAAxrB,CAAA,CAAgB,IAE5CD,GAAA,2BAAAC,EAAA,CAAAI,MAAAC,IAAAhC,EAAAy8B,aAAA96B,CAAA,IAAA3B,EAAAy8B,aAAA96B,IAAA,IAEAtC,EAAA,EAAAyhD,GAAA,sBAAiC,EAAAC,GAAA,uBAgBD,EAAAC,GAAA,wBAaS,EAAAC,GAAA,sBAwC3CvlD,EAAA,GAAA0C,CAAA,KA3EE2B,EAAA,QAAAC,EAAA4mB,SAAA,EAAmB,YAAA5mB,EAAAytB,aAAA,GAA+B,eAAAztB,EAAAytB,YAAA,EAA8B,OAAAztB,EAAA0tB,WAAA,EAAqB,QAAA1tB,EAAA4tB,WAAAC,KAAA,EAA2B,qBAAA7tB,EAAA2tB,kBAAA,EACvF,YAAA3tB,EAAA8tB,KAAAC,KAAA,EAAyB,YAAA/tB,EAAA8tB,KAAAE,KAAA,EAAyB,WAC9E,qBAAyD,4BACxC,4BAAAhuB,EAAAiuB,sBAAA,GAC9B3rB,GAAA,YAAAtC,EAAAy8B,YAAA,KAAAp8B,YAAA,ECiBEiwB,GACApC,GAAWC,GAAAC,GAAAC,GAAAC,GAAAkR,GAAAC,GACXlR,GACAttB,EACA+0B,GACAxH,GACAC,GACAwW,GACAC,GACAvW,GACAC,EAAU,EAAAztB,OAAA;kEAAA,KAGR,GAAOi/C,GAAPc,QAAOd,EAAuB,UAAAe,EAAA,WAAAC,EAAA,CAAAzlD,CAAA,kBAAAA,CAAA,YAAA0lD,GAAA1lD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KCb1BH,EAAA,SACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IADEC,EAAA,EAAAswB,EAAA,IAAA9qB,EAAAnE,KAAAmkD,SAAAC,cAAA,CAAAC,OAAAC,oBAAAjkD,MAAA,gBAAAkkD,GAAA/lD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAJJH,EAAA,YACEC,EAAA,GAEA4D,EAAA,EAAAsiD,GAAA,cAGFjmD,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IALEC,EAAA,EAAAswB,EAAA,IAAA9qB,EAAArF,WAAAslD,eAAA,KAEMzlD,EAAA,EAAAiE,EAAA,OAAAuB,EAAAnE,KAAAmkD,SAAAC,cAAA,CAAAC,OAAAC,mBAAA,aAAAG,GAAAjmD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAMVH,EAAA,iBAAA2D,EAAA,KAEAzD,EAAA,aAAAmmD,GAAAlmD,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GA7BJjG,EAAA,WAA0B,UACxB2D,EAAA,KAAmCzD,EAAA,EAEnCF,EAAA,cAAiE2G,EAAA,mBAAAP,EAAAC,CAAA,KAAAP,GAAAQ,EAAA,QAAAI,GAASZ,EAAA83B,KAAA,CAAM,KAC9Eh6B,EAAA,sBACF1D,EAAA,EAAS,EAGXF,EAAA,WAAwB,YACc2G,EAAA,sBAAAP,EAAAC,CAAA,KAAAP,GAAAQ,EAAA,QAAAI,GAAYZ,EAAAwgD,OAAA,CAAQ,KACtDtmD,EAAA,YAAwB,cACtB2D,EAAA,KAAsGzD,EAAA,EAEtG0D,EAAA,kBAKAC,EAAA,GAAA0iD,GAAA,cAOFrmD,EAAA,EAEA2D,EAAA,GAAA2iD,GAAA,mBAIAxmD,EAAA,aAA+B,eAG3B2G,EAAA,mBAAAP,EAAAC,CAAA,KAAAP,GAAAQ,EAAA,QAAAI,GAASZ,EAAA83B,KAAA,CAAM,KAAC,uBAAAx3B,EAAAC,CAAA,KAAAP,GAAAQ,EAAA,QAAAI,GAAcZ,EAAA83B,KAAA,CAAM,KAFtC19B,EAAA,EAKA0D,EAAA,eACF1D,EAAA,EAAM,EACD,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GA9BUC,EAAA,GAAAiE,EAAA,YAAAuB,EAAAnE,IAAA,EAKXrB,EAAA,GAAAiE,EAAA,cAAAuB,EAAA2gD,WAAA,EAA2B,UAAAhiD,EAAA,EAAA+R,GAAA1Q,EAAArF,WAAAslD,cAAA,GAIvBzlD,EAAA,EAAAiE,EAAA,OAAAuB,EAAArF,WAAAslD,cAAA,EASQzlD,EAAA,EAAAiE,EAAA,OAAAuB,EAAA4gD,YAAA,QAUwEpmD,EAAA,GAAAiE,EAAA,YAAAuB,EAAAnE,KAAA2qB,KAAA,ICjB9F,GAAaq6B,KAAqB,KAA5B,GAAOA,GAAP,KAAOA,UAA6B3+B,GAAY,CAC1CC,oBAAsB7d,EAAO8d,EAAmB,EAClDqW,aAAen0B,EAAOo0B,EAAQ,EAC9BqmB,cAAgBz6C,EAAO06C,EAAqB,EAC5C3oC,SAAW/R,EAAOgS,CAAQ,EAEzBsiB,MAAQC,GAAoB,OAAO,EAEnCioB,UAAY/nB,GAAM,EAE3B4nB,YAAc;;gCAEN3nB,YAERt0B,UAAQ,CACN,KAAKqhB,UAAU,CACbk6B,eAAgBc,GACjB,CACH,EAEA7nB,WAAS,CACP,KAAKF,YAAc,KAAKP,aAAaU,KAAK,KAAKP,MAAK,EAAI,CAAEQ,SAAU,EAAI,CAAE,CAC5E,EAEAtB,MAAI,CACF,KAAKkB,YAAYM,MAAK,CACxB,EAEAknB,QAAM,CACJ,KAAKQ,aAAY,EAEjB,KAAKnlD,KAAKw9B,MAAK,EACf,KAAKvB,KAAI,CACX,EAEA8oB,aAAW,CACT,MAAOK,QAAOC,SAASC,WAAa,QACtC,EAEQH,cAAY,CAClB,GAAMf,GAAiBmB,GAAoB,KAAKvlD,KAAKK,MAAM+jD,cAAiB,EAE5E,KAAKlB,cAAcO,OAAOW,CAAc,EACrCryC,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,QACZ5E,qZAEE,CAAEkf,MAAOuuB,EAAen7C,MAAM,CAAE,CACjC,EAGH,KAAKg8C,UAAUvnB,KAAI,CACrB,GAEAjiB,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,IAAA/L,CAAA,CAzDW0kD,8DAAoB,IAAA94B,GAApB84B,CAAoB,UAAA1kD,CAAA,CAApB0kD,wBAAoBzkD,UAAA,sBAAAo9B,UAAA,QAAAA,CAAAl2B,EAAA5E,EAAA,CAAA4E,EAAA,GAAAm2B,EAAA,CAAA18B,CAAA,CAAA67B,KAAA,CAAAinB,EAAA,IAAA/iD,CAAA,IAAA68B,EAAA,KAAAC,OAAA,EAAAknB,SAAA,cAAAh+C,QAAA,EAAA+2B,EAAA,EAAAv9B,KAAA,GAAAC,IAAA,GAAAC,MAAA,CAAAA,CAAA,QAAAK,CAAA,CAAAA,CAAA,gJDjBOH,+CA8BgBA,6EAITA,6EApCdA,2XAUQA,+gBAgB4BA,qvBA5BrEqB,EAAA,EAAAsjD,GAAA,0BAAAtnB,EAAA,IAAAh7B,YAAA,ECmBaiwB,GAAqBhwB,GAAW6pB,GAAA5pB,GAAAE,GAAAC,GAAEE,GAAmBC,GAAAC,GAAEE,GAASC,EAAMsR,EAAc,EAAApR,OAAA;gEAAA,KAE3F,GAAOghD,GAAPS,QAAOT,EAAqB,MCVlC,GAAaU,KAA2B,KAAlC,GAAOA,GAAP,KAAOA,EAA2B,CAC9BlrC,SAAW/R,EAAOgS,CAAQ,EAC1BkrC,kBAAoBl9C,EAAOm9C,EAAiB,EAE3CvzB,KAAOpyB,EAAcC,MAAS,EAC9B2lD,kBAAoBC,GAAe5lD,MAAS,EAErD6lD,uBAAqB,CACnB,KAAKJ,kBAAkBK,iBAAiB,KAAK3zB,KAAI,EAAI,KAAKwzB,kBAAiB,CAAE,EAC1E9zC,UAAU,CACTuJ,KAAMA,IAAK,CACT,GAAM2qC,GAAa,KAAKJ,kBAAiB,6GAA0BhlD,CAEnE,KAAK2Z,SAASe,mHAAmC,KAAK8W,KAAI,CAAE,OAAO4zB,CAAU,GAAE,CACjF,GAEAxqC,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,IAAA/L,CAAA,CAlBWolD,4CAA2B,IAAAplD,CAAA,CAA3BolD,wBAA2BnlD,UAAA,6BAAAC,OAAA,CAAA6xB,KAAA,WAAAwzB,kBAAA,yBAAA9nB,QAAA,CAAA8nB,kBAAA,2BAAAplD,MAAA,EAAAC,KAAA,EAAAC,OAAA,4CAAAmB,SAAA,QAAAA,CAAA2F,EAAA5E,EAAA,CAAA4E,EAAA,ICXxCpJ,EAAA,4BAC+CkG,GAAA,yBAAAC,EAAA,CAAAI,MAAAC,IAAAhC,EAAAgjD,kBAAArhD,CAAA,IAAA3B,EAAAgjD,kBAAArhD,IAAA,IAAgCQ,EAAA,iCAAiBnC,GAAAkjD,sBAAA,CAAuB,IACtHxnD,EAAA,GAAA0C,CAAA,KADC2B,EAAA,YAAAC,EAAAwvB,KAAA,yBAA6CltB,GAAA,UAAAtC,EAAAgjD,iBAAA,KAAA3iD,YAAA,EDQlCgS,GAA2B/R,GAAWG,GAAAuE,EAAA,EAAAC,cAAA,KAE7C,GAAO49C,GAAPQ,QAAOR,EAA2B,UAAAS,EAAA,0BAAAC,GAAA5nD,CAAA,CAAAW,CAAA,KAAAX,CAAA,IEDhCyD,EAAA,2BAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAEEkE,EAAA,UAAAivB,EAAAwN,WAAA,EAAuB,QAAAxN,EAAAyN,YAAA,aAAA+mB,GAAA7nD,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAIzBjG,EAAA,eAAoE2G,EAAA,mBAAAP,EAAAytB,CAAA,KAAAL,GAAAltB,EAAA,SAAAI,GAAS8sB,EAAAy0B,gBAAA,CAAiB,KAC5FrkD,EAAA,uBACAF,EAAA,GAAAC,EAAA,KAAAO,CAAA,GACFhE,EAAA,aAAAgoD,GAAA/nD,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAXJjG,EAAA,YAAqB,YAEjB6D,EAAA,EAAAskD,GAAA,6BAGC,EAAAC,GAAA,iBAOHloD,EAAA,EAEAF,EAAA,YAA4C,iCACU2G,EAAA,kBAAAR,EAAA,CAAAC,EAAAmtB,CAAA,KAAAC,GAAAltB,EAAA,QAAAI,GAAU8sB,EAAArD,SAAAhqB,CAAA,CAAgB,KAAEjG,EAAA,EAEhFF,EAAA,kBAAqD2G,EAAA,mBAAAP,EAAAmtB,CAAA,KAAAC,GAAAltB,EAAA,QAAAI,GAAS8sB,EAAA6E,WAAA,CAAY,KAAEn4B,EAAA,EAAY,EACpF,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAfDC,EAAA,GAAAiE,EAAA,OAAAivB,EAAA4N,kBAAA,GAKM9gC,EAAA,EAAAiE,EAAA,QAAAivB,EAAA4N,kBAAA,GAOiB9gC,EAAA,GAAAiE,EAAA,UAAAivB,EAAAuvB,aAAA,aAAAtT,GAAAtvC,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAQ9BH,EAAA,QAAI,WAEA4D,EAAA,8BACF1D,EAAA,EACAF,EAAA,WAAA2D,EAAA,KAAiDzD,EAAA,EACjDF,EAAA,WAAA2D,EAAA,KAA8BzD,EAAA,EAC9BF,EAAA,WAAAmE,EAAA,KAAyEP,EAAA,mBAAuCQ,EAAA,EAAAlE,EAAA,EAChHF,EAAA,YAAAmE,EAAA,MAA+EP,EAAA,oBAA2CQ,EAAA,EAAAlE,EAAA,EAC1HF,EAAA,YAAAmE,EAAA,MAAkGP,EAAA,oBAAmDQ,EAAA,EAAAlE,EAAA,EAAK,aAAAmoD,GAAAloD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAqBxJH,EAAA,aAAA2D,EAAA,KAAoFzD,EAAA,aAAAooD,GAAAnoD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KACpFH,EAAA,aAAA2D,EAAA,KAAmFzD,EAAA,aAAAqoD,GAAApoD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KACnFH,EAAA,aAAA2D,EAAA,KAAkFzD,EAAA,aAAAsoD,GAAAroD,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAKlFyD,EAAA,+BAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAEEld,EAAA,OAAAkkD,EAAAC,UAAA10B,IAAA,EAA8B,oBAAAy0B,EAAAC,UAAAC,qBAAA,aAAAC,GAAAzoD,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAzBpCjG,EAAA,WAA4B,WAExB4D,EAAA,wBACF1D,EAAA,EAEAF,EAAA,WAAwB,yBACE2G,EAAA,sBAAA8hD,GAAAriD,EAAAi9C,CAAA,EAAA5hC,UAAA+R,EAAAltB,EAAA,QAAAI,GAAS8sB,EAAAq1B,gBAAA,CAAAJ,CAAA,EAA2B,KAAEvoD,EAAA,EAAmB,EAEnFF,EAAA,QAAI,UAEAC,EAAA,GACA2D,EAAA,uBACF1D,EAAA,EAAI,EAGNF,EAAA,QACE6D,EAAA,GAAAilD,GAAA,eAA4E,GAAAC,GAAA,eACA,GAAAC,GAAA,eAE9E9oD,EAAA,EAEAF,EAAA,SAAIC,EAAA,IAAA2J,EAAA,cAAwC1J,EAAA,EAC5CF,EAAA,SACE6D,EAAA,GAAAolD,GAAA,iCAIF/oD,EAAA,EAAK,MAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAzBcC,EAAA,GAAAiE,EAAA,QAAAkkD,CAAA,EAOdnoD,EAAA,GAAAiE,EAAA,OAAAkkD,EAAAC,UAAAl5C,IAAAmhB,EAAA,EACDrwB,EAAA,EAAAswB,EAAA,IAAA4C,EAAA01B,mBAAAT,CAAA,OAMKnoD,EAAA,GAAAiE,EAAA,OAAAkkD,EAAAjnB,QAAA,YACAlhC,EAAA,EAAAiE,EAAA,OAAAkkD,EAAAjnB,QAAA,WACAlhC,EAAA,EAAAiE,EAAA,OAAAkkD,EAAAjnB,QAAA,YAGLlhC,EAAA,GAAAC,EAAAsJ,GAAA,KAAA4+C,EAAA13B,UAAA,UAGCzwB,EAAA,GAAAiE,EAAA,OAAAivB,EAAA21B,oBAAAV,CAAA,cAAAW,GAAAjpD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAWDuD,EAAA,GAAAC,EAAA,MAAAO,CAAA,cAAAmlD,GAAAlpD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KACAuD,EAAA,GAAAC,EAAA,MAAAO,CAAA,cAAAolD,GAAAnpD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAJNH,EAAA,QAAI,WACgB,YAEd6D,EAAA,EAAA0lD,GAAA,uBAAkC,EAAAC,GAAA,uBAEpCtpD,EAAA,EAAM,EACH,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAHcC,EAAA,GAAAiE,EAAA,OAAAivB,EAAAlkB,MAAA,EACAhP,EAAA,EAAAiE,EAAA,QAAAivB,EAAAlkB,MAAA,IC5CzB,GAAam6C,KAAuB,KAA9B,GAAOA,GAAP,KAAOA,UAA+B3yB,GAAsB,CACxD3a,SAAW/R,EAAOgS,CAAQ,EAC1B2a,eAAiB3sB,EAAO4sB,EAAc,EACtC6tB,cAAgBz6C,EAAO06C,EAAqB,EAE3C4E,YAAc/qB,GAAgC,aAAa,EAEpE+pB,UAA2B,GAC3Bz2B,aAAe,EACfK,KAAiB,CAAEC,MAAO,YAAaC,MAAO,EAAE,EAChDJ,WAA6B,CAAEoF,MAAO,KAAKtF,YAAaG,MAAO,CAAC,EAEhE0wB,cAAuC,GAEvC/hB,YAA+C,GAE/Cx2B,UAAQ,CACN,KAAKkuB,WAAU,EAEf,KAAKqqB,cAAgB,KAAK8B,cAAcE,wBAAuB,EAE/D,KAAK/jB,YAAc,CACjB,CACEz4B,kDAAO/F,CACPu1B,QAASitB,GAAW,KAAK6D,gBAAgB7D,CAAO,EACjD,CAEL,EAEAtzB,eAAa,CACX,MAAO,wBACT,EAEAu2B,iBAAe,CACb,KAAKyB,YAAW,EAAG1qB,UAAS,CAC9B,EAEAmqB,oBAAqB/D,EAAmB,CACtC,MAAOA,GAAOsD,UAAUxtC,OAAS,UACnC,EAEAguC,mBAAoB9D,EAAmB,CACrC,MAAOA,GAAOsD,UAAUxtC,KAAO,IAAMkqC,EAAOsD,UAAU10B,IACxD,EAEM60B,gBAAiB7D,EAAsB,OAAA1sB,IAAA,sBAC3C,GAAMmL,GAAY,CAAEjM,MAAOwtB,EAAQp6C,OAAQ++C,UAAW,KAAKT,mBAAmBlE,EAAQ,CAAC,CAAC,CAAC,EAEnFh3C,EAAUsK,4bAEdmrB,CAAS,GAGC,KAAM,MAAK1M,eAAewB,QAAQvqB,gEAA4B,KAC9D,IAEZ,KAAK62C,cAAc+E,SAAS5E,CAAO,EAChCtxC,UAAU,CACTuJ,KAAMA,IAAK,CACT,GAAMjP,GAAUsK,4UAEdmrB,CAAS,EAGX,KAAKtnB,SAASe,QAAQlP,CAAO,EAC7B,KAAKqqB,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,KAEUyrB,oBAAkB,CAC1B,KAAKorB,cAAcgF,aAAa,CAAEz3B,WAAY,KAAKA,WAAYE,KAAM,KAAKA,KAAMhjB,OAAQ,KAAKA,MAAM,CAAE,EAClGoE,UAAU,CACTuJ,KAAM0c,GAAa,CACjB,KAAK+uB,UAAY/uB,EAAW/sB,KAC5B,KAAKqlB,aAAe0H,EAAWC,KACjC,GAEAxc,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,IAAA/L,CAAA,CAlFWwnD,8DAAsB,IAAA57B,GAAtB47B,CAAsB,UAAAxnD,CAAA,CAAtBwnD,wBAAsBvnD,UAAA,mBAAAo9B,UAAA,QAAAA,CAAAl2B,EAAA5E,EAAA,CAAA4E,EAAA,GAAAm2B,EAAA,CAAA18B,CAAA,CAAA6mD,WAAA,CAAA5B,EAAA,IAAAllD,CAAA,IAAA68B,EAAA,KAAA72B,QAAA,EAAA+2B,EAAA,EAAAv9B,KAAA,GAAAC,IAAA,IAAAC,MAAA,CAAAA,CAAA,QAAAK,CAAA,CAAAA,CAAA,oGDzBqBH,2DAcnBA,6EAPRA,6GAeaA,2DAEOA,oFACtBA,mEACoD,gBAA0B,sBAAa,QAAAU,CAAA,CAAAA,CAAA,+CACjC,iBAA8B,sBAAa,QAAAC,CAAA,CAAAA,CAAA,oIACxB,iBAAsC,uBAAa,QAAAC,CAAA,CAAAA,CAAA,2GAOtGZ,6LAOMA,qDAOyBA,iEACAA,6EACFA,kVAiBtCA,uMACCA,+pDAhF7CxC,EAAA,gBAGgB2G,EAAA,sBAAAR,EAAA,CAAAI,MAAAH,GAAAC,CAAA,EAAAK,EAAclC,EAAAmtB,SAAAxrB,CAAA,CAAgB,KAE5CD,GAAA,2BAAAC,EAAA,CAAAI,MAAAH,GAAAC,CAAA,EAAAG,GAAAhC,EAAAy8B,aAAA96B,CAAA,IAAA3B,EAAAy8B,aAAA96B,GAAAO,EAAAP,CAAA,KAEAtC,EAAA,EAAAimD,GAAA,sBAAiC,EAAAC,GAAA,uBAuBD,EAAAC,GAAA,wBAaS,EAAAC,GAAA,sBA0C3C/pD,EAAA,EAEA0D,EAAA,6BAAAhB,CAAA,KAtFE2B,EAAA,QAAAC,EAAAkkD,SAAA,EAAmB,YAAAlkD,EAAAytB,aAAA,GAA+B,eAAAztB,EAAAytB,YAAA,EAA8B,OAAAztB,EAAA0tB,WAAA,EAAqB,QAAA1tB,EAAA4tB,WAAAC,KAAA,EAA2B,qBAAA7tB,EAAA2tB,kBAAA,EACvF,YAAA3tB,EAAA8tB,KAAAC,KAAA,EAAyB,YAAA/tB,EAAA8tB,KAAAE,KAAA,EAAyB,WAC9E,qBAAyD,4BACxC,4BAAAhuB,EAAAiuB,sBAAA,GAC9B3rB,GAAA,YAAAtC,EAAAy8B,YAAA,KAAAp8B,YAAA,ECiBEiwB,GACApC,GAAWC,GAAAC,GAAAC,GAAAkR,GAAAjR,GAAAkR,GAAAC,GACXlR,GACAttB,EACA+0B,GACAxH,GACA0W,GACA2d,GACAl0B,GACAwzB,GACAvzB,GACAqW,EAAe,EAAA9jC,OAAA;kEAAA,KAGb,GAAO8jD,GAAPS,QAAOT,EAAuB,MCzBpC,GAAaU,KAAmC,KAA1C,GAAOA,GAAP,KAAOA,EAAmC,CACrCC,kBAAoBxoD,EAA6BC,MAAS,IAAAI,CAAA,CADxDkoD,4CAAmC,IAAAloD,CAAA,CAAnCkoD,wBAAmCjoD,UAAA,sCAAAC,OAAA,CAAAioD,kBAAA,yBAAAhoD,MAAA,GAAAC,KAAA,GAAAC,OAAA,uEAAAmB,SAAA,QAAAA,CAAA2F,EAAA5E,EAAA,CAAA4E,EAAA,ICXhDpJ,EAAA,SAAK,YACiBC,EAAA,SAAGC,EAAA,EACvBF,EAAA,SAAkFC,EAAA,GAAiCC,EAAA,EAAI,EAGzHF,EAAA,SAAK,YACiBC,EAAA,gBAAUC,EAAA,EAC9BF,EAAA,UAAMC,EAAA,GAAA2J,EAAA,cAAsD1J,EAAA,EAAO,EAGrEF,EAAA,UAAK,aACiBC,EAAA,iBAAUC,EAAA,EAC9BF,EAAA,WAAMC,EAAA,IAAA2J,EAAA,cAAsD1J,EAAA,EAAO,EAGrEF,EAAA,UAAK,aACiBC,EAAA,WAAIC,EAAA,EACxBF,EAAA,WAAMC,EAAA,IAAA2J,EAAA,aAAyC1J,EAAA,EAAO,GAAA0C,CAAA,KAfTtC,EAAA,GAAAiE,EAAA,OAAAC,EAAA4lD,kBAAA,EAAAC,QAAA15B,EAAA,EAAqCrwB,EAAA,EAAAC,EAAAiE,EAAA4lD,kBAAA,EAAAC,OAAA,EAK5E/pD,EAAA,GAAAC,EAAAsJ,GAAA,KAAArF,EAAA4lD,kBAAA,EAAAr5B,UAAA,WAKAzwB,EAAA,GAAAC,EAAAsJ,GAAA,KAAArF,EAAA4lD,kBAAA,EAAAE,UAAA,WAKAhqD,EAAA,GAAAC,EAAAsJ,GAAA,MAAArF,EAAA4lD,kBAAA,EAAAxpD,KAAA,OAAAiE,YAAA,EDRKuuB,GAAY3nB,EAAS,EAAA9F,OAAA;gFAAA,KAE5B,GAAOwkD,GAAPI,QAAOJ,EAAmC,eAAAK,GAAArqD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KEc1CH,EAAA,WAAA2D,EAAA,KAAsFzD,EAAA,aAAAuqD,GAAAtqD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAEtFH,EAAA,WAAA2D,EAAA,KAAwFzD,EAAA,aAAAwqD,GAAAvqD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAP1FH,EAAA,QAAI,WACmC,aACnC2D,EAAA,KAAmDzD,EAAA,EAAO,EAE5DF,EAAA,WAAA2D,EAAA,KAAiDzD,EAAA,EACjD2D,EAAA,EAAA8mD,GAAA,aACA3qD,EAAA,WAAAmE,EAAA,KAA8FP,EAAA,mBAAsCQ,EAAA,EAAAlE,EAAA,EACpI2D,EAAA,GAAA+mD,GAAA,aACF1qD,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAH8CC,EAAA,GAAAiE,EAAA,OAAA/D,EAAAqqD,yBAAA,GACvBvqD,EAAA,EAAAiE,EAAA,aAAA/D,EAAA6vB,WAAA,EACuB/vB,EAAA,GAAAiE,EAAA,OAAA/D,EAAAqqD,yBAAA,cAAAC,GAAA3qD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAc5CH,EAAA,QAAuCC,EAAA,GAAuCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAAvCC,EAAA,EAAAC,EAAAC,EAAAuqD,sBAAAC,CAAA,cAAAC,GAAA9qD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KASvCH,EAAA,QAAuCC,EAAA,GAAA2J,EAAA,YAAyC1J,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAAzCC,EAAA,EAAAC,EAAAsJ,GAAA,IAAArJ,EAAA0qD,aAAAF,CAAA,iBAAAG,GAAAhrD,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAlBzCjG,EAAA,QAAI,WAEA4D,EAAA,+BACF1D,EAAA,EAEAF,EAAA,WAAwB,yBACE2G,EAAA,sBAAAqkD,GAAA5kD,EAAAmtB,CAAA,EAAA9R,UAAAjhB,EAAA8F,EAAA,QAAAI,GAASlG,EAAA4qD,iBAAAJ,CAAA,CAA4B,KAAE9qD,EAAA,EAAmB,EAGpF2D,EAAA,EAAAwnD,GAAA,aAEArrD,EAAA,QAAI,UAEAC,EAAA,GACA2D,EAAA,uBACF1D,EAAA,EAAI,EAGN2D,EAAA,GAAAynD,GAAA,aACFprD,EAAA,MAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA00B,QAAA,CAAA7yB,CAAA,CAAA7B,CAAA,CAAA2gB,SAAA,CAAA7e,CAAA,CAAAvC,CAAA,GAjB4BC,EAAA,GAAAiE,EAAA,cAAAymD,CAAA,EAA0B,WAAA7N,CAAA,EAO/C78C,EAAA,GAAAiE,EAAA,OAAA/D,EAAAqqD,yBAAA,GAGAvqD,EAAA,GAAAiE,EAAA,OAAAymD,EAAAx7C,IAAAmhB,EAAA,EACDrwB,EAAA,EAAAswB,EAAA,IAAAo6B,EAAA9vC,KAAA,KAKC5a,EAAA,GAAAiE,EAAA,OAAA/D,EAAAqqD,yBAAA,cAAAU,GAAAprD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAOHH,EAAA,YACE4D,EAAA,wCACF1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CADmCnhB,EAAA,EAAAiE,EAAA,oBAAAinD,CAAA,aAAAC,GAAAtrD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAHvCH,EAAA,QAAuD,WAEnD6D,EAAA,EAAA6nD,GAAA,cAGFxrD,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAHmBnhB,EAAA,GAAAiE,EAAA,UAAAonD,EAAAC,aAAAC,KAAA,aAAAC,GAAA3rD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAQtBH,EAAA,SACE4D,EAAA,wCACF1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CADmCnhB,EAAA,EAAAiE,EAAA,oBAAAwnD,CAAA,aAAAC,GAAA7rD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAHvCH,EAAA,QAAoE,WAEhE6D,EAAA,EAAAooD,GAAA,cAGF/rD,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAHuBnhB,EAAA,GAAAiE,EAAA,UAAAonD,EAAAC,aAAAM,kBAAA,aAAAC,GAAAhsD,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAV9B0D,EAAA,EAAAuoD,GAAA,aAAuD,EAAAC,GAAA,aAAAlsD,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAlDld,EAAA,OAAAonD,EAAAC,aAAAC,MAAAjhD,SAAA,GAQAtK,EAAA,EAAAiE,EAAA,OAAAonD,EAAAC,aAAAM,mBAAAthD,SAAA,cAAA0hD,GAAAnsD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAaCuD,EAAA,GAAAC,EAAA,KAAAO,CAAA,cAAAqoD,GAAApsD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KACAuD,EAAA,GAAAC,EAAA,KAAAO,CAAA,cAAAsoD,GAAArsD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAJNH,EAAA,QAAI,WACgB,YAEd6D,EAAA,EAAA4oD,GAAA,uBAAsD,EAAAC,GAAA,uBAExDxsD,EAAA,EAAM,EACH,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAHcC,EAAA,GAAAiE,EAAA,OAAA/D,EAAAqqD,yBAAA,GACAvqD,EAAA,EAAAiE,EAAA,QAAA/D,EAAAqqD,yBAAA,cAAA8B,GAAAxsD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAarBH,EAAA,YAAA2D,EAAA,MAEAzD,EAAA,aAAA0sD,GAAAzsD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAEAH,EAAA,YACE4D,EAAA,gBACF1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CADWnhB,EAAA,EAAAiE,EAAA,YAAAsoD,EAAAC,SAAA,EAAyB,OAAAD,EAAAE,SAAA,EAAgC,UAAAF,EAAA5xB,OAAA,aAAA+xB,GAAA7sD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAVxEH,EAAA,YAAkF,QAChF2D,EAAA,MAAiCzD,EAAA,EAEjCF,EAAA,YAEE6D,EAAA,EAAAopD,GAAA,cAAoD,EAAAC,GAAA,cAQtDhtD,EAAA,EAAM,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAREC,EAAA,GAAAiE,EAAA,OAAA/D,EAAA2sD,cAAA,EAIiC7sD,EAAA,EAAAiE,EAAA,UAAA/D,EAAA4sD,sBAAA,ICvD3C,GAAaC,KAA+B,KAAtC,GAAOA,GAAP,KAAOA,UAAuCv2B,GAAS,CACnD3a,SAAW/R,EAAOgS,CAAQ,EAC1B2a,eAAiB3sB,EAAO4sB,EAAc,EACtCswB,kBAAoBl9C,EAAOm9C,EAAiB,EAC5C9+B,cAAgBre,EAAOC,EAAa,EAI5CijD,kBAAuC,GACvCr7B,aAAe,EAEfK,KAAiB,CAAEC,MAAO,OAAQC,MAAO,CAAC,EAC1CJ,WAA6B,CAAEoF,MAAO,KAAKtF,YAAaG,MAAO,CAAC,EAChEk7B,YAAuC,YAEvCH,uBAA6H,GAE7HD,eAAiB,GAGjBK,WAAa,GAELC,UAERthD,aAAA,CACE,MAAK,EAEL,KAAKshD,UAAY,GAAIhiD,GACvB,CADuBA,CACvB,EAEAimB,eAAa,CACX,MAAO,gCACT,EAEAlnB,UAAQ,CACN,KAAKkjD,uBAAsB,EAE3B,KAAKh1B,WAAU,EAEf,KAAKjQ,cAAcklC,eAAc,EAC9Bj6C,UAAUjH,GAAM,CACf,GAAMm/C,GAAen/C,EAAImhD,iBAErBhC,EAAahhD,SAAW,IAAG,KAAKuiD,eAAiB,IAErD,OAAWtqD,KAAK+oD,GACd,KAAKiC,aAAahrD,CAAC,CAEvB,EAAC,CACL,EAEAgoD,0BAAwB,CACtB,MAAO,MAAK0C,cAAgB,eAC9B,EAEArC,aAAc4C,EAA2B,CACvC,MAAOA,GAAWlC,aAAaM,mBAAmB6B,OAAO,CAACnrD,EAAG4kB,IAAM5kB,EAAI4kB,EAAE5mB,KAAM,CAAC,CAClF,EAEAotD,sBAAoB,CAClB,KAAK57B,WAAWC,MAAQ,EACxB,KAAK47B,uBAAsB,EAE3B,KAAK51B,WAAU,CACjB,EAEA0yB,sBAAuB+C,EAA2B,CAChD,MAAIA,GAAWlC,aAAaM,mBAAmBthD,SAAW,EACjDkjD,EAAWlC,aAAaM,mBAAmB,CAAC,EAAEgC,SAGhD,EACT,EAEAL,aAAcM,EAA4B,CACxC,GAAIA,EAAMC,YAAc,EAAG,OAE3B,GAAMC,GAAiBF,EAAMC,UACzBD,EAAMC,UAAYD,EAAMG,UACxB,KAEEC,EAAS,8EAAoB,KAAKC,aAAaL,EAAMG,SAAS,CAAC,KAAG,CAClE1hD,EAAO,CAAEuhD,EAAMG,SAAS,EAG1BD,IACFE,EAAOn7C,0DACkB,KAAKo7C,aAAaH,CAAc,CAAC,IAAG,EAG7DzhD,EAAKwG,KAAKi7C,CAAc,GAG1B,KAAKjB,uBAAuBh6C,KAAK,CAC/B+6C,QACArB,UAAWtqD,yBAAiC2rD,EAAMD,QAAQ,QAAQK,EAAO/oC,KAAK,IAAI,EAElFunC,UAAW,CACTwB,SACAE,SAAU,CACR,CACE7hD,OACA8hD,gBAAiB,CACf,UACA,SAAS,EAEXC,qBAAsB,CACpB,UACA,SAAS,EAEZ,GAIL1zB,QAAS,CACP4M,QAAS,CACP/X,MAAO,CACL8+B,QAAS,GACTnlC,KAAM0kC,EAAMD,UAGdW,QAAS,CACPC,UAAW,CACTvmD,MAAQsmD,GACCA,EAAQtmD,UAM1B,CACH,EAEM6iD,iBAAkB0C,EAA2B,OAAAx1B,IAAA,sBACjD,GAAMtqB,4SAAUxL,EACJ,KAAM,MAAKu0B,eAAewB,QAAQvqB,iHAAqC,KACvE,IAEZ,KAAKs5C,kBAAkByH,wBAAwBjB,CAAU,EACtDp6C,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,sGAA8C,EAC5D,KAAKmb,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,KAEUyrB,oBAAkB,CAC1B,KAAK+zB,WAAa,GAElB,GAAMvyB,GAAU,CACd7I,WAAY,KAAKA,WACjBE,KAAM,KAAKA,KACXyZ,OAAQ,KAAKwhB,aAGf,KAAKjG,kBAAkB0H,sBAAsB/zB,CAAO,EACjDvnB,UAAU,CACTuJ,KAAM0c,GAAa,CACjB,KAAK2zB,kBAAoB3zB,EAAW/sB,KACpC,KAAKqlB,aAAe0H,EAAWC,MAE/B,KAAK4zB,WAAa,EACpB,GAEApwC,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEQ0/C,wBAAsB,CAC5B,GAAMH,GAAcvZ,GAAqBC,QAAQoZ,EAA+B4B,eAAe,EAC3F1B,IAAa,KAAKA,YAAcA,EACtC,EAEQU,wBAAsB,CAC5Bja,GAAqBI,QAAQiZ,EAA+B4B,gBAAiB,KAAK1B,WAAW,CAC/F,EAEQiB,aAAcU,EAAa,CACjC,MAAO,MAAKzB,UAAUvzC,UAAUg1C,EAAO,CAAC,CAC1C,IAhLQpiD,EANGugD,EAMI4B,kBAAkB,wCAAAhtD,CAAA,CANtBorD,4CAA8B,IAAAprD,CAAA,CAA9BorD,wBAA8BnrD,UAAA,iCAAA0G,SAAA,CAAAklB,EAAA,EAAA1rB,MAAA,GAAAC,KAAA,GAAAC,WAAA,IAAAC,uDDrCTC,qQAIKA,+PACIA,iEAeAA,2DAEMA,2CAEmD,gBAAyB,qBAAa,QAAAS,CAAA,CAAAA,CAAA,yDADtDT,8EAEAA,wHAOmBA,qKAUlDA,oMAgCWA,mOACCA,oIAStDA,gPAI6CA,khDA1FxDxC,EAAA,YAA8B,YACK,cAC/B2D,EAAA,KAAqCzD,EAAA,EAErCF,EAAA,YAAuC,eACOkG,GAAA,yBAAAC,EAAA,CAAAI,MAAAC,IAAAhC,EAAA+oD,YAAApnD,CAAA,IAAA3B,EAAA+oD,YAAApnD,IAAA,IAA0BQ,EAAA,iCAAiBnC,GAAAwpD,qBAAA,CAAsB,IAC3GhuD,EAAA,eAAA2D,EAAA,KAAuEzD,EAAA,EACvEF,EAAA,eAAA2D,EAAA,KAA0EzD,EAAA,EAAS,EAC5E,EACL,EACF,EAGRF,EAAA,iBAGoD2G,EAAA,sBAAAR,EAAA,OAAc3B,GAAAmtB,SAAAxrB,CAAA,CAAgB,IAGhFtC,EAAA,GAAAsrD,GAAA,uBAAgC,GAAAC,GAAA,uBAYqC,GAAAC,GAAA,sBAuBhB,GAAAC,GAAA,sBA4BvDpvD,EAAA,EAGA2D,EAAA,GAAA0rD,GAAA,eAAA3sD,CAAA,KAhFkDtC,EAAA,GAAAwG,GAAA,UAAAtC,EAAA+oD,WAAA,EAShDjtD,EAAA,GAAAiE,EAAA,QAAAC,EAAA8oD,iBAAA,EAA2B,WAAc,YAAA9oD,EAAAytB,aAAA,GAA+B,eAAAztB,EAAAytB,YAAA,EAA8B,OAAAztB,EAAA0tB,WAAA,EAClF,QAAA1tB,EAAA4tB,WAAAC,KAAA,EAA4B,qBAAA7tB,EAAA2tB,kBAAA,EAA0C,YAAA3tB,EAAA8tB,KAAAC,KAAA,EAClE,YAAA/tB,EAAA8tB,KAAAE,KAAA,EAAyB,kBAAAhuB,EAAA61B,YAAA,EAqEjB/5B,EAAA,GAAAiE,EAAA,OAAAC,EAAAqmD,yBAAA,GAAArmD,EAAAgpD,UAAA,KAAA3oD,YAAA,EC7D9BiwB,GACAhwB,GAAW2R,GAAAC,GAAAC,GAAA1R,GAAAuE,GACXkpB,GAAWC,GAAAC,GAAAC,GAAAyH,GAAAxH,GACXC,GACAttB,EACAwtB,GACAsH,GACAmP,GACAvW,GACAnP,GACAmmC,GACAqF,GAAWC,GACXhkD,EAAS,EAAA9F,OAAA;2EAAA,KAGP,GAAO0nD,GAAPqC,QAAOrC,EAA+B,MChCrC,GAAMsC,IAAwB,CACnC,CACEt8C,KAAM,UACN+b,YAAa,CAAEC,EAAc,EAC7BziB,KAAM,CACJ0iB,UAAWC,EAAUizB,sBAEvB/yB,SAAU,CACR,CACEpc,KAAM,GACNqc,WAAY,iBACZC,UAAW,QAEb,CACEtc,KAAM,iBACNuc,UAAW65B,GACX78C,KAAM,CACJijB,KAAM,CACJC,iFAAOttB,IAIb,CACE6Q,KAAM,iBACNuc,UAAWg1B,GACXh4C,KAAM,CACJijB,KAAM,CACJC,oEAAOttB,IAIb,CACE6Q,KAAM,gBACNqc,WAAY,kBAEd,CACErc,KAAM,0BACNuc,UAAWy9B,GACXzgD,KAAM,CACJijB,KAAM,CACJC,gFAAOttB,GAGZ,EAEJ,ECvCH,GAAaotD,KAAyB,KAAhC,GAAOA,GAAP,KAAOA,EAAyB,CACpCC,iBAAmB,CACjB,CACEC,OAAQC,GAAWC,IACnBznD,MAAO,gBACPiH,IAAKygD,GAAoBC,eAAiBH,GAAWC,IAAIG,YAAW,GAEtE,CACEL,OAAQC,GAAWK,KACnB7nD,MAAO,WACPiH,IAAKygD,GAAoBC,eAAiBH,GAAWK,KAAKD,YAAW,GAEvE,CACEL,OAAQC,GAAWzf,KACnB/nC,MAAO,WACPiH,IAAKygD,GAAoBC,eAAiBH,GAAWzf,KAAK6f,YAAW,EACtE,IAAAluD,CAAA,CAhBQ2tD,4CAAyB,IAAA3tD,CAAA,CAAzB2tD,wBAAyB1tD,UAAA,4BAAAE,MAAA,EAAAC,KAAA,EAAAC,WAAA,IAAAC,+aCb7BC,qDAATxC,EAAA,QAAA2D,EAAA,KAA2DzD,EAAA,EAE3D0D,EAAA,4CAAAiB,YAAA,EDQIwrD,EAAmC,EAAA5mD,cAAA,KAGjC,GAAOmmD,GAAPU,QAAOV,EAAyB,MEJtC,GAAsBW,KAAS,KAAzB,GAAgBA,GAAhB,KAAgBA,UAAiBvoC,GAAY,CACjDhc,kBAAyC,GACzCC,uBAA8C,GAC9CwE,SACA/B,KAEA8hD,MAA4C,GAElCjmD,aASVC,UAAQ,CACN,KAAKD,aAAe,KAAKke,cAAche,cAAa,EAEpD,KAAKgmD,WAAU,CACjB,EAEA,GAAIC,mBAAgB,CAClB,GAAMC,GAAa,KAAKjiD,KACpB,KAAKA,KAAKkiD,QAAQC,eAClB,EACEC,EAAc,KAAKpiD,KACrB,KAAKA,KAAKU,cAAckE,IAAIy9C,GAAKA,EAAEF,cAAc,EAAE9C,OAAO,CAACnrD,EAAG4kB,IAAM5kB,EAAI4kB,EAAG,CAAC,EAC5E,EACJ,MAAOmpC,GAAaG,CACtB,EAEAE,gBAAc,CACZ,MAAO,MAAKzmD,aAAaoH,OAAOs/C,yBAAyB39C,IAAIwP,GAAKA,EAAE6iB,OAAO,EACxEn9B,OAAO,KAAK+B,aAAaoH,OAAOC,wBAAwB0B,IAAIwP,GAAKA,EAAE6iB,OAAO,CAAC,CAChF,EAEA8qB,YAAU,CACR,GAAMS,GAAW,KAAKtQ,KAAKS,QAAO,EAElC,KAAK54B,cAAcsyB,gBAAe,EAC/BrnC,UAAUsnC,GAAe,CACxB,GAAIkW,EAASC,KAAKppD,KAAOqpD,GAASC,cAAe,CAC/C,KAAKb,MAAQ12B,OAAOw3B,QAAQC,EAAgB,EACzCj+C,IAAI,CAAC,CAAEk+C,EAAKxvD,CAAK,KAAQ,CAAEA,MAAOwvD,EAAIjsB,SAAQ,EAAIh9B,MAAO2yC,GAAkBl5C,EAAOg5C,CAAY,CAAC,EAAG,EACrG,OACF,CAEA,KAAKwV,MAAQ,CACX,CAAExuD,MAAOovD,GAASK,KAAKlsB,SAAQ,EAAIh9B,MAAO2yC,GAAkBqW,GAAiBH,GAASK,IAAI,EAAGzW,CAAY,CAAC,CAAE,CAEhH,EAAC,CACL,EAEA0W,mBAAiB,CAIf,MAHI,OAAKC,WAAU,GACf,CAAC,KAAKjjD,MACN,KAAKA,KAAKkjD,YACV,KAAKhR,KAAKS,QAAO,EAAGt5C,KAAO,KAAK2G,KAAK3G,GAG3C,EAEA8pD,eAAa,CAEb,CAEAC,sBAAoB,CAEpB,CAEA3/C,mBAAiB,CACf,MAAO,MAAKxQ,KAAKK,MAAMsI,UACzB,EAEUynD,gBAAiBC,EAAc,CACvC,MAAOA,GAAUC,gBAAkBC,GAAcC,4BAA8BD,GAAcE,IAC/F,EAEUC,mBAAiB,CACzB,KAAKrmD,kBAAoB,KAAK2E,cAAc3E,kBAC5C,KAAKC,uBAAyB,KAAK0E,cAAc1E,sBACnD,IAAAhK,CAAA,CAnFoBsuD,8DAAQ,IAAA1iC,GAAR0iC,CAAQ,UAAAtuD,CAAA,CAARsuD,yBAAQ3nD,SAAA,CAAAklB,EAAA,KAAxB,GAAgByiC,GAAhB+B,QAAgB/B,EAAS,UAAAgC,EAAA,CAAApyD,CAAA,kBAAAA,CAAA,YAAAqyD,GAAAryD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KCCvBuD,EAAA,GAAAC,EAAA,KAAAO,CAAA,cAAAuuD,GAAAtyD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAEAuD,EAAA,GAAAC,EAAA,KAAAO,CAAA,cAAAwuD,GAAAvyD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAKNH,EAAA,WACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GADEC,EAAA,EAAAswB,EAAA,IAAApwB,EAAAC,WAAAkyD,SAAA,OCFJ,GAAaC,KAAsB,KAA7B,GAAOA,GAAP,KAAOA,UAA8B5qC,GAAY,CAC3CC,oBAAsB7d,EAAO8d,EAAmB,EAClD/L,SAAW/R,EAAOgS,CAAQ,EAC1By2C,iBAAmBzoD,EAAO0oD,EAAgB,EAEzCC,OAASnxD,EAAcC,MAAS,EAChC4O,SAAW7O,EAAcC,MAAS,EAE3Cub,MACA41C,aAAe,GAEfxoD,UAAQ,CACN,KAAKqhB,UAAU,CACb8mC,SAAUM,GACX,CACH,EAEA7mC,eAAa,CACX,KAAKhP,MAAQvb,OAEb,GAAMqxD,GAAyB,KAAKvxD,KAAKK,MAEzC,KAAK6wD,iBAAiBM,WAAW,KAAKJ,OAAM,EAAIG,CAAU,EACvDx/C,UAAU,CACTuJ,KAAMA,IAAM,KAAKd,SAASe,uLAA8C,KAAKzM,SAAQ,CAAE,IAAG,EAE1F2M,MAAOC,GAAM,CACX,KAAKD,MAAQC,EAAIrP,OACnB,GACD,CACL,EAEAolD,0BAAwB,CACtB,KAAKJ,aAAe,CAAC,KAAKA,YAC5B,EAEAK,oBAAkB,CAChB,uKACF,GAAApxD,CAAA,CAtCW2wD,8DAAqB,IAAA/kC,GAArB+kC,CAAqB,UAAA3wD,CAAA,CAArB2wD,wBAAqB1wD,UAAA,uBAAAC,OAAA,CAAA4wD,OAAA,aAAAtiD,SAAA,gBAAA7H,SAAA,CAAAklB,EAAA,EAAA1rB,MAAA,EAAAC,KAAA,EAAAC,WAAA,IAAAC,2CDNPC,kEAEAA,kYAZ3BxC,EAAA,YAAM2G,EAAA,4BAAYnC,GAAA4nB,cAAA,CAAe,IAE/BpsB,EAAA,WACE4D,EAAA,aAKA5D,EAAA,cAAoB2G,EAAA,yBAASnC,GAAA4uD,yBAAA,CAA0B,IACrDvvD,EAAA,EAAAyvD,GAAA,oBAAoB,EAAAC,GAAA,oBAKtBrzD,EAAA,EAAS,EAGX2D,EAAA,EAAA2vD,GAAA,aAIA5vD,EAAA,aACF1D,EAAA,GAAA0C,CAAA,KAtBmC2B,EAAA,YAAAC,EAAA7C,IAAA,EAKFrB,EAAA,GAAAiE,EAAA,UAAAE,EAAA,EAAAC,GAAAF,EAAA/D,WAAAkyD,QAAA,GAAA3rD,EAAA,QAAAnE,CAAA,CAAAmwD,YAAA,oBAI3B1yD,EAAA,GAAAgJ,GAAA9E,EAAAwuD,aAAA,KAQE1yD,EAAA,GAAAiE,EAAA,OAAAC,EAAA/D,WAAAkyD,QAAA,EAI0DryD,EAAA,EAAA0hB,GAAA,QAAAxd,EAAA6uD,mBAAA,GAAmC9uD,EAAA,YAAAC,EAAA7C,KAAA2qB,KAAA,KAAAznB,YAAA,ECPxFC,GAAW6pB,GAAA5pB,GAAAE,GAAAC,GAAEE,GAAmBC,GAAAC,GAAEE,GAASC,CAAI,EAAAE,OAAA;iEAAA,KAEtD,GAAOitD,GAAPa,QAAOb,EAAsB,UAAAc,EAAA,CAAAvzD,CAAA,kBAAAA,CAAA,GAAAwzD,EAAA,CAAAxzD,CAAA,QAAAA,CAAA,EAAAyzD,EAAA,CAAAA,CAAA,qCAAAC,EAAA,CAAA1zD,CAAA,IAAAmP,MAAA,CAAAnP,CAAA,YAAA2zD,GAAA3zD,CAAA,CAAAW,CAAA,EAAAX,CAAA,KCT7BH,EAAA,WAAA2D,EAAA,KAAuCzD,EAAA,aAAA6zD,GAAA5zD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAKrCH,EAAA,UAAwDC,EAAA,GAAoBC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAA5DkE,EAAA,aAAAE,EAAA,EAAA+R,GAAA1Q,EAAA4I,MAAA,UAAA5I,EAAA4I,KAAA+B,QAAA,GAAwCnQ,EAAA,EAAAC,EAAAuF,EAAA4I,MAAA,UAAA5I,EAAA4I,KAAA+B,QAAA,aAAAujD,GAAA7zD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAH1DH,EAAA,WAAA2D,EAAA,KAAqCzD,EAAA,EAErCF,EAAA,WACE6D,EAAA,EAAAowD,GAAA,YACF/zD,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GADMC,EAAA,GAAAiE,EAAA,OAAAuB,EAAA4I,IAAA,aAAAwlD,GAAA/zD,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAOVH,EAAA,YAAqD,SAC9C,OACA,YAC0BC,EAAA,GAAA2J,EAAA,YAA6D1J,EAAA,EACxFF,EAAA,YAAA2D,EAAA,KAAuFzD,EAAA,EAAM,EAC3F,EAENF,EAAA,SAAK,OACA,aAC0BC,EAAA,IAAoCC,EAAA,EAC/DF,EAAA,aAAA2D,EAAA,OAAoGzD,EAAA,EAAM,EACxG,EAENF,EAAA,UAAK,QACA,aAC0BC,EAAA,IAAsBC,EAAA,EACjDF,EAAA,aAAA2D,EAAA,OAAiGzD,EAAA,EAAM,EACrG,EAENF,EAAA,UAAK,WAC0I,aAChHC,EAAA,IAAsBC,EAAA,EACjDF,EAAA,aAAA2D,EAAA,OAAyDzD,EAAA,EAAM,EAC7D,EAENF,EAAA,UAAK,WACyJ,aAC/HC,EAAA,IAA8DC,EAAA,EACzFF,EAAA,aAAA2D,EAAA,OAA2DzD,EAAA,EAAM,EAC/D,EAENF,EAAA,UAAK,QACA,aAC0BC,EAAA,IAA6BC,EAAA,EACxDF,EAAA,aAAA2D,EAAA,OAAkGzD,EAAA,EAAM,EACtG,EACA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAjCyBC,EAAA,GAAA+1C,GAAA,GAAAvwC,EAAA4I,KAAAylD,YAAA,KAAAtqD,GAAA,KAAA/D,EAAA4I,KAAA0lD,eAAA,QACQ9zD,EAAA,GAAAqE,EAAAmB,EAAA4I,KAAAylD,WAAA,EAAAvvD,CAAA,IAKRtE,EAAA,GAAAC,EAAAuF,EAAA4I,KAAAU,cAAAxE,QAAA,GACQtK,EAAA,GAAAqE,EAAAmB,EAAA4I,KAAAU,cAAAxE,MAAA,EAAAhG,CAAA,KAKRtE,EAAA,GAAAC,EAAAuF,EAAA4qD,gBAAA,EACQpwD,EAAA,GAAAqE,EAAAmB,EAAA4qD,gBAAA,EAAA9rD,CAAA,KAIlCtE,EAAA,GAAAiE,EAAA,aAAAkwC,GAAA,GAAA3X,EAAA,GAAkD,cAAAr4B,EAAA,GAAA4vD,GAAA,cAAAvuD,EAAA4I,MAAA,UAAA5I,EAAA4I,KAAAkiD,QAAA//B,aAAA,MACxBvwB,EAAA,GAAAC,EAAAuF,EAAA4I,KAAA4lD,WAAA,EAK1Bh0D,EAAA,GAAAiE,EAAA,aAAAkwC,GAAA,GAAA3X,EAAA,GAAkD,cAAAr4B,EAAA,GAAA4vD,GAAA,cAAAvuD,EAAA4I,MAAA,UAAA5I,EAAA4I,KAAAkiD,QAAA//B,aAAA,qBACxBvwB,EAAA,GAAA+1C,GAAA,GAAAvwC,EAAA4I,KAAA6lD,oBAAA,MAAAzuD,EAAA4I,KAAA8lD,mBAAA,IAMAl0D,EAAA,GAAAC,EAAAuF,EAAA4I,KAAA+lD,kBAAA,EACQn0D,EAAA,GAAAqE,EAAAmB,EAAA4I,KAAA+lD,kBAAA,EAAA7vD,CAAA,gBAAA8vD,GAAAv0D,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAlCzC0D,EAAA,EAAA8wD,GAAA,gBAAAx0D,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAMkE,EAAA,QAAAuB,EAAA6rD,WAAA,GAAA7rD,EAAA4I,IAAA,aAAAkmD,GAAAz0D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAwCRH,EAAA,iBAAsCC,EAAA,GAAWC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAXC,EAAA,EAAAC,EAAAuF,EAAAsX,KAAA,aAAAy3C,GAAA10D,CAAA,CAAAW,CAAA,YAAAg0D,GAAA30D,CAAA,CAAAW,CAAA,EAAAX,CAAA,IAMlC0D,EAAA,EAAAkxD,GAAA,6BAAAC,GAAA70D,CAAA,CAAAW,CAAA,EAAAX,CAAA,KASEH,EAAA,QAAA2D,EAAA,MAAiBzD,EAAA,aAAA+0D,GAAA90D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAEjBH,EAAA,WAA4BC,EAAA,GAA6BC,EAAA,EAEzD0D,EAAA,8BAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAF4BC,EAAA,EAAAswB,EAAA,aAAA9qB,EAAA4I,KAAA+B,SAAA,IAGNnQ,EAAA,EAAAiE,EAAA,cAAAuB,EAAA4I,KAAAkiD,QAAA//B,WAAA,EAAwC,UAAA/qB,EAAA4I,KAAAkiD,QAAA7yC,OAAA,EAAiC,WAAAjY,EAAA4I,KAAA+B,QAAA,aAAAykD,GAAA/0D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAe3FH,EAAA,YACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IADEC,EAAA,EAAAswB,EAAA,IAAA9qB,EAAArF,WAAAgQ,SAAA,gBAAA0kD,GAAAh1D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAPJH,EAAA,YAA6C,cAC3C2D,EAAA,MAAmCzD,EAAA,EACnC0D,EAAA,cAIAC,EAAA,EAAAuxD,GAAA,cAGFl1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAL+BC,EAAA,GAAAiE,EAAA,UAAAE,EAAA,EAAAC,GAAAoB,EAAArF,WAAAgQ,QAAA,GAEvBnQ,EAAA,EAAAiE,EAAA,OAAAuB,EAAArF,WAAAgQ,QAAA,aAAA4kD,GAAAl1D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAWNH,EAAA,YACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IADEC,EAAA,EAAAswB,EAAA,IAAA9qB,EAAArF,WAAA60D,YAAA,gBAAAC,GAAAp1D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAPJH,EAAA,YAA6C,cAC3C2D,EAAA,MAA0CzD,EAAA,EAC1C0D,EAAA,cAIAC,EAAA,EAAA2xD,GAAA,cAGFt1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GALkCC,EAAA,GAAAiE,EAAA,UAAAE,EAAA,EAAAC,GAAAoB,EAAArF,WAAA60D,WAAA,GAE1Bh1D,EAAA,EAAAiE,EAAA,OAAAuB,EAAArF,WAAA60D,WAAA,aAAAG,GAAAt1D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAYNH,EAAA,YACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GADEC,EAAA,EAAAswB,EAAA,IAAA9qB,EAAArF,WAAA4P,MAAA,gBAAAqlD,GAAAv1D,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAOFH,EAAA,aACE0D,EAAA,GAAAC,EAAA,MAAAO,CAAA,GAGFhE,EAAA,aAAAy1D,GAAAx1D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAPFH,EAAA,YAA6C,cAC3C2D,EAAA,MAAmCzD,EAAA,EAEnC2D,EAAA,EAAA+xD,GAAA,kBAMAhyD,EAAA,sBACF1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAPYC,EAAA,GAAAiE,EAAA,OAAAuB,EAAA+vD,mBAAA,GAMmDv1D,EAAA,EAAAiE,EAAA,YAAAuB,EAAArF,WAAAkyD,QAAA,aAAAmD,GAAA31D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAOvDH,EAAA,eACAC,EAAA,GACAC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAFmCld,EAAA,QAAAwxD,EAAA/zD,KAAA,EACnC1B,EAAA,EAAAswB,EAAA,IAAAmlC,EAAAxtD,MAAA,gBAAAytD,GAAA71D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAKNH,EAAA,YACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GADEC,EAAA,EAAAswB,EAAA,IAAA9qB,EAAArF,WAAA0wD,KAAA,gBAAA8E,GAAA91D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAkBFH,EAAA,YACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GADEC,EAAA,EAAAswB,EAAA,IAAA9qB,EAAArF,WAAA6J,WAAA,gBAAA4rD,GAAA/1D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAgBFH,EAAA,YACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GADEC,EAAA,EAAAswB,EAAA,IAAA9qB,EAAArF,WAAAmO,gBAAA,gBAAAunD,GAAAh2D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAUEH,EAAA,eAAyEC,EAAA,GAAgBC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAArCld,EAAA,QAAA6xD,CAAA,EAAqB91D,EAAA,EAAAC,EAAA61D,CAAA,aAAAC,GAAAl2D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAN/EH,EAAA,YAA+E,cAC7E2D,EAAA,MAAwCzD,EAAA,EAExCF,EAAA,YAAuC,eACqC,eACxE2D,EAAA,MAAuDzD,EAAA,EACvD2D,EAAA,EAAAyyD,GAAA,iBACFp2D,EAAA,EAAS,EACL,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAHMC,EAAA,GAAAiE,EAAA,cACuBjE,EAAA,GAAAiE,EAAA,UAAAuB,EAAAkrD,eAAA,cAAAuF,GAAAp2D,CAAA,CAAAW,CAAA,YAAA01D,GAAAr2D,CAAA,CAAAW,CAAA,EAAAX,CAAA,IAoBrC0D,EAAA,EAAA4yD,GAAA,6BAAAC,GAAAv2D,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GA0BFjG,EAAA,YAAsD,YACpD2D,EAAA,MAA8EzD,EAAA,EAC9EF,EAAA,eAA8C2G,EAAA,mBAAAP,EAAAo9C,CAAA,KAAA19C,GAAAQ,EAAA,SAAAI,GAASZ,EAAAgsD,qBAAA,CAAsB,KAA7EnuD,EAAA,MAAqHzD,EAAA,EAAS,aAAAy2D,GAAAx2D,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GArBtIjG,EAAA,YAA0D,YAEtD4D,EAAA,YACA5D,EAAA,WAAA2D,EAAA,MAA4CzD,EAAA,EAAK,EAGnDF,EAAA,YAAyB,YAEE,YACD,YACpB2D,EAAA,MAAqFzD,EAAA,EACrFF,EAAA,gBAA8C2G,EAAA,mBAAAP,EAAAi9C,CAAA,KAAAv9C,GAAAQ,EAAA,QAAAI,GAASZ,EAAA+rD,cAAA,CAAe,KAAtEluD,EAAA,OAAiGzD,EAAA,EAAS,EAG5GF,EAAA,aAAwB,aACtB2D,EAAA,OAA6DzD,EAAA,EAC7D0D,EAAA,0BACF1D,EAAA,EAEA2D,EAAA,GAAA+yD,GAAA,cAIF12D,EAAA,EAAM,EAEF,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GATkBC,EAAA,IAAAiE,EAAA,SAAAuB,EAAA4I,KAAA3G,EAAA,EAAkB,WAAAjC,EAAA4I,KAAA+B,QAAA,EAGhCnQ,EAAA,EAAAiE,EAAA,OAAAuB,EAAA4I,KAAAmoD,gBAAA,ICxLZ,GAAaC,KAAoB,KAA3B,GAAOA,GAAP,KAAOA,UAA4BvG,GAAQ,CACrC9nC,cAAgBre,EAAOC,EAAa,EACpC4d,oBAAsB7d,EAAO8d,EAAmB,EAChDvX,cAAgBvG,EAAOuB,EAAa,EACpCorD,cAAgB3sD,EAAO4sD,EAAa,EACpCpW,KAAOx2C,EAAOy2C,EAAW,EAC3B14B,OAAS/d,EAAOge,EAAM,EACtBjM,SAAW/R,EAAOgS,CAAQ,EAC1By2C,iBAAmBzoD,EAAO0oD,EAAgB,EAElD11C,MAEAjR,aAAA,CACE,MAAK,EAEL,KAAKkmD,kBAAiB,CACxB,EAEA7nD,UAAQ,CACN,MAAMA,SAAQ,EAEd,GAAMohB,GAAgB,CACpBulC,KAAMC,GAASK,KAAKlsB,SAAQ,EAC5Bj7B,WAAY,GACZsE,gBAAiB,IAGnB,KAAKid,UAAU,CACbpb,SAAUwmD,GACV3B,YAAa4B,GACb7mD,MAAO8mD,GACPxE,SAAU,KAAKkD,mBAAkB,EAAKuB,GAAmCnE,GACzE9B,KAAMkG,GACN/sD,WAAYigB,GACZ3b,gBAAiB4b,GACjBynC,gBAAiB,MAChBrmC,CAAa,CAClB,EAEAQ,eAAa,CACX,KAAKhP,MAAQvb,OAEb,GAAMy1D,GAAyB,KAAK31D,KAAKK,MAEzCs1D,EAAWC,WAAa,KAAKxF,gBAAgB,KAAKpwD,KAAKK,KAAK,EAG5Ds1D,EAAWhtD,WAAaiB,SAAS,KAAK5J,KAAKK,MAAMsI,UAAA,CAAe,EAAE,EAClEgtD,EAAW1oD,gBAAkBrD,SAAS,KAAK5J,KAAKK,MAAM4M,eAAA,CAAoB,EAAE,EAE5E,KAAKikD,iBAAiB2E,QAAQF,CAAU,EACrC5jD,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,oFAAyBo6C,EAAW7mD,QAAQ,4DAAW,EACrE,KAAK0X,OAAOoF,SAAS,CAAE,4BAA4B,CAAE,CACvD,GAEAnQ,MAAOC,GAAM,CACX,KAAKD,MAAQC,EAAIrP,OACnB,GACD,CACL,EAEA2jD,YAAU,CACR,MAAO,EACT,EAEAkE,oBAAkB,CAChB,MAAO,MAAKtrD,aAAa8F,MAAMhF,OACjC,EAEAgoD,oBAAkB,CAChB,4HACF,GAAApxD,CAAA,CAzEW60D,4CAAmB,IAAA70D,CAAA,CAAnB60D,wBAAmB50D,UAAA,qBAAA0G,SAAA,CAAAklB,EAAA,EAAA1rB,MAAA,GAAAC,KAAA,GAAAC,WAAA,IAAAC,uBD4DiCC,yCA4CvBA,yCAmBAA,uRAuBJA,mFApMWA,gBA4GfA,mCAwBDA,qFAe2BA,mHAmBUA,khBAgCbA,qDAlMlBA,yFAEAA,uEAcGA,kMAMAA,gRAMAA,4LAMAA,iJAMAA,qQAMAA,2JAqB3BA,qCAiBqDA,wGAF/BA,oEAakCA,kGAF/BA,iDAuBHA,4bAGNA,oHA4DQA,6KAIGA,gFA+BLA,6XAOEA,uIAC8CA,ySAI9CA,gVAKAA,8OACqDA,okFA/O5FxC,EAAA,YAA6B,WACD,WACI,UAC1B2D,EAAA,KAAgDzD,EAAA,EAAI,EAGtD2D,EAAA,EAAA4zD,GAAA,aAAoB,EAAAC,GAAA,KAStBx3D,EAAA,EAAK,EAGP2D,EAAA,EAAA8zD,GAAA,yBAAA93B,EAAA,EAAwB,EAAA+3B,GAAA,mBA2CxB53D,EAAA,aACE4D,EAAA,aAEA5D,EAAA,aACE6D,EAAA,GAAAg0D,GAAA,aACF33D,EAAA,EAAM,EAGRF,EAAA,aAA8B,aAE1B4D,EAAA,aAEAC,EAAA,GAAAi0D,GAAA,UAAoB,GAAAC,GAAA,KAUtB73D,EAAA,EAEAF,EAAA,aAAyB,aACN,cACG2G,EAAA,sBAAAJ,MAAAH,GAAAC,CAAA,EAAAK,EAAYlC,EAAA4nB,cAAA,CAAe,KAC3CvoB,EAAA,GAAAm0D,GAAA,cAA6C,GAAAC,GAAA,cAsB7Cj4D,EAAA,aAAwB,eACtB2D,EAAA,MAA6BzD,EAAA,EAC7B0D,EAAA,eAKAC,EAAA,GAAAq0D,GAAA,cAGFh4D,EAAA,EAEA2D,EAAA,GAAAs0D,GAAA,cAYAn4D,EAAA,aAAwB,eACtB2D,EAAA,MAA2BzD,EAAA,EAC3BF,EAAA,aAAuC,gBAEjC6D,EAAA,GAAAu0D,GAAA,iBAGFl4D,EAAA,EAAS,EAGb2D,EAAA,GAAAw0D,GAAA,cAGFn4D,EAAA,EAEAF,EAAA,aAAwB,eACtB2D,EAAA,MAA6DzD,EAAA,EAE7D0D,EAAA,gCAO0B,iCAI1BC,EAAA,GAAAy0D,GAAA,cAGFp4D,EAAA,EAEAF,EAAA,aAAwB,eACtB2D,EAAA,MAA6EzD,EAAA,EAE7E0D,EAAA,gCASAC,EAAA,GAAA00D,GAAA,cAGFr4D,EAAA,EAEA2D,EAAA,GAAA20D,GAAA,cAWAx4D,EAAA,aAAwB,8BAKpB0D,EAAA,OAAAC,EAAA,MAAAO,CAAA,GAGFhE,EAAA,EAAuB,EAGzB0D,EAAA,eACF1D,EAAA,EAEAF,EAAA,aACE6D,EAAA,GAAA40D,GAAA,aACFv4D,EAAA,EAAM,EACF,EACF,EAIR2D,EAAA,GAAA60D,GAAA,mBAAA91D,CAAA,QAAAE,CAAA,CAAA2rB,EAAA,IApNInuB,EAAA,GAAAgJ,GAAA9E,EAAAmtD,WAAA,OAqDOrxD,EAAA,GAAAiE,EAAA,OAAAC,EAAA4Y,KAAA,EAMO9c,EAAA,GAAAiE,EAAA,mBAAAo0D,CAAA,EAQdr4D,EAAA,GAAAgJ,GAAA9E,EAAAmtD,WAAA,KAAAntD,EAAAkK,KAAA,OAciDpO,EAAA,GAAAiE,EAAA,YAAAC,EAAA7C,IAAA,EACpBrB,EAAA,EAAAiE,EAAA,OAAAC,EAAAmtD,WAAA,GAWArxD,EAAA,EAAAiE,EAAA,OAAAC,EAAAmtD,WAAA,GAeGrxD,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA4P,KAAA,GAAkD,WAAA7L,EAAAkK,MAAAlK,EAAAkK,KAAAkjD,aAAA,MAGtEtxD,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA4P,KAAA,EAKiB/P,EAAA,EAAAiE,EAAA,OAAAC,EAAAmtD,WAAA,GAgBQrxD,EAAA,GAAAiE,EAAA,UAAAC,EAAAgsD,KAAA,EAMzBlwD,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA0wD,IAAA,EAWJ7wD,EAAA,GAAAiE,EAAA,QAAAC,EAAAwH,iBAAA,EAA2B,gBAMJ1L,EAAA,EAAAiE,EAAA,aAAAC,EAAA2N,kBAAA,GAEnB7R,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA6J,UAAA,EAWJhK,EAAA,GAAAiE,EAAA,QAAAC,EAAAyH,sBAAA,EAAgC,gBAM5B3L,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAAmO,eAAA,EAKiBtO,EAAA,EAAAiE,EAAA,QAAAC,EAAAmtD,WAAA,GAAAntD,EAAAwsD,eAAA,EAAApmD,SAAA,GAsBmCtK,EAAA,GAAA0hB,GAAA,QAAAxd,EAAA6uD,mBAAA,GAAmC9uD,EAAA,YAAAC,EAAA7C,KAAA2qB,KAAA,EAIjFhsB,EAAA,GAAAiE,EAAA,mBAAAo0D,CAAA,EAOhBr4D,EAAA,EAAAiE,EAAA,OAAAC,EAAAktD,kBAAA,MAAA7sD,YAAA,ECvLF+R,GACAnR,EACAmzD,GACAt4C,GACAxb,GAAW6pB,GAAAlY,GAAAC,GAAA3R,GAAA4R,GAAA1R,GAAAC,GACXE,GAAmBC,GAAAC,GACnBE,GACAE,GACAmzD,GACA70C,GACA9c,GACAgD,GACA2M,GACA+7C,GACAnnD,GACAsL,EAAc,EAAApR,OAAA;6DAAA,KAGZ,GAAOmxD,GAAPgC,QAAOhC,EAAoB,UAAAiC,EAAA,CAAA54D,CAAA,kBAAAA,CAAA,GAAA64D,EAAA,CAAA74D,CAAA,QAAAA,CAAA,EAAA84D,EAAA,CAAAA,CAAA,qCAAAC,EAAA,CAAA/4D,CAAA,IAAAmP,MAAA,CAAAnP,CAAA,YAAAg5D,GAAAh5D,CAAA,CAAAW,CAAA,EAAAX,CAAA,KD9C3BH,EAAA,WAAA2D,EAAA,KAAuCzD,EAAA,aAAAk5D,GAAAj5D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAKrCH,EAAA,UAAwDC,EAAA,GAAoBC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAA5DkE,EAAA,aAAAE,EAAA,EAAA+R,GAAA1Q,EAAA4I,MAAA,UAAA5I,EAAA4I,KAAA+B,QAAA,GAAwCnQ,EAAA,EAAAC,EAAAuF,EAAA4I,MAAA,UAAA5I,EAAA4I,KAAA+B,QAAA,aAAA4oD,GAAAl5D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAH1DH,EAAA,WAAA2D,EAAA,KAAqCzD,EAAA,EAErCF,EAAA,WACE6D,EAAA,EAAAy1D,GAAA,YACFp5D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GADMC,EAAA,GAAAiE,EAAA,OAAAuB,EAAA4I,IAAA,aAAA6qD,GAAAp5D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAOVH,EAAA,YAAqD,SAC9C,OACA,YAC0BC,EAAA,GAAA2J,EAAA,YAA6D1J,EAAA,EACxFF,EAAA,YAAA2D,EAAA,KAAuFzD,EAAA,EAAM,EAC3F,EAENF,EAAA,SAAK,OACA,aAC0BC,EAAA,IAAoCC,EAAA,EAC/DF,EAAA,aAAA2D,EAAA,OAAoGzD,EAAA,EAAM,EACxG,EAENF,EAAA,UAAK,QACA,aAC0BC,EAAA,IAAsBC,EAAA,EACjDF,EAAA,aAAA2D,EAAA,OAAiGzD,EAAA,EAAM,EACrG,EAENF,EAAA,UAAK,WAC0I,aAChHC,EAAA,IAAsBC,EAAA,EACjDF,EAAA,aAAA2D,EAAA,OAAyDzD,EAAA,EAAM,EAC7D,EAENF,EAAA,UAAK,WACyJ,aAC/HC,EAAA,IAA8DC,EAAA,EACzFF,EAAA,aAAA2D,EAAA,OAA2DzD,EAAA,EAAM,EAC/D,EAENF,EAAA,UAAK,QACA,aAC0BC,EAAA,IAA6BC,EAAA,EACxDF,EAAA,aAAA2D,EAAA,OAAkGzD,EAAA,EAAM,EACtG,EACA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAjCyBC,EAAA,GAAA+1C,GAAA,GAAAvwC,EAAA4I,KAAAylD,YAAA,KAAAtqD,GAAA,KAAA/D,EAAA4I,KAAA0lD,eAAA,QACQ9zD,EAAA,GAAAqE,EAAAmB,EAAA4I,KAAAylD,WAAA,EAAAvvD,CAAA,IAKRtE,EAAA,GAAAC,EAAAuF,EAAA4I,KAAAU,cAAAxE,QAAA,GACQtK,EAAA,GAAAqE,EAAAmB,EAAA4I,KAAAU,cAAAxE,MAAA,EAAAhG,CAAA,KAKRtE,EAAA,GAAAC,EAAAuF,EAAA4qD,gBAAA,EACQpwD,EAAA,GAAAqE,EAAAmB,EAAA4qD,gBAAA,EAAA9rD,CAAA,KAIlCtE,EAAA,GAAAiE,EAAA,aAAAkwC,GAAA,GAAA3X,EAAA,GAAkD,cAAAr4B,EAAA,GAAA4vD,GAAA,cAAAvuD,EAAA4I,MAAA,UAAA5I,EAAA4I,KAAAkiD,QAAA//B,aAAA,MACxBvwB,EAAA,GAAAC,EAAAuF,EAAA4I,KAAA4lD,WAAA,EAK1Bh0D,EAAA,GAAAiE,EAAA,aAAAkwC,GAAA,GAAA3X,EAAA,GAAkD,cAAAr4B,EAAA,GAAA4vD,GAAA,cAAAvuD,EAAA4I,MAAA,UAAA5I,EAAA4I,KAAAkiD,QAAA//B,aAAA,qBACxBvwB,EAAA,GAAA+1C,GAAA,GAAAvwC,EAAA4I,KAAA6lD,oBAAA,MAAAzuD,EAAA4I,KAAA8lD,mBAAA,IAMAl0D,EAAA,GAAAC,EAAAuF,EAAA4I,KAAA+lD,kBAAA,EACQn0D,EAAA,GAAAqE,EAAAmB,EAAA4I,KAAA+lD,kBAAA,EAAA7vD,CAAA,gBAAA40D,GAAAr5D,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAlCzC0D,EAAA,EAAA41D,GAAA,gBAAAt5D,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAMkE,EAAA,QAAAuB,EAAA6rD,WAAA,GAAA7rD,EAAA4I,IAAA,aAAAgrD,GAAAv5D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAwCRH,EAAA,iBAAsCC,EAAA,GAAWC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAXC,EAAA,EAAAC,EAAAuF,EAAAsX,KAAA,aAAAu8C,GAAAx5D,CAAA,CAAAW,CAAA,YAAA84D,GAAAz5D,CAAA,CAAAW,CAAA,EAAAX,CAAA,IAMlC0D,EAAA,EAAAg2D,GAAA,6BAAAC,GAAA35D,CAAA,CAAAW,CAAA,EAAAX,CAAA,KASEH,EAAA,QAAA2D,EAAA,MAAiBzD,EAAA,aAAA65D,GAAA55D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAEjBH,EAAA,WAA4BC,EAAA,GAA6BC,EAAA,EAEzD0D,EAAA,8BAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAF4BC,EAAA,EAAAswB,EAAA,aAAA9qB,EAAA4I,KAAA+B,SAAA,IAGNnQ,EAAA,EAAAiE,EAAA,cAAAuB,EAAA4I,KAAAkiD,QAAA//B,WAAA,EAAwC,UAAA/qB,EAAA4I,KAAAkiD,QAAA7yC,OAAA,EAAiC,WAAAjY,EAAA4I,KAAA+B,QAAA,aAAAupD,GAAA75D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAe3FH,EAAA,YACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IADEC,EAAA,EAAAswB,EAAA,IAAA9qB,EAAArF,WAAAgQ,SAAA,gBAAAwpD,GAAA95D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAPJH,EAAA,YAA6C,cAC3C2D,EAAA,MAAmCzD,EAAA,EACnC0D,EAAA,cAIAC,EAAA,EAAAq2D,GAAA,cAGFh6D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAL+BC,EAAA,GAAAiE,EAAA,UAAAE,EAAA,EAAAC,GAAAoB,EAAArF,WAAAgQ,QAAA,GAEvBnQ,EAAA,EAAAiE,EAAA,OAAAuB,EAAArF,WAAAgQ,QAAA,aAAA0pD,GAAAh6D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAWNH,EAAA,YACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IADEC,EAAA,EAAAswB,EAAA,IAAA9qB,EAAArF,WAAA60D,YAAA,gBAAA8E,GAAAj6D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAPJH,EAAA,YAA6C,cAC3C2D,EAAA,MAA0CzD,EAAA,EAC1C0D,EAAA,cAIAC,EAAA,EAAAw2D,GAAA,cAGFn6D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GALkCC,EAAA,GAAAiE,EAAA,UAAAE,EAAA,EAAAC,GAAAoB,EAAArF,WAAA60D,WAAA,GAE1Bh1D,EAAA,EAAAiE,EAAA,OAAAuB,EAAArF,WAAA60D,WAAA,aAAAgF,GAAAn6D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAYNH,EAAA,YACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GADEC,EAAA,EAAAswB,EAAA,IAAA9qB,EAAArF,WAAA4P,MAAA,gBAAAkqD,GAAAp6D,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAOFH,EAAA,aACE0D,EAAA,GAAAC,EAAA,MAAAO,CAAA,GAGFhE,EAAA,aAAAs6D,GAAAr6D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAPFH,EAAA,YAA6C,cAC3C2D,EAAA,MAAmCzD,EAAA,EAEnC2D,EAAA,EAAA42D,GAAA,kBAMA72D,EAAA,sBACF1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAPYC,EAAA,GAAAiE,EAAA,OAAAuB,EAAA+vD,mBAAA,GAMmDv1D,EAAA,EAAAiE,EAAA,YAAAuB,EAAArF,WAAAkyD,QAAA,aAAA+H,GAAAv6D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAOvDH,EAAA,eACAC,EAAA,GACAC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAFmCld,EAAA,QAAAwxD,EAAA/zD,KAAA,EACnC1B,EAAA,EAAAswB,EAAA,IAAAmlC,EAAAxtD,MAAA,gBAAAoyD,GAAAx6D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAKNH,EAAA,YACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GADEC,EAAA,EAAAswB,EAAA,IAAA9qB,EAAArF,WAAA0wD,KAAA,gBAAAyJ,GAAAz6D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAkBFH,EAAA,YACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GADEC,EAAA,EAAAswB,EAAA,IAAA9qB,EAAArF,WAAA6J,WAAA,gBAAAuwD,GAAA16D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAgBFH,EAAA,YACEC,EAAA,GACFC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GADEC,EAAA,EAAAswB,EAAA,IAAA9qB,EAAArF,WAAAmO,gBAAA,gBAAAksD,GAAA36D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAUEH,EAAA,eAAyEC,EAAA,GAAgBC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAArCld,EAAA,QAAA6xD,CAAA,EAAqB91D,EAAA,EAAAC,EAAA61D,CAAA,aAAA2E,GAAA56D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAN/EH,EAAA,YAA+E,cAC7E2D,EAAA,MAAwCzD,EAAA,EAExCF,EAAA,YAAuC,eACqC,eACxE2D,EAAA,MAAuDzD,EAAA,EACvD2D,EAAA,EAAAm3D,GAAA,iBACF96D,EAAA,EAAS,EACL,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAHMC,EAAA,GAAAiE,EAAA,cACuBjE,EAAA,GAAAiE,EAAA,UAAAuB,EAAAkrD,eAAA,cAAAiK,GAAA96D,CAAA,CAAAW,CAAA,YAAAo6D,GAAA/6D,CAAA,CAAAW,CAAA,EAAAX,CAAA,IAoBrC0D,EAAA,EAAAs3D,GAAA,6BAAAC,GAAAj7D,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GA0BFjG,EAAA,YAAsD,YACpD2D,EAAA,MAA8EzD,EAAA,EAC9EF,EAAA,eAA8C2G,EAAA,mBAAAP,EAAAo9C,CAAA,KAAA19C,GAAAQ,EAAA,SAAAI,GAASZ,EAAAgsD,qBAAA,CAAsB,KAA7EnuD,EAAA,MAAqHzD,EAAA,EAAS,aAAAm7D,GAAAl7D,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GArBtIjG,EAAA,YAA0D,YAEtD4D,EAAA,YACA5D,EAAA,WAAA2D,EAAA,MAA4CzD,EAAA,EAAK,EAGnDF,EAAA,YAAyB,YAEE,YACD,YACpB2D,EAAA,MAAqFzD,EAAA,EACrFF,EAAA,gBAA8C2G,EAAA,mBAAAP,EAAAi9C,CAAA,KAAAv9C,GAAAQ,EAAA,QAAAI,GAASZ,EAAA+rD,cAAA,CAAe,KAAtEluD,EAAA,OAAiGzD,EAAA,EAAS,EAG5GF,EAAA,aAAwB,aACtB2D,EAAA,OAA6DzD,EAAA,EAC7D0D,EAAA,0BACF1D,EAAA,EAEA2D,EAAA,GAAAy3D,GAAA,cAIFp7D,EAAA,EAAM,EAEF,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GATkBC,EAAA,IAAAiE,EAAA,SAAAuB,EAAA4I,KAAA3G,EAAA,EAAkB,WAAAjC,EAAA4I,KAAA+B,QAAA,EAGhCnQ,EAAA,EAAAiE,EAAA,OAAAuB,EAAA4I,KAAAmoD,gBAAA,IE1LZ,GAAa0E,KAAoB,KAA3B,GAAOA,GAAP,KAAOA,UAA4BhL,GAAQ,CACrCtoC,oBAAsB7d,EAAO8d,EAAmB,EAChDO,cAAgBre,EAAOC,EAAa,EACpCsG,cAAgBvG,EAAOuB,EAAa,EACpCorD,cAAgB3sD,EAAO4sD,EAAa,EACpCpW,KAAOx2C,EAAOy2C,EAAW,EAC3Bx4B,MAAQje,EAAOke,EAAc,EAC7BH,OAAS/d,EAAOge,EAAM,EACtBjM,SAAW/R,EAAOgS,CAAQ,EAC1Bo/C,YAAcpxD,EAAOqxD,EAAW,EAChCC,iBAAmBtxD,EAAOuxD,EAAgB,EAC1C9I,iBAAmBzoD,EAAO0oD,EAAgB,EAElD11C,MAEQw+C,UAERzvD,aAAA,CACE,MAAK,EAEL,KAAKkmD,kBAAiB,CACxB,EAEA7nD,UAAQ,CACN,MAAMA,SAAQ,EAEd,GAAMohB,GAAgB,CACpBulC,KAAMC,GAASK,KAAKlsB,SAAQ,EAC5Bj7B,WAAY,KACZsE,gBAAiB,MAGnB,KAAKid,UAAU,CACbxb,MAAO8mD,GACPhG,KAAMkG,GACN/sD,WAAYigB,GACZ3b,gBAAiB4b,GACjBynC,gBAAiB,KACjBL,WAAY,MACXhmC,CAAa,EAEhB,KAAKgwC,UAAY,KAAKvzC,MAAM8S,OAAOznB,UAAUk6B,GAAc,CACzD,GAAMmlB,GAASnlB,EAAY7lC,EAAA,CAC3B,KAAKyzD,YAAYna,QAAQ0R,EAAQ,EAAI,EAClCr/C,UAAU,CACTuJ,KAAMvO,GAAQ,KAAKmtD,cAAcntD,CAAI,EAErC0O,MAAOC,GAAM,CACX,KAAKD,MAAQC,EAAIrP,OACnB,GACD,CACL,EAAC,CACH,EAEA8/B,aAAW,CACT,KAAK8tB,UAAU7tB,YAAW,CAC5B,EAEA3hB,eAAa,CACX,KAAKhP,MAAQvb,OAEb,GAAMqxD,GAAyB,KAAKvxD,KAAKK,MACzCkxD,EAAWqE,WAAa,KAAKxF,gBAAgB,KAAKpwD,KAAKK,KAAK,EAG5DkxD,EAAW5oD,WAAaiB,SAAS,KAAK5J,KAAKK,MAAMsI,UAAA,CAAe,EAAE,EAClE4oD,EAAWtkD,gBAAkBrD,SAAS,KAAK5J,KAAKK,MAAM4M,eAAA,CAAoB,EAAE,EAExEskD,EAAWtB,aAAe,SAAQsB,EAAWtB,WAAa,MAE9D,KAAKiB,iBAAiBM,WAAW,KAAKzkD,KAAK3G,GAAImrD,CAAU,EACtDx/C,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,oFAAyB,KAAKxO,KAAK+B,QAAQ,qDAAW,EACpE,KAAK0X,OAAOoF,SAAS,CAAE,4BAA4B,CAAE,CACvD,GAEAnQ,MAAOC,GAAM,CACX,KAAKD,MAAQC,EAAIrP,OACnB,GACD,CACL,EAEA2jD,YAAU,CACR,MAAO,EACT,EAEAkE,oBAAkB,CAChB,MAAO,EACT,EAEAxC,oBAAkB,CAChB,sMACF,CAEAxB,eAAa,CACX,KAAK2J,YAAYM,iBAAiB,KAAKptD,KAAK2B,KAAK,EAC9CqD,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,+WAAwE,KAAKxO,KAAK+B,QAAQ,IAAG,CAC7G,GAEA2M,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEA8jD,sBAAoB,CAClB,KAAK4J,iBAAiBK,iBAAiB,CAAEhJ,OAAQ,KAAKrkD,KAAK3G,EAAE,CAAE,EAC5D2L,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKvO,KAAKmoD,iBAAmB,GAE7B,KAAK16C,SAASe,+KAAiD,KAAKxO,KAAK+B,QAAQ,2DAAY,CAC/F,GAEA2M,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEQ6tD,cAAeG,EAAkB,CACvC,KAAKttD,KAAO,GAAIutD,IAAKD,CAAQ,EAE7B,KAAKr6D,KAAKwS,WAAW,CACnB9D,MAAO2rD,EAAS3rD,MAChB8gD,KAAM6K,EAAS7K,KAAKppD,GAAGw9B,SAAQ,EAC/Bj7B,WAAY0xD,EAAS1xD,WACrBsE,gBAAiBotD,EAASptD,gBAC1BgjD,WAAYoK,EAASpK,WACrBK,gBAAiB+J,EAASzE,WAAarF,GAAcC,4BACtD,CACH,IAAAlwD,CAAA,CAlIWs5D,4CAAmB,IAAAt5D,CAAA,CAAnBs5D,wBAAmBr5D,UAAA,qBAAA0G,SAAA,CAAAklB,EAAA,EAAA1rB,MAAA,GAAAC,KAAA,GAAAC,WAAA,IAAAC,uBF8DiCC,yCA4CvBA,yCAmBAA,uRAuBJA,mFApMWA,gBA4GfA,mCAwBDA,qFAe2BA,mHAmBUA,khBAgCbA,qDAlMlBA,yFAEAA,uEAcGA,kMAMAA,gRAMAA,4LAMAA,iJAMAA,qQAMAA,2JAqB3BA,qCAiBqDA,wGAF/BA,oEAakCA,kGAF/BA,iDAuBHA,4bAGNA,oHA4DQA,6KAIGA,gFA+BLA,6XAOEA,uIAC8CA,ySAI9CA,gVAKAA,8OACqDA,okFA/O5FxC,EAAA,YAA6B,WACD,WACI,UAC1B2D,EAAA,KAAgDzD,EAAA,EAAI,EAGtD2D,EAAA,EAAAq4D,GAAA,aAAoB,EAAAC,GAAA,KAStBj8D,EAAA,EAAK,EAGP2D,EAAA,EAAAu4D,GAAA,yBAAAv8B,EAAA,EAAwB,EAAAw8B,GAAA,mBA2CxBr8D,EAAA,aACE4D,EAAA,aAEA5D,EAAA,aACE6D,EAAA,GAAAy4D,GAAA,aACFp8D,EAAA,EAAM,EAGRF,EAAA,aAA8B,aAE1B4D,EAAA,aAEAC,EAAA,GAAA04D,GAAA,UAAoB,GAAAC,GAAA,KAUtBt8D,EAAA,EAEAF,EAAA,aAAyB,aACN,cACG2G,EAAA,sBAAAJ,MAAAH,GAAAC,CAAA,EAAAK,EAAYlC,EAAA4nB,cAAA,CAAe,KAC3CvoB,EAAA,GAAA44D,GAAA,cAA6C,GAAAC,GAAA,cAsB7C18D,EAAA,aAAwB,eACtB2D,EAAA,MAA6BzD,EAAA,EAC7B0D,EAAA,eAKAC,EAAA,GAAA84D,GAAA,cAGFz8D,EAAA,EAEA2D,EAAA,GAAA+4D,GAAA,cAYA58D,EAAA,aAAwB,eACtB2D,EAAA,MAA2BzD,EAAA,EAC3BF,EAAA,aAAuC,gBAEjC6D,EAAA,GAAAg5D,GAAA,iBAGF38D,EAAA,EAAS,EAGb2D,EAAA,GAAAi5D,GAAA,cAGF58D,EAAA,EAEAF,EAAA,aAAwB,eACtB2D,EAAA,MAA6DzD,EAAA,EAE7D0D,EAAA,gCAO0B,iCAI1BC,EAAA,GAAAk5D,GAAA,cAGF78D,EAAA,EAEAF,EAAA,aAAwB,eACtB2D,EAAA,MAA6EzD,EAAA,EAE7E0D,EAAA,gCASAC,EAAA,GAAAm5D,GAAA,cAGF98D,EAAA,EAEA2D,EAAA,GAAAo5D,GAAA,cAWAj9D,EAAA,aAAwB,8BAKpB0D,EAAA,OAAAC,EAAA,MAAAO,CAAA,GAGFhE,EAAA,EAAuB,EAGzB0D,EAAA,eACF1D,EAAA,EAEAF,EAAA,aACE6D,EAAA,GAAAq5D,GAAA,aACFh9D,EAAA,EAAM,EACF,EACF,EAIR2D,EAAA,GAAAs5D,GAAA,mBAAAv6D,CAAA,QAAAE,CAAA,CAAA2rB,EAAA,IApNInuB,EAAA,GAAAgJ,GAAA9E,EAAAmtD,WAAA,OAqDOrxD,EAAA,GAAAiE,EAAA,OAAAC,EAAA4Y,KAAA,EAMO9c,EAAA,GAAAiE,EAAA,mBAAAo0D,CAAA,EAQdr4D,EAAA,GAAAgJ,GAAA9E,EAAAmtD,WAAA,KAAAntD,EAAAkK,KAAA,OAciDpO,EAAA,GAAAiE,EAAA,YAAAC,EAAA7C,IAAA,EACpBrB,EAAA,EAAAiE,EAAA,OAAAC,EAAAmtD,WAAA,GAWArxD,EAAA,EAAAiE,EAAA,OAAAC,EAAAmtD,WAAA,GAeGrxD,EAAA,GAAAiE,EAAA,UAAAE,EAAA,GAAAC,GAAAF,EAAA/D,WAAA4P,KAAA,GAAkD,WAAA7L,EAAAkK,MAAAlK,EAAAkK,KAAAkjD,aAAA,MAGtEtxD,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA4P,KAAA,EAKiB/P,EAAA,EAAAiE,EAAA,OAAAC,EAAAmtD,WAAA,GAgBQrxD,EAAA,GAAAiE,EAAA,UAAAC,EAAAgsD,KAAA,EAMzBlwD,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA0wD,IAAA,EAWJ7wD,EAAA,GAAAiE,EAAA,QAAAC,EAAAwH,iBAAA,EAA2B,gBAMJ1L,EAAA,EAAAiE,EAAA,aAAAC,EAAA2N,kBAAA,GAEnB7R,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAA6J,UAAA,EAWJhK,EAAA,GAAAiE,EAAA,QAAAC,EAAAyH,sBAAA,EAAgC,gBAM5B3L,EAAA,EAAAiE,EAAA,OAAAC,EAAA/D,WAAAmO,eAAA,EAKiBtO,EAAA,EAAAiE,EAAA,QAAAC,EAAAmtD,WAAA,GAAAntD,EAAAwsD,eAAA,EAAApmD,SAAA,GAsBmCtK,EAAA,GAAA0hB,GAAA,QAAAxd,EAAA6uD,mBAAA,GAAmC9uD,EAAA,YAAAC,EAAA7C,KAAA2qB,KAAA,EAIjFhsB,EAAA,GAAAiE,EAAA,mBAAAo0D,CAAA,EAOhBr4D,EAAA,EAAAiE,EAAA,OAAAC,EAAAktD,kBAAA,MAAA7sD,YAAA,EEzLF+R,GACAnR,EACAmzD,GACAt4C,GACAxb,GAAW6pB,GAAAlY,GAAAC,GAAA3R,GAAA4R,GAAA1R,GAAAC,GACXE,GAAmBC,GAAAC,GACnBE,GACAE,GACAmzD,GACA70C,GACA9c,GACAgD,GACA2M,GACA+7C,GACAnnD,GACAsL,EAAc,EAAApR,OAAA;6DAAA,KAGZ,GAAO41D,GAAP6B,QAAO7B,EAAoB,UAAA8B,EAAA,kBAAAC,EAAA,CAAAn9D,CAAA,IAAAo9D,MAAA,CAAAp9D,CAAA,GAAAq9D,EAAA,CAAAr9D,CAAA,iBAAAA,CAAA,GAAAs9D,EAAA,CAAAt9D,CAAA,GAAAA,CAAA,WAAAu9D,GAAAv9D,CAAA,CAAAW,CAAA,KAAAX,CAAA,IC1CzByD,EAAA,2BAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAEEkE,EAAA,UAAAivB,EAAAwN,WAAA,EAAuB,QAAAxN,EAAAyN,YAAA,aAAA08B,GAAAx9D,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAIzBH,EAAA,UACE4D,EAAA,uBACAF,EAAA,GAAAC,EAAA,KAAAO,CAAA,GACFhE,EAAA,aAAA09D,GAAAz9D,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAXJjG,EAAA,YAAqB,YAEjB6D,EAAA,EAAAg6D,GAAA,6BAGC,EAAAC,GAAA,YAOH59D,EAAA,EAEAF,EAAA,YAAqB,iCACgC2G,EAAA,kBAAAR,EAAA,CAAAC,EAAAmtB,CAAA,KAAAC,GAAAltB,EAAA,QAAAI,GAAU8sB,EAAArD,SAAAhqB,CAAA,CAAgB,KAAEjG,EAAA,EAA2B,EACtG,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAbDC,EAAA,GAAAiE,EAAA,OAAAivB,EAAA4N,kBAAA,GAKC9gC,EAAA,EAAAiE,EAAA,QAAAivB,EAAA4N,kBAAA,GAOsB9gC,EAAA,GAAAiE,EAAA,UAAAivB,EAAA4B,YAAA,aAAA2oC,GAAA59D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KA4C5BH,EAAA,WAAuIC,EAAA,GAAkC2D,EAAA,mBAA0C1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAnJkE,EAAA,aAAAivB,EAAAnD,WAAA,EAAuE/vB,EAAA,EAAAswB,EAAA,GAAA4C,EAAAwqC,UAAA,YAAAz1D,MAAA,gBAAA01D,GAAA99D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KACvIH,EAAA,WAAoIC,EAAA,GAA8B2D,EAAA,mBAAsC1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAvIkE,EAAA,aAAAivB,EAAAnD,WAAA,EAAmE/vB,EAAA,EAAAswB,EAAA,GAAA4C,EAAAwqC,UAAA,QAAAz1D,MAAA,gBAAA21D,GAAA/9D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KACpIH,EAAA,WAA4CC,EAAA,GAA8BC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAA9BC,EAAA,EAAAC,EAAAizB,EAAAwqC,UAAA,SAAAz1D,KAAA,aAAA41D,GAAAh+D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAC5CH,EAAA,WAA+IC,EAAA,GAA+B2D,EAAA,mBAAgD1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAA5JkE,EAAA,aAAAivB,EAAAnD,WAAA,EAA6E/vB,EAAA,EAAAswB,EAAA,GAAA4C,EAAAwqC,UAAA,SAAAz1D,MAAA,gBAAA61D,GAAAj+D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAC/IH,EAAA,WAAuEC,EAAA,GAAmCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAnCC,EAAA,EAAAC,EAAAizB,EAAAwqC,UAAA,cAAAz1D,KAAA,aAAA81D,GAAAl+D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KACvEH,EAAA,WAA+EC,EAAA,GAA2CC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAA3CC,EAAA,EAAAC,EAAAizB,EAAAwqC,UAAA,sBAAAz1D,KAAA,aAAA+1D,GAAAn+D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAC/EH,EAAA,WAAyFC,EAAA,GAAmCC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAnCC,EAAA,EAAAC,EAAAizB,EAAAwqC,UAAA,cAAAz1D,KAAA,aAAAg2D,GAAAp+D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KACzFH,EAAA,WAA8IC,EAAA,GAAmC2D,EAAA,mBAA2C1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAtJkE,EAAA,aAAAivB,EAAAnD,WAAA,EAAwE/vB,EAAA,EAAAswB,EAAA,GAAA4C,EAAAwqC,UAAA,aAAAz1D,MAAA,gBAAAi2D,GAAAr+D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAC9IH,EAAA,WAAsJC,EAAA,GAAuC2D,EAAA,mBAA+C1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAlKkE,EAAA,aAAAivB,EAAAnD,WAAA,EAA4E/vB,EAAA,EAAAswB,EAAA,GAAA4C,EAAAwqC,UAAA,iBAAAz1D,MAAA,gBAAAk2D,GAAAt+D,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GA7CxJjG,EAAA,QAAI,WAEA4D,EAAA,8BACF1D,EAAA,EAEAF,EAAA,WAAqC,aACnC2D,EAAA,KAAmDzD,EAAA,EAAO,EAG5DF,EAAA,WAAqC,YAC6E,eAE5G4D,EAAA,uBACF1D,EAAA,EAEAF,EAAA,aAAiC,aACP,eACtB2D,EAAA,MAA8DzD,EAAA,EAE9DF,EAAA,4BAG4BkG,GAAA,yBAAAC,EAAA,CAAAC,EAAAytB,CAAA,KAAAL,GAAAltB,EAAA,EAAAC,MAAAC,IAAAgtB,EAAAkrC,gBAAAv4D,CAAA,IAAAqtB,EAAAkrC,gBAAAv4D,GAAAO,EAAAP,CAAA,KAG5BjG,EAAA,EAAqB,EAGvBF,EAAA,aAAwB,8BAEakG,GAAA,yBAAAC,EAAA,CAAAC,EAAAytB,CAAA,KAAAL,GAAAltB,EAAA,EAAAC,MAAAC,IAAAgtB,EAAAmrC,qBAAAx4D,CAAA,IAAAqtB,EAAAmrC,qBAAAx4D,GAAAO,EAAAP,CAAA,KAElCjG,EAAA,EAAuB,EACpB,EACF,EACF,EAER2D,EAAA,GAAA+6D,GAAA,aAAuI,GAAAC,GAAA,aACH,GAAAC,GAAA,aACxF,GAAAC,GAAA,aACmG,GAAAC,GAAA,aACxE,GAAAC,GAAA,aACQ,GAAAC,GAAA,aACU,GAAAC,GAAA,aACqD,GAAAC,GAAA,aAEhJl/D,EAAA,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAzBYC,EAAA,IAAAiE,EAAA,iBAAAivB,EAAA6rC,OAAA,EAA0B,sBACAv4D,GAAA,UAAA0sB,EAAAkrC,eAAA,EAQOp+D,EAAA,GAAAwG,GAAA,UAAA0sB,EAAAmrC,oBAAA,EAO1Br+D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,aACAh/D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,SACAh/D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,UACAh/D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,UACAh/D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,eACAh/D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,uBACAh/D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,eACAh/D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,cACAh/D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,6BAAAC,GAAAp/D,CAAA,CAAAW,CAAA,KAAAX,CAAA,IAYfyD,EAAA,+BAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAsC,CAAA,CAAAvC,CAAA,CAAAo1B,QAAA,CAAA5yB,CAAA,CAAAxC,CAAA,CAAAqhB,SAAA,CAAmDld,EAAA,cAAAi7D,CAAA,EAAoB,WAAAC,CAAA,aAAAC,GAAAv/D,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAIvEjG,EAAA,oCAEmB2G,EAAA,yBAAAP,EAAAu5D,CAAA,KAAAnsC,GAAAltB,EAAA,SAAAI,GAAe8sB,EAAAosC,cAAA,CAAe,KAAC,yBAAAx5D,EAAAu5D,CAAA,KAAAnsC,GAAAltB,EAAA,SAAAI,GAAgB8sB,EAAAosC,cAAA,CAAe,KACjF1/D,EAAA,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAF+BkE,EAAA,OAAAi7D,CAAA,EAAa,UAAAA,EAAAK,kBAAA,EAAoC,iBAAArsC,EAAAssC,4BAAA,aAAAC,GAAA5/D,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAgBhFH,EAAA,YAAA2D,EAAA,KAA0FzD,EAAA,aAAA8/D,GAAA7/D,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAC1FH,EAAA,YAAA2D,EAAA,KAAgEzD,EAAA,aAAA+/D,GAAA9/D,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAZlEH,EAAA,WAAyD,UAC4E,YAE/H4D,EAAA,wBACA5D,EAAA,SAAK,UACGC,EAAA,GAA8BC,EAAA,EACpCF,EAAA,aAAoBC,EAAA,GAAmBC,EAAA,EAAO,EAC1C,EACF,EAGR2D,EAAA,EAAAq8D,GAAA,cAAqF,GAAAC,GAAA,cAEvFjgE,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAZ4FnhB,EAAA,EAAAiE,EAAA,aAAAE,EAAA,EAAA4vD,GAAA,MAAAmL,EAAA/uD,QAAA,GAErEnQ,EAAA,GAAAiE,EAAA,QAAAi7D,GAAA,UAAAA,EAAA5O,OAAA,EAETtwD,EAAA,GAAAC,EAAAi/D,EAAA5O,QAAA//B,WAAA,EACcvwB,EAAA,GAAAC,EAAAi/D,EAAA/uD,QAAA,EAKpBnQ,EAAA,EAAAiE,EAAA,OAAAi7D,EAAAK,mBAAAO,eAAA,EACA9/D,EAAA,EAAAiE,EAAA,OAAAi7D,EAAAa,OAAA,aAAAC,GAAAngE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAINH,EAAA,aAAgGC,EAAA,GAAqBC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAAohB,SAAA,CAArBnhB,EAAA,EAAAC,EAAAi/D,EAAArO,KAAA5oD,KAAA,aAAAg4D,GAAApgE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAChGH,EAAA,aAAoFC,EAAA,GAAqBC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAAohB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAA5DkE,EAAA,UAAAivB,EAAAgtC,aAAAhB,EAAArO,KAAAppD,EAAA,GAAuCzH,EAAA,EAAAC,EAAAi/D,EAAArO,KAAA5oD,KAAA,aAAAk4D,GAAAtgE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAFtFH,EAAA,QACE6D,EAAA,EAAA68D,GAAA,eAAgG,EAAAC,GAAA,eAElGzgE,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAFSnhB,EAAA,EAAAiE,EAAA,OAAAi7D,EAAAa,OAAA,EACA//D,EAAA,EAAAiE,EAAA,QAAAi7D,EAAAa,OAAA,aAAAO,GAAAzgE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAGTH,EAAA,QACE4D,EAAA,2BACF1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CADsBnhB,EAAA,EAAAiE,EAAA,QAAAi7D,CAAA,aAAAqB,GAAA1gE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAGtBH,EAAA,QACE4D,EAAA,wBAKF1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAJyCnhB,EAAA,EAAAiE,EAAA,MAAAi7D,EAAAsB,aAAA,EAA0B,QAAAtB,EAAAuB,iBAAA,EAAiC,iBAAAvB,EAAApL,cAAA,EAC1D,eAAAoL,EAAAl1D,UAAA,aAAA02D,GAAA7gE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAK1CH,EAAA,QACE4D,EAAA,wBAKF1D,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAJ+CnhB,EAAA,EAAAiE,EAAA,MAAAi7D,EAAAyB,kBAAA,EAA+B,QAAAzB,EAAA0B,sBAAA,EAAsC,iBAAA1B,EAAA2B,mBAAA,EACrE,eAAA3B,EAAA5wD,eAAA,aAAAwyD,GAAAjhE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAK/CH,EAAA,QACEC,EAAA,GAAA2J,EAAA,YACF1J,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CADEnhB,EAAA,EAAAswB,EAAA,IAAAywC,GAAA,IAAA7B,EAAA8B,kBAAA,kBAAAC,GAAAphE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAIAH,EAAA,aAA6DC,EAAA,GAAqBC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAAAohB,SAAA,CAApDld,EAAA,aAAAi7D,EAAA5N,UAAA,EAA+BtxD,EAAA,EAAAC,EAAAi/D,EAAA5N,UAAA,aAAA4P,GAAArhE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAD/DH,EAAA,QACE6D,EAAA,EAAA49D,GAAA,eACFvhE,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CADSnhB,EAAA,EAAAiE,EAAA,OAAAi7D,EAAA5N,UAAA,aAAA8P,GAAAvhE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAGTH,EAAA,WAA6DC,EAAA,GAAA2J,EAAA,aAAsC1J,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAA/Dld,EAAA,QAAAi7D,EAAAzuC,SAAA,EAAyBzwB,EAAA,EAAAC,EAAAsJ,GAAA,IAAA21D,EAAAzuC,UAAA,qBAAA4wC,GAAAxhE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAE7DH,EAAA,WAAqEC,EAAA,GAAA2J,EAAA,aAA0C1J,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAAvEld,EAAA,QAAAi7D,EAAAoC,aAAA,EAA6BthE,EAAA,EAAAC,EAAAsJ,GAAA,IAAA21D,EAAAoC,cAAA,qBAAAC,GAAA1hE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAlEvEH,EAAA,WAAyF,WAErF4D,EAAA,wBACF1D,EAAA,EAEAF,EAAA,WACE6D,EAAA,EAAAi+D,GAAA,iCACF5hE,EAAA,EAEAF,EAAA,WACE6D,EAAA,EAAAk+D,GAAA,sCAIF7hE,EAAA,EAEA2D,EAAA,EAAAm+D,GAAA,cAAyD,EAAAC,GAAA,aAe1B,EAAAC,GAAA,aAKC,GAAAC,GAAA,aAIA,GAAAC,GAAA,aAQK,GAAAC,GAAA,aAQQ,GAAAC,GAAA,aAIR,GAAAC,GAAA,aAIwB,GAAAC,GAAA,aAG/DtiE,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAnEIkE,EAAA,iBAAAi7D,CAAA,EAAuB,UAAA/6D,EAAA,GAAA+R,GAAAgd,EAAAmrC,sBAAAa,EAAAa,OAAA,GAEN//D,EAAA,GAAAiE,EAAA,QAAAi7D,CAAA,EAGKl/D,EAAA,EAAAiE,EAAA,UAAAE,EAAA,GAAAq4B,GAAA,CAAA0iC,EAAAiD,aAAA,GACGniE,EAAA,EAAAiE,EAAA,OAAAi7D,EAAAiD,aAAA,EAKtBniE,EAAA,GAAAiE,EAAA,QAAAivB,EAAA4N,kBAAA,GAKA9gC,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,aAeAh/D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,SAKAh/D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,UAIAh/D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,UAQAh/D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,eAQAh/D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,uBAIAh/D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,eAIAh/D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,cAEAh/D,EAAA,EAAAiE,EAAA,OAAAivB,EAAA8rC,WAAA,6BAAAoD,GAAAviE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAKPH,EAAA,WAAgC,WACZ,aAChB2D,EAAA,KAA+CzD,EAAA,EAC/CD,EAAA,GACFC,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CADHnhB,EAAA,GAAAswB,EAAA,IAAA+xC,EAAAF,cAAA,OCzER,GAAaG,KAAkB,KAAzB,GAAOA,GAAP,KAAOA,UAA0B9rC,GAAe,CAC1CzO,MAAQje,EAAOke,EAAc,EAC7BH,OAAS/d,EAAOge,EAAM,EACxBjM,SAAW/R,EAAOgS,CAAQ,EAC1B2a,eAAiB3sB,EAAO4sB,EAAc,EACtC4pB,KAAOx2C,EAAOy2C,EAAW,EACzBtpB,UAAYntB,EAAOy4D,EAAgB,EACnChQ,iBAAmBzoD,EAAO0oD,EAAgB,EAC1C9e,qBAAuB5pC,EAAO6tC,EAAmB,EACjDxK,MAAQrjC,EAAOsjC,EAAY,EAC3B5I,cAAgB16B,EAAO26B,EAAa,EAInC+9B,aAAenkC,GAAiC,cAAc,EAEvEhvB,MAA+D,GAE/DsiB,aAAe,EACfK,KAAiB,CAAEC,MAAO,YAAaC,MAAO,CAAC,EAC/CJ,WAA6B,CAAEoF,MAAO,KAAKtF,YAAaG,MAAO,CAAC,EAEhEssC,qBAAuB,GAEvB39B,YAA0C,GAC1Cq+B,QAEAjqC,aAAsC,CACpC,CACEtF,+GAAOttB,CACPitB,SAAU,CACR,CACEztB,MAAO,cACPuG,2KAAO/F,CACR,EAEJ,EAGHs9D,6BAA0D,CACxDiD,gBAAiB,GACjBC,aAAc,GACdC,UAAW,IAGLC,iBAA6B,GAErC,GAAIhS,WAAQ,CACV,MAAO,MAAKtQ,KAAKS,QAAO,CAC1B,EAEA,GAAIqd,kBAAe,CACjB,MAAO,MAAKwE,kBAAoB,EAClC,EAEA,GAAIxE,iBAAiByE,EAAa,CAChC,KAAKD,iBAAmBC,EAExB,KAAKC,oBAAmB,CAC1B,EAEM54D,UAAQ,OAAA8tB,IAAA,sBACZ,KAAKI,WAAU,EAEf,KAAKoM,cAAcu+B,UAAU,6BAA8B,IAAM,KAAK5pC,mBAAkB,CAAE,EAE1F,GAAMuH,GAA0C,CAC9C,CACE,CACEz4B,kDAAO/F,CACP+Q,uRAAa/Q,CACbu1B,QAASpoB,GAAS,KAAK2zD,YAAY3zD,CAAK,EACxCgoB,YAAahoB,GAASA,EAAMwuC,MAAMolB,GAAK,KAAKrS,SAASsS,UAAUD,CAAC,CAAC,GAEnE,CACEh7D,sFAAO/F,CACP+Q,wfAAa/Q,CACbu1B,QAASpoB,GAAS,KAAK8zD,iBAAiB9zD,CAAK,EAC7CgoB,YAAahoB,GAASA,EAAMwuC,MAAMolB,GAAK,KAAKrS,SAASsS,UAAUD,CAAC,GAAKA,EAAElD,UAAY,EAAK,GAE1F,CACE93D,4FAAO/F,CACPu1B,QAASpoB,GAAS,KAAK+zD,WAAW/zD,CAAK,EACvCgoB,YAAahoB,GAASA,EAAMwuC,MAAMolB,GAAK,KAAKrS,SAASsS,UAAUD,CAAC,GAAKA,EAAElD,UAAY,EAAI,EACxF,EAEH,CACE,CACE93D,kQAAO/F,CACPu1B,QAASpoB,GAAS,KAAKg0D,oBAAoBh0D,CAAK,EAChDgoB,YAAahoB,GACJA,EAAMwuC,MAAMolB,GAAK,KAAKrS,SAASsS,UAAUD,CAAC,GAAK,CAACA,EAAElD,SAAWkD,EAAEnlC,gBAAkB,EAAI,EAE/F,CACF,EAGH,KAAK4C,YAAc,KAAM,MAAKyM,MAAMm2B,WAAW5iC,EAAa,cAAe,oDAAoD,EAE/H,KAAKq+B,QAAU,CACb,CAAEt3D,GAAI,WAAYQ,mGAA0B,EAC5C,CAAER,GAAI,OAAQQ,gCAAsB,EACpC,CAAER,GAAI,QAASQ,aAAuB,EACtC,CAAER,GAAI,QAASQ,kFAA6B,EAC5C,CAAER,GAAI,qBAAsBQ,2EAA4B,EACxD,CAAER,GAAI,YAAaQ,kDAAyB,EAC5C,CAAER,GAAI,gBAAiBQ,6FAA4B,EAEnD,CAAER,GAAI,aAAcQ,uFAA6B,EACjD,CAAER,GAAI,aAAcQ,+GAA6B,CAAE,EAGrD,KAAKs7D,oBAAmB,CAC1B,KAEA/1B,aAAW,CACT,KAAKhJ,cAAcg/B,aAAa,4BAA4B,CAC9D,EAEAD,qBAAmB,CACjB,GAAME,GAAS,KAAK/vB,qBAAqBC,QAAQ2uB,EAAkBoB,uBAAuB,EAE1F,GAAID,EACF,GAAI,CACF,KAAKrF,gBAAkBpuB,KAAKiF,MAAMwuB,CAAM,EACxC,OACF,OAAS1mD,EAAK,CACZ2uB,GAAO5uB,MAAM,gCAAiCC,CAAG,CACnD,EAIF,KAAKqhD,gBAAkB,CAAE,WAAY,OAAQ,QAAS,QAAS,qBAAsB,YAAa,eAAe,CAEnH,EAEA0E,qBAAmB,CACjB,KAAKpvB,qBAAqBI,QAAQwuB,EAAkBoB,wBAAyB1zB,KAAKC,UAAU,KAAKmuB,eAAe,CAAC,CACnH,EAEAhtC,eAAa,CACX,MAAO,mBACT,EAEA8uC,aAAcrP,EAAkB,CAC9B,OAAQA,GACN,IAAKC,IAASC,cACZ,MAAO,eACT,IAAKD,IAAS6S,UACZ,MAAO,aACT,QACE,MAAO,cACX,EACF,CAEA3E,WAAYv3D,EAAU,CACpB,MAAO,MAAK22D,gBAAgBt2D,KAAK2oD,GAAKA,IAAMhpD,CAAE,CAChD,EAEAi2D,UAAWj2D,EAAU,CACnB,MAAO,MAAKs3D,QAAQj3D,KAAK2oD,GAAKA,EAAEhpD,KAAOA,CAAE,CAC3C,EAEAm8D,4BAA6Bx1D,EAAiB,CAC5C,MAAOA,GAAKqyD,kBAAoB,IAAMryD,EAAKoyD,aAC7C,EAEAqD,iCAAkCz1D,EAAiB,CACjD,MAAOA,GAAKwyD,uBAAyB,IAAMxyD,EAAKuyD,kBAClD,EAEAwC,iBAAkB9zD,EAAa,CAC7B,OAAWjB,KAAQiB,GACjB,GAAIjB,EAAK+B,WAAa,OAAQ,CAC5B,KAAK0L,SAASiB,2JAAqC,EACnD,OACF,CAGF,KAAK0lD,aAAY,EAAG9jC,UAAUrvB,CAAK,CACrC,EAEAiwD,eAAa,CACX,KAAKvnC,WAAU,CACjB,EAEMqrC,WAAY/zD,EAAa,OAAA2oB,IAAA,uBACjB,KAAM,MAAKvB,eAAewB,QACpCjgB,0fAEE,CAAEkf,MAAO7nB,EAAM/E,MAAM,CAAE,wFAET,KAGN,IAEZ,KAAKioD,iBAAiB6Q,WAAW/zD,CAAK,EACnC+D,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,QACZ5E,+hBAEE,CAAEkf,MAAO7nB,EAAM/E,MAAM,CAAE,CACxB,EAEH,KAAKytB,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,KAEMs1D,YAAa3zD,EAAa,OAAA2oB,IAAA,sBAC9B,GAAI3oB,EAAMy0D,KAAKb,GAAKA,EAAE9yD,WAAa,MAAM,EAAG,CAC1C,KAAK0L,SAASiB,uHAAwC,EACtD,OACF,CAEA,GAAMpP,GAAUxL,w+BACdA,CACA,OAASmN,EAAM2D,IAAIiwD,GAAK,OAASA,EAAE9yD,SAAW,OAAO,EAAE+U,KAAK,EAAE,EAAI,SAExD,KAAM,MAAKuR,eAAewB,QAAQvqB,8CAA0B,KAC5D,IAEZ,KAAK6kD,iBAAiByQ,YAAY3zD,CAAK,EACpC+D,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,QACZ5E,iaAEE,CAAEkf,MAAO7nB,EAAM/E,MAAM,CAAE,CACxB,EAGH,KAAKytB,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,KAEA21D,oBAAqBh0D,EAAa,CAChC,KAAKkjD,iBAAiBwR,YAAY10D,EAAO,CAAEyuB,cAAe,EAAI,CAAE,EAC7D1qB,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,QACZ5E,srCAEE,CAAEkf,MAAO7nB,EAAM/E,MAAM,CAAE,CACxB,EAGH,KAAKytB,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEgByrB,oBAAkB,OAAAnB,IAAA,sBAChC,GAAMgsC,GAAM,KAAKzR,iBAAiB0R,SAAS,CACzCnyC,WAAY,KAAKA,WACjBE,KAAM,KAAKA,KACXhjB,OAAQ,KAAKA,OACd,EAED,GAAI,CACF,GAAMqqB,GAAa,KAAM6qC,IAAcF,CAAG,EAE1C,KAAK30D,MAAQgqB,EAAW/sB,KAAK0G,IAAIiwD,GAAM12C,GAAAC,GAAA,GAClCy2C,GADkC,CAGrC1D,mBAAoBhzC,GAAAC,GAAA,GACfy2C,EAAE3S,SADa,CAGlB9/B,aAAc2zC,GAAMC,iBAAiBnB,EAAE3S,QAAQ11C,KAAMqoD,EAAE3S,QAAQ58B,IAAI,EAEnEosC,gBAAiB,GACjBuE,YAAa,GACbC,sBAAuB,GACvBC,kBAAmB,MAErB,EACF,KAAK5yC,aAAe0H,EAAWC,MAE/B,KAAKkrC,gBAAe,CACtB,QAASznD,EAAK,CACZ,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,CACjC,EACF,IAEQ82D,iBAAe,CACrB,KAAKvtC,UAAUwtC,UAAU,CAAEC,SAAU,KAAKr1D,MAAM2D,IAAIiwD,GAAKA,EAAE9yD,SAAW,IAAMw0D,GAAc,CAAE,CAAC,CAAE,EAC5FvxD,UAAUwxD,GAAc,CACvB,OAAWx2D,KAAQ,MAAKiB,MACtBjB,EAAKmxD,mBAAmBO,gBAAkB8E,EAAYF,SAASt2D,EAAK+B,SAAW,IAAMw0D,GAAc,CAAE,EAAEE,eAE3G,EAAC,CACL,IAhSQr4D,EAZG81D,EAYaoB,0BAA0B,oCAAA/hE,CAAA,CAZvC2gE,8DAAiB,IAAA/0C,GAAjB+0C,CAAiB,UAAA3gE,CAAA,CAAjB2gE,wBAAiB1gE,UAAA,mBAAAo9B,UAAA,QAAAA,CAAAl2B,EAAA5E,EAAA,CAAA4E,EAAA,GAAAm2B,EAAA,CAAA18B,CAAA,CAAAigE,YAAA,CAAAzF,EAAA,IAAAz6D,CAAA,IAAA68B,EAAA,KAAA72B,QAAA,EAAA+2B,EAAA,EAAAv9B,KAAA,GAAAC,IAAA,IAAAC,MAAA,CAAAA,CAAA,QAAAK,CAAA,CAAAA,CAAA,oGDvE0BH,8HAO3BA,6GAcaA,yKAS+CA,4LAY3CA,+NAQJA,iEAzBCA,4LAWIA,mHAoCIA,iLAetBA,iEAUgEA,mFAC3BA,+KAIiBA,uGAUvDA,kJAQAA,0HAuBgBA,8jIAzJ5CxC,EAAA,eAGEkG,GAAA,2BAAAC,EAAA,CAAAI,MAAAH,GAAAC,CAAA,EAAAG,GAAAhC,EAAAy8B,aAAA96B,CAAA,IAAA3B,EAAAy8B,aAAA96B,GAAAO,EAAAP,CAAA,KAA2CQ,EAAA,sBAAAR,EAAA,CAAAI,MAAAH,GAAAC,CAAA,EAAAK,EAAclC,EAAAmtB,SAAAxrB,CAAA,CAAgB,KAGzEtC,EAAA,EAAAuhE,GAAA,qBAAiC,EAAAC,GAAA,uBAsBD,EAAAC,GAAA,wBAkD+B,EAAAC,GAAA,sBAgFjErlE,EAAA,EAEAF,EAAA,4BAAiC2G,EAAA,wBAAAJ,MAAAH,GAAAC,CAAA,EAAAK,EAAclC,EAAAo7D,cAAA,CAAe,KAAE1/D,EAAA,GAAA0C,CAAA,KA/J9D2B,EAAA,QAAAC,EAAAmL,KAAA,EAAe,YAAAnL,EAAAytB,aAAA,GAA+B,eAAAztB,EAAAytB,YAAA,EAA8B,OAAAztB,EAAA0tB,WAAA,EAAqB,QAAA1tB,EAAA4tB,WAAAC,KAAA,EAA2B,qBAAA7tB,EAAA2tB,kBAAA,EACnF,YAAA3tB,EAAA8tB,KAAAC,KAAA,EAAyB,YAAA/tB,EAAA8tB,KAAAE,KAAA,EAAyB,uBAC3F1rB,GAAA,YAAAtC,EAAAy8B,YAAA,EAA6B18B,EAAA,WAAa,qBAAyD,wBAA2B,4BAChG,4BAAAC,EAAAiuB,sBAAA,GAAsD,kBAAAjuB,EAAA61B,YAAA,KAAAx1B,YAAA,ECmDlFiwB,GACApC,GAAWC,GAAAC,GAAAC,GAAAkR,GAAAzJ,GAAAkrC,GAAA1yC,GAAAkR,GAAAC,GACXlR,GACAttB,EACA+0B,GACA5jB,GACAoc,GACAyyC,GACAC,GACAC,GACAjlD,GACA5b,GAAWG,GAAAuE,GACXqN,GACAoc,GACAztB,GACA+0B,GACAqrC,GACA1yC,GACAqN,GACApN,GACA0yC,GACAzyC,GACA3nB,GACAq6D,EAAoB,EAAAngE,OAAA;6DAAA,KAGlB,GAAOi9D,GAAPmD,QAAOnD,EAAkB,MCrE/B,GAAaoD,KAAiB,KAAxB,GAAOA,GAAP,KAAOA,EAAiB,CACpB3uC,aAAejtB,EAAOktB,EAAY,EAClC1rB,SAAWxB,EAAOyB,EAAU,EAC5BC,cAAgB1B,EAAO2B,EAAa,EACpC+uB,YAAc1wB,EAAO2wB,EAAW,EAExCkrC,eACEhrC,EAA0E,CAE1E,GAAM,CAAE7I,aAAY9iB,QAAM,EAAK2rB,EAE3BE,EAAS,GAAIC,MACjBD,SAAS,KAAK9D,aAAa6uC,qBAAqBp5C,GAAA,CAAEqO,UAAWzO,GAAKuO,EAAS,CAAE,SAAU,YAAY,CAAE,EAAG,EAExGE,EAASA,EAAOgrC,IAAI,QAAS/zC,EAAWC,MAAMkT,SAAQ,CAAE,EACrD4gC,IAAI,QAAS/zC,EAAWoF,MAAM+N,SAAQ,CAAE,EAE3CpK,EAAS,KAAKirC,2BAA2B92D,EAAQ6rB,CAAM,EAEhD,KAAKvvB,SACTS,IAAuBirB,GAAa+uC,eAAgB,CAAElrC,QAAM,CAAE,EAC9D5uB,KACC0rB,GAAUxrB,GAAO,KAAK4qB,aAAaivC,cAAc75D,CAAG,CAAC,EACrDD,GAAW6Q,GAAO,KAAKvR,cAAcY,YAAY2Q,CAAG,CAAC,CAAC,CAE5D,EAEAkpD,uBAAqB,CACnB,MAAO,CACL,CACEz2C,8DAAOttB,CACPitB,SAAU,CACR,CACEztB,MAAO,YACPuG,wBAAO/F,CACR,GAIL,CACEstB,yDAAOttB,CACPitB,SAAU,CACR,CACEztB,MAAO,eACPuG,WAAO/F,EAET,CACER,MAAO,cACPuG,oEAAO/F,CACR,GAIL,CACEstB,qEAAOttB,CACPitB,SAAU,CACR,CACEztB,MAAO,8BACPuG,gEAAO/F,EAET,CACER,MAAO,+BACPuG,4EAAO/F,EAET,CACER,MAAO,wBACPuG,uGAAO/F,EAET,CACER,MAAO,yBACPuG,8BAAO/F,CACR,GAIL,CACEstB,qEAAOttB,CACPitB,SAAU,CACR,CACEztB,MAAO,gBACPuG,6FAAO/F,EAET,CACER,MAAO,eACPuG,6FAAO/F,CACR,GAIL,CACEstB,8DAAOttB,CACPitB,SAAU,CACR,CACEztB,MAAO,eACPuG,kLAAO/F,EAET,CACER,MAAO,gBACPuG,4KAAO/F,CACR,EAEJ,CAEL,EAEQ4jE,2BAA4B92D,EAAgB6rB,EAAkB,CACpE,GAAIqrC,GAAUC,GAAaC,YACzBD,GAAaE,cACbF,GAAaG,oBACbH,GAAaI,MACbJ,GAAaK,OACbL,GAAaM,eAEXC,EAAeC,GAAe,EAElC,GAAI,CAAC33D,EAAQ,MAAO,MAAKwrB,YAAYkhB,gBAAgB7gB,EAAQ,CAAEqrC,UAASQ,cAAY,CAAE,EAEtF,GAAM3rB,GAAU,KAAKvgB,YAAYwgB,uBAAuBhsC,EAAQ,CAC9D43D,QAAS,CACP1rB,OAAQ,WACR2rB,UAAW,IAEbC,YAAa,CACX5rB,OAAQ,OACR2rB,UAAW,IAEbE,iBAAkB,CAChB7rB,OAAQ,aACR2rB,UAAW,IAEbG,OAAQ,CACN9rB,OAAQ,UACR2rB,UAAW,IAEbI,aAAc,CACZ/rB,OAAQ,eACRzjB,QAASA,IAAM,IAEjByvC,cAAe,CACbhsB,OAAQ,gBACRzjB,QAASA,IAAM,IAEjB0vC,aAAc,CACZjsB,OAAQ,WACRC,SAAU,IAEZisB,KAAM,CACJlsB,OAAQ,QACR2rB,UAAW,IAEd,EAED,MAAI9rB,GAAQksB,eACVf,GAAW,CAACC,GAAaE,cAEzBtrB,EAAQksB,aAAe1lE,QAGrBw5C,EAAQmsB,gBACVR,EAAe,CAAEW,GAAaC,QAASD,GAAaE,SAAUF,GAAaG,SAAUH,GAAaI,kBAAkB,EAEpH1sB,EAAQmsB,cAAgB3lE,QAGnB,KAAKi5B,YAAYkhB,gBAAgB7gB,EAAQtO,GAAAC,GAAA,GAAKuuB,GAAL,CAAcmrB,UAASQ,cAAY,EAAE,CACvF,IAAA/kE,CAAA,CArKW+jE,4CAAiB,IAAA/jE,CAAA,CAAjB+jE,2BAAiB/4D,QAAjB+4D,EAAiB94D,IAAA,IAAxB,GAAO84D,GAAPgC,QAAOhC,EAAiB,UAAAiC,EAAA,qBAAAC,EAAA,CAAA/nE,CAAA,IAAAi4C,OAAA,CAAAj4C,CAAA,GAAAgoE,EAAA,CAAAA,CAAA,SAAAC,EAAA,CAAAjoE,CAAA,IAAAmP,MAAA,CAAAnP,CAAA,YAAAkoE,GAAAloE,CAAA,CAAAW,CAAA,KAAAX,CAAA,ICFtByD,EAAA,2BAAAzD,CAAA,QAAAC,CAAA,CAAAC,CAAA,IAEEkE,EAAA,UAAAivB,EAAAwN,WAAA,EAAuB,QAAAxN,EAAAyN,YAAA,aAAAqnC,GAAAnoE,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAJ7BjG,EAAA,YAAqB,YAEjB6D,EAAA,EAAA0kE,GAAA,6BAKFroE,EAAA,EAEAF,EAAA,YAAgC,iCACqB2G,EAAA,kBAAAR,EAAA,CAAAC,EAAAmtB,CAAA,KAAAC,GAAAltB,EAAA,QAAAI,GAAU8sB,EAAArD,SAAAhqB,CAAA,CAAgB,KAAEjG,EAAA,EAE/EF,EAAA,kBAAqD2G,EAAA,mBAAAP,EAAAmtB,CAAA,KAAAC,GAAAltB,EAAA,QAAAI,GAAS8sB,EAAA6E,WAAA,CAAY,KAAEn4B,EAAA,EAAY,EACpF,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAVDC,EAAA,GAAAiE,EAAA,OAAAivB,EAAA4N,kBAAA,GAOuB9gC,EAAA,GAAAiE,EAAA,UAAAivB,EAAA4B,YAAA,aAAAozC,GAAAroE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAS9BH,EAAA,QAAI,WAEA4D,EAAA,8BACF1D,EAAA,EACAF,EAAA,WAAqC,aACnC2D,EAAA,KAAmDzD,EAAA,EAAO,EAE5DF,EAAA,WAAqC,aACnC2D,EAAA,KAA0CzD,EAAA,EAAO,EAEnDF,EAAA,WAAA2D,EAAA,MAA0BzD,EAAA,EAC1BF,EAAA,YAAA2D,EAAA,MAAyBzD,EAAA,EACzBF,EAAA,YAAAmE,EAAA,MAA6GP,EAAA,oBAAqDQ,EAAA,EAAAlE,EAAA,EAClKF,EAAA,YAAAmE,EAAA,MAA+HP,EAAA,oBAA6CQ,EAAA,EAAAlE,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAD5JC,EAAA,IAAAiE,EAAA,aAAAivB,EAAAnD,WAAA,EACsB/vB,EAAA,GAAAiE,EAAA,aAAAivB,EAAAnD,WAAA,aAAAo4C,GAAAtoE,CAAA,CAAAW,CAAA,EAAAX,CAAA,KA6BrCH,EAAA,aAAA2D,EAAA,KAA4CzD,EAAA,aAAAwoE,GAAAvoE,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAE5CH,EAAA,aAAA2D,EAAA,KAA+CzD,EAAA,aAAAyoE,GAAAxoE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAOjDH,EAAA,aAAiEC,EAAA,GAAuBC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAAvBnhB,EAAA,EAAAC,EAAAqoE,EAAApnC,MAAAj5B,KAAA,aAAAsgE,GAAA1oE,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAEjEH,EAAA,aAAA2D,EAAA,KAAmFzD,EAAA,aAAA4oE,GAAA3oE,CAAA,CAAAW,CAAA,EAAAX,CAAA,KACnFH,EAAA,aAAA2D,EAAA,MAAiFzD,EAAA,aAAA6oE,GAAA5oE,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAEjFH,EAAA,aAAA2D,EAAA,MAA2EzD,EAAA,aAAA8oE,GAAA7oE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAKzEH,EAAA,UAICC,EAAA,GAASC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,IADRkE,EAAA,aAAAkwC,GAAA,EAAA3X,EAAA,GAAsB,cAAAr4B,EAAA,EAAA4vD,GAAA7gC,EAAAy1C,mBAAAC,CAAA,IACvB5oE,EAAA,EAAAC,EAAA2oE,CAAA,aAAAC,GAAAhpE,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAMLH,EAAA,aAAA2D,EAAA,MAAmFzD,EAAA,aAAAkpE,GAAAjpE,CAAA,CAAAW,CAAA,EAAAX,CAAA,KACnFH,EAAA,aAAA2D,EAAA,MAAgEzD,EAAA,aAAAmpE,GAAAlpE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAChEH,EAAA,aAAA2D,EAAA,MAAwGzD,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAArCnhB,EAAA,EAAAqE,EAAAikE,EAAA/c,MAAAjhD,MAAA,EAAAhG,CAAA,eAAA0kE,GAAAnpE,CAAA,CAAAW,CAAA,EAAAX,CAAA,KACnEH,EAAA,aAAA2D,EAAA,MAAgEzD,EAAA,aAAAqpE,GAAAppE,CAAA,CAAAW,CAAA,EAAAX,CAAA,KAChEH,EAAA,aAAA2D,EAAA,MAAuFzD,EAAA,aAAAspE,GAAArpE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAEvFH,EAAA,UAAiEC,EAAA,GAAA2J,EAAA,YAAoC1J,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GAApCC,EAAA,EAAAC,EAAAsJ,GAAA,IAAA2pB,EAAAi2C,aAAAb,CAAA,iBAAAc,GAAAvpE,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GA1DrEjG,EAAA,WAA6B2G,EAAA,4BAAAiiE,GAAAxiE,EAAAytB,CAAA,EAAApS,UAAA+R,EAAAltB,EAAA,QAAAI,GAAe8sB,EAAAm2C,mBAAAf,CAAA,CAAyB,KACnE5oE,EAAA,WACE4D,EAAA,wBACF1D,EAAA,EAEAF,EAAA,WACE4D,EAAA,+BACF1D,EAAA,EAEAF,EAAA,WAAwB,kCAGpB2G,EAAA,0BAAAP,EAAAytB,CAAA,KAAAL,GAAAltB,EAAA,QAAAI,GAAgB8sB,EAAA6E,WAAA,CAAY,KAAC,+BAAAjyB,EAAAytB,CAAA,KAAAL,GAAAltB,EAAA,QAAAI,GAAsB8sB,EAAA6E,WAAA,CAAY,KAAC,gCAAAjyB,EAAAytB,CAAA,KAAAL,GAAAltB,EAAA,QAAAI,GAAuB8sB,EAAA6E,WAAA,CAAY,KACpGn4B,EAAA,EAA4B,EAG/BF,EAAA,QACE4D,EAAA,sBACF1D,EAAA,EAEAF,EAAA,QAAI,UAEA6D,EAAA,GAAA+lE,GAAA,eAAqB,GAAAC,GAAA,eAMrBjmE,EAAA,gCAAiE,6BAIjEC,EAAA,GAAAimE,GAAA,eAAiE,GAAAC,GAAA,eAEK,GAAAC,GAAA,eACD,GAAAC,GAAA,eAGvE/pE,EAAA,EAEAF,EAAA,UACEkqE,GAAA,GAAAC,GAAA,WAAAC,EAAA,EAOFlqE,EAAA,EAAM,EAGRF,EAAA,SACE6D,EAAA,GAAAwmE,GAAA,eAAsE,GAAAC,GAAA,eACT,GAAAC,GAAA,eACM,GAAAC,GAAA,eACP,GAAAC,GAAA,eACa,GAAAC,GAAA,eAG3ExqE,EAAA,EAEAF,EAAA,SACEC,EAAA,IAAA2J,EAAA,cACF1J,EAAA,EAAK,MAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA00B,QAAA,CAAA7yB,CAAA,CAAA7B,CAAA,CAAA2gB,SAAA,CAAA7e,CAAA,CAAAvC,CAAA,GA/DHkE,EAAA,iBAAAqkE,CAAA,EAEiBtoE,EAAA,GAAAiE,EAAA,QAAAqkE,CAAA,EAIOtoE,EAAA,GAAAiE,EAAA,cAAAqkE,CAAA,EAAqB,WAAA+B,CAAA,EAK8BrqE,EAAA,GAAAiE,EAAA,QAAAqkE,CAAA,EAAe,iBAAAp1C,EAAAo3C,mBAAA,EAM3EtqE,EAAA,GAAAiE,EAAA,QAAAqkE,CAAA,EAKbtoE,EAAA,GAAAgJ,GAAAs/D,EAAA1B,QAAA,OAMwB5mE,EAAA,GAAAiE,EAAA,QAAAqkE,CAAA,EAEHtoE,EAAA,EAAAiE,EAAA,QAAAqkE,CAAA,EAEdtoE,EAAA,EAAAiE,EAAA,OAAAivB,EAAAq3C,cAAAjC,CAAA,GAEAtoE,EAAA,EAAAiE,EAAA,OAAAivB,EAAAs3C,iBAAAlC,CAAA,GACAtoE,EAAA,EAAAiE,EAAA,OAAAivB,EAAAu3C,gBAAAnC,CAAA,GAEAtoE,EAAA,EAAAiE,EAAA,OAAAivB,EAAAw3C,eAAApC,CAAA,GAIPtoE,EAAA,GAAA2qE,GAAArC,EAAAsC,aAAA,EAWK5qE,EAAA,GAAAiE,EAAA,OAAAivB,EAAA23C,gBAAAvC,CAAA,GACAtoE,EAAA,EAAAiE,EAAA,OAAAivB,EAAA43C,OAAAxC,CAAA,GACAtoE,EAAA,EAAAiE,EAAA,OAAAivB,EAAA63C,aAAAzC,CAAA,GACAtoE,EAAA,EAAAiE,EAAA,OAAAqkE,EAAAtB,MAAA,EACAhnE,EAAA,EAAAiE,EAAA,OAAAivB,EAAA83C,iBAAA1C,CAAA,GAEAtoE,EAAA,EAAAiE,EAAA,QAAAivB,EAAA+3C,SAAA3C,CAAA,IAAAA,EAAAtB,QAAAsB,EAAA1B,OAAA,EAIP5mE,EAAA,GAAAswB,EAAA,IAAA/mB,GAAA,MAAA++D,EAAA4C,YAAA,yBAAAC,GAAAtrE,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAUEjG,EAAA,YACE0D,EAAA,GAAAC,EAAA,MAAAO,CAAA,GAEAlE,EAAA,QAAI,QACE,UACyGC,EAAA,GAAqCC,EAAA,EAAID,EAAA,GAAA2J,EAAA,YAEpJ5J,EAAA,eAAiE2G,EAAA,mBAAAP,EAAAu5D,CAAA,KAAA+L,GAAAplE,EAAA,EAAAmb,UAAA+R,EAAAltB,EAAA,QAAAI,GAAS8sB,EAAAm4C,sBAAAD,CAAA,CAA4B,KACpG9nE,EAAA,wBACF1D,EAAA,EAAS,EACN,EACF,MAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GANwCC,EAAA,GAAAiE,EAAA,OAAAivB,EAAAo4C,eAAAF,IAAAG,YAAAC,eAAA,EAAAn7C,EAAA,EAAkErwB,EAAA,EAAAC,EAAAmrE,EAAAG,YAAAE,aAAA,EAAyCzrE,EAAA,EAAAswB,EAAA,KAAA/mB,GAAA,IAAA6hE,EAAAG,YAAAjrE,KAAA,mBAAAorE,GAAA7rE,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAgBpJjG,EAAA,eAGE2G,EAAA,mBAAAP,EAAA6lE,CAAA,KAAAC,GAAA5lE,EAAA,EAAAmb,UAAAiqD,EAAAplE,EAAA,GAAAmb,UAAA+R,EAAAltB,EAAA,QAAAI,GAAS8sB,EAAA24C,gBAAAT,EAAAQ,EAA6B,YAAY,CAAC,KAEnDtoE,EAAA,uBACF1D,EAAA,aAAAksE,GAAAjsE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KATFH,EAAA,QAAqC,UAC2DC,EAAA,GAA2BC,EAAA,EAAID,EAAA,GAAA2J,EAAA,YAE7H/F,EAAA,EAAAwoE,GAAA,iBAOFnsE,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,IAAAohB,SAAA,CAAA7e,CAAA,CAAAvC,CAAA,GAT2CC,EAAA,EAAAiE,EAAA,OAAAivB,EAAAo4C,eAAAF,EAAAQ,EAAAJ,eAAA,EAAAn7C,EAAA,EAAqDrwB,EAAA,EAAAC,EAAA2rE,EAAA/gE,WAAA5C,KAAA,EAA+BjI,EAAA,EAAAswB,EAAA,KAAA/mB,GAAA,IAAAqiE,EAAAtrE,KAAA,QAG1HN,EAAA,GAAAiE,EAAA,OAAAivB,EAAA84C,iBAAAZ,CAAA,cAAAa,GAAApsE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KARTH,EAAA,YACE0D,EAAA,GAAAC,EAAA,MAAAO,CAAA,GAEAlE,EAAA,QACE6D,EAAA,EAAA2oE,GAAA,aAWFtsE,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAXkBnhB,EAAA,GAAAiE,EAAA,UAAAmnE,EAAA7f,KAAA,aAAA4gB,GAAAtsE,CAAA,CAAAW,CAAA,KAAAX,CAAA,QAAAC,CAAA,CAAA6F,CAAA,GAqBnBjG,EAAA,eAGE2G,EAAA,mBAAAP,EAAAsmE,CAAA,KAAAC,GAAArmE,EAAA,EAAAmb,UAAAiqD,EAAAplE,EAAA,GAAAmb,UAAA+R,EAAAltB,EAAA,QAAAI,GAAS8sB,EAAA24C,gBAAAT,EAAAiB,EAA6B,KAAK,CAAC,KAE5C/oE,EAAA,uBACF1D,EAAA,aAAA0sE,GAAAzsE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KATFH,EAAA,QAA2D,UACqCC,EAAA,GAA2BC,EAAA,EAAID,EAAA,GAAA2J,EAAA,YAE7H/F,EAAA,EAAAgpE,GAAA,iBAOF3sE,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,IAAAohB,SAAA,CAAA7e,CAAA,CAAAvC,CAAA,GAT2CC,EAAA,EAAAiE,EAAA,OAAAivB,EAAAo4C,eAAAF,EAAAiB,EAAAb,eAAA,EAAAn7C,EAAA,EAAqDrwB,EAAA,EAAAC,EAAAosE,EAAAxhE,WAAA5C,KAAA,EAA+BjI,EAAA,EAAAswB,EAAA,KAAA/mB,GAAA,IAAA8iE,EAAA/rE,KAAA,QAG1HN,EAAA,GAAAiE,EAAA,OAAAivB,EAAA84C,iBAAAZ,CAAA,cAAAoB,GAAA3sE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KARTH,EAAA,SACE0D,EAAA,GAAAC,EAAA,MAAAO,CAAA,GAEAlE,EAAA,QACE6D,EAAA,EAAAkpE,GAAA,aAWF7sE,EAAA,EAAK,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAAohB,SAAA,CAXkBnhB,EAAA,GAAAiE,EAAA,UAAAmnE,EAAAxf,mBAAA,GAAAL,KAAA,aAAAmhB,GAAA7sE,CAAA,CAAAW,CAAA,KAAAX,CAAA,KAvC/BH,EAAA,QAAI,WAC+C,SAE7C6D,EAAA,EAAAopE,GAAA,eAAiD,EAAAC,GAAA,cAcH,EAAAC,GAAA,cAoC9CvpE,EAAA,iBACF1D,EAAA,EAAM,EACH,GAAAC,CAAA,QAAAC,CAAA,CAAAU,CAAA,CAAA2gB,SAAA,CAAA9e,CAAA,CAAAtC,CAAA,GApDkBC,EAAA,GAAAiE,EAAA,OAAAivB,EAAA23C,gBAAAO,CAAA,GAcAprE,EAAA,EAAAiE,EAAA,OAAAivB,EAAA63C,aAAAK,CAAA,GAkBbprE,EAAA,EAAAiE,EAAA,OAAAivB,EAAA43C,OAAAM,CAAA,GAkBoBprE,EAAA,EAAAiE,EAAA,QAAAmnE,CAAA,ICvGpC,GAAa0B,KAAmB,KAA1B,GAAOA,GAAP,KAAOA,UAA2Bt2C,GAAgB,CAC5CzO,MAAQje,EAAOke,EAAc,EAC7BH,OAAS/d,EAAOge,EAAM,EACxB2O,eAAiB3sB,EAAO4sB,EAAc,EACtC4pB,KAAOx2C,EAAOy2C,EAAW,EACzB1kC,SAAW/R,EAAOgS,CAAQ,EAC1Bib,aAAejtB,EAAOktB,EAAY,EAClC+1C,kBAAoBjjE,EAAO47D,EAAiB,EAC5CsH,kBAAoBljE,EAAO8sB,EAAiB,EAC5Cq2C,oBAAsBnjE,EAAOojE,EAAmB,EAChDrjE,OAASC,EAAOC,EAAa,EAC7BojE,sBAAwBrjE,EAAOsjE,EAAqB,EAEnDC,gBAAkBhvC,GAA+B,iBAAiB,EAE3EpxB,OAAkB,GAElB0kB,aAAe,EACfK,KAAiB,CAAEC,MAAO,cAAeC,MAAO,EAAE,EAClDJ,WAA6B,CAAEoF,MAAO,KAAKtF,YAAaG,MAAO,CAAC,EAEhE2O,YAA2C,GAE3C5L,aAEAw1C,oBAA+C,CAC7CgD,SAAU,GACVC,SAAU,GACV1iD,OAAQ,GACR2iD,UAAW,GACX1xC,OAAQ,GACR2xC,OAAQ,GACRC,UAAW,GACXC,KAAM,GACNC,SAAU,GACVC,YAAa,GACbzjE,YAAa,GACb0jE,sBAAuB,IAGzBh2B,QAAU,GAEFi2B,gBAAiD,GAEzD,GAAInd,WAAQ,CACV,MAAO,MAAKtQ,KAAKS,QAAO,CAC1B,EAEA,GAAI92C,eAAY,CACd,MAAO,MAAKJ,OAAOM,cAAa,CAClC,EAEAD,UAAQ,CACN,KAAKkuB,WAAU,EAEf,KAAKtD,aAAe,KAAKi4C,kBAAkB9G,sBAAqB,EAEhE,KAAKvlC,YAAc,CACjB,CACE,CACEz4B,kDAAO/F,CACPu1B,QAASxqB,GAAU,KAAK+gE,aAAa/gE,CAAM,EAC3CoqB,YAAaA,IAAM,KAAKu5B,SAASjQ,SAAS1xB,EAAUg/C,gBAAgB,EACpEC,SAAU,UAEZ,CACEjmE,0EAAO/F,CACPu1B,QAASxqB,GAAU,KAAKogE,gBAAe,EAAGz4C,KAAK3nB,CAAM,EACrDoqB,YAAapqB,GAAU,KAAK2jD,SAASjQ,SAAS1xB,EAAUiV,sBAAsB,GAAKj3B,EAAO4wC,MAAMh7C,GAAK,CAACA,EAAEsrE,WAAW,EACnHD,SAAU,MAEZ,CACEjmE,4FAAO/F,CACPu1B,QAASxqB,GAAU,KAAKmhE,cAAcnhE,CAAM,EAC5CoqB,YAAapqB,GAAU,KAAK2jD,SAASjQ,SAAS1xB,EAAUiV,sBAAsB,GAAKj3B,EAAO4wC,MAAMh7C,GAAKA,EAAEsrE,WAAW,EAClHD,SAAU,OACX,EAEH,CACE,CACEjmE,mKAAO/F,CACPu1B,QAASxqB,GAAU,KAAKohE,eAAephE,EAAQ,KAAK,EACpDoqB,YAAapqB,GAAUA,EAAO4wC,MAAMh7C,GAAKA,EAAEyrE,kBAAkB,KAAK1d,QAAQ,CAAC,EAC3Esd,SAAU,OAEZ,CACEjmE,2MAAO/F,CACPu1B,QAASxqB,GAAU,KAAKohE,eAAephE,EAAQ,WAAW,EAC1DoqB,YAAapqB,GAAUA,EAAO4wC,MAAMh7C,GAAKA,EAAEyrE,kBAAkB,KAAK1d,QAAQ,CAAC,EAC3Esd,SAAU,OAEZ,CACEjmE,qFAAO/F,CACPu1B,QAASxqB,GAAU,KAAKshE,iBAAiBthE,EAAQ,KAAK,EACtDoqB,YAAapqB,GAAUA,EAAO4wC,MAAMh7C,GAAKA,EAAE2rE,0BAA0B,KAAK5d,QAAQ,CAAC,EACnFsd,SAAU,UAEZ,CACEjmE,8IAAO/F,CACPu1B,QAASxqB,GAAU,KAAKshE,iBAAiBthE,EAAQ,YAAY,EAC7DoqB,YAAapqB,GAAUA,EAAO4wC,MAAMh7C,GAAKA,EAAE2rE,0BAA0B,KAAK5d,QAAQ,CAAC,EACnFsd,SAAU,SACX,EAEH,CACE,CACEjmE,6IAAO/F,CACPu1B,QAASxqB,GAAU,KAAKwhE,gBAAgBxhE,CAAM,EAC9CoqB,YAAapqB,GAAUA,EAAO4wC,MAAMh7C,GAAKA,EAAE6rE,yBAAyB,KAAK9d,SAAU,KAAK3mD,aAAawI,mBAAmB1H,OAAO,CAAC,EAChImjE,SAAU,aACX,CACF,CAEL,EAEA98C,eAAa,CACX,MAAO,oBACT,EAEAm5C,cAAexlD,EAAY,CACzB,MAAOA,GAAMmc,MAAMz5B,KAAOknE,GAAWC,YAAc7pD,EAAMmc,MAAMz5B,KAAOknE,GAAWE,SACnF,EAEArE,iBAAkBzlD,EAAY,CAC5B,MAAOA,GAAM+pD,YACf,EAEArE,gBAAiB1lD,EAAY,CAC3B,MAAOA,GAAM0O,aACf,EAEAi3C,eAAgB3lD,EAAY,CAC1B,MAAOA,GAAMopD,WACf,EAEAlD,SAAUlmD,EAAY,CACpB,MAAOA,GAAMmc,MAAMz5B,KAAOknE,GAAWI,SACvC,EAEAlE,gBAAiB9lD,EAAY,CAC3B,MAAO,CAAC,CAACA,EAAMwmD,aAAaC,eAC9B,EAEAV,OAAQ/lD,EAAY,CAClB,GAAMvC,GAAIuC,EAAM6mC,mBAAmB9jD,KAAK0a,GAAKA,EAAE/gB,OAASutE,GAA2BC,GAAG,EACtF,MAAKzsD,GAEEA,EAAE+oC,MAAMjhD,SAAW,EAFX,EAGjB,EAEAygE,aAAchmD,EAAY,CACxB,MAAOA,GAAMwmC,MAAMjhD,SAAW,CAChC,EAEA0gE,iBAAkBjmD,EAAY,CAC5B,MAAKA,GAAM6hD,QAEGsI,GAAYnqD,CAAK,EAElB++C,KAAKnf,GAAKA,EAAEwqB,UAAYC,GAAYC,cAAc,EAJpC,EAK7B,EAEArD,iBAAkBjnD,EAAY,CAC5B,MAAOA,GAAMinD,iBAAiB,KAAKpb,QAAQ,CAC7C,EAEAuY,aAAcpkD,EAAY,CACxB,GAAIuU,GAAQ41C,GAAYnqD,CAAK,EAAE0oC,OAAO,CAACjrC,EAAGmiC,IAAMniC,GAAKmiC,EAAErkD,KAAM,CAAC,EAE9D,MAAIykB,GAAMwmD,aAAaC,kBACrBlyC,GAASvU,EAAMwmD,YAAYjrE,MAAQ,GAG9Bg5B,CACT,EAEMuyC,gBAAiB9mD,EAAcC,EAAiBvjB,EAA0B,OAAAu2B,IAAA,sBAC9E,GAAMtqB,2LAA2DsX,EAAKna,WAAW5C,KAAK,+BAC1E,KAAM,MAAKwuB,eAAewB,QAAQvqB,uEAA+B,KACjE,IAEZ,KAAKqpB,aAAau4C,WAAWvqD,EAAM82B,KAAM72B,EAAKvd,GAAIhG,CAAI,EACnD2R,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,wEAAgC,EAC9C,KAAKmb,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,KAEM29D,sBAAuBtmD,EAAY,OAAAiT,IAAA,sBACvC,GAAMtqB,ySAAUxL,EACJ,KAAM,MAAKu0B,eAAewB,QAAQvqB,wHAAwC,KAC1E,IAEZ,KAAKqpB,aAAaw4C,iBAAiBxqD,EAAM82B,IAAI,EAC1CzoC,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,yHAAyC,EACvD,KAAKmb,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,KAEAi7D,mBAAoB6G,EAAW,CAC7B,GAAMC,GAAM,YAAYD,CAAG,IAE3B,MAAI,MAAKxgE,OAAe,KAAKA,OAAS,IAAMygE,EAErCA,CACT,EAIApG,mBAAoB79B,EAA0B,CAC5C,GAAMzmB,GAAQymB,EAAMl/B,KAEhB,CAACyY,EAAMwmD,aAAamE,UAAY,CAACC,GAAuB5qD,CAAK,GAEjE,KAAKooD,sBAAsByC,kBAAkB,CAAEC,UAAW9qD,EAAM82B,IAAI,CAAE,EACnEzoC,UAAU,CAAC,CAAEknC,OAAK,IAAM,CACvB,KAAKyzB,gBAAgBhpD,EAAMtd,EAAE,EAAI6yC,CACnC,EAAC,CACL,EAEAgxB,eAAgBvmD,EAAqB+qD,EAAmB,CACtD,GAAMx1B,GAAQ,KAAKyzB,gBAAgBhpD,EAAMtd,EAAE,EAC3C,MAAK6yC,GAEEw1B,EAAc,mBAAmBx1B,CAAK,GAF1Bw1B,CAGrB,EAIU32C,oBAAkB,CAC1B,KAAK2e,QAAU,GAEf,KAAKi1B,kBAAkBpH,eAAe,CACpC7zC,WAAY,KAAKA,WACjBE,KAAM,KAAKA,KAGXo1C,KAAM,OACN2I,kBAAmBC,GAASle,KAE5B9iD,OAAQ,KAAKA,OACd,EAAE/C,KAAKgkE,GAAS,IAAM,KAAKn4B,QAAU,EAAK,CAAC,EACzC1kC,UAAU,CACTuJ,KAAM0c,GAAa,CACjB,KAAKpsB,OAASosB,EAAW/sB,KACzB,KAAKqlB,aAAe0H,EAAWC,KACjC,GAEAxc,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEcsgE,aAAc/gE,EAAe,OAAA+qB,IAAA,sBACzC,GAAMtqB,GAAUsK,4SAEd,CAAEkf,MAAOjqB,EAAO3C,MAAM,CAAE,GAGd,KAAM,MAAKmsB,eAAewB,QAAQvqB,8CAA0B,KAC5D,IAEZ,KAAKqpB,aAAamB,YAAYjrB,EAAO+F,IAAInQ,GAAKA,EAAE4E,EAAE,CAAC,EAChD2L,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,QACZ5E,uJAEE,CAAEkf,MAAOjqB,EAAO3C,MAAM,CAAE,CACzB,EAGH,KAAKytB,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,KAEQ0gE,cAAenhE,EAAe,CACpC,KAAK+/D,kBAAkBt1C,aAAazqB,EAAO+F,IAAInQ,GAAKA,EAAE4E,EAAE,CAAC,EACtD2L,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,QACZ5E,iMAEE,CAAEkf,MAAOjqB,EAAO3C,MAAM,CAAE,CACzB,EAGH,KAAKytB,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEc6gE,iBAAkBthE,EAAiBxL,EAA0B,OAAAu2B,IAAA,sBACzE,GAAItqB,GAEAjM,IAAS,MACXiM,EAAUsK,gZAER,CAAEkf,MAAOjqB,EAAO3C,MAAM,CAAE,EAG1BoD,EAAUsK,qUAER,CAAEkf,MAAOjqB,EAAO3C,MAAM,CAAE,GAIhB,KAAM,MAAKmsB,eAAewB,QAAQvqB,8CAA0B,KAC5D,IAEZ,KAAKqpB,aAAaw3C,iBAAiBthE,EAAO+F,IAAInQ,GAAKA,EAAE4E,EAAE,EAAGhG,CAAI,EAC3D2R,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,6GAAsC,EACpD,KAAKmb,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,KAEQ2gE,eAAgBphE,EAAiBxL,EAAyB,CAChE,KAAKs1B,aAAas3C,eAAe,CAAEphE,SAAQxL,MAAI,CAAE,EAC9C2R,UAAU,CACTuJ,KAAMA,IAAK,CACT,KAAKd,SAASe,oKAA4C,EAE1D,KAAKmb,WAAU,CACjB,GAEAjb,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,EAEQ+gE,gBAAiBxhE,EAAe,CACtC,KAAKggE,oBAAoBwB,gBAAgB,CAAExhE,QAAM,CAAE,EAChDmG,UAAU,CACTuJ,KAAM8mD,GAAS,CACTA,EAAO7mD,SACT,KAAKf,SAASe,QACZ5E,uYAEE,CAAEkf,MAAOusC,EAAO7mD,OAAO,CAAE,CAC1B,EAID6mD,EAAOyM,oBACT,KAAKr0D,SAAS8J,KACZ3N,6TAEE,CAAEkf,MAAOusC,EAAOyM,kBAAkB,CAAE,CACrC,EAIDzM,EAAO0M,yBACT,KAAKt0D,SAAS8J,KACZ3N,qVAGE,CAAEkf,MAAOusC,EAAO0M,uBAAuB,CAAE,CAC1C,CAGP,GAEArzD,MAAOC,GAAO,KAAKlB,SAASiB,MAAMC,EAAIrP,OAAO,EAC9C,CACL,IAAA/L,CAAA,CA9XWmrE,8DAAkB,IAAAv/C,GAAlBu/C,CAAkB,UAAAnrE,CAAA,CAAlBmrE,wBAAkBlrE,UAAA,oBAAAo9B,UAAA,QAAAA,CAAAl2B,EAAA5E,EAAA,CAAA4E,EAAA,GAAAm2B,EAAA,CAAA18B,CAAA,CAAA8qE,eAAA,CAAA1F,EAAA,IAAArlE,CAAA,IAAA68B,EAAA,KAAA72B,QAAA,EAAA+2B,EAAA,EAAAv9B,KAAA,GAAAC,IAAA,IAAAC,MAAA,CAAAA,CAAA,QAAAK,CAAA,CAAAA,CAAA,oGDtDyBH,2DASnBA,6GASKA,iEAGCA,2DAGAA,yCAEhBA,uEACAA,2CACwF,iBAAwC,sBAAa,QAAAW,CAAA,CAAAA,CAAA,6EACnC,iBAAgC,sBAAa,QAAAC,CAAA,CAAAA,CAAA,2GAQ9HZ,yJAyCpBA,iEApBmBA,iEAEEA,sGAS2BA,gGACDA,yFAEDA,oFAeAA,gBACTA,iEACkB,eAAwB,SAAA+b,EAAA,CAAAA,EAAA,+DAC3C/b,oHACaA,+GAqBvDA,yGAEqCA,uFANhCA,+DAcAA,+GAILA,yGAIUA,iBAULA,+GAILA,gHAIUA,8zEA/JpCxC,EAAA,gBAGEkG,GAAA,2BAAAC,EAAA,CAAAI,MAAAH,GAAAC,CAAA,EAAAG,GAAAhC,EAAAy8B,aAAA96B,CAAA,IAAA3B,EAAAy8B,aAAA96B,GAAAO,EAAAP,CAAA,KAA2CQ,EAAA,sBAAAR,EAAA,CAAAI,MAAAH,GAAAC,CAAA,EAAAK,EAAclC,EAAAmtB,SAAAxrB,CAAA,CAAgB,KAAC,uBAAAA,EAAA,CAAAI,MAAAH,GAAAC,CAAA,EAAAK,EAEOlC,EAAAmlE,mBAAAxjE,CAAA,CAA0B,KAE3GtC,EAAA,EAAA6sE,GAAA,sBAAiC,EAAAC,GAAA,uBAmBD,EAAAC,GAAA,wBAkBgC,EAAAC,GAAA,sBAiIlE3wE,EAAA,EAEAF,EAAA,yBAAiC2G,EAAA,0BAAAJ,MAAAH,GAAAC,CAAA,EAAAK,EAAgBlC,EAAA6zB,WAAA,CAAY,KAAEn4B,EAAA,GAAA0C,CAAA,KA9K7D2B,EAAA,QAAAC,EAAA+I,MAAA,EAAgB,YAAA/I,EAAAytB,aAAA,GAA+B,eAAAztB,EAAAytB,YAAA,EAA8B,OAAAztB,EAAA0tB,WAAA,EAAqB,QAAA1tB,EAAA4tB,WAAAC,KAAA,EAA2B,qBAAA7tB,EAAA2tB,kBAAA,EACpF,YAAA3tB,EAAA8tB,KAAAC,KAAA,EAAyB,YAAA/tB,EAAA8tB,KAAAE,KAAA,EAAyB,uBAC3F1rB,GAAA,YAAAtC,EAAAy8B,YAAA,EAA6B18B,EAAA,WAAa,qBAAyD,wBAA2B,4BAChG,4BAAAC,EAAAiuB,sBAAA,GAAsD,kBAAAjuB,EAAA61B,YAAA,EACpD,UAAA51B,EAAA,GAAA+R,GAAAhS,EAAA4zC,OAAA,MAAAvzC,YAAA,ECqC9BiwB,GACApC,GAAWC,GAAAC,GAAAC,GAAAkR,GAAAzJ,GAAAxH,GAAAkR,GAAAC,GACXz+B,GACAutB,GACAttB,EACA+0B,GACAxH,GACAyW,GACAxW,GACAsH,GACAu2C,GACAr2C,GACAtH,GACAnP,GACA0W,GACAq2C,GACA39C,GACAxc,GACAnL,GACAulE,GACAr2C,EAAuB,EAAAh1B,OAAA;8DAAA,KAGrB,GAAOynE,GAAP6D,QAAO7D,EAAmB,MC1DhC,QAAS8D,IAAkB,CAAE1hE,KAAG,EAAyB,CACvD,MAAO,mBAAmBA,EAAI8D,IAAIiwD,GAAKA,EAAElwD,IAAI,EAAEmS,KAAK,GAAG,CAAC,EAC1D,EAEO,GAAM2rD,IAAyB,CACpC,CACE99D,KAAM,WACNsc,UAAW,SACXD,WAAYwhD,IAGd,CACE79D,KAAM,SACNsc,UAAW,SACXD,WAAYwhD,IAGd,CACE79D,KAAM,QACNsc,UAAW,SACXD,WAAYwhD,IAGd,CACE79D,KAAM,WAENoc,SAAU,CACR,CACEpc,KAAM,GACNsc,UAAW,OACXD,WAAY,SAGd,CACErc,KAAM,WACN+b,YAAa,CAAEC,EAAc,EAC7BziB,KAAM,CACJ0iB,UAAWC,EAAUyyB,kBAEvBvyB,SAAU,CACR,CACEpc,KAAM,GACNqc,WAAY,OACZC,UAAW,QAEb,CACEtc,KAAM,OACNuc,UAAWggC,GACXhjD,KAAM,CACJijB,KAAM,CACJC,qHAAOttB,GAGZ,GAIL,CACE6Q,KAAM,QACN+b,YAAa,CAAEC,EAAc,EAC7BziB,KAAM,CACJ0iB,UAAWC,EAAUuyB,cAEvBryB,SAAU,CACR,CACEpc,KAAM,GACNqc,WAAY,OACZC,UAAW,QAEb,CACEtc,KAAM,OACNuc,UAAWgzC,GACXh2D,KAAM,CACJijB,KAAM,CACJC,2HAAOttB,IAIb,CACE6Q,KAAM,SACNuc,UAAWknC,GACXlqD,KAAM,CACJijB,KAAM,CACJC,2HAAOttB,IAIb,CACE6Q,KAAM,aACNuc,UAAW2rC,GACX3uD,KAAM,CACJijB,KAAM,CACJC,iIAAOttB,GAGZ,GAIL,CACE6Q,KAAM,SACN+b,YAAa,CAAEC,EAAc,EAC7BziB,KAAM,CACJ0iB,UAAWC,EAAUwyB,gBAEvBtyB,SAAU,CACR,CACEpc,KAAM,GACNqc,WAAY,OACZC,UAAW,QAEb,CACEtc,KAAM,OACNuc,UAAWw9C,GACXxgE,KAAM,CACJijB,KAAM,CACJC,2EAAOttB,GAGZ,EAEJ,EAEJ,ECrGH,GAAM4uE,IAAe,CACnB/9D,KAAM,GACNg+D,UAAW,CACTxO,GACA/P,GACAwe,GACAz2C,GACAlgB,GACA6N,GACAymB,GACAh4B,GACA6tC,GACAnV,GACA6F,GACA3Q,GACA0V,GACAohB,GACA7I,GACAkT,GACA9uC,GACA+4B,GACAtkD,GACA4lE,GACAC,GACAC,GACAC,GACAC,GACAC,EAAuB,GAI3B,QAASC,IAAiBC,EAAsB,CAC9C,GAAIA,EAASlnE,SAAW,EAAG,MAAO,GAElC,GAAMmnE,GAAWD,EAAS,CAAC,EAAEz+D,KAE7B,MAAO89D,IAAe/M,KAAKvhE,GAAKA,EAAEwQ,OAAS0+D,GAAYlvE,EAAEwQ,KAAK2+D,WAAW,GAAGD,CAAQ,GAAG,CAAC,CAC1F,EAEA,QAASE,IAAmBH,EAAsB,CAChD,GAAIA,EAASlnE,SAAW,EAAG,MAAO,GAElC,GAAMmnE,GAAWD,EAAS,CAAC,EAAEz+D,KAE7B,MAAOixB,IAAiB8/B,KAAKvhE,GAAKA,EAAEwQ,OAAS0+D,GAAYlvE,EAAEwQ,KAAK2+D,WAAW,GAAGD,CAAQ,GAAG,CAAC,CAC5F,EAEA,QAASG,IAA0B,CAAE1iE,KAAG,EAAyB,CAC/D,MAAO,mBAAmBA,EAAI8D,IAAIiwD,GAAKA,EAAElwD,IAAI,EAAEmS,KAAK,GAAG,CAAC,EAC1D,EAEA,GAAA2sD,IAAe,CACb,CACE9+D,KAAM,GACNsc,UAAW,OACXD,WAAY,YAGd7C,GAAAC,GAAA,GACKskD,IADL,CAGExhD,UAAW+wB,GACXyxB,SAAU,CACR,CAACC,EAAeP,IACPG,GAAkBH,CAAQ,CAClC,EAGHriD,SAAU6U,KAGZzX,GAAAC,GAAA,GACKskD,IADL,CAGExhD,UAAWiyB,GACXuwB,SAAU,CACR,CAACC,EAAeP,IACPD,GAAgBC,CAAQ,CAChC,EAGHriD,SAAU0hD,KAGZ,CACE99D,KAAM,SACNsc,UAAW,SACXD,WAAYwiD,IAGd,CACE7+D,KAAM,UACNsc,UAAW,SACXD,WAAYwiD,IAGd,CACE7+D,KAAM,SACNsc,UAAW,SACXD,WAAYwiD,IAGd,CACE7+D,KAAM,UACNsc,UAAW,SACXD,WAAYwiD,IAGdrlD,GAAAC,GAAA,GACKskD,IADL,CAGE/9D,KAAM,WACNuc,UAAWsyB,GACXkwB,SAAU,CACR,CAACC,EAAeP,IACP,CAACD,GAAgBC,CAAQ,GAAK,CAACG,GAAkBH,CAAQ,CACjE,EAGHriD,SAAU,CACR,CACEpc,KAAM,GACNqc,WAAY,SACZC,UAAW,QAGb,GAAGR,GACH,GAAGwgC,GACH,GAAGpP,GACH,GAAGxR,EAAa,GAEnB,SAAAujC,EAAA,IAAA7kE,OAAA","names":["ɵɵelementStart","ɵɵtext","ɵɵelementEnd","e","n","d","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","formErrors","cache","previews","size","ja","_","captions","Ka","torrents","Ja","storyboards","Ya","instance","customizations","javascript","qa","css","EditAdvancedConfigurationComponent","form","input","undefined","getCacheSize","type","value","I","selectors","inputs","decls","vars","consts","i18n_0","$localize","x","de","t","a","r","m","C","O","P","y","v","L","W","k","$","X","template","ɵɵelementContainerStart","ɵɵi18n","ɵɵelement","ɵɵtemplate","EditAdvancedConfigurationComponent_div_16_Template","EditAdvancedConfigurationComponent_div_24_Template","EditAdvancedConfigurationComponent_div_32_Template","EditAdvancedConfigurationComponent_div_40_Template","T","ɵɵi18nStart","ɵɵi18nEnd","EditAdvancedConfigurationComponent_div_60_Template","EditAdvancedConfigurationComponent_div_73_Template","ɵɵproperty","ctx","ɵɵpureFunction1","_c0","ɵɵi18nExp","K","dependencies","FormsModule","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgControlStatusGroup","MinValidator","ReactiveFormsModule","FormGroupDirective","FormControlName","FormGroupName","NgClass","NgIf","HelpComponent","styles","_EditAdvancedConfigurationComponent","Qa","ctx_r1","inputSuffix","Za","w","ɵɵtwoWayListener","$event","ɵɵrestoreView","_r1","ɵɵnextContext","i0","ɵɵtwoWayBindingSet","customValue","ɵɵresetView","ɵɵlistener","onModelChange","SelectCustomValueComponent_Conditional_2_span_1_Template","ɵɵtwoWayProperty","inputType","Sn","labelId","SelectCustomValueComponent","inputId","required","items","clearable","searchable","selectedId","disabled","itemsWithCustom","ngOnChanges","getItems","propagateChange","writeValue","id","isSelectedIdInItems","registerOnChange","fn","registerOnTouched","find","i","other","label","concat","isCustomValue","setDisabledState","isDisabled","features","ɵɵProvidersFeature","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","rf","SelectCustomValueComponent_Conditional_2_Template","ɵɵconditional","SelectOptionsComponent","NgModel","encapsulation","_SelectCustomValueComponent","el","oe","ɵɵpipeBind2","computeQuotaWithTranscoding","tl","UserRealQuotaInfoComponent_div_0_ng_container_5_Template","isTranscodingInformationDisplayed","UserRealQuotaInfoComponent","server","inject","ServerService","videoQuota","serverConfig","ngOnInit","getHTMLConfig","transcoding","enabledResolutions","length","transcodingConfig","resolutions","higherResolution","VideoResolution","H_4K","multiplier","resolution","hls","enabled","getQuotaAsNumber","parseInt","UserRealQuotaInfoComponent_div_0_Template","BytesPipe","_UserRealQuotaInfoComponent","ConfigService","authHttp","HttpClient","restExtractor","RestExtractor","videoQuotaOptions","videoQuotaDailyOptions","transcodingThreadOptions","constructor","getCustomConfig","get","BASE_APPLICATION_URL","pipe","catchError","res","handleError","updateCustomConfig","data","put","__publicField","environment","apiUrl","factory","ɵfac","_ConfigService","defaultClientRoute","il","trending","videos","algorithms","default","rl","_l","al","broadcastMessage","level","ll","message","sl","signupAlertMessage","cl","signup","limit","dl","pl","minimumAge","ml","user","ul","videoQuotaDaily","gl","import","concurrency","Cl","videoChannelSynchronization","maxPerUser","Sl","videoChannels","El","search","searchIndex","url","Tl","export","users","maxUserVideoQuota","Il","exportExpiration","Nl","followings","autoFollowIndex","indexUrl","Ol","admin","email","Ml","services","twitter","username","EditBasicConfigurationComponent","configService","themeService","ThemeService","defaultLandingPageOptions","availableThemes","exportExpirationOptions","exportMaxUserVideoQuotaOptions","buildLandingPageOptions","checkSignupField","checkImportSyncField","getDefaultThemeItem","buildAvailableThemes","filter","o","changes","countExternalAuth","plugin","registeredExternalAuths","getVideoQuotaOptions","getVideoQuotaDailyOptions","doesTrendingVideosAlgorithmsEnabledInclude","algorithm","Array","isArray","getUserVideoQuota","isExportUsersEnabled","getDisabledExportUsersClass","isSignupEnabled","getDisabledSignupClass","isImportVideosHttpEnabled","http","importSynchronizationChecked","hasUnlimitedSignup","isSearchIndexEnabled","getDisabledSearchIndexClass","isTranscriptionEnabled","videoTranscription","getTranscriptionRunnerDisabledClass","isAutoFollowIndexEnabled","links","homepage","push","path","map","description","importSyncControl","valueChanges","subscribe","httpImportEnabled","setValue","enable","disable","signupControl","pairwise","oldValue","newValue","patchValue","autoBlacklist","ofUsers","updateValueAndValidity","_t","U","ui","Ai","bi","vi","xi","Gi","so","wi","Yi","Zi","EditBasicConfigurationComponent_div_19_Template","EditBasicConfigurationComponent_div_35_Template","EditBasicConfigurationComponent_span_46_Template","EditBasicConfigurationComponent_span_47_Template","EditBasicConfigurationComponent_div_71_Template","EditBasicConfigurationComponent_div_77_Template","EditBasicConfigurationComponent_my_alert_92_Template","EditBasicConfigurationComponent_div_107_Template","EditBasicConfigurationComponent_small_108_Template","EditBasicConfigurationComponent_div_116_Template","EditBasicConfigurationComponent_div_123_Template","EditBasicConfigurationComponent_div_128_Template","EditBasicConfigurationComponent_div_149_Template","EditBasicConfigurationComponent_div_174_Template","EditBasicConfigurationComponent_div_219_Template","EditBasicConfigurationComponent_div_254_Template","EditBasicConfigurationComponent_div_290_Template","EditBasicConfigurationComponent_div_297_Template","EditBasicConfigurationComponent_div_334_Template","EditBasicConfigurationComponent_div_344_Template","EditBasicConfigurationComponent_div_365_Template","_c1","NgSelectOption","ɵNgSelectMultipleOption","SelectControlValueAccessor","RouterLink","PeertubeCheckboxComponent","MarkdownTextareaComponent","AlertComponent","_EditBasicConfigurationComponent","EditConfigurationService","getTranscodingResolutions","isTranscodingEnabled","isHLSEnabled","isRemoteRunnerVODEnabled","remoteRunners","isRemoteRunnerLiveEnabled","live","isStudioEnabled","videoStudio","isLiveEnabled","isLiveTranscodingEnabled","getTotalTranscodingThreads","transcodingEnabled","transcodingThreads","threads","liveTranscodingEnabled","liveTranscodingThreads","noneOnAuto","atMost","unit","formatICU","_EditConfigurationService","INSTANCE_NAME_VALIDATOR","VALIDATORS","Validators","MESSAGES","INSTANCE_SHORT_DESCRIPTION_VALIDATOR","maxLength","maxlength","SERVICES_TWITTER_USERNAME_VALIDATOR","CACHE_SIZE_VALIDATOR","min","pattern","SIGNUP_LIMIT_VALIDATOR","SIGNUP_MINIMUM_AGE_VALIDATOR","ADMIN_EMAIL_VALIDATOR","TRANSCODING_THREADS_VALIDATOR","TRANSCODING_MAX_FPS_VALIDATOR","MAX_LIVE_DURATION_VALIDATOR","MAX_INSTANCE_LIVES_VALIDATOR","MAX_USER_LIVES_VALIDATOR","MAX_VIDEO_CHANNELS_PER_USER_VALIDATOR","MAX_SYNC_PER_USER","CONCURRENCY_VALIDATOR","EXPORT_EXPIRATION_VALIDATOR","EXPORT_MAX_USER_VIDEO_QUOTA_VALIDATOR","CustomMarkupHelpComponent","supportRelMe","transform","booleanAttribute","CustomMarkupHelpComponent_Conditional_4_Template","_CustomMarkupHelpComponent","Al","instanceCustomHomepage","content","EditHomepageComponent","customMarkup","CustomMarkupService","customMarkdownRenderer","getCustomMarkdownRenderer","EditHomepageComponent_div_13_Template","_EditHomepageComponent","Wn","Rl","name","Pl","shortDescription","Fl","serverCountry","hl","social","externalLink","Dl","mastodonLink","bl","blueskyLink","vl","yl","Ll","defaultNSFWPolicy","EditInstanceInformationComponent","notifier","Notifier","instanceService","InstanceService","languageItems","categoryItems","instanceBannerUrl","instanceAvatars","nsfwItems","instanceName","updateActorImages","onBannerChange","formData","updateInstanceBanner","next","success","resetActorImages","error","err","genericUploadErrorHandler","onBannerDelete","deleteInstanceBanner","onAvatarChange","updateInstanceAvatar","onAvatarDelete","deleteInstanceAvatar","maxBy","banners","avatars","resetConfig","config","ae","we","z","G","te","ze","Xe","Be","We","He","je","Ke","Je","Ye","Ve","Z","ee","an","ln","sn","Bt","cn","dn","pn","mn","un","gn","EditInstanceInformationComponent_div_28_Template","EditInstanceInformationComponent_div_33_Template","EditInstanceInformationComponent_div_56_Template","EditInstanceInformationComponent_div_79_Template","EditInstanceInformationComponent_div_84_Template","EditInstanceInformationComponent_div_89_Template","EditInstanceInformationComponent_ng_template_100_Template","EditInstanceInformationComponent_ng_template_101_Template","EditInstanceInformationComponent_div_104_Template","ActorAvatarEditComponent","ActorBannerEditComponent","SelectRadioComponent","CommonModule","SelectCheckboxComponent","PeerTubeTemplateDirective","_EditInstanceInformationComponent","$l","xl","maxInstanceLives","Gl","maxUserLives","Ul","maxDuration","wl","Vl","fps","max","kl","$implicit","resolution_r2","ɵɵsanitizeHtml","zl","EditLiveConfigurationComponent_div_80_2_ng_template_0_Template","Xl","EditLiveConfigurationComponent_div_80_2_Template","ɵɵpropertyInterpolate","getResolutionKey","Bl","Wl","Hl","jl","profile","EditLiveConfigurationComponent","editConfigurationService","transcodingProfiles","liveMaxDurationOptions","liveResolutions","buildAvailableTranscodingProfile","availableProfiles","p","getLiveRTMPPort","rtmp","port","getDisabledLiveClass","getDisabledLiveTranscodingClass","getDisabledLiveLocalTranscodingClass","EditLiveConfigurationComponent_ng_template_11_Template","EditLiveConfigurationComponent_div_33_Template","EditLiveConfigurationComponent_div_43_Template","EditLiveConfigurationComponent_div_48_Template","EditLiveConfigurationComponent_ng_template_60_Template","EditLiveConfigurationComponent_div_74_Template","EditLiveConfigurationComponent_div_80_Template","EditLiveConfigurationComponent_ng_container_95_Template","EditLiveConfigurationComponent_ng_container_96_Template","EditLiveConfigurationComponent_div_98_Template","EditLiveConfigurationComponent_div_105_Template","NgFor","_EditLiveConfigurationComponent","Kl","Jl","Yl","ql","Ql","Zl","es","EditVODTranscodingComponent_div_75_2_ng_template_0_Template","ts","EditVODTranscodingComponent_div_75_2_Template","ns","os","is","rs","_s","as","EditVODTranscodingComponent","additionalVideoExtensions","checkTranscodingFields","video","file","extensions","join","getTranscodingDisabledClass","getHLSDisabledClass","getLocalTranscodingDisabledClass","getStudioDisabledClass","transcodingControl","videoStudioControl","hlsControl","webVideosControl","info","EditVODTranscodingComponent_ng_template_21_Template","EditVODTranscodingComponent_ng_template_49_Template","EditVODTranscodingComponent_ng_template_53_Template","EditVODTranscodingComponent_ng_template_59_Template","EditVODTranscodingComponent_div_69_Template","EditVODTranscodingComponent_div_75_Template","EditVODTranscodingComponent_ng_container_89_Template","EditVODTranscodingComponent_ng_container_90_Template","EditVODTranscodingComponent_div_92_Template","EditVODTranscodingComponent_div_102_Template","EditVODTranscodingComponent_div_109_Template","EditVODTranscodingComponent_ng_container_120_Template","_EditVODTranscodingComponent","ls","ss","cs","ds","ps","ms","us","gs","D","b","error_r3","Cs","EditCustomConfigComponent_div_34_li_3_Template","grabAllErrors","Ss","Es","EditCustomConfigComponent","FormReactive","formReactiveService","FormReactiveService","router","Router","route","ActivatedRoute","customPage","CustomPageService","serverService","activeNav","customConfig","formGroupData","isNSFW","terms","codeOfConduct","creationReason","moderationInformation","administrator","maintenanceLifetime","businessModel","hardwareInformation","categories","languages","support","text","URL_VALIDATOR","theme","client","miniature","preferAuthorDisplayName","menu","login","redirectOnSingleExternalAuth","requiresApproval","requiresEmailVerification","torrent","contactForm","history","USER_VIDEO_QUOTA_VALIDATOR","USER_VIDEO_QUOTA_DAILY_VALIDATOR","allowAdditionalExtensions","allowAudioFiles","alwaysTranscodeOriginalResolution","originalFile","keep","splitAudioAndVideo","webVideos","allowReplay","latencySetting","videoFile","update","followers","manualApproval","autoFollowBack","dismissable","remoteUri","anonymous","disableLocalSearch","isDefaultSearch","defaultValues","buildForm","snapshot","fragment","onNavChange","loadConfigAndUpdateForm","loadCategoriesAndLanguages","isUpdateAllowed","formValidated","forceCheck","valid","merge","getRawValue","forkJoin","omit","updateInstanceHomepage","resConfig","__spreadProps","__spreadValues","updateForm","webadmin","configuration","edition","allowed","hasConsistentOptions","hasLiveAllowReplayConsistentOptions","newActiveNav","navigate","getInstanceHomepage","markAllAsDirty","getVideoLanguages","getVideoCategories","l","__ngFactoryType__","ɵɵInheritDefinitionFeature","EditCustomConfigComponent_my_alert_2_Template","EditCustomConfigComponent_ng_template_9_Template","EditCustomConfigComponent_ng_template_13_Template","EditCustomConfigComponent_ng_template_17_Template","EditCustomConfigComponent_ng_template_21_Template","EditCustomConfigComponent_ng_template_25_Template","EditCustomConfigComponent_ng_template_29_Template","EditCustomConfigComponent_div_34_Template","EditCustomConfigComponent_span_35_Template","EditCustomConfigComponent_span_36_Template","Ot","nav_r4","ɵNgNoValidate","NgbNav","NgbNavItem","NgbNavLink","NgbNavLinkBase","NgbNavContent","NgbNavOutlet","_EditCustomConfigComponent","configRoutes","canActivate","UserRightGuard","userRight","UserRight","MANAGE_CONFIGURATION","children","redirectTo","pathMatch","component","meta","title","AbuseListComponent","AbuseListTableComponent","_AbuseListComponent","Ts","onSearch","Is","sortTooltip","Ns","accountBlock_r4","_r3","unblockAccount","blockedAccount","ɵɵsanitizeUrl","ɵɵtextInterpolate1","displayName","nameWithHost","createdAt","Os","Ms","fs","InstanceAccountBlocklistComponent_ng_template_4_ng_container_3_Template","InstanceAccountBlocklistComponent_ng_template_4_ng_container_4_Template","InstanceAccountBlocklistComponent","GenericAccountBlocklistComponent","mode","BlocklistComponentType","Instance","getIdentifier","loadLazy","InstanceAccountBlocklistComponent_ng_template_1_Template","InstanceAccountBlocklistComponent_ng_template_2_Template","InstanceAccountBlocklistComponent_ng_template_3_Template","InstanceAccountBlocklistComponent_ng_template_4_Template","blockedAccounts","totalRecords","rowsPerPage","rowsPerPageOptions","pagination","start","sort","field","order","getPaginationTemplate","TableModule","Table","PrimeTemplate","SortableColumn","SortIcon","SharedModule","AdvancedInputFilterComponent","NgbTooltip","ActorAvatarComponent","AutoColspanDirective","PTDatePipe","_InstanceAccountBlocklistComponent","As","_r2","ctx_r2","addServersToBlock","Rs","Ps","serverBlock_r5","_r4","unblockServer","blockedServer","host","Fs","hs","Ds","InstanceServerBlocklistComponent_ng_template_4_ng_container_3_Template","InstanceServerBlocklistComponent_ng_template_4_ng_container_4_Template","InstanceServerBlocklistComponent","GenericServerBlocklistComponent","InstanceServerBlocklistComponent_ng_template_1_Template","InstanceServerBlocklistComponent_ng_template_2_Template","InstanceServerBlocklistComponent_ng_template_3_Template","InstanceServerBlocklistComponent_ng_template_4_Template","onDomainsToBlock","blockedServers","GlobalIconComponent","BatchDomainsModalComponent","_InstanceServerBlocklistComponent","bs","show","vs","inputFilters","ys","Ls","$s","expanded","videoBlock_r4","expanded_r5","xs","Gs","Us","VideoBlockListComponent_ng_template_3_td_1_Template","VideoBlockListComponent_ng_template_3_td_2_Template","VideoBlockListComponent_ng_template_3_Conditional_8_Template","VideoBlockListComponent_ng_template_3_span_12_Template","reason","videoBlocklistActions","unfederated","ws","videoBlock_r6","reasonHtml","Vs","ks","zs","VideoBlockListComponent_ng_template_5_ng_container_3_Template","VideoBlockListComponent_ng_template_5_ng_container_4_Template","VideoBlockListComponent","RestTable","confirmService","ConfirmService","videoBlocklistService","VideoBlockService","markdownRenderer","MarkdownService","videoService","VideoService","blocklist","count","blocklistTypeFilter","isHeader","isDisplayed","videoBlock","VideoBlacklistType","AUTO_BEFORE_PUBLISHED","handler","unblockVideo","switchMap","blockVideo","videoId","unfederate","reloadData","__async","confirm","removeVideo","MANUAL","initialize","toHtml","textMarkdownToHTML","markdown","entry","confirmMessage","getVideoEmbed","buildVideoOrPlaylistEmbed","embedUrl","decorateVideoLink","buildVideoEmbedLink","originServerUrl","warningTitle","aspectRatio","embedTitle","reloadDataInternal","listBlocks","resultList","total","element","Object","assign","VideoBlockListComponent_ng_template_1_Template","VideoBlockListComponent_ng_template_2_Template","VideoBlockListComponent_ng_template_3_Template","VideoBlockListComponent_ng_template_4_Template","VideoBlockListComponent_ng_template_5_Template","expandedRows","RowToggler","TableExpanderIconComponent","ActionDropdownComponent","VideoCellComponent","EmbedComponent","VideoNSFWBadgeComponent","_VideoBlockListComponent","AdminRegistrationService","restService","RestService","listRegistrations","options","BASE_REGISTRATION_URL","params","HttpParams","addRestGetParams","append","acceptRegistration","registration","moderationResponse","preventEmailDelivery","body","post","rejectRegistration","removeRegistrations","registrationsArg","registrations","arrayify","from","concatMap","delete","toArray","_AdminRegistrationService","REGISTRATION_MODERATION_RESPONSE_VALIDATOR","minLength","minlength","ɵɵelementContainer","Hs","js","Ks","_c2","isPreventEmailDeliveryChecked","Js","Ys","ProcessRegistrationModalComponent_ng_template_0_ng_container_11_p_5_Template","ProcessRegistrationModalComponent_ng_template_0_ng_container_11_my_alert_6_Template","isEmailEnabled","qs","Qs","ProcessRegistrationModalComponent_ng_template_0_ng_container_12_my_alert_5_Template","Zs","ec","ProcessRegistrationModalComponent_ng_template_0_ng_container_3_Template","ProcessRegistrationModalComponent_ng_template_0_ng_container_4_Template","hide","processRegistration","ProcessRegistrationModalComponent_ng_template_0_my_alert_9_Template","ProcessRegistrationModalComponent_ng_template_0_ng_container_11_Template","ProcessRegistrationModalComponent_ng_template_0_ng_container_12_Template","ProcessRegistrationModalComponent_ng_template_0_div_17_Template","isAccept","isReject","emailVerified","getSubmitValue","ProcessRegistrationModalComponent","modalService","NgbModal","registrationService","modal","viewChild","registrationProcessed","output","openedModal","processMode","openModal","open","centered","reset","close","emit","viewQuery","St","Xs","Nt","outputs","ne","ProcessRegistrationModalComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","_ProcessRegistrationModalComponent","tc","nc","oc","UserEmailInfoComponent_Conditional_2_Conditional_1_em_0_Template","ic","UserEmailInfoComponent_Conditional_2_Conditional_0_Template","UserEmailInfoComponent_Conditional_2_Conditional_1_Template","rc","UserEmailInfoComponent","showEmailVerifyInformation","getTitle","UserEmailInfoComponent_Conditional_2_Template","UserEmailInfoComponent_Conditional_3_Template","_UserEmailInfoComponent","_c","ac","lc","bulkActions","selectedRows","sc","RegistrationListComponent_ng_template_1_my_action_dropdown_2_Template","isInSelectionMode","cc","dc","registration_r4","state","pc","mc","RegistrationListComponent_ng_template_3_div_26_Template","RegistrationListComponent_ng_template_3_div_27_Template","registrationActions","accountDisplayName","channelHandle","channelDisplayName","registrationReason","isRegistrationAccepted","isRegistrationRejected","uc","registration_r6","moderationResponseHTML","gc","RegistrationListComponent_ng_template_4_div_8_Template","registrationReasonHTML","Cc","Sc","Ec","RegistrationListComponent_ng_template_5_ng_container_3_Template","RegistrationListComponent_ng_template_5_ng_container_4_Template","RegistrationListComponent","adminRegistrationService","processRegistrationModal","openRegistrationRequestProcessModal","UserRegistrationState","PENDING","getConfig","ACCEPTED","REJECTED","onRegistrationProcessed","icuParams","RegistrationListComponent_ng_template_1_Template","RegistrationListComponent_ng_template_2_Template","RegistrationListComponent_ng_template_3_Template","RegistrationListComponent_ng_template_4_Template","RegistrationListComponent_ng_template_5_Template","SelectableRow","TableCheckbox","TableHeaderCheckbox","_RegistrationListComponent","WatchedWordsListAdminComponent","WatchedWordsListAdminOwnerComponent","_WatchedWordsListAdminComponent","moderationRoutes","MANAGE_ABUSES","MANAGE_VIDEO_BLACKLIST","MANAGE_REGISTRATIONS","MANAGE_ACCOUNTS_BLOCKLIST","MANAGE_SERVERS_BLOCKLIST","MANAGE_INSTANCE_WATCHED_WORDS","PluginApiService","pluginService","PluginService","getPluginTypeLabel","PluginType","PLUGIN","getPlugins","pluginType","componentPagination","componentToRestPagination","toString","BASE_PLUGIN_URL","searchAvailablePlugins","getPlugin","npmName","getPluginRegisteredSettings","pluginName","nameToNpmName","updatePluginSettings","settings","uninstall","install","getPluginOrThemeHref","_PluginApiService","PluginCardComponent","pluginApiService","version","ngContentSelectors","ɵɵprojection","_PluginCardComponent","Nc","getNoResultMessage","Oc","getShowRouterLink","plugin_r3","Mc","isUpdating","getUpdateLabel","isUninstalling","fc","PluginListInstalledComponent_ng_container_2_my_button_3_Template","PluginListInstalledComponent_ng_container_2_my_button_4_Template","isTheme","isUpdateAvailable","PluginListInstalledComponent","currentPage","itemsPerPage","totalItems","plugins","updating","uninstalling","onDataSubject","Subject","queryParams","replaceUrl","query","reloadPlugins","resetCurrentPage","loadMorePlugins","onNearOfBottom","hasMoreItems","latestVersion","compareSemVer","getPluginKey","THEME","pluginKey","updatePaginationOnDelete","isMajorUpgrade","confirmButtonText","latestMajor","split","currentMajor","PluginListInstalledComponent_div_0_Template","PluginListInstalledComponent_ng_container_2_Template","asObservable","InfiniteScrollerDirective","ButtonComponent","DeleteButtonComponent","_PluginListInstalledComponent","Ac","Rc","Pc","Fc","PluginSearchComponent_Conditional_2_Conditional_2_Template","PluginSearchComponent_Conditional_2_Conditional_3_Template","isThemeSearch","hc","Dc","bc","vc","yc","Lc","plugin_r2","$c","isInstalling","xc","PluginSearchComponent_ng_container_8_span_3_Template","PluginSearchComponent_ng_container_8_span_4_Template","PluginSearchComponent_ng_container_8_span_5_Template","PluginSearchComponent_ng_container_8_my_edit_button_7_Template","PluginSearchComponent_ng_container_8_my_button_8_Template","installed","official","recommended","PluginSearchComponent","isSearching","installing","pluginInstalled","searchSubject","debounceTime","distinctUntilChanged","queryParamsHandling","onSearchChange","event","target","logger","i18n_4","PluginSearchComponent_my_alert_0_Template","PluginSearchComponent_Conditional_2_Template","PluginSearchComponent_Conditional_3_Template","PluginSearchComponent_div_6_Template","PluginSearchComponent_ng_container_8_Template","AutofocusDirective","EditButtonComponent","_PluginSearchComponent","Gc","getWrapperId","setting_r3","isSettingHidden","Uc","PluginShowInstalledComponent_ng_container_0_form_5_div_1_Template","registeredSettings","wc","pluginTypeLabel","Vc","PluginShowInstalledComponent_ng_container_0_form_5_Template","PluginShowInstalledComponent_ng_container_0_div_6_Template","hasRegisteredSettings","PluginShowInstalledComponent","pluginAPIService","hooks","HooksService","sub","routeParams","loadPlugin","ngOnDestroy","unsubscribe","setting","script","getRegisteredSettingsScript","formValues","_0","translateSettings","buildSettingsForm","buildOptions","settingsValues","getSetting","runAction","translateSetting","PluginShowInstalledComponent_ng_container_0_Template","DynamicFormFieldComponent","_PluginShowInstalledComponent","pluginsRoutes","MANAGE_PLUGINS","DebugService","getDebug","BASE_DEBUG_URL","_DebugService","DebugComponent","debugService","debug","load","ip","_DebugComponent","JobService","listJobs","jobState","jobType","BASE_JOB_URL","convertResultListDateToHuman","applyToResultListData","prettyPrintData","bind","buildUniqId","obj","JSON","stringify","uniqId","_JobService","Bc","Wc","JobsComponent_ng_template_12_th_11_Template","JobsComponent_ng_template_12_th_12_Template","hasGlobalProgress","Hc","job_r2","getJobStateClasses","jc","getProgress","Kc","JobsComponent_ng_template_13_td_11_ng_container_1_Template","hasProgress","Jc","JobsComponent_ng_template_13_td_10_Template","JobsComponent_ng_template_13_td_11_Template","expanded_r3","getRandomJobTypeBadge","priority","processedOn","finishedOn","Yc","job_r4","qc","JobsComponent_ng_template_14_tr_8_Template","ɵɵpureFunction4","Qc","Zc","ed","JobsComponent_ng_template_15_Conditional_4_Conditional_0_Template","JobsComponent_ng_template_15_Conditional_4_Conditional_1_Template","td","nd","od","JobsComponent_ng_template_15_Conditional_5_Conditional_0_Template","JobsComponent_ng_template_15_Conditional_5_Conditional_1_Template","JobsComponent_ng_template_15_Conditional_4_Template","JobsComponent_ng_template_15_Conditional_5_Template","JobsComponent","jobsService","jobStates","jobStateItems","s","classes","jobTypes","jobTypeItems","jobs","loadJobStateAndType","onJobStateOrTypeChanged","saveJobStateAndType","job","progress","refresh","getRandomBadge","peertubeLocalStorage","getItem","LS_STATE","LS_TYPE","setItem","JobsComponent_ng_template_12_Template","JobsComponent_ng_template_13_Template","JobsComponent_ng_template_14_Template","JobsComponent_ng_template_15_Template","ɵɵpureFunction0","_JobsComponent","LogRow","date","localeDate","by","domain","action","row","Date","timestamp","toLocaleString","metaObj","keys","parse","LogsService","getLogs","isAuditLog","startDate","endDate","tagsOneOf","addArrayParams","BASE_AUDIT_LOG_URL","BASE_LOG_URL","rows","_LogsService","logTypeChoice_r2","sd","ɵɵtextInterpolate2","item_r5","dateFormat","cd","item_r6","dd","_r7","ctx_r3","pd","LogsComponent_Conditional_7_ng_template_4_Template","LogsComponent_Conditional_7_ng_template_9_Template","LogsComponent_Conditional_7_my_select_tags_13_Template","timeChoices","levelChoices","md","ud","logsContent_r8","gd","Cd","log_r9","Sd","Ed","LogsComponent_div_17_strong_5_Template","LogsComponent_div_17_strong_6_Template","ɵɵpureFunction2","LogsComponent","logsService","localStorage","LocalStorageService","logsElement","logsContent","loading","rawLogs","logs","logTypeChoices","logType","buildTimeChoices","buildLevelChoices","buildLogTypeChoices","loadPreviousChoices","LS_LOG_TYPE_CHOICE_KEY","setTimeout","nativeElement","scrollIntoView","block","inline","complete","lastHour","setHours","getHours","lastDay","setDate","getDate","lastWeek","toISOString","rd","_d","LogsComponent_option_6_Template","LogsComponent_Conditional_7_Template","LogsComponent_div_10_Template","LogsComponent_my_copy_button_13_Template","LogsComponent_div_14_Template","LogsComponent_div_17_Template","SelectTagsComponent","CopyButtonComponent","_LogsComponent","RunnerService","listRegistrationTokens","BASE_RUNNER_URL","generateToken","removeToken","token","listRunnerJobs","buildParamsFromSearch","getServerLocale","translations","newData","peertubeTranslate","payload","privatePayload","filters","parseQueryStringFilter","stateOneOf","prefix","multiple","RunnerJobState","COMPLETED","PROCESSING","ERRORED","WAITING_FOR_PARENT_JOB","PARENT_ERRORED","addObjectParams","cancelJobs","jobsArg","uuid","removeJobs","listRunners","deleteRunner","runner","_RunnerService","Id","Nd","RunnerJobListComponent_ng_template_2_my_action_dropdown_2_Template","Od","runnerJob_r3","Md","getRandomRunnerNameBadge","fd","RunnerJobListComponent_ng_template_3_ng_container_18_Template","RunnerJobListComponent_ng_template_3_div_20_Template","expanded_r4","actions","getRandomRunnerTypeBadge","getStateBadgeColor","startedAt","finishedAt","Ad","runnerJob_r5","Rd","RunnerJobListComponent_ng_template_4_pre_19_Template","parent","Pd","RunnerJobListComponent","runnerService","runnerJobs","canCancelJob","every","j","RunnerJobListComponent_ng_template_1_Template","RunnerJobListComponent_ng_template_2_Template","RunnerJobListComponent_ng_template_3_Template","RunnerJobListComponent_ng_template_4_Template","RunnerJobListComponent_ng_template_5_Template","_RunnerJobListComponent","Fd","hd","runner_r2","lastContact","Dd","RunnerListComponent","runners","runer","RunnerListComponent_ng_template_1_Template","RunnerListComponent_ng_template_2_Template","RunnerListComponent_ng_template_3_Template","_RunnerListComponent","bd","vd","yd","registrationToken_r3","registrationToken","registeredRunnersCount","Ld","RunnerRegistrationTokenListComponent","registrationTokens","RunnerRegistrationTokenListComponent_ng_template_1_Template","RunnerRegistrationTokenListComponent_ng_template_2_Template","RunnerRegistrationTokenListComponent_ng_template_3_Template","RunnerRegistrationTokenListComponent_ng_template_4_Template","_RunnerRegistrationTokenListComponent","RunnersRoutes","MANAGE_RUNNERS","systemRoutes","MANAGE_JOBS","MANAGE_LOGS","MANAGE_DEBUG","AdminModerationComponent","auth","AuthService","menuEntries","configReloaded","buildMenu","hasRight","routerLink","item","right","getUser","adminContent_r2","ɵɵreference","preventDefault","focus","HorizontalMenuComponent","RouterOutlet","_AdminModerationComponent","AdminOverviewComponent","MANAGE_USERS","SEE_ALL_VIDEOS","SEE_ALL_COMMENTS","_AdminOverviewComponent","AdminSettingsComponent","buildConfigurationItems","buildFederationItems","buildPluginItems","buildRunnerItems","buildSystemItems","MANAGE_SERVER_FOLLOW","isRemoteRunnersEnabled","systemItems","_AdminSettingsComponent","$d","xd","FollowersListComponent_ng_template_1_my_action_dropdown_2_Template","searchFilters","Gd","Ud","follow_r4","acceptFollower","wd","_r5","rejectFollower","Vd","_r6","deleteFollowers","kd","zd","Xd","Bd","FollowersListComponent_ng_template_3_my_button_4_Template","FollowersListComponent_ng_template_3_my_button_5_Template","FollowersListComponent_ng_template_3_my_delete_button_6_Template","FollowersListComponent_ng_template_3_span_12_Template","FollowersListComponent_ng_template_3_span_13_Template","FollowersListComponent_ng_template_3_span_14_Template","follower","buildFollowerName","score","Wd","Hd","jd","FollowersListComponent_ng_template_4_ng_container_3_Template","FollowersListComponent_ng_template_4_ng_container_4_Template","FollowersListComponent","followService","InstanceFollowService","buildFollowsListFilters","follows","f","followerName","removeFollower","follow","getFollowers","FollowersListComponent_ng_template_1_Template","FollowersListComponent_ng_template_2_Template","FollowersListComponent_ng_template_3_Template","FollowersListComponent_ng_template_4_Template","_FollowersListComponent","Kd","Jd","Yd","controls","hostsOrHandles","errors","validHostsOrHandles","qd","FollowModalComponent_ng_template_0_div_11_div_2_Template","Qd","Zd","submit","FollowModalComponent_ng_template_0_div_11_Template","FollowModalComponent_ng_template_0_my_alert_12_Template","placeholder","httpEnabled","FollowModalComponent","newFollow","UNIQUE_HOSTS_OR_HANDLE_VALIDATOR","addFollowing","window","location","protocol","splitAndGetNotEmpty","FollowModalComponent_ng_template_0_Template","_FollowModalComponent","RedundancyCheckboxComponent","redundancyService","RedundancyService","redundancyAllowed","model","updateRedundancyState","updateRedundancy","stateLabel","_RedundancyCheckboxComponent","ep","tp","np","openFollowModal","op","FollowingListComponent_ng_template_1_my_action_dropdown_2_Template","FollowingListComponent_ng_template_1_button_3_Template","rp","_p","ap","lp","follow_r6","following","hostRedundancyAllowed","sp","removeFollowing","FollowingListComponent_ng_template_3_span_10_Template","FollowingListComponent_ng_template_3_span_11_Template","FollowingListComponent_ng_template_3_span_12_Template","FollowingListComponent_ng_template_3_my_redundancy_checkbox_17_Template","buildFollowingName","isInstanceFollowing","cp","dp","pp","FollowingListComponent_ng_template_4_ng_container_3_Template","FollowingListComponent_ng_template_4_ng_container_4_Template","FollowingListComponent","followModal","entryName","unfollow","getFollowing","FollowingListComponent_ng_template_1_Template","FollowingListComponent_ng_template_2_Template","FollowingListComponent_ng_template_3_Template","FollowingListComponent_ng_template_4_Template","_FollowingListComponent","VideoRedundancyInformationComponent","redundancyElement","fileUrl","expiresOn","_VideoRedundancyInformationComponent","mp","up","gp","VideoRedundanciesListComponent_ng_template_11_th_6_Template","VideoRedundanciesListComponent_ng_template_11_th_10_Template","isDisplayingRemoteVideos","Cp","getRedundancyStrategy","redundancy_r3","Sp","getTotalSize","Ep","removeRedundancy","VideoRedundanciesListComponent_ng_template_12_td_5_Template","VideoRedundanciesListComponent_ng_template_12_td_10_Template","Tp","file_r5","Ip","VideoRedundanciesListComponent_ng_template_13_tr_0_div_2_Template","redundancy_r6","redundancies","files","Np","playlist_r7","Op","VideoRedundanciesListComponent_ng_template_13_tr_1_div_2_Template","streamingPlaylists","Mp","VideoRedundanciesListComponent_ng_template_13_tr_0_Template","VideoRedundanciesListComponent_ng_template_13_tr_1_Template","fp","Ap","Rp","VideoRedundanciesListComponent_ng_template_14_ng_container_3_Template","VideoRedundanciesListComponent_ng_template_14_ng_container_4_Template","Pp","Fp","r_r8","ariaLabel","graphData","hp","VideoRedundanciesListComponent_div_15_div_4_Template","VideoRedundanciesListComponent_div_15_div_5_Template","noRedundancies","redundanciesGraphsData","VideoRedundanciesListComponent","videoRedundancies","displayType","dataLoaded","bytesPipe","loadSelectLocalStorage","getServerStats","videosRedundancy","buildPieData","redundancy","reduce","onDisplayTypeChanged","saveSelectLocalStorage","strategy","stats","totalSize","totalAvailable","totalUsed","labels","bytesToHuman","datasets","backgroundColor","hoverBackgroundColor","display","tooltip","callbacks","removeVideoRedundancies","listVideoRedundancies","LS_DISPLAY_TYPE","bytes","VideoRedundanciesListComponent_ng_template_11_Template","VideoRedundanciesListComponent_ng_template_12_Template","VideoRedundanciesListComponent_ng_template_13_Template","VideoRedundanciesListComponent_ng_template_14_Template","VideoRedundanciesListComponent_div_15_Template","ChartModule","UIChart","_VideoRedundanciesListComponent","followsRoutes","VideoCommentListComponent","syndicationItems","format","FeedFormat","RSS","VideoCommentService","BASE_FEEDS_URL","toLowerCase","ATOM","VideoCommentListAdminOwnerComponent","_VideoCommentListComponent","UserEdit","roles","buildRoles","subscribersCount","forAccount","account","followersCount","forChannels","c","getAuthPlugins","registeredIdAndPassAuths","authUser","role","UserRole","ADMINISTRATOR","entries","USER_ROLE_LABELS","key","USER","displayDangerZone","isCreation","pluginAuth","resetPassword","disableTwoFactorAuth","buildAdminFlags","formValue","byPassAutoBlock","UserAdminFlag","BYPASS_VIDEO_AUTO_BLACKLIST","NONE","buildQuotaOptions","_UserEdit","Dp","bp","vp","yp","password","UserPasswordComponent","userAdminService","UserAdminService","userId","showPassword","USER_PASSWORD_VALIDATOR","userUpdate","updateUser","togglePasswordVisibility","getFormButtonTitle","UserPasswordComponent_Conditional_4_Template","UserPasswordComponent_Conditional_5_Template","UserPasswordComponent_div_6_Template","_UserPasswordComponent","ri","Lp","xa","Ga","$p","xp","Gp","UserCreateComponent_Conditional_6_a_3_Template","Up","videosCount","videoQuotaUsed","_c3","abusesCount","abusesAcceptedCount","abusesCreatedCount","videoCommentsCount","wp","UserCreateComponent_ng_template_7_div_0_Template","Vp","kp","zp","UserCreateComponent_13_ng_template_0_Template","Xp","Bp","Wp","Hp","UserCreateComponent_div_22_div_4_Template","jp","channelName","Kp","UserCreateComponent_div_23_div_4_Template","Jp","Yp","qp","UserCreateComponent_div_29_my_help_3_Template","isPasswordOptional","Qp","role_r3","Zp","em","tm","nm","authPlugin_r4","om","UserCreateComponent_div_48_option_7_Template","im","rm","UserCreateComponent_55_ng_template_0_Template","_m","am","UserCreateComponent_div_56_div_16_Template","twoFactorEnabled","UserCreateComponent","screenService","ScreenService","USER_USERNAME_VALIDATOR","USER_CHANNEL_NAME_VALIDATOR","USER_EMAIL_VALIDATOR","USER_PASSWORD_OPTIONAL_VALIDATOR","USER_ROLE_VALIDATOR","userCreate","adminFlags","addUser","UserCreateComponent_Conditional_5_Template","UserCreateComponent_Conditional_6_Template","UserCreateComponent_ng_template_7_Template","UserCreateComponent_my_alert_9_Template","UserCreateComponent_13_Template","UserCreateComponent_Conditional_17_Template","UserCreateComponent_Conditional_18_Template","UserCreateComponent_div_22_Template","UserCreateComponent_div_23_Template","UserCreateComponent_div_28_Template","UserCreateComponent_div_29_Template","UserCreateComponent_option_35_Template","UserCreateComponent_div_36_Template","UserCreateComponent_div_42_Template","UserCreateComponent_div_47_Template","UserCreateComponent_div_48_Template","UserCreateComponent_55_Template","UserCreateComponent_div_56_Template","dashboard_r7","NgTemplateOutlet","InputTextComponent","_UserCreateComponent","_i","lm","wa","Va","sm","cm","dm","UserUpdateComponent_Conditional_6_a_3_Template","pm","mm","UserUpdateComponent_ng_template_7_div_0_Template","um","gm","Cm","UserUpdateComponent_13_ng_template_0_Template","Sm","Em","Tm","Im","UserUpdateComponent_div_22_div_4_Template","Nm","Om","UserUpdateComponent_div_23_div_4_Template","Mm","fm","Am","UserUpdateComponent_div_29_my_help_3_Template","Rm","Pm","Fm","hm","Dm","bm","UserUpdateComponent_div_48_option_7_Template","vm","ym","UserUpdateComponent_55_ng_template_0_Template","Lm","$m","UserUpdateComponent_div_56_div_16_Template","UserUpdateComponent","userService","UserService","twoFactorService","TwoFactorService","paramsSub","onUserFetched","askResetPassword","disableTwoFactor","userJson","User","UserUpdateComponent_Conditional_5_Template","UserUpdateComponent_Conditional_6_Template","UserUpdateComponent_ng_template_7_Template","UserUpdateComponent_my_alert_9_Template","UserUpdateComponent_13_Template","UserUpdateComponent_Conditional_17_Template","UserUpdateComponent_Conditional_18_Template","UserUpdateComponent_div_22_Template","UserUpdateComponent_div_23_Template","UserUpdateComponent_div_28_Template","UserUpdateComponent_div_29_Template","UserUpdateComponent_option_35_Template","UserUpdateComponent_div_36_Template","UserUpdateComponent_div_42_Template","UserUpdateComponent_div_47_Template","UserUpdateComponent_div_48_Template","UserUpdateComponent_55_Template","UserUpdateComponent_div_56_Template","_UserUpdateComponent","xm","Gm","banned","Um","wm","Vm","km","zm","UserListComponent_ng_template_1_my_action_dropdown_2_Template","UserListComponent_ng_template_1_a_3_Template","Xm","getColumn","Bm","Wm","Hm","jm","Km","Jm","Ym","qm","Qm","selectedColumns","highlightBannedUsers","UserListComponent_ng_template_2_th_17_Template","UserListComponent_ng_template_2_th_18_Template","UserListComponent_ng_template_2_th_19_Template","UserListComponent_ng_template_2_th_20_Template","UserListComponent_ng_template_2_th_21_Template","UserListComponent_ng_template_2_th_22_Template","UserListComponent_ng_template_2_th_23_Template","UserListComponent_ng_template_2_th_24_Template","UserListComponent_ng_template_2_th_25_Template","columns","isSelected","Zm","user_r7","expanded_r6","eu","_r8","onUserChanged","accountMutedStatus","userModerationDisplayOptions","tu","nu","ou","UserListComponent_ng_template_3_td_7_div_9_Template","UserListComponent_ng_template_3_td_7_div_10_Template","mutedByInstance","blocked","iu","ru","getRoleClass","_u","UserListComponent_ng_template_3_td_8_span_1_Template","UserListComponent_ng_template_3_td_8_span_2_Template","au","lu","rawVideoQuota","rawVideoQuotaUsed","su","rawVideoQuotaDaily","rawVideoQuotaUsedDaily","videoQuotaUsedDaily","cu","ɵɵpipeBind1","totalVideoFileSize","du","pu","UserListComponent_ng_template_3_td_13_span_1_Template","mu","uu","lastLoginDate","gu","UserListComponent_ng_template_3_my_table_expander_icon_4_Template","UserListComponent_ng_template_3_my_user_moderation_dropdown_6_Template","UserListComponent_ng_template_3_td_7_Template","UserListComponent_ng_template_3_td_8_Template","UserListComponent_ng_template_3_td_9_Template","UserListComponent_ng_template_3_td_10_Template","UserListComponent_ng_template_3_td_11_Template","UserListComponent_ng_template_3_td_12_Template","UserListComponent_ng_template_3_td_13_Template","UserListComponent_ng_template_3_td_14_Template","UserListComponent_ng_template_3_td_15_Template","blockedReason","Cu","user_r9","UserListComponent","BlocklistService","userBanModal","instanceAccount","instanceUser","myAccount","_selectedColumns","val","saveSelectedColumns","addAction","removeUsers","u","canManage","openBanUserModal","unbanUsers","setEmailsAsVerified","wrapObject","loadSelectedColumns","removeAction","result","LS_SELECTED_COLUMNS_KEY","MODERATOR","getUserVideoQuotaPercentage","getUserVideoQuotaDailyPercentage","some","updateUsers","obs","getUsers","lastValueFrom","Actor","CREATE_BY_STRING","mutedByUser","mutedServerByInstance","mutedServerByUser","loadMutedStatus","getStatus","accounts","getBackendHost","blockStatus","blockedByServer","UserListComponent_ng_template_1_Template","UserListComponent_ng_template_2_Template","UserListComponent_ng_template_3_Template","UserListComponent_ng_template_4_Template","ResizableColumn","NgbDropdown","NgbDropdownToggle","NgbDropdownMenu","UserModerationDropdownComponent","UserBanModalComponent","ProgressBarComponent","_UserListComponent","VideoAdminService","getAdminVideos","buildVideoListParams","set","buildAdminParamsFromSearch","BASE_VIDEO_URL","extractVideos","buildAdminInputFilter","include","VideoInclude","BLACKLISTED","BLOCKED_OWNER","NOT_PUBLISHED_STATE","FILES","SOURCE","AUTOMATIC_TAGS","privacyOneOf","getAllPrivacies","isLocal","isBoolean","hasHLSFiles","hasWebVideoFiles","isLive","excludeMuted","excludePublic","autoTagOneOf","nsfw","VideoPrivacy","PRIVATE","UNLISTED","INTERNAL","PASSWORD_PROTECTED","_VideoAdminService","Su","Eu","Tu","Iu","Nu","Ou","VideoListComponent_ng_template_1_my_action_dropdown_2_Template","Mu","fu","Au","Ru","video_r5","Pu","Fu","hu","Du","buildSearchAutoTag","tag_r6","bu","vu","yu","Lu","$u","xu","getFilesSize","Gu","onVideoPanelOpened","VideoListComponent_ng_template_3_Conditional_11_Template","VideoListComponent_ng_template_3_Conditional_12_Template","VideoListComponent_ng_template_3_span_15_Template","VideoListComponent_ng_template_3_span_16_Template","VideoListComponent_ng_template_3_span_17_Template","VideoListComponent_ng_template_3_span_18_Template","ɵɵrepeaterCreate","VideoListComponent_ng_template_3_For_21_Template","ɵɵrepeaterTrackByIdentity","VideoListComponent_ng_template_3_span_23_Template","VideoListComponent_ng_template_3_span_24_Template","VideoListComponent_ng_template_3_span_25_Template","VideoListComponent_ng_template_3_span_26_Template","VideoListComponent_ng_template_3_span_27_Template","VideoListComponent_ng_template_3_span_28_Template","expanded_r7","videoActionsOptions","isUnpublished","isAccountBlocked","isServerBlocked","isVideoBlocked","ɵɵrepeater","automaticTags","hasOriginalFile","hasHLS","hasWebVideos","hasObjectStorage","isImport","publishedAt","Uu","video_r9","removeVideoSourceFile","getDownloadUrl","videoSource","fileDownloadUrl","inputFilename","wu","_r10","file_r11","removeVideoFile","Vu","VideoListComponent_ng_template_4_div_4_li_4_button_5_Template","canRemoveOneFile","ku","VideoListComponent_ng_template_4_div_4_li_4_Template","zu","_r12","file_r13","Xu","VideoListComponent_ng_template_4_div_5_li_4_button_5_Template","Bu","VideoListComponent_ng_template_4_div_5_li_4_Template","Wu","VideoListComponent_ng_template_4_div_3_Template","VideoListComponent_ng_template_4_div_4_Template","VideoListComponent_ng_template_4_div_5_Template","VideoListComponent","videoAdminService","videoBlockService","videoCaptionService","VideoCaptionService","videoFileTokenService","VideoFileTokenService","videoBlockModal","playlist","download","blacklist","report","duplicate","mute","liveInfo","removeFiles","generateTranscription","videoFileTokens","removeVideos","REMOVE_ANY_VIDEO","iconName","blacklisted","unblockVideos","runTranscoding","canRunTranscoding","removeVideoFiles","canRemoveAllHLSOrWebFiles","generateCaption","canGenerateTranscription","VideoState","LIVE_ENDED","PUBLISHED","blockedOwner","TO_IMPORT","VideoStreamingPlaylistType","HLS","getAllFiles","storage","FileStorage","OBJECT_STORAGE","removeFile","removeSourceFile","tag","str","filename","videoRequiresFileToken","getVideoFileToken","videoUUID","downloadUrl","nsfwFlagsExcluded","NSFWFlag","finalize","alreadyHasCaptions","alreadyBeingTranscribed","VideoListComponent_ng_template_1_Template","VideoListComponent_ng_template_2_Template","VideoListComponent_ng_template_3_Template","VideoListComponent_ng_template_4_Template","VideoActionsDropdownComponent","VideoBlockComponent","VideoPrivacyBadgeComponent","_VideoListComponent","basePathRedirect","overviewRoutes","commonConfig","providers","BulkService","AbuseService","DynamicElementService","FindInBulkService","SearchService","VideoPlaylistService","WatchedWordsListService","isOverviewRoute","segments","rootPath","startsWith","isModerationRoute","baseSettingsPathRedirect","routes_default","canMatch","_route","M8"],"ignoreList":[],"sources":["src/app/+admin/config/edit-custom-config/edit-advanced-configuration.component.html","src/app/+admin/config/edit-custom-config/edit-advanced-configuration.component.ts","src/app/shared/shared-forms/select/select-custom-value.component.html","src/app/shared/shared-forms/select/select-custom-value.component.ts","src/app/+admin/shared/user-real-quota-info.component.html","src/app/+admin/shared/user-real-quota-info.component.ts","src/app/+admin/config/shared/config.service.ts","src/app/+admin/config/edit-custom-config/edit-basic-configuration.component.html","src/app/+admin/config/edit-custom-config/edit-basic-configuration.component.ts","src/app/+admin/config/edit-custom-config/edit-configuration.service.ts","src/app/shared/form-validators/custom-config-validators.ts","src/app/shared/shared-custom-markup/custom-markup-help.component.html","src/app/shared/shared-custom-markup/custom-markup-help.component.ts","src/app/+admin/config/edit-custom-config/edit-homepage.component.html","src/app/+admin/config/edit-custom-config/edit-homepage.component.ts","src/app/+admin/config/edit-custom-config/edit-instance-information.component.html","src/app/+admin/config/edit-custom-config/edit-instance-information.component.ts","src/app/+admin/config/edit-custom-config/edit-live-configuration.component.html","src/app/+admin/config/edit-custom-config/edit-live-configuration.component.ts","src/app/+admin/config/edit-custom-config/edit-vod-transcoding.component.html","src/app/+admin/config/edit-custom-config/edit-vod-transcoding.component.ts","src/app/+admin/config/edit-custom-config/edit-custom-config.component.html","src/app/+admin/config/edit-custom-config/edit-custom-config.component.ts","src/app/+admin/config/config.routes.ts","src/app/+admin/moderation/abuse-list/abuse-list.component.ts","src/app/+admin/moderation/abuse-list/abuse-list.component.html","src/app/shared/shared-moderation/account-blocklist.component.html","src/app/+admin/moderation/instance-blocklist/instance-account-blocklist.component.ts","src/app/shared/shared-moderation/server-blocklist.component.html","src/app/+admin/moderation/instance-blocklist/instance-server-blocklist.component.ts","src/app/+admin/moderation/video-block-list/video-block-list.component.html","src/app/+admin/moderation/video-block-list/video-block-list.component.ts","src/app/+admin/moderation/registration-list/admin-registration.service.ts","src/app/+admin/moderation/registration-list/process-registration-validators.ts","src/app/+admin/moderation/registration-list/process-registration-modal.component.html","src/app/+admin/moderation/registration-list/process-registration-modal.component.ts","src/app/+admin/shared/user-email-info.component.html","src/app/+admin/shared/user-email-info.component.ts","src/app/+admin/moderation/registration-list/registration-list.component.html","src/app/+admin/moderation/registration-list/registration-list.component.ts","src/app/+admin/moderation/watched-words-list/watched-words-list-admin.component.ts","src/app/+admin/moderation/watched-words-list/watched-words-list-admin.component.html","src/app/+admin/moderation/moderation.routes.ts","src/app/+admin/plugins/shared/plugin-api.service.ts","src/app/+admin/plugins/shared/plugin-card.component.ts","src/app/+admin/plugins/shared/plugin-card.component.html","src/app/+admin/plugins/plugin-list-installed/plugin-list-installed.component.html","src/app/+admin/plugins/plugin-list-installed/plugin-list-installed.component.ts","src/app/+admin/plugins/plugin-search/plugin-search.component.html","src/app/+admin/plugins/plugin-search/plugin-search.component.ts","src/app/+admin/plugins/plugin-show-installed/plugin-show-installed.component.html","src/app/+admin/plugins/plugin-show-installed/plugin-show-installed.component.ts","src/app/+admin/plugins/plugins.routes.ts","src/app/+admin/system/debug/debug.service.ts","src/app/+admin/system/debug/debug.component.ts","src/app/+admin/system/debug/debug.component.html","src/app/+admin/system/jobs/job.service.ts","src/app/+admin/system/jobs/jobs.component.html","src/app/+admin/system/jobs/jobs.component.ts","src/app/+admin/system/logs/log-row.model.ts","src/app/+admin/system/logs/logs.service.ts","src/app/+admin/system/logs/logs.component.html","src/app/+admin/system/logs/logs.component.ts","src/app/+admin/system/runners/runner.service.ts","src/app/+admin/system/runners/runner-job-list/runner-job-list.component.html","src/app/+admin/system/runners/runner-job-list/runner-job-list.component.ts","src/app/+admin/system/runners/runner-list/runner-list.component.html","src/app/+admin/system/runners/runner-list/runner-list.component.ts","src/app/+admin/system/runners/runner-registration-token-list/runner-registration-token-list.component.html","src/app/+admin/system/runners/runner-registration-token-list/runner-registration-token-list.component.ts","src/app/+admin/system/runners/runners.routes.ts","src/app/+admin/system/system.routes.ts","src/app/+admin/admin-moderation.component.ts","src/app/+admin/admin-moderation.component.html","src/app/+admin/admin-overview.component.ts","src/app/+admin/admin-overview.component.html","src/app/+admin/admin-settings.component.ts","src/app/+admin/admin-settings.component.html","src/app/+admin/follows/followers-list/followers-list.component.html","src/app/+admin/follows/followers-list/followers-list.component.ts","src/app/+admin/follows/following-list/follow-modal.component.html","src/app/+admin/follows/following-list/follow-modal.component.ts","src/app/+admin/follows/shared/redundancy-checkbox.component.ts","src/app/+admin/follows/shared/redundancy-checkbox.component.html","src/app/+admin/follows/following-list/following-list.component.html","src/app/+admin/follows/following-list/following-list.component.ts","src/app/+admin/follows/video-redundancies-list/video-redundancy-information.component.ts","src/app/+admin/follows/video-redundancies-list/video-redundancy-information.component.html","src/app/+admin/follows/video-redundancies-list/video-redundancies-list.component.html","src/app/+admin/follows/video-redundancies-list/video-redundancies-list.component.ts","src/app/+admin/follows/follows.routes.ts","src/app/+admin/overview/comments/video-comment-list.component.ts","src/app/+admin/overview/comments/video-comment-list.component.html","src/app/+admin/overview/users/user-edit/user-edit.ts","src/app/+admin/overview/users/user-edit/user-password.component.html","src/app/+admin/overview/users/user-edit/user-password.component.ts","src/app/+admin/overview/users/user-edit/user-edit.component.html","src/app/+admin/overview/users/user-edit/user-create.component.ts","src/app/+admin/overview/users/user-edit/user-update.component.ts","src/app/+admin/overview/users/user-list/user-list.component.html","src/app/+admin/overview/users/user-list/user-list.component.ts","src/app/+admin/overview/videos/video-admin.service.ts","src/app/+admin/overview/videos/video-list.component.html","src/app/+admin/overview/videos/video-list.component.ts","src/app/+admin/overview/overview.routes.ts","src/app/+admin/routes.ts"],"sourcesContent":["<ng-container [formGroup]=\"form()\">\n\n  <div class=\"pt-two-cols mt-5\"> <!-- cache grid -->\n\n    <div class=\"title-col\">\n      <h2 i18n>CACHE</h2>\n      <div i18n class=\"inner-form-description\">\n        Some files are not federated, and fetched when necessary. Define their caching policies.\n      </div>\n    </div>\n\n    <div class=\"content-col\">\n      <ng-container formGroupName=\"cache\">\n        <div class=\"form-group\" formGroupName=\"previews\">\n          <label i18n for=\"cachePreviewsSize\">Number of previews to keep in cache</label>\n\n          <div class=\"number-with-unit\">\n            <input\n              type=\"number\" min=\"0\" id=\"cachePreviewsSize\" class=\"form-control\"\n              formControlName=\"size\" [ngClass]=\"{ 'input-error': formErrors()['cache.previews.size'] }\"\n            >\n            <span i18n>{getCacheSize('previews'), plural, =1 {cached image} other {cached images}}</span>\n          </div>\n\n          <div *ngIf=\"formErrors().cache.previews.size\" class=\"form-error\" role=\"alert\">{{ formErrors().cache.previews.size }}</div>\n        </div>\n\n        <div class=\"form-group\" formGroupName=\"captions\">\n          <label i18n for=\"cacheCaptionsSize\">Number of video captions to keep in cache</label>\n\n          <div class=\"number-with-unit\">\n            <input\n              type=\"number\" min=\"0\" id=\"cacheCaptionsSize\" class=\"form-control\"\n              formControlName=\"size\" [ngClass]=\"{ 'input-error': formErrors()['cache.captions.size'] }\"\n            >\n            <span i18n>{getCacheSize('captions'), plural, =1 {cached caption} other {cached captions}}</span>\n          </div>\n\n          <div *ngIf=\"formErrors().cache.captions.size\" class=\"form-error\" role=\"alert\">{{ formErrors().cache.captions.size }}</div>\n        </div>\n\n        <div class=\"form-group\" formGroupName=\"torrents\">\n          <label i18n for=\"cacheTorrentsSize\">Number of video torrents to keep in cache</label>\n\n          <div class=\"number-with-unit\">\n            <input\n              type=\"number\" min=\"0\" id=\"cacheTorrentsSize\" class=\"form-control\"\n              formControlName=\"size\" [ngClass]=\"{ 'input-error': formErrors()['cache.torrents.size'] }\"\n            >\n            <span i18n>{getCacheSize('torrents'), plural, =1 {cached torrent} other {cached torrents}}</span>\n          </div>\n\n          <div *ngIf=\"formErrors().cache.torrents.size\" class=\"form-error\" role=\"alert\">{{ formErrors().cache.torrents.size }}</div>\n        </div>\n\n        <div class=\"form-group\" formGroupName=\"torrents\">\n          <label i18n for=\"cacheTorrentsSize\">Number of video storyboard images to keep in cache</label>\n\n          <div class=\"number-with-unit\">\n            <input\n              type=\"number\" min=\"0\" id=\"cacheStoryboardsSize\" class=\"form-control\"\n              formControlName=\"size\" [ngClass]=\"{ 'input-error': formErrors()['cache.storyboards.size'] }\"\n            >\n            <span i18n>{getCacheSize('storyboards'), plural, =1 {cached storyboard} other {cached storyboards}}</span>\n          </div>\n\n          <div *ngIf=\"formErrors().cache.storyboards.size\" class=\"form-error\" role=\"alert\">{{ formErrors().cache.storyboards.size }}</div>\n        </div>\n      </ng-container>\n\n    </div>\n  </div>\n\n  <div class=\"pt-two-cols mt-4\"> <!-- cache grid -->\n    <div class=\"title-col\">\n      <div class=\"anchor\" id=\"customizations\"></div> <!-- customizations anchor -->\n      <h2 i18n>CUSTOMIZATIONS</h2>\n      <div i18n class=\"inner-form-description\">\n        Slight modifications to your PeerTube instance for when creating a plugin or theme is overkill.\n      </div>\n    </div>\n\n    <div class=\"content-col\">\n      <ng-container formGroupName=\"instance\">\n        <ng-container formGroupName=\"customizations\">\n          <div class=\"form-group\">\n            <label i18n for=\"customizationJavascript\">JavaScript</label>\n            <my-help>\n              <ng-container i18n>\n                <p class=\"mb-2\">Write JavaScript code directly. Example:</p>\n                <pre>console.log('my instance is amazing');</pre>\n              </ng-container>\n            </my-help>\n\n            <textarea\n              id=\"customizationJavascript\" formControlName=\"javascript\" class=\"form-control\" dir=\"ltr\"\n              [ngClass]=\"{ 'input-error': formErrors()['instance.customizations.javascript'] }\"\n            ></textarea>\n\n            <div *ngIf=\"formErrors().instance.customizations.javascript\" class=\"form-error\" role=\"alert\">{{ formErrors().instance.customizations.javascript }}</div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"customizationCSS\">CSS</label>\n\n            <my-help>\n              <ng-container i18n>\n                  <p class=\"mb-2\">Write CSS code directly. Example:</p>\n<pre>\n#custom-css {{ '{' }}\n  color: red;\n{{ '}' }}\n</pre>\n                  <p class=\"mb-2\">Prepend with <em>#custom-css</em> to override styles. Example:</p>\n<pre>\n#custom-css .logged-in-email {{ '{' }}\n  color: red;\n{{ '}' }}\n</pre>\n              </ng-container>\n            </my-help>\n\n            <textarea\n              id=\"customizationCSS\" formControlName=\"css\" class=\"form-control\" dir=\"ltr\"\n              [ngClass]=\"{ 'input-error': formErrors()['instance.customizations.css'] }\"\n            ></textarea>\n            <div *ngIf=\"formErrors().instance.customizations.css\" class=\"form-error\" role=\"alert\">{{ formErrors().instance.customizations.css }}</div>\n          </div>\n        </ng-container>\n      </ng-container>\n\n    </div>\n  </div>\n\n</ng-container>\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, input } from '@angular/core'\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { HelpComponent } from '../../../shared/shared-main/buttons/help.component'\n\n@Component({\n  selector: 'my-edit-advanced-configuration',\n  templateUrl: './edit-advanced-configuration.component.html',\n  styleUrls: [ './edit-custom-config.component.scss' ],\n  imports: [ FormsModule, ReactiveFormsModule, NgClass, NgIf, HelpComponent ]\n})\nexport class EditAdvancedConfigurationComponent {\n  readonly form = input<FormGroup>(undefined)\n  readonly formErrors = input<any>(undefined)\n\n  getCacheSize (type: 'captions' | 'previews' | 'torrents' | 'storyboards') {\n    return this.form().value['cache'][type]['size']\n  }\n}\n","<div class=\"d-flex align-items-center\">\n  <my-select-options\n    class=\"flex-grow-1\"\n\n    [inputId]=\"inputId()\"\n    [disabled]=\"disabled\"\n\n    [items]=\"itemsWithCustom\"\n    [(ngModel)]=\"selectedId\"\n    (ngModelChange)=\"onModelChange()\"\n  ></my-select-options>\n\n  @if (isCustomValue()) {\n    <input\n      [attr.aria-labelledby]=\"labelId()\" [(ngModel)]=\"customValue\" (ngModelChange)=\"onModelChange()\"\n      [type]=\"inputType()\" class=\"ms-2 form-control pt-input-text\"\n    />\n\n    <span *ngIf=\"inputSuffix()\" class=\"ms-1\">{{ inputSuffix() }}</span>\n  }\n</div>\n","import { Component, forwardRef, OnChanges, input } from '@angular/core'\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms'\nimport { SelectOptionsItem } from '../../../../types/select-options-item.model'\nimport { NgIf } from '@angular/common'\nimport { SelectOptionsComponent } from './select-options.component'\n\n@Component({\n  selector: 'my-select-custom-value',\n  templateUrl: './select-custom-value.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => SelectCustomValueComponent),\n      multi: true\n    }\n  ],\n  imports: [ SelectOptionsComponent, FormsModule, NgIf ]\n})\nexport class SelectCustomValueComponent implements ControlValueAccessor, OnChanges {\n  readonly inputId = input.required<string>()\n  readonly labelId = input.required<string>()\n\n  readonly items = input<SelectOptionsItem[]>([])\n\n  readonly clearable = input(false)\n  readonly searchable = input(false)\n\n  readonly inputSuffix = input<string>(undefined)\n  readonly inputType = input('text')\n\n  customValue: number | string = ''\n  selectedId: number | string\n  disabled = false\n\n  itemsWithCustom: SelectOptionsItem[] = []\n\n  ngOnChanges () {\n    this.itemsWithCustom = this.getItems()\n  }\n\n  propagateChange = (_: any) => {\n    // empty\n  }\n\n  writeValue (id: number | string) {\n    this.selectedId = id\n\n    if (this.isSelectedIdInItems() !== true) {\n      this.selectedId = 'other'\n      this.customValue = id\n    }\n  }\n\n  registerOnChange (fn: (_: any) => void) {\n    this.propagateChange = fn\n  }\n\n  registerOnTouched () {\n    // Unused\n  }\n\n  onModelChange () {\n    if (this.selectedId === 'other') {\n      return this.propagateChange(this.customValue)\n    }\n\n    return this.propagateChange(this.selectedId)\n  }\n\n  isSelectedIdInItems () {\n    return !!this.items().find(i => i.id === this.selectedId)\n  }\n\n  getItems () {\n    const other: SelectOptionsItem = {\n      id: 'other',\n      label: $localize`Custom value...`\n    }\n\n    return this.items().concat([ other ])\n  }\n\n  isCustomValue () {\n    return this.selectedId === 'other'\n  }\n\n  setDisabledState (isDisabled: boolean) {\n    this.disabled = isDisabled\n  }\n}\n","<div *ngIf=\"getQuotaAsNumber() > 0\">\n\n  <ng-container i18n>\n    The video quota only takes into account the size of <strong>uploaded</strong> videos, not transcoded files or user export archives (which may contain video files).\n  </ng-container>\n\n  <br />\n\n  <ng-container i18n *ngIf=\"isTranscodingInformationDisplayed()\">\n    Transcoding is enabled so videos size can be at most ~ {{ computeQuotaWithTranscoding() | bytes: 0 }}.\n  </ng-container>\n</div>\n\n","import { Component, OnInit, inject, input } from '@angular/core'\nimport { ServerService } from '@app/core'\nimport { HTMLServerConfig, VideoResolution } from '@peertube/peertube-models'\nimport { BytesPipe } from '../../shared/shared-main/common/bytes.pipe'\nimport { NgIf } from '@angular/common'\n\n@Component({\n  selector: 'my-user-real-quota-info',\n  templateUrl: './user-real-quota-info.component.html',\n  imports: [ NgIf, BytesPipe ]\n})\nexport class UserRealQuotaInfoComponent implements OnInit {\n  private server = inject(ServerService)\n\n  readonly videoQuota = input<number | string>(undefined)\n\n  private serverConfig: HTMLServerConfig\n\n  ngOnInit () {\n    this.serverConfig = this.server.getHTMLConfig()\n  }\n\n  isTranscodingInformationDisplayed () {\n    return this.serverConfig.transcoding.enabledResolutions.length !== 0\n  }\n\n  computeQuotaWithTranscoding () {\n    const transcodingConfig = this.serverConfig.transcoding\n\n    const resolutions = transcodingConfig.enabledResolutions\n    const higherResolution = VideoResolution.H_4K\n    let multiplier = 0\n\n    for (const resolution of resolutions) {\n      multiplier += resolution / higherResolution\n    }\n\n    if (transcodingConfig.hls.enabled) multiplier *= 2\n\n    return multiplier * this.getQuotaAsNumber()\n  }\n\n  getQuotaAsNumber () {\n    return parseInt(this.videoQuota() + '', 10)\n  }\n}\n","import { catchError } from 'rxjs/operators'\nimport { HttpClient } from '@angular/common/http'\nimport { Injectable, inject } from '@angular/core'\nimport { RestExtractor } from '@app/core'\nimport { CustomConfig } from '@peertube/peertube-models'\nimport { SelectOptionsItem } from '../../../../types/select-options-item.model'\nimport { environment } from '../../../../environments/environment'\n\n@Injectable()\nexport class ConfigService {\n  private authHttp = inject(HttpClient)\n  private restExtractor = inject(RestExtractor)\n\n  private static BASE_APPLICATION_URL = environment.apiUrl + '/api/v1/config'\n\n  videoQuotaOptions: SelectOptionsItem[] = []\n  videoQuotaDailyOptions: SelectOptionsItem[] = []\n  transcodingThreadOptions: SelectOptionsItem[] = []\n\n  constructor () {\n    this.videoQuotaOptions = [\n      { id: -1, label: $localize`Unlimited` },\n      { id: 0, label: $localize`None - no upload possible` },\n      { id: 100 * 1024 * 1024, label: $localize`100MB` },\n      { id: 500 * 1024 * 1024, label: $localize`500MB` },\n      { id: 1024 * 1024 * 1024, label: $localize`1GB` },\n      { id: 5 * 1024 * 1024 * 1024, label: $localize`5GB` },\n      { id: 20 * 1024 * 1024 * 1024, label: $localize`20GB` },\n      { id: 50 * 1024 * 1024 * 1024, label: $localize`50GB` },\n      { id: 100 * 1024 * 1024 * 1024, label: $localize`100GB` },\n      { id: 200 * 1024 * 1024 * 1024, label: $localize`200GB` },\n      { id: 500 * 1024 * 1024 * 1024, label: $localize`500GB` }\n    ]\n\n    this.videoQuotaDailyOptions = [\n      { id: -1, label: $localize`Unlimited` },\n      { id: 0, label: $localize`None - no upload possible` },\n      { id: 10 * 1024 * 1024, label: $localize`10MB` },\n      { id: 50 * 1024 * 1024, label: $localize`50MB` },\n      { id: 100 * 1024 * 1024, label: $localize`100MB` },\n      { id: 500 * 1024 * 1024, label: $localize`500MB` },\n      { id: 2 * 1024 * 1024 * 1024, label: $localize`2GB` },\n      { id: 5 * 1024 * 1024 * 1024, label: $localize`5GB` },\n      { id: 10 * 1024 * 1024 * 1024, label: $localize`10GB` },\n      { id: 20 * 1024 * 1024 * 1024, label: $localize`20GB` },\n      { id: 50 * 1024 * 1024 * 1024, label: $localize`50GB` }\n    ]\n\n    this.transcodingThreadOptions = [\n      { id: 0, label: $localize`Auto (via ffmpeg)` },\n      { id: 1, label: '1' },\n      { id: 2, label: '2' },\n      { id: 4, label: '4' },\n      { id: 8, label: '8' },\n      { id: 12, label: '12' },\n      { id: 16, label: '16' },\n      { id: 32, label: '32' }\n    ]\n  }\n\n  getCustomConfig () {\n    return this.authHttp.get<CustomConfig>(ConfigService.BASE_APPLICATION_URL + '/custom')\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  updateCustomConfig (data: CustomConfig) {\n    return this.authHttp.put<CustomConfig>(ConfigService.BASE_APPLICATION_URL + '/custom', data)\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n}\n","<ng-container [formGroup]=\"form()\">\n  <div class=\"pt-two-cols mt-5\"> <!-- appearance grid -->\n    <div class=\"title-col\">\n      <h2 i18n>APPEARANCE</h2>\n\n      <div i18n class=\"inner-form-description\">\n        Use <a class=\"link-primary\" routerLink=\"/admin/settings/plugins\">plugins & themes</a> for more involved changes, or add slight <a class=\"link-primary\" routerLink=\"/admin/settings/config/edit-custom\" fragment=\"advanced-configuration\">customizations</a>.\n      </div>\n    </div>\n\n    <div class=\"content-col\">\n\n      <ng-container formGroupName=\"theme\">\n        <div class=\"form-group\">\n          <label i18n for=\"themeDefault\">Theme</label>\n\n          <my-select-options formControlName=\"default\" inputId=\"themeDefault\" [items]=\"availableThemes\"></my-select-options>\n        </div>\n      </ng-container>\n\n      <div class=\"form-group\" formGroupName=\"instance\">\n        <label i18n id=\"instanceDefaultClientRouteLabel\" for=\"instanceDefaultClientRoute\">Landing page</label>\n\n        <my-select-custom-value\n          labelId=\"instanceDefaultClientRouteLabel\"\n          inputId=\"instanceDefaultClientRoute\"\n          [items]=\"defaultLandingPageOptions\"\n          formControlName=\"defaultClientRoute\"\n          inputType=\"text\"\n          [clearable]=\"false\"\n        ></my-select-custom-value>\n\n        <div *ngIf=\"formErrors().instance.defaultClientRoute\" class=\"form-error\" role=\"alert\">{{ formErrors().instance.defaultClientRoute }}</div>\n      </div>\n\n      <div class=\"form-group\" formGroupName=\"trending\">\n        <ng-container formGroupName=\"videos\">\n          <ng-container formGroupName=\"algorithms\">\n            <label i18n for=\"trendingVideosAlgorithmsDefault\">Default trending algorithm</label>\n\n            <div class=\"peertube-select-container\">\n              <select id=\"trendingVideosAlgorithmsDefault\" formControlName=\"default\" class=\"form-control\">\n                <option i18n value=\"hot\">Hot videos</option>\n                <option i18n value=\"most-viewed\">Recent views</option>\n                <option i18n value=\"most-liked\">Most liked videos</option>\n                <option i18n value=\"views\">Global views</option>\n              </select>\n            </div>\n\n            <div *ngIf=\"formErrors().trending.videos.algorithms.default\" class=\"form-error\" role=\"alert\">{{ formErrors().trending.videos.algorithms.default }}</div>\n          </ng-container>\n        </ng-container>\n      </div>\n\n      <ng-container formGroupName=\"client\">\n\n        <ng-container formGroupName=\"videos\">\n          <ng-container formGroupName=\"miniature\">\n            <div class=\"form-group\">\n              <my-peertube-checkbox\n                inputName=\"clientVideosMiniaturePreferAuthorDisplayName\" formControlName=\"preferAuthorDisplayName\"\n                i18n-labelText labelText=\"Prefer author display name in video miniature\"\n              ></my-peertube-checkbox>\n            </div>\n          </ng-container>\n        </ng-container>\n\n        <ng-container formGroupName=\"menu\">\n          <ng-container formGroupName=\"login\">\n            <div class=\"form-group\">\n              <my-peertube-checkbox\n                inputName=\"clientMenuLoginRedirectOnSingleExternalAuth\" formControlName=\"redirectOnSingleExternalAuth\"\n                i18n-labelText labelText=\"Redirect users on single external auth when users click on the login button in menu\"\n              >\n                <ng-container ngProjectAs=\"description\">\n                  <span *ngIf=\"countExternalAuth() === 0\" i18n>⚠️ You don't have any external auth plugin enabled.</span>\n                  <span *ngIf=\"countExternalAuth() > 1\" i18n>⚠️ You have multiple external auth plugins enabled.</span>\n                </ng-container>\n             </my-peertube-checkbox>\n            </div>\n          </ng-container>\n        </ng-container>\n      </ng-container>\n\n    </div>\n  </div>\n\n  <div class=\"pt-two-cols mt-4\"> <!-- broadcast grid -->\n    <div class=\"title-col\">\n      <h2 i18n>BROADCAST MESSAGE</h2>\n      <div i18n class=\"inner-form-description\">\n        Display a message on your instance\n      </div>\n    </div>\n\n    <div class=\"content-col\">\n\n      <ng-container formGroupName=\"broadcastMessage\">\n\n        <div class=\"form-group\">\n          <my-peertube-checkbox\n            inputName=\"broadcastMessageEnabled\" formControlName=\"enabled\"\n            i18n-labelText labelText=\"Enable broadcast message\"\n          ></my-peertube-checkbox>\n        </div>\n\n        <div class=\"form-group\">\n          <my-peertube-checkbox\n            inputName=\"broadcastMessageDismissable\" formControlName=\"dismissable\"\n            i18n-labelText labelText=\"Allow users to dismiss the broadcast message \"\n          ></my-peertube-checkbox>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"broadcastMessageLevel\">Broadcast message level</label>\n\n          <div class=\"peertube-select-container\">\n            <select id=\"broadcastMessageLevel\" formControlName=\"level\" class=\"form-control\">\n              <option i18n value=\"info\">info</option>\n              <option i18n value=\"warning\">warning</option>\n              <option i18n value=\"error\">error</option>\n            </select>\n          </div>\n\n          <div *ngIf=\"formErrors().broadcastMessage.level\" class=\"form-error\" role=\"alert\">{{ formErrors().broadcastMessage.level }}</div>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"broadcastMessageMessage\">Message</label><my-help helpType=\"markdownText\"></my-help>\n\n          <my-markdown-textarea\n            inputId=\"broadcastMessageMessage\" formControlName=\"message\"\n            [formError]=\"formErrors()['broadcastMessage.message']\" markdownType=\"to-unsafe-html\"\n          ></my-markdown-textarea>\n\n          <div *ngIf=\"formErrors().broadcastMessage.message\" class=\"form-error\" role=\"alert\">{{ formErrors().broadcastMessage.message }}</div>\n        </div>\n\n      </ng-container>\n\n    </div>\n  </div>\n\n  <div class=\"pt-two-cols mt-4\"> <!-- new users grid -->\n    <div class=\"title-col\">\n      <h2 i18n>NEW USERS</h2>\n      <div i18n class=\"inner-form-description\">\n        Manage <a class=\"link-primary\" routerLink=\"/admin/overview/users\">users</a> to set their quota individually.\n      </div>\n    </div>\n\n    <div class=\"content-col\">\n\n      <ng-container formGroupName=\"signup\">\n        <div class=\"form-group\">\n          <my-peertube-checkbox\n            inputName=\"signupEnabled\" formControlName=\"enabled\"\n            i18n-labelText labelText=\"Enable Signup\"\n          >\n            <ng-container ngProjectAs=\"description\">\n              <span i18n>⚠️ This functionality requires a lot of attention and extra moderation.</span>\n\n              <my-alert type=\"primary\" class=\"alert-signup\" *ngIf=\"signupAlertMessage\">{{ signupAlertMessage }}</my-alert>\n            </ng-container>\n\n            <ng-container ngProjectAs=\"extra\">\n              <div class=\"form-group\">\n                <my-peertube-checkbox [ngClass]=\"getDisabledSignupClass()\"\n                  inputName=\"signupRequiresApproval\" formControlName=\"requiresApproval\"\n                  i18n-labelText labelText=\"Signup requires approval by moderators\"\n                ></my-peertube-checkbox>\n              </div>\n\n              <div class=\"form-group\">\n                <my-peertube-checkbox [ngClass]=\"getDisabledSignupClass()\"\n                  inputName=\"signupRequiresEmailVerification\" formControlName=\"requiresEmailVerification\"\n                  i18n-labelText labelText=\"Signup requires email verification\"\n                ></my-peertube-checkbox>\n              </div>\n\n              <div [ngClass]=\"getDisabledSignupClass()\">\n                <label i18n for=\"signupLimit\">Signup limit</label>\n                <span i18n class=\"small muted ms-1\">When the total number of users in your instance reaches this limit, registrations are disabled. -1 == unlimited</span>\n\n                <div class=\"number-with-unit\">\n                  <input\n                    type=\"number\" min=\"-1\" id=\"signupLimit\" class=\"form-control\"\n                    formControlName=\"limit\" [ngClass]=\"{ 'input-error': formErrors()['signup.limit'] }\"\n                  >\n                  <span i18n>{form().value['signup']['limit'], plural, =1 {user} other {users}}</span>\n                </div>\n\n                <div *ngIf=\"formErrors().signup.limit\" class=\"form-error\" role=\"alert\">{{ formErrors().signup.limit }}</div>\n\n                <small i18n *ngIf=\"hasUnlimitedSignup()\" class=\"muted small\">Signup won't be limited to a fixed number of users.</small>\n              </div>\n\n              <div [ngClass]=\"getDisabledSignupClass()\" class=\"mt-3\">\n                <label i18n for=\"signupMinimumAge\">Minimum required age to create an account</label>\n\n                <div class=\"number-with-unit\">\n                  <input\n                    type=\"number\" min=\"1\" id=\"signupMinimumAge\" class=\"form-control\"\n                    formControlName=\"minimumAge\" [ngClass]=\"{ 'input-error': formErrors()['signup.minimumAge'] }\"\n                  >\n                  <span i18n>{form().value['signup']['minimumAge'], plural, =1 {year old} other {years old}}</span>\n                </div>\n\n                <div *ngIf=\"formErrors().signup.minimumAge\" class=\"form-error\" role=\"alert\">{{ formErrors().signup.minimumAge }}</div>\n              </div>\n            </ng-container>\n          </my-peertube-checkbox>\n        </div>\n      </ng-container>\n\n      <ng-container formGroupName=\"user\">\n        <div class=\"form-group\">\n          <label i18n id=\"userVideoQuotaLabel\" for=\"userVideoQuota\">Default video quota per user</label>\n\n          <my-select-custom-value\n            labelId=\"userVideoQuotaLabel\"\n            inputId=\"userVideoQuota\"\n            [items]=\"getVideoQuotaOptions()\"\n            formControlName=\"videoQuota\"\n            i18n-inputSuffix inputSuffix=\"bytes\" inputType=\"number\"\n            [clearable]=\"false\"\n          ></my-select-custom-value>\n\n          <my-user-real-quota-info class=\"mt-2 d-block small muted\" [videoQuota]=\"getUserVideoQuota()\"></my-user-real-quota-info>\n\n          <div *ngIf=\"formErrors().user.videoQuota\" class=\"form-error\" role=\"alert\">{{ formErrors().user.videoQuota }}</div>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n id=\"userVideoQuotaDaily\" for=\"userVideoQuotaDaily\">Default daily upload limit per user</label>\n\n          <my-select-custom-value\n            labelId=\"userVideoQuotaDailyLabel\"\n            inputId=\"userVideoQuotaDaily\"\n            [items]=\"getVideoQuotaDailyOptions()\"\n            formControlName=\"videoQuotaDaily\"\n            i18n-inputSuffix inputSuffix=\"bytes\" inputType=\"number\"\n            [clearable]=\"false\"\n          ></my-select-custom-value>\n\n          <div *ngIf=\"formErrors().user.videoQuotaDaily\" class=\"form-error\" role=\"alert\">{{ formErrors().user.videoQuotaDaily }}</div>\n        </div>\n        <div class=\"form-group\">\n          <ng-container formGroupName=\"history\">\n            <ng-container formGroupName=\"videos\">\n              <my-peertube-checkbox\n                inputName=\"videosHistoryEnabled\" formControlName=\"enabled\"\n                i18n-labelText labelText=\"Automatically enable video history for new users\"\n              >\n              </my-peertube-checkbox>\n            </ng-container>\n          </ng-container>\n        </div>\n      </ng-container>\n\n    </div>\n  </div>\n\n  <div class=\"pt-two-cols mt-4\"> <!-- videos grid -->\n    <div class=\"title-col\">\n      <h2 i18n>VIDEOS</h2>\n    </div>\n\n    <div class=\"content-col\">\n\n      <ng-container formGroupName=\"import\">\n\n        <ng-container formGroupName=\"videos\">\n\n          <div class=\"form-group\">\n            <label i18n for=\"importConcurrency\">Import jobs concurrency</label>\n            <span i18n class=\"small muted ms-1\">allows to import multiple videos in parallel. ⚠️ Requires a PeerTube restart.</span>\n\n            <div class=\"number-with-unit\">\n              <input type=\"number\" id=\"importConcurrency\" formControlName=\"concurrency\" />\n              <span i18n>jobs in parallel</span>\n            </div>\n\n            <div *ngIf=\"formErrors().import.concurrency\" class=\"form-error\" role=\"alert\">{{ formErrors().import.concurrency }}</div>\n          </div>\n\n          <div class=\"form-group\" formGroupName=\"http\">\n            <my-peertube-checkbox\n              inputName=\"importVideosHttpEnabled\" formControlName=\"enabled\"\n              i18n-labelText labelText=\"Allow import with HTTP URL (e.g. YouTube)\"\n            >\n              <ng-container ngProjectAs=\"description\">\n                <span i18n>⚠️ If enabled, we recommend to use <a class=\"link-primary\" href=\"https://docs.joinpeertube.org/maintain/configuration#security\">a HTTP proxy</a> to prevent private URL access from your PeerTube server</span>\n              </ng-container>\n            </my-peertube-checkbox>\n          </div>\n\n          <div class=\"form-group\" formGroupName=\"torrent\">\n            <my-peertube-checkbox\n              inputName=\"importVideosTorrentEnabled\" formControlName=\"enabled\"\n              i18n-labelText labelText=\"Allow import with a torrent file or a magnet URI\"\n            >\n            <ng-container ngProjectAs=\"description\">\n              <span i18n>⚠️ We don't recommend to enable this feature if you don't trust your users</span>\n            </ng-container>\n          </my-peertube-checkbox>\n          </div>\n\n        </ng-container>\n\n        <ng-container formGroupName=\"videoChannelSynchronization\">\n          <div class=\"form-group\">\n            <my-peertube-checkbox\n              inputName=\"importSynchronizationEnabled\" formControlName=\"enabled\"\n              i18n-labelText labelText=\"Allow channel synchronization with channel of other platforms like YouTube\"\n            >\n            <ng-container ngProjectAs=\"description\">\n              <span i18n [hidden]=\"isImportVideosHttpEnabled()\">\n                ⛔ You need to allow  import with HTTP URL to be able to activate this feature.\n              </span>\n            </ng-container>\n            </my-peertube-checkbox>\n          </div>\n\n          <div class=\"form-group\">\n            <label i18n for=\"videoChannelSynchronizationMaxPerUser\">Max channel synchronization per user</label>\n\n            <div class=\"number-with-unit\">\n              <input\n                type=\"number\" min=\"1\" id=\"videoChannelSynchronizationMaxPerUser\" class=\"form-control\"\n                formControlName=\"maxPerUser\" [ngClass]=\"{ 'input-error': formErrors()['import']['videoChannelSynchronization']['maxPerUser'] }\"\n              >\n              <span i18n>{form().value['import']['videoChannelSynchronization']['maxPerUser'], plural, =1 {sync} other {syncs}}</span>\n            </div>\n\n            <div *ngIf=\"formErrors().import.videoChannelSynchronization.maxPerUser\" class=\"form-error\" role=\"alert\">{{ formErrors().import.videoChannelSynchronization.maxPerUser }}</div>\n          </div>\n        </ng-container>\n\n      </ng-container>\n\n      <ng-container formGroupName=\"autoBlacklist\">\n        <ng-container formGroupName=\"videos\">\n          <ng-container formGroupName=\"ofUsers\">\n\n            <div class=\"form-group\">\n              <my-peertube-checkbox\n                inputName=\"autoBlacklistVideosOfUsersEnabled\" formControlName=\"enabled\"\n                i18n-labelText labelText=\"Block new videos automatically\"\n              >\n              <ng-container ngProjectAs=\"description\">\n                <span i18n>Unless a user is marked as trusted, their videos will stay private until a moderator reviews them.</span>\n              </ng-container>\n            </my-peertube-checkbox>\n            </div>\n\n          </ng-container>\n        </ng-container>\n      </ng-container>\n\n      <ng-container formGroupName=\"videoFile\">\n        <ng-container formGroupName=\"update\">\n          <div class=\"form-group\">\n            <my-peertube-checkbox\n              inputName=\"videoFileUpdateEnabled\" formControlName=\"enabled\"\n              i18n-labelText labelText=\"Allow users to upload a new version of their video\"\n            >\n            </my-peertube-checkbox>\n          </div>\n        </ng-container>\n      </ng-container>\n\n      <ng-container formGroupName=\"storyboards\">\n        <div class=\"form-group\">\n          <my-peertube-checkbox\n            inputName=\"storyboardsEnabled\" formControlName=\"enabled\"\n            i18n-labelText labelText=\"Enable video storyboards\"\n          >\n            <ng-container ngProjectAs=\"description\">\n              <span i18n>Generate storyboards of local videos using ffmpeg so users can see the video preview in the player while scrubbing the video</span>\n            </ng-container>\n          </my-peertube-checkbox>\n        </div>\n      </ng-container>\n\n      <ng-container formGroupName=\"videoTranscription\">\n        <div class=\"form-group\">\n          <my-peertube-checkbox\n            inputName=\"videoTranscriptionEnabled\" formControlName=\"enabled\"\n            i18n-labelText labelText=\"Enable video transcription\"\n          >\n            <ng-container ngProjectAs=\"description\">\n              <span i18n><a href=\"https://docs.joinpeertube.org/admin/configuration#automatic-transcription\" target=\"_blank\">Automatically create subtitles</a> for uploaded/imported VOD videos</span>\n            </ng-container>\n\n            <ng-container ngProjectAs=\"extra\">\n              <div class=\"form-group\" formGroupName=\"remoteRunners\" [ngClass]=\"getTranscriptionRunnerDisabledClass()\">\n                <my-peertube-checkbox\n                  inputName=\"videoTranscriptionRemoteRunnersEnabled\" formControlName=\"enabled\"\n                  i18n-labelText labelText=\"Enable remote runners for transcription\"\n                >\n                  <ng-container ngProjectAs=\"description\">\n                    <span i18n>\n                      Use <a routerLink=\"/admin/settings/system/runners/runners-list\">remote runners</a> to process transcription tasks.\n                      Remote runners has to register on your instance first.\n                    </span>\n                  </ng-container>\n                </my-peertube-checkbox>\n              </div>\n            </ng-container>\n          </my-peertube-checkbox>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n\n  <div class=\"pt-two-cols mt-4\"> <!-- video channels grid -->\n    <div class=\"title-col\">\n      <h2 i18n>VIDEO CHANNELS</h2>\n    </div>\n\n    <div class=\"content-col\">\n      <div class=\"form-group\" formGroupName=\"videoChannels\">\n        <label i18n for=\"videoChannelsMaxPerUser\">Max video channels per user</label>\n\n        <div class=\"number-with-unit\">\n          <input\n            type=\"number\" min=\"1\" id=\"videoChannelsMaxPerUser\" class=\"form-control\"\n            formControlName=\"maxPerUser\" [ngClass]=\"{ 'input-error': formErrors()['videoChannels.maxPerUser'] }\"\n          >\n          <span i18n>{form().value['videoChannels']['maxPerUser'], plural, =1 {channel} other {channels}}</span>\n        </div>\n\n        <div *ngIf=\"formErrors().videoChannels.maxPerUser\" class=\"form-error\" role=\"alert\">{{ formErrors().videoChannels.maxPerUser }}</div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"pt-two-cols mt-4\"> <!-- search grid -->\n    <div class=\"title-col\">\n      <h2 i18n>SEARCH</h2>\n    </div>\n\n    <div class=\"content-col\">\n\n      <ng-container formGroupName=\"search\">\n        <ng-container formGroupName=\"remoteUri\">\n\n          <div class=\"form-group\">\n            <my-peertube-checkbox\n              inputName=\"searchRemoteUriUsers\" formControlName=\"users\"\n              i18n-labelText labelText=\"Allow users to do remote URI/handle search\"\n            >\n              <ng-container ngProjectAs=\"description\">\n                <span i18n>Allow <strong>your users</strong> to look up remote videos/actors that may not be federated with your instance</span>\n              </ng-container>\n            </my-peertube-checkbox>\n          </div>\n\n          <div class=\"form-group\">\n            <my-peertube-checkbox\n              inputName=\"searchRemoteUriAnonymous\" formControlName=\"anonymous\"\n              i18n-labelText labelText=\"Allow anonymous to do remote URI/handle search\"\n            >\n              <ng-container ngProjectAs=\"description\">\n                <span i18n>Allow <strong>anonymous users</strong> to look up remote videos/actors that may not be federated with your instance</span>\n              </ng-container>\n            </my-peertube-checkbox>\n          </div>\n\n        </ng-container>\n\n        <ng-container formGroupName=\"searchIndex\">\n          <div class=\"form-group\">\n            <my-peertube-checkbox\n              inputName=\"searchIndexEnabled\" formControlName=\"enabled\"\n              i18n-labelText labelText=\"Enable global search\"\n            >\n              <ng-container ngProjectAs=\"description\">\n                <div i18n>⚠️ This functionality depends heavily on the moderation of instances followed by the search index you select.</div>\n              </ng-container>\n\n              <ng-container ngProjectAs=\"extra\">\n                <div [ngClass]=\"getDisabledSearchIndexClass()\">\n                  <label i18n for=\"searchIndexUrl\">Search index URL</label>\n\n                  <div i18n class=\"label-small-info\">\n                    Use your <a class=\"link-primary\" target=\"_blank\" href=\"https://framagit.org/framasoft/peertube/search-index\">your own search index</a> or choose the official one, <a class=\"link-primary\" target=\"_blank\" href=\"https://sepiasearch.org\">https://sepiasearch.org</a>, that is not moderated.\n                  </div>\n\n                  <input\n                    type=\"text\"  id=\"searchIndexUrl\" class=\"form-control\"\n                    formControlName=\"url\" [ngClass]=\"{ 'input-error': formErrors()['search.searchIndex.url'] }\"\n                  >\n\n                  <div *ngIf=\"formErrors().search.searchIndex.url\" class=\"form-error\" role=\"alert\">{{ formErrors().search.searchIndex.url }}</div>\n                </div>\n\n                <div class=\"mt-3\">\n                  <my-peertube-checkbox [ngClass]=\"getDisabledSearchIndexClass()\"\n                    inputName=\"searchIndexDisableLocalSearch\" formControlName=\"disableLocalSearch\"\n                    i18n-labelText labelText=\"Disable local search in search bar\"\n                  ></my-peertube-checkbox>\n                </div>\n\n                <div class=\"mt-3\">\n                  <my-peertube-checkbox [ngClass]=\"getDisabledSearchIndexClass()\"\n                    inputName=\"searchIndexIsDefaultSearch\" formControlName=\"isDefaultSearch\"\n                    i18n-labelText labelText=\"Search bar uses the global search index by default\"\n                  >\n                    <ng-container ngProjectAs=\"description\">\n                      <span i18n>Otherwise the local search stays used by default</span>\n                    </ng-container>\n                  </my-peertube-checkbox>\n                </div>\n\n              </ng-container>\n            </my-peertube-checkbox>\n          </div>\n\n        </ng-container>\n\n      </ng-container>\n\n    </div>\n  </div>\n\n  <div class=\"pt-two-cols mt-4\"> <!-- import/export grid -->\n    <div class=\"title-col\">\n      <h2 i18n>USER IMPORT/EXPORT</h2>\n    </div>\n\n    <div class=\"content-col\">\n\n      <ng-container formGroupName=\"import\">\n        <ng-container formGroupName=\"users\">\n          <div class=\"form-group\">\n            <my-peertube-checkbox\n              inputName=\"importUsersEnabled\" formControlName=\"enabled\"\n              i18n-labelText labelText=\"Allow your users to import a data archive\"\n            >\n              <ng-container ngProjectAs=\"description\">\n                <div i18n>Video quota is checked on import so the user doesn't upload a too big archive file</div>\n                <div i18n>Video quota (daily quota is not taken into account) is also checked for each video when PeerTube is processing the import</div>\n              </ng-container>\n            </my-peertube-checkbox>\n          </div>\n        </ng-container>\n      </ng-container>\n\n      <ng-container formGroupName=\"export\">\n\n        <ng-container formGroupName=\"users\">\n\n          <div class=\"form-group\">\n            <my-peertube-checkbox\n              inputName=\"exportUsersEnabled\" formControlName=\"enabled\"\n              i18n-labelText labelText=\"Allow your users to export their data\"\n            >\n              <ng-container ngProjectAs=\"description\">\n                <span i18n>Users can export their PeerTube data in a .zip for backup or re-import. Only one export at a time is allowed per user</span>\n              </ng-container>\n\n              <ng-container ngProjectAs=\"extra\">\n\n                <div class=\"form-group\" [ngClass]=\"getDisabledExportUsersClass()\">\n                  <label i18n id=\"exportUsersMaxUserVideoQuota\" for=\"exportUsersMaxUserVideoQuota\">Max user video quota allowed to generate the export</label>\n\n                  <span i18n class=\"ms-2 small muted\">If the user decides to include the video files in the archive</span>\n\n                  <my-select-custom-value\n                    labelId=\"exportUsersMaxUserVideoQuota\"\n                    inputId=\"exportUsersMaxUserVideoQuota\"\n                    [items]=\"exportMaxUserVideoQuotaOptions\"\n                    formControlName=\"maxUserVideoQuota\"\n                    i18n-inputSuffix inputSuffix=\"bytes\" inputType=\"number\"\n                    [clearable]=\"false\"\n                  ></my-select-custom-value>\n\n                  <div *ngIf=\"formErrors().export.users.maxUserVideoQuota\" class=\"form-error\" role=\"alert\">{{ formErrors().export.users.maxUserVideoQuota }}</div>\n                </div>\n\n                <div class=\"form-group\" [ngClass]=\"getDisabledExportUsersClass()\">\n                  <label i18n for=\"exportUsersExportExpiration\">User export expiration</label>\n\n                  <my-select-options inputId=\"exportUsersExportExpiration\" [items]=\"exportExpirationOptions\" formControlName=\"exportExpiration\"></my-select-options>\n\n                  <div i18n class=\"mt-1 small muted\">The archive file is deleted after this period.</div>\n\n                  <div *ngIf=\"formErrors().export.users.exportExpiration\" class=\"form-error\" role=\"alert\">{{ formErrors().export.users.exportExpiration }}</div>\n                </div>\n\n              </ng-container>\n            </my-peertube-checkbox>\n          </div>\n\n        </ng-container>\n      </ng-container>\n    </div>\n  </div>\n\n  <div class=\"pt-two-cols mt-4\"> <!-- federation grid -->\n    <div class=\"title-col\">\n      <h2 i18n>FEDERATION</h2>\n      <div i18n class=\"inner-form-description\">\n        Manage <a class=\"link-primary\" routerLink=\"/admin/settings/follows\">relations</a> with other instances.\n      </div>\n    </div>\n\n    <div class=\"content-col\">\n\n      <ng-container formGroupName=\"followers\">\n        <ng-container formGroupName=\"instance\">\n\n          <div class=\"form-group\">\n            <my-peertube-checkbox\n              inputName=\"followersInstanceEnabled\" formControlName=\"enabled\"\n              i18n-labelText labelText=\"Other instances can follow yours\"\n            ></my-peertube-checkbox>\n          </div>\n\n          <div class=\"form-group\">\n            <my-peertube-checkbox\n              inputName=\"followersInstanceManualApproval\" formControlName=\"manualApproval\"\n              i18n-labelText labelText=\"Manually approve new instance followers\"\n            ></my-peertube-checkbox>\n          </div>\n        </ng-container>\n      </ng-container>\n\n      <ng-container formGroupName=\"followings\">\n        <ng-container formGroupName=\"instance\">\n\n          <ng-container formGroupName=\"autoFollowBack\">\n            <div class=\"form-group\">\n              <my-peertube-checkbox\n                inputName=\"followingsInstanceAutoFollowBackEnabled\" formControlName=\"enabled\"\n                i18n-labelText labelText=\"Automatically follow back instances\"\n              >\n                <ng-container ngProjectAs=\"description\">\n                  <span i18n>⚠️ This functionality requires a lot of attention and extra moderation.</span>\n                </ng-container>\n              </my-peertube-checkbox>\n            </div>\n          </ng-container>\n\n          <ng-container formGroupName=\"autoFollowIndex\">\n            <div class=\"form-group\">\n              <my-peertube-checkbox\n                inputName=\"followingsInstanceAutoFollowIndexEnabled\" formControlName=\"enabled\"\n                i18n-labelText labelText=\"Automatically follow instances of a public index\"\n              >\n                <ng-container ngProjectAs=\"description\">\n                  <div i18n>⚠️ This functionality requires a lot of attention and extra moderation.</div>\n\n                  <span i18n>\n                    See <a class=\"link-primary\" href=\"https://docs.joinpeertube.org/admin/following-instances#automatically-follow-other-instances\" rel=\"noopener noreferrer\" target=\"_blank\">the documentation</a> for more information about the expected URL\n                  </span>\n                </ng-container>\n\n                <ng-container ngProjectAs=\"extra\">\n                  <div [ngClass]=\"{ 'disabled-checkbox-extra': !isAutoFollowIndexEnabled() }\">\n                    <label i18n for=\"followingsInstanceAutoFollowIndexUrl\">Index URL</label>\n                    <input\n                      type=\"text\" id=\"followingsInstanceAutoFollowIndexUrl\" class=\"form-control\"\n                      formControlName=\"indexUrl\" [ngClass]=\"{ 'input-error': formErrors()['followings.instance.autoFollowIndex.indexUrl'] }\"\n                    >\n                    <div *ngIf=\"formErrors().followings.instance.autoFollowIndex.indexUrl\" class=\"form-error\" role=\"alert\">{{ formErrors().followings.instance.autoFollowIndex.indexUrl }}</div>\n                  </div>\n                </ng-container>\n              </my-peertube-checkbox>\n            </div>\n\n          </ng-container>\n        </ng-container>\n      </ng-container>\n\n    </div>\n  </div>\n\n  <div class=\"pt-two-cols mt-4\"> <!-- administrators grid -->\n    <div class=\"title-col\">\n      <h2 i18n>ADMINISTRATORS</h2>\n    </div>\n\n    <div class=\"content-col\">\n\n      <div class=\"form-group\" formGroupName=\"admin\">\n        <label i18n for=\"adminEmail\">Admin email</label>\n\n        <input\n          type=\"text\" id=\"adminEmail\" class=\"form-control\"\n          formControlName=\"email\" [ngClass]=\"{ 'input-error': formErrors()['admin.email'] }\"\n        >\n\n        <div *ngIf=\"formErrors().admin.email\" class=\"form-error\" role=\"alert\">{{ formErrors().admin.email }}</div>\n      </div>\n\n      <div class=\"form-group\" formGroupName=\"contactForm\">\n        <my-peertube-checkbox\n          inputName=\"enableContactForm\" formControlName=\"enabled\"\n          i18n-labelText labelText=\"Enable contact form\"\n        ></my-peertube-checkbox>\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"pt-two-cols mt-4\"> <!-- Twitter grid -->\n    <div class=\"title-col\">\n      <h2 i18n>TWITTER/X</h2>\n\n      <div i18n class=\"inner-form-description\">\n        Extra configuration required by Twitter/X. All other social media (Facebook, Mastodon, etc.) are supported out of the box.\n      </div>\n    </div>\n\n    <div class=\"content-col\">\n\n      <ng-container formGroupName=\"services\">\n        <ng-container formGroupName=\"twitter\">\n\n          <div class=\"form-group\">\n            <label for=\"servicesTwitterUsername\" i18n>Your Twitter/X username</label>\n\n            <div class=\"label-small-info\">\n              <p i18n class=\"mb-0\">Indicates the Twitter/X account for the website or platform where the content was published.</p>\n\n              <p i18n>This is just an extra information injected in PeerTube HTML that is required by Twitter/X. If you don't have a Twitter/X account, just leave the default value.</p>\n            </div>\n\n            <input\n              type=\"text\" id=\"servicesTwitterUsername\" class=\"form-control\"\n              formControlName=\"username\" [ngClass]=\"{ 'input-error': formErrors()['services.twitter.username'] }\"\n            >\n\n            <div *ngIf=\"formErrors().services.twitter.username\" class=\"form-error\" role=\"alert\">{{ formErrors().services.twitter.username }}</div>\n          </div>\n\n        </ng-container>\n      </ng-container>\n\n    </div>\n  </div>\n</ng-container>\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnChanges, OnInit, SimpleChanges, inject, input } from '@angular/core'\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { RouterLink } from '@angular/router'\nimport { ThemeService } from '@app/core'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport { HTMLServerConfig } from '@peertube/peertube-models'\nimport { pairwise } from 'rxjs/operators'\nimport { SelectOptionsItem } from 'src/types/select-options-item.model'\nimport { MarkdownTextareaComponent } from '../../../shared/shared-forms/markdown-textarea.component'\nimport { PeertubeCheckboxComponent } from '../../../shared/shared-forms/peertube-checkbox.component'\nimport { SelectCustomValueComponent } from '../../../shared/shared-forms/select/select-custom-value.component'\nimport { SelectOptionsComponent } from '../../../shared/shared-forms/select/select-options.component'\nimport { HelpComponent } from '../../../shared/shared-main/buttons/help.component'\nimport { UserRealQuotaInfoComponent } from '../../shared/user-real-quota-info.component'\nimport { ConfigService } from '../shared/config.service'\n\n@Component({\n  selector: 'my-edit-basic-configuration',\n  templateUrl: './edit-basic-configuration.component.html',\n  styleUrls: [ './edit-custom-config.component.scss' ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    RouterLink,\n    SelectCustomValueComponent,\n    NgIf,\n    PeertubeCheckboxComponent,\n    HelpComponent,\n    MarkdownTextareaComponent,\n    NgClass,\n    UserRealQuotaInfoComponent,\n    SelectOptionsComponent,\n    AlertComponent\n  ]\n})\nexport class EditBasicConfigurationComponent implements OnInit, OnChanges {\n  private configService = inject(ConfigService)\n  private themeService = inject(ThemeService)\n\n  readonly form = input<FormGroup>(undefined)\n  readonly formErrors = input<any>(undefined)\n\n  readonly serverConfig = input<HTMLServerConfig>(undefined)\n\n  signupAlertMessage: string\n  defaultLandingPageOptions: SelectOptionsItem[] = []\n  availableThemes: SelectOptionsItem[]\n\n  exportExpirationOptions: SelectOptionsItem[] = []\n  exportMaxUserVideoQuotaOptions: SelectOptionsItem[] = []\n\n  ngOnInit () {\n    this.buildLandingPageOptions()\n    this.checkSignupField()\n    this.checkImportSyncField()\n\n    this.availableThemes = [\n      this.themeService.getDefaultThemeItem(),\n\n      ...this.themeService.buildAvailableThemes()\n    ]\n\n    this.exportExpirationOptions = [\n      { id: 1000 * 3600 * 24, label: $localize`1 day` },\n      { id: 1000 * 3600 * 24 * 2, label: $localize`2 days` },\n      { id: 1000 * 3600 * 24 * 7, label: $localize`7 days` },\n      { id: 1000 * 3600 * 24 * 30, label: $localize`30 days` }\n    ]\n\n    this.exportMaxUserVideoQuotaOptions = this.configService.videoQuotaOptions.filter(o => (o.id as number) >= 1)\n  }\n\n  ngOnChanges (changes: SimpleChanges) {\n    if (changes['serverConfig']) {\n      this.buildLandingPageOptions()\n    }\n  }\n\n  countExternalAuth () {\n    return this.serverConfig().plugin.registeredExternalAuths.length\n  }\n\n  getVideoQuotaOptions () {\n    return this.configService.videoQuotaOptions\n  }\n\n  getVideoQuotaDailyOptions () {\n    return this.configService.videoQuotaDailyOptions\n  }\n\n  doesTrendingVideosAlgorithmsEnabledInclude (algorithm: string) {\n    const enabled = this.form().value['trending']['videos']['algorithms']['enabled']\n    if (!Array.isArray(enabled)) return false\n\n    return !!enabled.find((e: string) => e === algorithm)\n  }\n\n  getUserVideoQuota () {\n    return this.form().value['user']['videoQuota']\n  }\n\n  isExportUsersEnabled () {\n    return this.form().value['export']['users']['enabled'] === true\n  }\n\n  getDisabledExportUsersClass () {\n    return { 'disabled-checkbox-extra': !this.isExportUsersEnabled() }\n  }\n\n  isSignupEnabled () {\n    return this.form().value['signup']['enabled'] === true\n  }\n\n  getDisabledSignupClass () {\n    return { 'disabled-checkbox-extra': !this.isSignupEnabled() }\n  }\n\n  isImportVideosHttpEnabled (): boolean {\n    return this.form().value['import']['videos']['http']['enabled'] === true\n  }\n\n  importSynchronizationChecked () {\n    return this.isImportVideosHttpEnabled() && this.form().value['import']['videoChannelSynchronization']['enabled']\n  }\n\n  hasUnlimitedSignup () {\n    return this.form().value['signup']['limit'] === -1\n  }\n\n  isSearchIndexEnabled () {\n    return this.form().value['search']['searchIndex']['enabled'] === true\n  }\n\n  getDisabledSearchIndexClass () {\n    return { 'disabled-checkbox-extra': !this.isSearchIndexEnabled() }\n  }\n\n  // ---------------------------------------------------------------------------\n\n  isTranscriptionEnabled () {\n    return this.form().value['videoTranscription']['enabled'] === true\n  }\n\n  getTranscriptionRunnerDisabledClass () {\n    return { 'disabled-checkbox-extra': !this.isTranscriptionEnabled() }\n  }\n\n  // ---------------------------------------------------------------------------\n\n  isAutoFollowIndexEnabled () {\n    return this.form().value['followings']['instance']['autoFollowIndex']['enabled'] === true\n  }\n\n  buildLandingPageOptions () {\n    let links: { label: string, path: string }[] = []\n\n    if (this.serverConfig().homepage.enabled) {\n      links.push({ label: $localize`Home`, path: '/home' })\n    }\n\n    links = links.concat([\n      { label: $localize`Discover`, path: '/videos/overview' },\n      { label: $localize`Browse all videos`, path: '/videos/browse' },\n      { label: $localize`Browse local videos`, path: '/videos/browse?scope=local' }\n    ])\n\n    this.defaultLandingPageOptions = links.map(o => ({\n      id: o.path,\n      label: o.label,\n      description: o.path\n    }))\n  }\n\n  private checkImportSyncField () {\n    const importSyncControl = this.form().get('import.videoChannelSynchronization.enabled')\n    const importVideosHttpControl = this.form().get('import.videos.http.enabled')\n\n    importVideosHttpControl.valueChanges\n      .subscribe(httpImportEnabled => {\n        importSyncControl.setValue(httpImportEnabled && importSyncControl.value)\n        if (httpImportEnabled) {\n          importSyncControl.enable()\n        } else {\n          importSyncControl.disable()\n        }\n      })\n  }\n\n  private checkSignupField () {\n    const signupControl = this.form().get('signup.enabled')\n\n    signupControl.valueChanges\n      .pipe(pairwise())\n      .subscribe(([ oldValue, newValue ]) => {\n        if (oldValue === false && newValue === true) {\n          this.signupAlertMessage =\n            // eslint-disable-next-line max-len\n            $localize`You enabled signup: we automatically enabled the \"Block new videos automatically\" checkbox of the \"Videos\" section just below.`\n\n          this.form().patchValue({\n            autoBlacklist: {\n              videos: {\n                ofUsers: {\n                  enabled: true\n                }\n              }\n            }\n          })\n        }\n      })\n\n    signupControl.updateValueAndValidity()\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { FormGroup } from '@angular/forms'\nimport { formatICU } from '@app/helpers'\n\nexport type ResolutionOption = {\n  id: string\n  label: string\n  description?: string\n}\n\n@Injectable()\nexport class EditConfigurationService {\n\n  getTranscodingResolutions () {\n    return [\n      {\n        id: '0p',\n        label: $localize`Audio-only`,\n        // eslint-disable-next-line max-len\n        description: $localize`\"Split audio and video\" must be enabled for the PeerTube player to propose an \"Audio only\" resolution to users`\n      },\n      {\n        id: '144p',\n        label: $localize`144p`\n      },\n      {\n        id: '240p',\n        label: $localize`240p`\n      },\n      {\n        id: '360p',\n        label: $localize`360p`\n      },\n      {\n        id: '480p',\n        label: $localize`480p`\n      },\n      {\n        id: '720p',\n        label: $localize`720p`\n      },\n      {\n        id: '1080p',\n        label: $localize`1080p`\n      },\n      {\n        id: '1440p',\n        label: $localize`1440p`\n      },\n      {\n        id: '2160p',\n        label: $localize`2160p`\n      }\n    ]\n  }\n\n  isTranscodingEnabled (form: FormGroup) {\n    return form.value['transcoding']['enabled'] === true\n  }\n\n  isHLSEnabled (form: FormGroup) {\n    return form.value['transcoding']['hls']['enabled'] === true\n  }\n\n  isRemoteRunnerVODEnabled (form: FormGroup) {\n    return form.value['transcoding']['remoteRunners']['enabled'] === true\n  }\n\n  isRemoteRunnerLiveEnabled (form: FormGroup) {\n    return form.value['live']['transcoding']['remoteRunners']['enabled'] === true\n  }\n\n  isStudioEnabled (form: FormGroup) {\n    return form.value['videoStudio']['enabled'] === true\n  }\n\n  isLiveEnabled (form: FormGroup) {\n    return form.value['live']['enabled'] === true\n  }\n\n  isLiveTranscodingEnabled (form: FormGroup) {\n    return form.value['live']['transcoding']['enabled'] === true\n  }\n\n  getTotalTranscodingThreads (form: FormGroup) {\n    const transcodingEnabled = form.value['transcoding']['enabled']\n    const transcodingThreads = form.value['transcoding']['threads']\n    const liveTranscodingEnabled = form.value['live']['transcoding']['enabled']\n    const liveTranscodingThreads = form.value['live']['transcoding']['threads']\n\n    // checks whether all enabled method are on fixed values and not on auto (= 0)\n    let noneOnAuto = !transcodingEnabled || +transcodingThreads > 0\n    noneOnAuto &&= !liveTranscodingEnabled || +liveTranscodingThreads > 0\n\n    // count total of fixed value, repalcing auto by a single thread (knowing it will display \"at least\")\n    let value = 0\n    if (transcodingEnabled) value += +transcodingThreads || 1\n    if (liveTranscodingEnabled) value += +liveTranscodingThreads || 1\n\n    return {\n      value,\n      atMost: noneOnAuto, // auto switches everything to a least estimation since ffmpeg will take as many threads as possible\n      unit: formatICU($localize`{value, plural, =1 {thread} other {threads}}`, { value })\n    }\n  }\n}\n","import { Validators } from '@angular/forms'\nimport { BuildFormValidator } from './form-validator.model'\n\nexport const INSTANCE_NAME_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required ],\n  MESSAGES: {\n    required: $localize`Platform name is required.`\n  }\n}\n\nexport const INSTANCE_SHORT_DESCRIPTION_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.maxLength(250) ],\n  MESSAGES: {\n    maxlength: $localize`Short description must not be longer than 250 characters.`\n  }\n}\n\nexport const SERVICES_TWITTER_USERNAME_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required ],\n  MESSAGES: {\n    required: $localize`Twitter username is required.`\n  }\n}\n\nexport const CACHE_SIZE_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.min(1), Validators.pattern('[0-9]+') ],\n  MESSAGES: {\n    required: $localize`Cache size is required.`,\n    min: $localize`Cache size must be greater than 1.`,\n    pattern: $localize`Cache size must be a number.`\n  }\n}\n\nexport const SIGNUP_LIMIT_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.min(-1), Validators.pattern('-?[0-9]+') ],\n  MESSAGES: {\n    required: $localize`Signup limit is required.`,\n    min: $localize`Signup limit must be greater than 1. Use -1 to disable it.`,\n    pattern: $localize`Signup limit must be a number.`\n  }\n}\n\nexport const SIGNUP_MINIMUM_AGE_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.min(1), Validators.pattern('[0-9]+') ],\n  MESSAGES: {\n    required: $localize`Signup minimum age is required.`,\n    min: $localize`Signup minimum age must be greater than 1.`,\n    pattern: $localize`Signup minimum age must be a number.`\n  }\n}\n\nexport const ADMIN_EMAIL_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.email ],\n  MESSAGES: {\n    required: $localize`Admin email is required.`,\n    email: $localize`Admin email must be valid.`\n  }\n}\n\nexport const TRANSCODING_THREADS_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.min(0) ],\n  MESSAGES: {\n    required: $localize`Transcoding threads is required.`,\n    min: $localize`Transcoding threads must be greater or equal to 0.`\n  }\n}\n\nexport const TRANSCODING_MAX_FPS_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.min(1) ],\n  MESSAGES: {\n    required: $localize`Transcoding max FPS is required.`,\n    min: $localize`Transcoding max FPS must be greater or equal to 1.`\n  }\n}\n\nexport const MAX_LIVE_DURATION_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.min(-1) ],\n  MESSAGES: {\n    required: $localize`Max live duration is required.`,\n    min: $localize`Max live duration must be greater or equal to -1.`\n  }\n}\n\nexport const MAX_INSTANCE_LIVES_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.min(-1) ],\n  MESSAGES: {\n    required: $localize`Max lives is required.`,\n    min: $localize`Max lives must be greater or equal to -1.`\n  }\n}\n\nexport const MAX_USER_LIVES_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.min(-1) ],\n  MESSAGES: {\n    required: $localize`Max user lives is required.`,\n    min: $localize`Max user lives must be greater or equal to -1.`\n  }\n}\n\nexport const MAX_VIDEO_CHANNELS_PER_USER_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.min(1), Validators.pattern('[0-9]+') ],\n  MESSAGES: {\n    required: $localize`Max video channels per user is required.`,\n    min: $localize`Max video channels per user must be greater or equal to 1.`,\n    pattern: $localize`Max video channels per user must be a number.`\n  }\n}\n\nexport const MAX_SYNC_PER_USER: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.min(1), Validators.pattern('[0-9]+') ],\n  MESSAGES: {\n    required: $localize`Max synchronizations per user is required.`,\n    min: $localize`Max synchronizations per user must be greater or equal to 1.`,\n    pattern: $localize`Max synchronizations per user must be a number.`\n  }\n}\n\nexport const CONCURRENCY_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.min(1) ],\n  MESSAGES: {\n    required: $localize`Concurrency is required.`,\n    min: $localize`Concurrency must be greater or equal to 1.`\n  }\n}\n\nexport const EXPORT_EXPIRATION_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.min(1) ],\n  MESSAGES: {\n    required: $localize`Export expiration is required.`,\n    min: $localize`Export expiration must be greater or equal to 1.`\n  }\n}\nexport const EXPORT_MAX_USER_VIDEO_QUOTA_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.min(1) ],\n  MESSAGES: {\n    required: $localize`Max user video quota is required.`,\n    min: $localize`Max user video video quota must be greater or equal to 1.`\n  }\n}\n","<ng-container i18n>\n  <a class=\"text-decoration-underline\" href=\"https://en.wikipedia.org/wiki/Markdown#Example\" target=\"_blank\" rel=\"noreferrer noopener\">Markdown compatible</a> that also supports <a class=\"text-decoration-underline\" href=\"https://docs.joinpeertube.org/api/custom-client-markup\" target=\"_blank\" rel=\"noreferrer noopener\">custom PeerTube HTML tags</a>.\n</ng-container>\n\n@if (supportRelMe()) {\n  <br />\n\n  <ng-container i18n>\n    <a href=\"https://docs.joinmastodon.org/user/profile/#verification\" target=\"_blank\" rel=\"noopener noreferrer\">Mastodon verification link</a> is also supported.\n  </ng-container>\n}\n","import { booleanAttribute, Component, input } from '@angular/core'\n\n@Component({\n  selector: 'my-custom-markup-help',\n  templateUrl: './custom-markup-help.component.html',\n  standalone: true\n})\nexport class CustomMarkupHelpComponent {\n  readonly supportRelMe = input(false, { transform: booleanAttribute })\n}\n","<ng-container [formGroup]=\"form()\">\n\n  <ng-container formGroupName=\"instanceCustomHomepage\">\n\n    <div class=\"homepage pt-two-cols mt-5\"> <!-- homepage grid -->\n      <div class=\"title-col\">\n        <h2 i18n>INSTANCE HOMEPAGE</h2>\n      </div>\n\n      <div class=\"content-col\">\n\n        <div class=\"form-group\">\n          <label i18n for=\"instanceCustomHomepageContent\">Homepage</label>\n          <div class=\"label-small-info\">\n            <my-custom-markup-help></my-custom-markup-help>\n          </div>\n\n          <my-markdown-textarea\n            inputId=\"instanceCustomHomepageContent\" formControlName=\"content\"\n            [customMarkdownRenderer]=\"getCustomMarkdownRenderer()\" [debounceTime]=\"500\"\n            [formError]=\"formErrors()['instanceCustomHomepage.content']\"\n            dir=\"ltr\" monospace=\"true\"\n          ></my-markdown-textarea>\n\n          <div *ngIf=\"formErrors().instanceCustomHomepage.content\" class=\"form-error\" role=\"alert\">{{ formErrors().instanceCustomHomepage.content }}</div>\n        </div>\n      </div>\n    </div>\n\n  </ng-container>\n\n</ng-container>\n","import { Component, inject, input } from '@angular/core'\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { NgIf } from '@angular/common'\nimport { MarkdownTextareaComponent } from '../../../shared/shared-forms/markdown-textarea.component'\nimport { CustomMarkupHelpComponent } from '../../../shared/shared-custom-markup/custom-markup-help.component'\nimport { CustomMarkupService } from '@app/shared/shared-custom-markup/custom-markup.service'\n\n@Component({\n  selector: 'my-edit-homepage',\n  templateUrl: './edit-homepage.component.html',\n  styleUrls: [ './edit-custom-config.component.scss' ],\n  imports: [ FormsModule, ReactiveFormsModule, CustomMarkupHelpComponent, MarkdownTextareaComponent, NgIf ]\n})\nexport class EditHomepageComponent {\n  private customMarkup = inject(CustomMarkupService)\n\n  readonly form = input<FormGroup>(undefined)\n  readonly formErrors = input<any>(undefined)\n\n  customMarkdownRenderer: (text: string) => Promise<HTMLElement>\n\n  getCustomMarkdownRenderer () {\n    return this.customMarkup.getCustomMarkdownRenderer()\n  }\n}\n","<ng-container [formGroup]=\"form()\">\n\n  <ng-container formGroupName=\"instance\">\n\n    <div class=\"pt-two-cols mt-5\"> <!-- instance grid -->\n      <div class=\"title-col\">\n        <h2 i18n>INSTANCE</h2>\n      </div>\n\n      <div class=\"content-col\">\n        <div class=\"form-group\">\n          <label i18n for=\"avatarfile\">Square icon</label>\n\n          <div class=\"label-small-info\">\n            <p i18n class=\"mb-0\">Square icon can be used on your custom homepage.</p>\n          </div>\n\n          <my-actor-avatar-edit\n            class=\"d-block mb-4\"\n            actorType=\"account\" previewImage=\"false\" [username]=\"instanceName\" displayUsername=\"false\"\n            [avatars]=\"instanceAvatars\" (avatarChange)=\"onAvatarChange($event)\" (avatarDelete)=\"onAvatarDelete()\"\n          ></my-actor-avatar-edit>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"bannerfile\">Banner</label>\n\n          <div class=\"label-small-info\">\n            <p i18n class=\"mb-0\">Banner is displayed in the about, login and registration pages and be used on your custom homepage.</p>\n            <p i18n>It can also be displayed on external websites to promote your instance, such as <a target=\"_blank\"  href=\"https://joinpeertube.org/instances\">JoinPeerTube.org</a>.</p>\n          </div>\n\n          <my-actor-banner-edit\n            [previewImage]=\"false\" class=\"d-block mb-4\"\n            [bannerUrl]=\"instanceBannerUrl\" (bannerChange)=\"onBannerChange($event)\" (bannerDelete)=\"onBannerDelete()\"\n          ></my-actor-banner-edit>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"instanceName\">Name</label>\n\n          <input\n            type=\"text\" id=\"instanceName\" class=\"form-control\"\n            formControlName=\"name\" [ngClass]=\"{ 'input-error': formErrors().instance.name }\"\n          >\n\n          <div *ngIf=\"formErrors().instance.name\" class=\"form-error\" role=\"alert\">{{ formErrors().instance.name }}</div>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"instanceShortDescription\">Short description</label>\n\n          <textarea\n            id=\"instanceShortDescription\" formControlName=\"shortDescription\" class=\"form-control small\"\n            [ngClass]=\"{ 'input-error': formErrors()['instance.shortDescription'] }\"\n          ></textarea>\n\n          <div *ngIf=\"formErrors().instance.shortDescription\" class=\"form-error\" role=\"alert\">{{ formErrors().instance.shortDescription }}</div>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"instanceDescription\">Description</label>\n          <div class=\"label-small-info\">\n            <my-custom-markup-help supportRelMe=\"true\"></my-custom-markup-help>\n          </div>\n\n          <my-markdown-textarea\n            inputId=\"instanceDescription\" formControlName=\"description\"\n            [customMarkdownRenderer]=\"getCustomMarkdownRenderer()\" [debounceTime]=\"500\"\n            [formError]=\"formErrors()['instance.description']\"\n          ></my-markdown-textarea>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"instanceCategories\">Main instance categories</label>\n\n          <div>\n            <my-select-checkbox\n              inputId=\"instanceCategories\"\n              formControlName=\"categories\" [availableItems]=\"categoryItems()\"\n              [selectableGroup]=\"false\"\n              i18n-placeholder placeholder=\"Add a new category\"\n            >\n            </my-select-checkbox>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"instanceLanguages\">Main languages you/your moderators speak</label>\n\n          <div>\n            <my-select-checkbox\n              inputId=\"instanceLanguages\"\n              formControlName=\"languages\" [availableItems]=\"languageItems()\"\n              [selectableGroup]=\"false\"\n              i18n-placeholder placeholder=\"Add a new language\"\n            >\n            </my-select-checkbox>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"instanceServerCountry\">Server country</label>\n          <div i18n class=\"label-small-info\">PeerTube uses this setting to explain to your users which law they must follow in the \"About\" pages</div>\n\n          <input\n            type=\"text\" id=\"instanceServerCountry\" class=\"form-control\"\n            formControlName=\"serverCountry\" [ngClass]=\"{ 'input-error': formErrors().instance.serverCountry }\"\n          >\n\n          <div *ngIf=\"formErrors().instance.serverCountry\" class=\"form-error\" role=\"alert\">{{ formErrors().instance.serverCountry }}</div>\n        </div>\n\n      </div>\n    </div>\n\n    <div class=\"pt-two-cols mt-4\"> <!-- social grid -->\n      <div class=\"title-col\">\n        <h2 i18n>SOCIAL</h2>\n        <div i18n class=\"inner-form-description\">\n          Social links and support information displayed in the <em>About</em> pages\n        </div>\n      </div>\n\n      <div class=\"content-col\">\n\n        <div class=\"form-group\" formGroupName=\"support\">\n          <label i18n for=\"instanceSupportText\">Support text</label><my-help helpType=\"markdownText\"></my-help>\n          <div i18n class=\"label-small-info\">Explain to your users how to support your platform. If set, PeerTube will display a \"Support\" button in \"About\" instance pages</div>\n\n          <my-markdown-textarea\n            inputId=\"instanceSupportText\" formControlName=\"text\" markdownType=\"enhanced\"\n            [formError]=\"formErrors()['instance.support.text']\"\n          ></my-markdown-textarea>\n        </div>\n\n        <ng-container formGroupName=\"social\">\n          <div class=\"form-group\">\n            <label i18n for=\"instanceSocialExternalLink\">External link</label>\n            <div i18n class=\"label-small-info\">Link to your main website</div>\n\n            <input\n              type=\"text\" id=\"instanceSocialExternalLink\" class=\"form-control\"\n              formControlName=\"externalLink\" [ngClass]=\"{ 'input-error': formErrors().instance.social.externalLink }\"\n            >\n\n            <div *ngIf=\"formErrors().instance.social.externalLink\" class=\"form-error\" role=\"alert\">{{ formErrors().instance.social.externalLink }}</div>\n          </div>\n\n          <div class=\"form-group\">\n            <label i18n for=\"instanceSocialMastodonLink\">Mastodon link</label>\n\n            <input\n              type=\"text\" id=\"instanceSocialMastodonLink\" class=\"form-control\"\n              formControlName=\"mastodonLink\" [ngClass]=\"{ 'input-error': formErrors().instance.social.mastodonLink }\"\n            >\n\n            <div *ngIf=\"formErrors().instance.social.mastodonLink\" class=\"form-error\" role=\"alert\">{{ formErrors().instance.social.mastodonLink }}</div>\n          </div>\n\n          <div class=\"form-group\">\n            <label i18n for=\"instanceSocialBlueskyLink\">Bluesky link</label>\n\n            <input\n              type=\"text\" id=\"instanceSocialBlueskyLink\" class=\"form-control\"\n              formControlName=\"blueskyLink\" [ngClass]=\"{ 'input-error': formErrors().instance.social.blueskyLink }\"\n            >\n\n            <div *ngIf=\"formErrors().instance.social.blueskyLink\" class=\"form-error\" role=\"alert\">{{ formErrors().instance.social.blueskyLink }}</div>\n          </div>\n        </ng-container>\n\n      </div>\n\n    </div>\n\n    <div class=\"pt-two-cols mt-4\"> <!-- moderation grid -->\n      <div class=\"title-col\">\n        <h2 i18n>MODERATION & SENSITIVE CONTENT</h2>\n        <div i18n class=\"inner-form-description\">\n          Manage <a class=\"link-primary\" routerLink=\"/admin/overview/users\">users</a> to build a moderation team.\n        </div>\n      </div>\n\n      <div class=\"content-col\">\n        <div class=\"form-group\">\n          <my-peertube-checkbox inputName=\"instanceIsNSFW\" formControlName=\"isNSFW\">\n            <ng-template ptTemplate=\"label\">\n              <ng-container i18n>This instance is dedicated to sensitive content</ng-container>\n            </ng-template>\n\n            <ng-template ptTemplate=\"help\">\n              <ng-container i18n>\n                Enabling it will allow other administrators to know that you are mainly federating sensitive content.<br />\n                Moreover, the \"sensitive content\" checkbox on video upload will be automatically checked by default.\n              </ng-container>\n            </ng-template>\n          </my-peertube-checkbox>\n        </div>\n\n        <div class=\"form-group\">\n          <my-select-radio\n            [items]=\"nsfwItems\" inputId=\"instanceDefaultNSFWPolicy\" isGroup=\"true\"\n            i18n-label label=\"Policy on videos containing sensitive content\"\n            formControlName=\"defaultNSFWPolicy\"\n          ></my-select-radio>\n\n          <div *ngIf=\"formErrors().instance.defaultNSFWPolicy\" class=\"form-error\" role=\"alert\">{{ formErrors().instance.defaultNSFWPolicy }}</div>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"instanceTerms\">Terms</label><my-help helpType=\"markdownText\"></my-help>\n\n          <my-markdown-textarea\n            inputId=\"instanceTerms\" formControlName=\"terms\" markdownType=\"enhanced\"\n            [formError]=\"formErrors()['instance.terms']\"\n          ></my-markdown-textarea>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"instanceCodeOfConduct\">Code of conduct</label><my-help helpType=\"markdownText\"></my-help>\n\n          <my-markdown-textarea\n            inputId=\"instanceCodeOfConduct\" formControlName=\"codeOfConduct\" markdownType=\"enhanced\"\n            [formError]=\"formErrors()['instance.codeOfConduct']\"\n          ></my-markdown-textarea>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"instanceModerationInformation\">Moderation information</label><my-help helpType=\"markdownText\"></my-help>\n          <div i18n class=\"label-small-info\">Who moderates the instance? What is the policy regarding sensitive content? Political videos? etc</div>\n\n          <my-markdown-textarea\n            inputId=\"instanceModerationInformation\" formControlName=\"moderationInformation\" markdownType=\"enhanced\"\n            [formError]=\"formErrors()['instance.moderationInformation']\"\n          ></my-markdown-textarea>\n        </div>\n\n      </div>\n    </div>\n\n    <div class=\"pt-two-cols mt-4\"> <!-- you and your instance grid -->\n      <div class=\"title-col\">\n        <h2 i18n>YOU AND YOUR INSTANCE</h2>\n      </div>\n\n      <div class=\"content-col\">\n\n        <div class=\"form-group\">\n          <label i18n for=\"instanceAdministrator\">Who is behind the instance?</label><my-help helpType=\"markdownText\"></my-help>\n          <div i18n class=\"label-small-info\">A single person? A non-profit? A company?</div>\n\n          <my-markdown-textarea\n            inputId=\"instanceAdministrator\" formControlName=\"administrator\" markdownType=\"enhanced\"\n            [formError]=\"formErrors()['instance.administrator']\"\n          ></my-markdown-textarea>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"instanceCreationReason\">Why did you create this instance?</label><my-help helpType=\"markdownText\"></my-help>\n          <div i18n class=\"label-small-info\">To share your personal videos? To open registrations and allow people to upload what they want?</div>\n\n          <my-markdown-textarea\n            inputId=\"instanceCreationReason\" formControlName=\"creationReason\" markdownType=\"enhanced\"\n            [formError]=\"formErrors()['instance.creationReason']\"\n          ></my-markdown-textarea>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"instanceMaintenanceLifetime\">How long do you plan to maintain this instance?</label><my-help helpType=\"markdownText\"></my-help>\n          <div i18n class=\"label-small-info\">It's important to know for users who want to register on your instance</div>\n\n          <my-markdown-textarea\n            inputId=\"instanceMaintenanceLifetime\" formControlName=\"maintenanceLifetime\" markdownType=\"enhanced\"\n            [formError]=\"formErrors()['instance.maintenanceLifetime']\"\n          ></my-markdown-textarea>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"instanceBusinessModel\">How will you finance the PeerTube server?</label><my-help helpType=\"markdownText\"></my-help>\n          <div i18n class=\"label-small-info\">With your own funds? With user donations? Advertising?</div>\n\n          <my-markdown-textarea\n            inputId=\"instanceBusinessModel\" formControlName=\"businessModel\" markdownType=\"enhanced\"\n            [formError]=\"formErrors()['instance.businessModel']\"\n          ></my-markdown-textarea>\n        </div>\n\n      </div>\n    </div>\n\n    <div class=\"pt-two-cols mt-4\"> <!-- other information grid -->\n      <div class=\"title-col\">\n        <h2 i18n>OTHER INFORMATION</h2>\n      </div>\n\n      <div class=\"content-col\">\n\n        <div class=\"form-group\">\n          <label i18n for=\"instanceHardwareInformation\">What server/hardware does the instance run on?</label>\n          <div i18n class=\"label-small-info\">i.e. 2vCore 2GB RAM, a direct the link to the server you rent, etc.</div>\n\n          <my-markdown-textarea\n            inputId=\"instanceHardwareInformation\" formControlName=\"hardwareInformation\" markdownType=\"enhanced\"\n            [formError]=\"formErrors()['instance.hardwareInformation']\"\n          ></my-markdown-textarea>\n        </div>\n\n      </div>\n    </div>\n\n  </ng-container>\n\n</ng-container>\n","import { CommonModule } from '@angular/common'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { Component, OnInit, inject, input } from '@angular/core'\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { RouterLink } from '@angular/router'\nimport { Notifier, ServerService } from '@app/core'\nimport { genericUploadErrorHandler } from '@app/helpers'\nimport { CustomMarkupService } from '@app/shared/shared-custom-markup/custom-markup.service'\nimport { SelectRadioComponent } from '@app/shared/shared-forms/select/select-radio.component'\nimport { InstanceService } from '@app/shared/shared-main/instance/instance.service'\nimport { maxBy } from '@peertube/peertube-core-utils'\nimport { ActorImage, HTMLServerConfig } from '@peertube/peertube-models'\nimport { SelectOptionsItem } from 'src/types/select-options-item.model'\nimport { ActorAvatarEditComponent } from '../../../shared/shared-actor-image-edit/actor-avatar-edit.component'\nimport { ActorBannerEditComponent } from '../../../shared/shared-actor-image-edit/actor-banner-edit.component'\nimport { CustomMarkupHelpComponent } from '../../../shared/shared-custom-markup/custom-markup-help.component'\nimport { MarkdownTextareaComponent } from '../../../shared/shared-forms/markdown-textarea.component'\nimport { PeertubeCheckboxComponent } from '../../../shared/shared-forms/peertube-checkbox.component'\nimport { SelectCheckboxComponent } from '../../../shared/shared-forms/select/select-checkbox.component'\nimport { HelpComponent } from '../../../shared/shared-main/buttons/help.component'\nimport { PeerTubeTemplateDirective } from '../../../shared/shared-main/common/peertube-template.directive'\n\n@Component({\n  selector: 'my-edit-instance-information',\n  templateUrl: './edit-instance-information.component.html',\n  styleUrls: [ './edit-custom-config.component.scss' ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    ActorAvatarEditComponent,\n    ActorBannerEditComponent,\n    SelectRadioComponent,\n    CommonModule,\n    CustomMarkupHelpComponent,\n    MarkdownTextareaComponent,\n    SelectCheckboxComponent,\n    RouterLink,\n    PeertubeCheckboxComponent,\n    PeerTubeTemplateDirective,\n    HelpComponent\n  ]\n})\nexport class EditInstanceInformationComponent implements OnInit {\n  private customMarkup = inject(CustomMarkupService)\n  private notifier = inject(Notifier)\n  private instanceService = inject(InstanceService)\n  private server = inject(ServerService)\n\n  readonly form = input<FormGroup>(undefined)\n  readonly formErrors = input<any>(undefined)\n\n  readonly languageItems = input<SelectOptionsItem[]>([])\n  readonly categoryItems = input<SelectOptionsItem[]>([])\n\n  instanceBannerUrl: string\n  instanceAvatars: ActorImage[] = []\n\n  nsfwItems: SelectOptionsItem[] = [\n    {\n      id: 'do_not_list',\n      label: $localize`Hide`\n    },\n    {\n      id: 'warn',\n      label: $localize`Warn`\n    },\n    {\n      id: 'blur',\n      label: $localize`Blur`\n    },\n    {\n      id: 'display',\n      label: $localize`Display`\n    }\n  ]\n\n  private serverConfig: HTMLServerConfig\n\n  get instanceName () {\n    return this.server.getHTMLConfig().instance.name\n  }\n\n  ngOnInit () {\n    this.serverConfig = this.server.getHTMLConfig()\n\n    this.updateActorImages()\n  }\n\n  getCustomMarkdownRenderer () {\n    return this.customMarkup.getCustomMarkdownRenderer()\n  }\n\n  onBannerChange (formData: FormData) {\n    this.instanceService.updateInstanceBanner(formData)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Banner changed.`)\n\n          this.resetActorImages()\n        },\n\n        error: (err: HttpErrorResponse) => genericUploadErrorHandler({ err, name: $localize`banner`, notifier: this.notifier })\n      })\n  }\n\n  onBannerDelete () {\n    this.instanceService.deleteInstanceBanner()\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Banner deleted.`)\n\n          this.resetActorImages()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  onAvatarChange (formData: FormData) {\n    this.instanceService.updateInstanceAvatar(formData)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Avatar changed.`)\n\n          this.resetActorImages()\n        },\n\n        error: (err: HttpErrorResponse) => genericUploadErrorHandler({ err, name: $localize`avatar`, notifier: this.notifier })\n      })\n  }\n\n  onAvatarDelete () {\n    this.instanceService.deleteInstanceAvatar()\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Avatar deleted.`)\n\n          this.resetActorImages()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  private updateActorImages () {\n    this.instanceBannerUrl = maxBy(this.serverConfig.instance.banners, 'width')?.path\n    this.instanceAvatars = this.serverConfig.instance.avatars\n  }\n\n  private resetActorImages () {\n    this.server.resetConfig()\n      .subscribe(config => {\n        this.serverConfig = config\n\n        this.updateActorImages()\n      })\n  }\n}\n","<ng-container [formGroup]=\"form()\">\n\n  <div class=\"pt-two-cols mt-5\">\n    <div class=\"title-col\">\n      <h2 i18n>LIVE</h2>\n\n      <div i18n class=\"inner-form-description\">\n        Enable users of your instance to stream live.\n      </div>\n    </div>\n\n    <div class=\"content-col\">\n\n      <ng-container formGroupName=\"live\">\n\n        <div class=\"form-group\">\n          <my-peertube-checkbox inputName=\"liveEnabled\" formControlName=\"enabled\">\n            <ng-template ptTemplate=\"label\">\n              <ng-container i18n>Allow live streaming</ng-container>\n            </ng-template>\n\n            <ng-container ngProjectAs=\"description\">\n              <div i18n>⚠️ Enabling live streaming requires trust in your users and extra moderation work</div>\n              <div i18n>If enabled, your server needs to accept incoming TCP traffic on port {{ getLiveRTMPPort() }}</div>\n            </ng-container>\n\n            <ng-container ngProjectAs=\"extra\">\n\n              <div class=\"form-group\" [ngClass]=\"getDisabledLiveClass()\">\n                <my-peertube-checkbox\n                  inputName=\"liveAllowReplay\" formControlName=\"allowReplay\"\n                  i18n-labelText labelText=\"Allow your users to automatically publish a replay of their live\"\n                >\n                </my-peertube-checkbox>\n              </div>\n\n              <div class=\"form-group\" formGroupName=\"latencySetting\" [ngClass]=\"getDisabledLiveClass()\">\n                <my-peertube-checkbox\n                  inputName=\"liveLatencySettingEnabled\" formControlName=\"enabled\"\n                  i18n-labelText labelText=\"Allow your users to change live latency\"\n                >\n                  <ng-container ngProjectAs=\"description\" i18n>\n                    Small latency disables P2P and high latency can increase P2P ratio\n                  </ng-container>\n                </my-peertube-checkbox>\n              </div>\n\n              <div class=\"form-group\" [ngClass]=\"getDisabledLiveClass()\">\n                <label i18n for=\"liveMaxInstanceLives\">Max simultaneous lives created on your instance</label>\n\n                <span i18n class=\"ms-2 small muted\">(-1 for \"unlimited\")</span>\n\n                <div class=\"number-with-unit\">\n                  <input type=\"number\" id=\"liveMaxInstanceLives\" formControlName=\"maxInstanceLives\" />\n                  <span i18n>{form().value['live']['maxInstanceLives'], plural, =1 {live} other {lives}}</span>\n                </div>\n\n                <div *ngIf=\"formErrors().live.maxInstanceLives\" class=\"form-error\" role=\"alert\">{{ formErrors().live.maxInstanceLives }}</div>\n              </div>\n\n              <div class=\"form-group\" [ngClass]=\"getDisabledLiveClass()\">\n                <label i18n for=\"liveMaxUserLives\">Max simultaneous lives created per user</label>\n                <span i18n class=\"ms-2 small muted\">(-1 for \"unlimited\")</span>\n\n                <div class=\"number-with-unit\">\n                  <input type=\"number\" id=\"liveMaxUserLives\" formControlName=\"maxUserLives\" />\n                  <span i18n>{form().value['live']['maxUserLives'], plural, =1 {live} other {lives}}</span>\n                </div>\n\n                <div *ngIf=\"formErrors().live.maxUserLives\" class=\"form-error\" role=\"alert\">{{ formErrors().live.maxUserLives }}</div>\n              </div>\n\n              <div class=\"form-group\" [ngClass]=\"getDisabledLiveClass()\">\n                <label i18n for=\"liveMaxDuration\">Max live duration</label>\n\n                <my-select-options inputId=\"liveMaxDuration\" [items]=\"liveMaxDurationOptions\" formControlName=\"maxDuration\"></my-select-options>\n\n                <div *ngIf=\"formErrors().live.maxDuration\" class=\"form-error\" role=\"alert\">{{ formErrors().live.maxDuration }}</div>\n              </div>\n\n            </ng-container>\n          </my-peertube-checkbox>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n\n  <div class=\"pt-two-cols\"> <!-- transcoding live streams grid -->\n    <div class=\"title-col\">\n      <h2 i18n>TRANSCODING</h2>\n      <div i18n class=\"inner-form-description\">\n        Same as VOD transcoding, transcoding live streams so that they are in a streamable form that any device can play. Requires a beefy CPU, and then some.\n      </div>\n    </div>\n\n    <div class=\"content-col\">\n\n      <ng-container formGroupName=\"live\">\n        <ng-container formGroupName=\"transcoding\">\n\n          <div class=\"form-group\" [ngClass]=\"getDisabledLiveClass()\">\n            <my-peertube-checkbox\n              inputName=\"liveTranscodingEnabled\" formControlName=\"enabled\"\n            >\n              <ng-template ptTemplate=\"label\">\n                <ng-container i18n>Transcoding enabled for live streams</ng-container>\n              </ng-template>\n            </my-peertube-checkbox>\n          </div>\n\n          <div class=\"callout callout-light pt-2 mt-2 pb-0\">\n            <h3 class=\"callout-title\" i18n>Output formats</h3>\n\n            <div [ngClass]=\"getDisabledLiveTranscodingClass()\">\n\n              <div class=\"form-group\" formGroupName=\"fps\">\n                <label i18n for=\"liveTranscodingFPSMax\">Max live FPS</label>\n\n                <span i18n class=\"ms-2 small muted\">Cap transcoded live FPS. Max resolution stream still keeps the original FPS.</span>\n\n                <div class=\"number-with-unit\">\n                  <input type=\"number\" name=\"liveTranscodingFPSMax\" formControlName=\"max\" />\n                  <span>FPS</span>\n                </div>\n\n                <div *ngIf=\"formErrors().live.transcoding.fps.max\" class=\"form-error\" role=\"alert\">{{ formErrors().live.transcoding.fps.max }}</div>\n              </div>\n\n              <div class=\"ms-2 mt-3\">\n                <h4 i18n>Live resolutions to generate</h4>\n\n                <div class=\"mt-3\">\n\n                  <ng-container formGroupName=\"resolutions\">\n                    <div class=\"form-group mb-2\" *ngFor=\"let resolution of liveResolutions\">\n                      <my-peertube-checkbox\n                        [inputName]=\"getResolutionKey(resolution.id)\" [formControlName]=\"resolution.id\"\n                        labelText=\"{{resolution.label}}\"\n                      >\n                        <ng-template *ngIf=\"resolution.description\" ptTemplate=\"help\">\n                          <div [innerHTML]=\"resolution.description\"></div>\n                        </ng-template>\n                      </my-peertube-checkbox>\n                    </div>\n                  </ng-container>\n\n                  <div class=\"form-group\">\n                    <my-peertube-checkbox\n                      inputName=\"liveTranscodingAlwaysTranscodeOriginalResolution\" formControlName=\"alwaysTranscodeOriginalResolution\"\n                      i18n-labelText labelText=\"Also transcode original resolution\"\n                    >\n                      <ng-container i18n ngProjectAs=\"description\">\n                        Even if it's above your maximum enabled resolution\n                      </ng-container>\n                    </my-peertube-checkbox>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group mt-4\" formGroupName=\"remoteRunners\" [ngClass]=\"getDisabledLiveTranscodingClass()\">\n            <my-peertube-checkbox\n              inputName=\"liveTranscodingRemoteRunnersEnabled\" formControlName=\"enabled\"\n              i18n-labelText labelText=\"Enable remote runners for lives\"\n            >\n              <ng-container ngProjectAs=\"description\">\n                <span i18n>\n                  Use <a routerLink=\"/admin/settings/system/runners/runners-list\">remote runners</a> to process live transcoding.\n                  Remote runners has to register on your instance first.\n                </span>\n              </ng-container>\n            </my-peertube-checkbox>\n          </div>\n\n          <div class=\"form-group\" [ngClass]=\"getDisabledLiveLocalTranscodingClass()\">\n            <label i18n id=\"liveTranscodingThreadsLabel\" for=\"liveTranscodingThreads\">Live transcoding threads</label>\n\n            <span class=\"small muted ms-1\">\n              <ng-container *ngIf=\"getTotalTranscodingThreads().atMost\" i18n>\n                will claim at most {{ getTotalTranscodingThreads().value }} {{ getTotalTranscodingThreads().unit }} with VOD transcoding\n              </ng-container>\n\n              <ng-container *ngIf=\"!getTotalTranscodingThreads().atMost\" i18n>\n                will claim at least {{ getTotalTranscodingThreads().value }} {{ getTotalTranscodingThreads().unit }} with VOD transcoding\n              </ng-container>\n            </span>\n\n            <my-select-custom-value\n              labelId=\"liveTranscodingThreadsLabel\"\n              inputId=\"liveTranscodingThreads\"\n              [items]=\"transcodingThreadOptions\"\n              formControlName=\"threads\"\n              [clearable]=\"false\"\n            ></my-select-custom-value>\n            <div *ngIf=\"formErrors().live.transcoding.threads\" class=\"form-error\" role=\"alert\">{{ formErrors().live.transcoding.threads }}</div>\n          </div>\n\n          <div class=\"form-group mt-4\" [ngClass]=\"getDisabledLiveLocalTranscodingClass()\">\n            <label i18n for=\"liveTranscodingProfile\">Live transcoding profile</label>\n            <span class=\"small muted ms-1\" i18n>new live transcoding profiles can be added by PeerTube plugins</span>\n\n            <my-select-options inputId=\"liveTranscodingProfile\" formControlName=\"profile\" [items]=\"transcodingProfiles\"></my-select-options>\n\n            <div *ngIf=\"formErrors().live.transcoding.profile\" class=\"form-error\" role=\"alert\">{{ formErrors().live.transcoding.profile }}</div>\n          </div>\n\n        </ng-container>\n      </ng-container>\n\n    </div>\n  </div>\n</ng-container>\n","import { SelectOptionsItem } from 'src/types/select-options-item.model'\nimport { Component, OnChanges, OnInit, SimpleChanges, inject, input } from '@angular/core'\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { HTMLServerConfig } from '@peertube/peertube-models'\nimport { ConfigService } from '../shared/config.service'\nimport { EditConfigurationService, ResolutionOption } from './edit-configuration.service'\nimport { SelectCustomValueComponent } from '../../../shared/shared-forms/select/select-custom-value.component'\nimport { RouterLink } from '@angular/router'\nimport { SelectOptionsComponent } from '../../../shared/shared-forms/select/select-options.component'\nimport { NgClass, NgIf, NgFor } from '@angular/common'\nimport { PeerTubeTemplateDirective } from '../../../shared/shared-main/common/peertube-template.directive'\nimport { PeertubeCheckboxComponent } from '../../../shared/shared-forms/peertube-checkbox.component'\n\n@Component({\n  selector: 'my-edit-live-configuration',\n  templateUrl: './edit-live-configuration.component.html',\n  styleUrls: [ './edit-custom-config.component.scss' ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    PeertubeCheckboxComponent,\n    PeerTubeTemplateDirective,\n    NgClass,\n    NgIf,\n    SelectOptionsComponent,\n    NgFor,\n    RouterLink,\n    SelectCustomValueComponent\n  ]\n})\nexport class EditLiveConfigurationComponent implements OnInit, OnChanges {\n  private configService = inject(ConfigService)\n  private editConfigurationService = inject(EditConfigurationService)\n\n  readonly form = input<FormGroup>(undefined)\n  readonly formErrors = input<any>(undefined)\n  readonly serverConfig = input<HTMLServerConfig>(undefined)\n\n  transcodingThreadOptions: SelectOptionsItem[] = []\n  transcodingProfiles: SelectOptionsItem[] = []\n\n  liveMaxDurationOptions: SelectOptionsItem[] = []\n  liveResolutions: ResolutionOption[] = []\n\n  ngOnInit () {\n    this.transcodingThreadOptions = this.configService.transcodingThreadOptions\n\n    this.liveMaxDurationOptions = [\n      { id: -1, label: $localize`No limit` },\n      { id: 1000 * 3600, label: $localize`1 hour` },\n      { id: 1000 * 3600 * 3, label: $localize`3 hours` },\n      { id: 1000 * 3600 * 5, label: $localize`5 hours` },\n      { id: 1000 * 3600 * 10, label: $localize`10 hours` }\n    ]\n\n    this.liveResolutions = this.editConfigurationService.getTranscodingResolutions()\n  }\n\n  ngOnChanges (changes: SimpleChanges) {\n    if (changes['serverConfig']) {\n      this.transcodingProfiles = this.buildAvailableTranscodingProfile()\n    }\n  }\n\n  buildAvailableTranscodingProfile () {\n    const profiles = this.serverConfig().live.transcoding.availableProfiles\n\n    return profiles.map(p => {\n      if (p === 'default') {\n        return { id: p, label: $localize`Default`, description: $localize`x264, targeting maximum device compatibility` }\n      }\n\n      return { id: p, label: p }\n    })\n  }\n\n  getResolutionKey (resolution: string) {\n    return 'live.transcoding.resolutions.' + resolution\n  }\n\n  getLiveRTMPPort () {\n    return this.serverConfig().live.rtmp.port\n  }\n\n  isLiveEnabled () {\n    return this.editConfigurationService.isLiveEnabled(this.form())\n  }\n\n  isRemoteRunnerLiveEnabled () {\n    return this.editConfigurationService.isRemoteRunnerLiveEnabled(this.form())\n  }\n\n  getDisabledLiveClass () {\n    return { 'disabled-checkbox-extra': !this.isLiveEnabled() }\n  }\n\n  getDisabledLiveTranscodingClass () {\n    return { 'disabled-checkbox-extra': !this.isLiveEnabled() || !this.isLiveTranscodingEnabled() }\n  }\n\n  getDisabledLiveLocalTranscodingClass () {\n    return { 'disabled-checkbox-extra': !this.isLiveEnabled() || !this.isLiveTranscodingEnabled() || this.isRemoteRunnerLiveEnabled() }\n  }\n\n  isLiveTranscodingEnabled () {\n    return this.editConfigurationService.isLiveTranscodingEnabled(this.form())\n  }\n\n  getTotalTranscodingThreads () {\n    return this.editConfigurationService.getTotalTranscodingThreads(this.form())\n  }\n}\n","<ng-container [formGroup]=\"form()\">\n\n  <div class=\"pt-two-cols mt-4\">\n    <div class=\"title-col\"></div>\n    <div class=\"content-col\">\n\n      <div class=\"callout callout-primary\">\n        <span i18n>\n          Estimating a server's capacity to transcode and stream videos isn't easy and we can't tune PeerTube automatically.\n        </span>\n\n        <br />\n\n        <span i18n>\n          However, you may want to read <a class=\"link-primary\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.joinpeertube.org/admin/configuration#vod-transcoding\">our guidelines</a> before tweaking the following values.\n        </span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"pt-two-cols mt-4\">\n    <div class=\"title-col\">\n      <h2 i18n>TRANSCODING</h2>\n\n      <div i18n class=\"inner-form-description\">\n        Process uploaded videos so that they are in a streamable form that any device can play. Though costly in\n        resources, this is a critical part of PeerTube, so tread carefully.\n      </div>\n    </div>\n\n    <div class=\"content-col\">\n\n      <ng-container formGroupName=\"transcoding\">\n\n        <div>\n          <my-peertube-checkbox inputName=\"transcodingEnabled\" formControlName=\"enabled\" [recommended]=\"true\">\n            <ng-template ptTemplate=\"label\">\n              <ng-container i18n>Transcoding enabled</ng-container>\n            </ng-template>\n\n            <ng-container ngProjectAs=\"extra\">\n\n              <div class=\"callout callout-light pt-2 pb-0\">\n                <h3 class=\"callout-title\" i18n>Input</h3>\n\n                <div class=\"form-group\" [ngClass]=\"getTranscodingDisabledClass()\">\n                  <my-peertube-checkbox\n                    inputName=\"transcodingAllowAdditionalExtensions\" formControlName=\"allowAdditionalExtensions\"\n                    i18n-labelText labelText=\"Allow additional extensions\"\n                  >\n                    <ng-container ngProjectAs=\"description\">\n                      <span i18n>Allows users to upload videos with additional extensions than .mp4, .ogv and .webm (for example: .avi, .mov, .mkv etc).</span>\n                    </ng-container>\n                  </my-peertube-checkbox>\n                </div>\n\n                <div class=\"form-group\" [ngClass]=\"getTranscodingDisabledClass()\">\n                  <my-peertube-checkbox\n                    inputName=\"transcodingAllowAudioFiles\" formControlName=\"allowAudioFiles\"\n                    i18n-labelText labelText=\"Allow audio files upload\"\n                  >\n                    <ng-container ngProjectAs=\"description\">\n                      <div i18n>Allows users to upload .mp3, .ogg, .wma, .flac, .aac, or .ac3 audio files.</div>\n                      <div i18n>The file will be merged in a still image video with the preview file on upload.</div>\n                    </ng-container>\n                  </my-peertube-checkbox>\n                </div>\n\n                <div class=\"form-group\" formGroupName=\"originalFile\" [ngClass]=\"getTranscodingDisabledClass()\">\n                  <my-peertube-checkbox\n                    inputName=\"transcodingOriginalFileKeep\" formControlName=\"keep\"\n                    i18n-labelText labelText=\"Keep a version of the input file\"\n                  >\n                    <ng-container ngProjectAs=\"description\">\n                      <div i18n>If enabled, the input file is not deleted after transcoding but moved in a dedicated folder or object storage</div>\n                    </ng-container>\n                  </my-peertube-checkbox>\n                </div>\n              </div>\n\n              <div class=\"callout callout-light pt-2 mt-2 pb-0\">\n                <h3 class=\"callout-title\" i18n>Output</h3>\n\n                <ng-container formGroupName=\"webVideos\">\n                  <div class=\"form-group\" [ngClass]=\"getTranscodingDisabledClass()\">\n                    <my-peertube-checkbox\n                      inputName=\"transcodingWebVideosEnabled\" formControlName=\"enabled\"\n                      i18n-labelText labelText=\"Web Videos enabled\"\n                    >\n                      <ng-template ptTemplate=\"help\">\n                        <ng-container>\n                          <p i18n>If you also enabled HLS support, it will multiply videos storage by 2</p>\n                        </ng-container>\n                      </ng-template>\n                    </my-peertube-checkbox>\n                  </div>\n                </ng-container>\n\n                <ng-container formGroupName=\"hls\">\n                  <div class=\"form-group\" [ngClass]=\"getTranscodingDisabledClass()\">\n                    <my-peertube-checkbox\n                      inputName=\"transcodingHlsEnabled\" formControlName=\"enabled\"\n                      i18n-labelText labelText=\"HLS with P2P support enabled\"\n                      [recommended]=\"true\"\n                    >\n                      <ng-template ptTemplate=\"help\">\n                        <ng-container i18n>\n                          <strong>Requires ffmpeg >= 4.1</strong>\n\n                          <p>Generate HLS playlists and fragmented MP4 files resulting in a better playback than with Web Videos:</p>\n                          <ul>\n                            <li>Resolution change is smoother</li>\n                            <li>Faster playback especially with long videos</li>\n                            <li>More stable playback (less bugs/infinite loading)</li>\n                          </ul>\n\n                          <p>If you also enabled Web Videos support, it will multiply videos storage by 2</p>\n                        </ng-container>\n                      </ng-template>\n\n                      <ng-container ngProjectAs=\"extra\">\n\n                        <div class=\"form-group\" [ngClass]=\"getHLSDisabledClass()\">\n                          <my-peertube-checkbox\n                            inputName=\"transcodingHlsSplitAudioAndVideo\" formControlName=\"splitAudioAndVideo\"\n                            i18n-labelText labelText=\"Split audio and video streams\"\n                          >\n                            <ng-container i18n ngProjectAs=\"description\">If enabled, remote PeerTube instances < 6.3.0 won't be able to play these videos</ng-container>\n\n                            <ng-template ptTemplate=\"help\">\n                              <ng-container i18n>Store the audio stream in a separate file from the video.</ng-container> <br />\n                              <ng-container i18n>This option adds the ability for the HLS player to propose the \"Audio only\" quality to users.</ng-container> <br />\n                              <ng-container i18n>It also saves disk space by not duplicating the audio stream in each resolution file</ng-container>\n                            </ng-template>\n                        </my-peertube-checkbox>\n                        </div>\n\n                      </ng-container>\n                    </my-peertube-checkbox>\n\n                  </div>\n                </ng-container>\n\n                <div class=\"form-group\" formGroupName=\"fps\" [ngClass]=\"getTranscodingDisabledClass()\">\n                  <label i18n for=\"transcodingFPSMax\">Max video FPS</label>\n\n                  <span i18n class=\"ms-2 small muted\">Cap transcoded video FPS. Max resolution file still keeps the original FPS.</span>\n\n                  <div class=\"number-with-unit\">\n                    <input type=\"number\" name=\"transcodingFPSMax\" formControlName=\"max\" />\n                    <span>FPS</span>\n                  </div>\n\n                  <div *ngIf=\"formErrors().transcoding.fps.max\" class=\"form-error\" role=\"alert\">{{ formErrors().transcoding.fps.max }}</div>\n                </div>\n\n                <div class=\"form-group\" [ngClass]=\"getTranscodingDisabledClass()\">\n                  <div class=\"mb-2 fw-bold\" i18n>Resolutions to generate</div>\n\n                  <div class=\"ms-2 d-flex flex-column\">\n                    <ng-container formGroupName=\"resolutions\">\n                      <div class=\"form-group mb-2\" *ngFor=\"let resolution of resolutions\">\n                        <my-peertube-checkbox\n                          [inputName]=\"getResolutionKey(resolution.id)\" [formControlName]=\"resolution.id\"\n                          labelText=\"{{ resolution.label }}\"\n                        >\n                          <ng-template *ngIf=\"resolution.description\" ptTemplate=\"help\">\n                            <div [innerHTML]=\"resolution.description\"></div>\n                          </ng-template>\n                        </my-peertube-checkbox>\n                      </div>\n                    </ng-container>\n\n                    <my-peertube-checkbox\n                      inputName=\"transcodingAlwaysTranscodeOriginalResolution\" formControlName=\"alwaysTranscodeOriginalResolution\"\n                      i18n-labelText labelText=\"Also transcode original resolution\"\n                    >\n                      <ng-container i18n ngProjectAs=\"description\">Even if it's above your maximum enabled resolution</ng-container>\n                    </my-peertube-checkbox>\n                  </div>\n                </div>\n              </div>\n\n            </ng-container>\n          </my-peertube-checkbox>\n        </div>\n\n        <div class=\"form-group mt-4\" formGroupName=\"remoteRunners\" [ngClass]=\"getTranscodingDisabledClass()\">\n          <my-peertube-checkbox\n            inputName=\"transcodingRemoteRunnersEnabled\" formControlName=\"enabled\"\n            i18n-labelText labelText=\"Enable remote runners for VOD\"\n          >\n            <ng-container ngProjectAs=\"description\">\n              <span i18n>\n                Use <a routerLink=\"/admin/settings/system/runners/runners-list\">remote runners</a> to process VOD transcoding.\n                Remote runners has to register on your instance first.\n              </span>\n            </ng-container>\n          </my-peertube-checkbox>\n        </div>\n\n        <div class=\"form-group mt-4\" [ngClass]=\"getLocalTranscodingDisabledClass()\">\n          <label i18n id=\"transcodingThreadsLabel\" for=\"transcodingThreads\">Transcoding threads</label>\n\n          <span class=\"small muted ms-1\">\n            <ng-container *ngIf=\"getTotalTranscodingThreads().atMost\" i18n>\n              will claim at most {{ getTotalTranscodingThreads().value }} {{ getTotalTranscodingThreads().unit }} with live transcoding\n            </ng-container>\n\n            <ng-container *ngIf=\"!getTotalTranscodingThreads().atMost\" i18n>\n              will claim at least {{ getTotalTranscodingThreads().value }} {{ getTotalTranscodingThreads().unit }} with live transcoding\n            </ng-container>\n          </span>\n\n          <my-select-custom-value\n            labelId=\"transcodingThreadsLabel\"\n            inputId=\"transcodingThreads\"\n            [items]=\"transcodingThreadOptions\"\n            formControlName=\"threads\"\n            [clearable]=\"false\"\n          ></my-select-custom-value>\n\n          <div *ngIf=\"formErrors().transcoding.threads\" class=\"form-error\" role=\"alert\">{{ formErrors().transcoding.threads }}</div>\n        </div>\n\n        <div class=\"form-group\" [ngClass]=\"getLocalTranscodingDisabledClass()\">\n          <label i18n for=\"transcodingConcurrency\">Transcoding jobs concurrency</label>\n          <span class=\"small muted ms-1\" i18n>allows to transcode multiple files in parallel. ⚠️ Requires a PeerTube restart</span>\n\n          <div class=\"number-with-unit\">\n            <input type=\"number\" id=\"transcodingConcurrency\" formControlName=\"concurrency\" />\n            <span i18n>jobs in parallel</span>\n          </div>\n\n          <div *ngIf=\"formErrors().transcoding.concurrency\" class=\"form-error\" role=\"alert\">{{ formErrors().transcoding.concurrency }}</div>\n        </div>\n\n        <div class=\"form-group\" [ngClass]=\"getLocalTranscodingDisabledClass()\">\n          <label i18n for=\"transcodingProfile\">Transcoding profile</label>\n          <span class=\"small muted ms-1\" i18n>new transcoding profiles can be added by PeerTube plugins</span>\n\n          <my-select-options inputId=\"transcodingProfile\" formControlName=\"profile\" [items]=\"transcodingProfiles\"></my-select-options>\n\n          <div *ngIf=\"formErrors().transcoding.profile\" class=\"form-error\" role=\"alert\">{{ formErrors().transcoding.profile }}</div>\n        </div>\n\n      </ng-container>\n\n    </div>\n  </div>\n\n  <div class=\"pt-two-cols mt-2\">\n    <div class=\"title-col\">\n      <h2 i18n>VIDEO STUDIO</h2>\n      <div i18n class=\"inner-form-description\">\n        Allows your users to edit their video (cut, add intro/outro, add a watermark etc)\n      </div>\n    </div>\n\n    <div class=\"content-col\">\n\n      <ng-container formGroupName=\"videoStudio\">\n        <div class=\"form-group\" [ngClass]=\"getTranscodingDisabledClass()\">\n          <my-peertube-checkbox\n            inputName=\"videoStudioEnabled\" formControlName=\"enabled\"\n            i18n-labelText labelText=\"Enable video studio\"\n          >\n            <ng-container ngProjectAs=\"description\" *ngIf=\"!isTranscodingEnabled()\">\n              <span i18n>⚠️ You need to enable transcoding first to enable video studio</span>\n            </ng-container>\n          </my-peertube-checkbox>\n        </div>\n\n        <div class=\"form-group\" formGroupName=\"remoteRunners\" [ngClass]=\"getStudioDisabledClass()\">\n          <my-peertube-checkbox\n            inputName=\"videoStudioRemoteRunnersEnabled\" formControlName=\"enabled\"\n            i18n-labelText labelText=\"Enable remote runners for studio\"\n          >\n            <ng-container ngProjectAs=\"description\">\n              <span i18n>\n                Use <a routerLink=\"/admin/settings/system/runners/runners-list\">remote runners</a> to process studio transcoding tasks.\n                Remote runners has to register on your instance first.\n              </span>\n            </ng-container>\n          </my-peertube-checkbox>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</ng-container>\n","import { NgClass, NgFor, NgIf } from '@angular/common'\nimport { Component, OnChanges, OnInit, SimpleChanges, inject, input } from '@angular/core'\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { RouterLink } from '@angular/router'\nimport { Notifier } from '@app/core'\nimport { HTMLServerConfig } from '@peertube/peertube-models'\nimport { SelectOptionsItem } from 'src/types/select-options-item.model'\nimport { PeertubeCheckboxComponent } from '../../../shared/shared-forms/peertube-checkbox.component'\nimport { SelectCustomValueComponent } from '../../../shared/shared-forms/select/select-custom-value.component'\nimport { SelectOptionsComponent } from '../../../shared/shared-forms/select/select-options.component'\nimport { PeerTubeTemplateDirective } from '../../../shared/shared-main/common/peertube-template.directive'\nimport { ConfigService } from '../shared/config.service'\nimport { EditConfigurationService, ResolutionOption } from './edit-configuration.service'\n\n@Component({\n  selector: 'my-edit-vod-transcoding',\n  templateUrl: './edit-vod-transcoding.component.html',\n  styleUrls: [ './edit-custom-config.component.scss' ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    PeertubeCheckboxComponent,\n    PeerTubeTemplateDirective,\n    NgClass,\n    NgFor,\n    NgIf,\n    RouterLink,\n    SelectCustomValueComponent,\n    SelectOptionsComponent\n  ]\n})\nexport class EditVODTranscodingComponent implements OnInit, OnChanges {\n  private configService = inject(ConfigService)\n  private editConfigurationService = inject(EditConfigurationService)\n  private notifier = inject(Notifier)\n\n  readonly form = input<FormGroup>(undefined)\n  readonly formErrors = input<any>(undefined)\n  readonly serverConfig = input<HTMLServerConfig>(undefined)\n\n  transcodingThreadOptions: SelectOptionsItem[] = []\n  transcodingProfiles: SelectOptionsItem[] = []\n  resolutions: ResolutionOption[] = []\n\n  additionalVideoExtensions = ''\n\n  ngOnInit () {\n    this.transcodingThreadOptions = this.configService.transcodingThreadOptions\n    this.resolutions = this.editConfigurationService.getTranscodingResolutions()\n\n    this.checkTranscodingFields()\n  }\n\n  ngOnChanges (changes: SimpleChanges) {\n    if (changes['serverConfig']) {\n      this.transcodingProfiles = this.buildAvailableTranscodingProfile()\n\n      this.additionalVideoExtensions = this.serverConfig().video.file.extensions.join(' ')\n    }\n  }\n\n  buildAvailableTranscodingProfile () {\n    const profiles = this.serverConfig().transcoding.availableProfiles\n\n    return profiles.map(p => {\n      if (p === 'default') {\n        return { id: p, label: $localize`Default`, description: $localize`x264, targeting maximum device compatibility` }\n      }\n\n      return { id: p, label: p }\n    })\n  }\n\n  getResolutionKey (resolution: string) {\n    return 'transcoding.resolutions.' + resolution\n  }\n\n  isRemoteRunnerVODEnabled () {\n    return this.editConfigurationService.isRemoteRunnerVODEnabled(this.form())\n  }\n\n  isTranscodingEnabled () {\n    return this.editConfigurationService.isTranscodingEnabled(this.form())\n  }\n\n  isHLSEnabled () {\n    return this.editConfigurationService.isHLSEnabled(this.form())\n  }\n\n  isStudioEnabled () {\n    return this.editConfigurationService.isStudioEnabled(this.form())\n  }\n\n  getTranscodingDisabledClass () {\n    return { 'disabled-checkbox-extra': !this.isTranscodingEnabled() }\n  }\n\n  getHLSDisabledClass () {\n    return { 'disabled-checkbox-extra': !this.isHLSEnabled() }\n  }\n\n  getLocalTranscodingDisabledClass () {\n    return { 'disabled-checkbox-extra': !this.isTranscodingEnabled() || this.isRemoteRunnerVODEnabled() }\n  }\n\n  getStudioDisabledClass () {\n    return { 'disabled-checkbox-extra': !this.isStudioEnabled() }\n  }\n\n  getTotalTranscodingThreads () {\n    return this.editConfigurationService.getTotalTranscodingThreads(this.form())\n  }\n\n  private checkTranscodingFields () {\n    const transcodingControl = this.form().get('transcoding.enabled')\n    const videoStudioControl = this.form().get('videoStudio.enabled')\n    const hlsControl = this.form().get('transcoding.hls.enabled')\n    const webVideosControl = this.form().get('transcoding.webVideos.enabled')\n\n    webVideosControl.valueChanges\n      .subscribe(newValue => {\n        if (newValue === false && hlsControl.value === false) {\n          hlsControl.setValue(true)\n\n          this.notifier.info(\n            $localize`Automatically enable HLS transcoding because at least 1 output format must be enabled when transcoding is enabled`,\n            '',\n            10000\n          )\n        }\n      })\n\n    hlsControl.valueChanges\n      .subscribe(newValue => {\n        if (newValue === false && webVideosControl.value === false) {\n          webVideosControl.setValue(true)\n\n          this.notifier.info(\n            // eslint-disable-next-line max-len\n            $localize`Automatically enable Web Videos transcoding because at least 1 output format must be enabled when transcoding is enabled`,\n            '',\n            10000\n          )\n        }\n      })\n\n    transcodingControl.valueChanges\n      .subscribe(newValue => {\n        if (newValue === false) {\n          videoStudioControl.setValue(false)\n        }\n      })\n\n    transcodingControl.updateValueAndValidity()\n    webVideosControl.updateValueAndValidity()\n    videoStudioControl.updateValueAndValidity()\n    hlsControl.updateValueAndValidity()\n  }\n}\n","<h1 class=\"visually-hidden\" i18n>Configuration</h1>\n\n<my-alert type=\"warning\" *ngIf=\"!isUpdateAllowed()\" i18n>\n  Updating instance configuration from the web interface is disabled by the system administrator.\n</my-alert>\n\n<form [formGroup]=\"form\">\n\n  <div ngbNav #nav=\"ngbNav\" [activeId]=\"activeNav\" (activeIdChange)=\"onNavChange($event)\" class=\"nav-tabs\">\n\n    <ng-container ngbNavItem=\"instance-homepage\">\n      <a ngbNavLink i18n>Homepage</a>\n\n      <ng-template ngbNavContent>\n        <my-edit-homepage [form]=\"form\" [formErrors]=\"formErrors\"></my-edit-homepage>\n      </ng-template>\n    </ng-container>\n\n    <ng-container ngbNavItem=\"instance-information\">\n      <a ngbNavLink i18n>Information</a>\n\n      <ng-template ngbNavContent>\n        <my-edit-instance-information [form]=\"form\" [formErrors]=\"formErrors\" [languageItems]=\"languageItems\" [categoryItems]=\"categoryItems\">\n        </my-edit-instance-information>\n      </ng-template>\n    </ng-container>\n\n    <ng-container ngbNavItem=\"basic-configuration\">\n      <a ngbNavLink i18n>Basic</a>\n\n      <ng-template ngbNavContent>\n        <my-edit-basic-configuration [form]=\"form\" [formErrors]=\"formErrors\" [serverConfig]=\"serverConfig\">\n        </my-edit-basic-configuration>\n      </ng-template>\n    </ng-container>\n\n    <ng-container ngbNavItem=\"transcoding\">\n      <a ngbNavLink i18n>VOD Transcoding</a>\n\n      <ng-template ngbNavContent>\n        <my-edit-vod-transcoding [form]=\"form\" [formErrors]=\"formErrors\" [serverConfig]=\"serverConfig\">\n        </my-edit-vod-transcoding>\n      </ng-template>\n    </ng-container>\n\n    <ng-container ngbNavItem=\"live\">\n      <a ngbNavLink i18n>Live streaming</a>\n\n      <ng-template ngbNavContent>\n        <my-edit-live-configuration [form]=\"form\" [formErrors]=\"formErrors\" [serverConfig]=\"serverConfig\">\n        </my-edit-live-configuration>\n      </ng-template>\n    </ng-container>\n\n    <ng-container ngbNavItem=\"advanced-configuration\">\n      <a ngbNavLink i18n>Advanced</a>\n\n      <ng-template ngbNavContent>\n        <my-edit-advanced-configuration [form]=\"form\" [formErrors]=\"formErrors\">\n        </my-edit-advanced-configuration>\n      </ng-template>\n    </ng-container>\n  </div>\n\n  <div [ngbNavOutlet]=\"nav\"></div>\n\n  <div class=\"row mt-4\"> <!-- submit placement block -->\n    <div class=\"col-md-7 col-xl-5\"></div>\n    <div class=\"col-md-5 col-xl-5\">\n\n      <div role=\"alert\" class=\"form-error submit-error\" i18n *ngIf=\"!form.valid && isUpdateAllowed()\">\n        There are errors in the form:\n\n        <ul>\n          <li *ngFor=\"let error of grabAllErrors()\">\n            {{ error }}\n          </li>\n        </ul>\n      </div>\n\n      <span role=\"alert\" class=\"form-error submit-error\" i18n *ngIf=\"!hasLiveAllowReplayConsistentOptions()\">\n        You cannot allow live replay if you don't enable transcoding.\n      </span>\n\n      <span i18n *ngIf=\"!isUpdateAllowed()\">\n        You cannot change the server configuration because it's managed externally.\n      </span>\n\n      <input\n        class=\"peertube-button primary-button\"\n        (click)=\"formValidated()\" type=\"submit\" i18n-value value=\"Update configuration\"\n        [disabled]=\"!form.valid || !hasConsistentOptions() || !isUpdateAllowed()\"\n      >\n    </div>\n  </div>\n</form>\n","import { NgFor, NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { ConfigService } from '@app/+admin/config/shared/config.service'\nimport { Notifier } from '@app/core'\nimport { ServerService } from '@app/core/server/server.service'\nimport { URL_VALIDATOR } from '@app/shared/form-validators/common-validators'\nimport {\n  ADMIN_EMAIL_VALIDATOR,\n  CACHE_SIZE_VALIDATOR,\n  CONCURRENCY_VALIDATOR,\n  EXPORT_EXPIRATION_VALIDATOR,\n  EXPORT_MAX_USER_VIDEO_QUOTA_VALIDATOR,\n  INSTANCE_NAME_VALIDATOR,\n  INSTANCE_SHORT_DESCRIPTION_VALIDATOR,\n  MAX_INSTANCE_LIVES_VALIDATOR,\n  MAX_LIVE_DURATION_VALIDATOR,\n  MAX_SYNC_PER_USER,\n  MAX_USER_LIVES_VALIDATOR,\n  MAX_VIDEO_CHANNELS_PER_USER_VALIDATOR,\n  SERVICES_TWITTER_USERNAME_VALIDATOR,\n  SIGNUP_LIMIT_VALIDATOR,\n  SIGNUP_MINIMUM_AGE_VALIDATOR,\n  TRANSCODING_MAX_FPS_VALIDATOR,\n  TRANSCODING_THREADS_VALIDATOR\n} from '@app/shared/form-validators/custom-config-validators'\nimport { USER_VIDEO_QUOTA_DAILY_VALIDATOR, USER_VIDEO_QUOTA_VALIDATOR } from '@app/shared/form-validators/user-validators'\nimport { FormReactive } from '@app/shared/shared-forms/form-reactive'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport { CustomPageService } from '@app/shared/shared-main/custom-page/custom-page.service'\nimport { NgbNav, NgbNavContent, NgbNavItem, NgbNavLink, NgbNavLinkBase, NgbNavOutlet } from '@ng-bootstrap/ng-bootstrap'\nimport { CustomConfig, CustomPage, HTMLServerConfig } from '@peertube/peertube-models'\nimport merge from 'lodash-es/merge'\nimport omit from 'lodash-es/omit'\nimport { forkJoin } from 'rxjs'\nimport { SelectOptionsItem } from 'src/types/select-options-item.model'\nimport { EditAdvancedConfigurationComponent } from './edit-advanced-configuration.component'\nimport { EditBasicConfigurationComponent } from './edit-basic-configuration.component'\nimport { EditConfigurationService } from './edit-configuration.service'\nimport { EditHomepageComponent } from './edit-homepage.component'\nimport { EditInstanceInformationComponent } from './edit-instance-information.component'\nimport { EditLiveConfigurationComponent } from './edit-live-configuration.component'\nimport { EditVODTranscodingComponent } from './edit-vod-transcoding.component'\n\ntype ComponentCustomConfig = CustomConfig & {\n  instanceCustomHomepage: CustomPage\n}\n\n@Component({\n  selector: 'my-edit-custom-config',\n  templateUrl: './edit-custom-config.component.html',\n  styleUrls: [ './edit-custom-config.component.scss' ],\n  imports: [\n    NgIf,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbNav,\n    NgbNavItem,\n    NgbNavLink,\n    NgbNavLinkBase,\n    NgbNavContent,\n    EditHomepageComponent,\n    EditInstanceInformationComponent,\n    EditBasicConfigurationComponent,\n    EditVODTranscodingComponent,\n    EditLiveConfigurationComponent,\n    EditAdvancedConfigurationComponent,\n    NgbNavOutlet,\n    NgFor,\n    AlertComponent\n  ]\n})\nexport class EditCustomConfigComponent extends FormReactive implements OnInit {\n  protected formReactiveService = inject(FormReactiveService)\n  private router = inject(Router)\n  private route = inject(ActivatedRoute)\n  private notifier = inject(Notifier)\n  private configService = inject(ConfigService)\n  private customPage = inject(CustomPageService)\n  private serverService = inject(ServerService)\n  private editConfigurationService = inject(EditConfigurationService)\n\n  activeNav: string\n\n  customConfig: ComponentCustomConfig\n  serverConfig: HTMLServerConfig\n\n  homepage: CustomPage\n\n  languageItems: SelectOptionsItem[] = []\n  categoryItems: SelectOptionsItem[] = []\n\n  ngOnInit () {\n    this.serverConfig = this.serverService.getHTMLConfig()\n\n    const formGroupData: { [key in keyof ComponentCustomConfig]: any } = {\n      instance: {\n        name: INSTANCE_NAME_VALIDATOR,\n        shortDescription: INSTANCE_SHORT_DESCRIPTION_VALIDATOR,\n        description: null,\n\n        isNSFW: false,\n        defaultNSFWPolicy: null,\n\n        terms: null,\n        codeOfConduct: null,\n\n        creationReason: null,\n        moderationInformation: null,\n        administrator: null,\n        maintenanceLifetime: null,\n        businessModel: null,\n\n        hardwareInformation: null,\n\n        categories: null,\n        languages: null,\n\n        serverCountry: null,\n        support: {\n          text: null\n        },\n        social: {\n          externalLink: URL_VALIDATOR,\n          mastodonLink: URL_VALIDATOR,\n          blueskyLink: URL_VALIDATOR\n        },\n\n        defaultClientRoute: null,\n\n        customizations: {\n          javascript: null,\n          css: null\n        }\n      },\n      theme: {\n        default: null\n      },\n      services: {\n        twitter: {\n          username: SERVICES_TWITTER_USERNAME_VALIDATOR\n        }\n      },\n      client: {\n        videos: {\n          miniature: {\n            preferAuthorDisplayName: null\n          }\n        },\n        menu: {\n          login: {\n            redirectOnSingleExternalAuth: null\n          }\n        }\n      },\n      cache: {\n        previews: {\n          size: CACHE_SIZE_VALIDATOR\n        },\n        captions: {\n          size: CACHE_SIZE_VALIDATOR\n        },\n        torrents: {\n          size: CACHE_SIZE_VALIDATOR\n        },\n        storyboards: {\n          size: CACHE_SIZE_VALIDATOR\n        }\n      },\n      signup: {\n        enabled: null,\n        limit: SIGNUP_LIMIT_VALIDATOR,\n        requiresApproval: null,\n        requiresEmailVerification: null,\n        minimumAge: SIGNUP_MINIMUM_AGE_VALIDATOR\n      },\n      import: {\n        videos: {\n          concurrency: CONCURRENCY_VALIDATOR,\n          http: {\n            enabled: null\n          },\n          torrent: {\n            enabled: null\n          }\n        },\n        videoChannelSynchronization: {\n          enabled: null,\n          maxPerUser: MAX_SYNC_PER_USER\n        },\n        users: {\n          enabled: null\n        }\n      },\n      export: {\n        users: {\n          enabled: null,\n          maxUserVideoQuota: EXPORT_MAX_USER_VIDEO_QUOTA_VALIDATOR,\n          exportExpiration: EXPORT_EXPIRATION_VALIDATOR\n        }\n      },\n      trending: {\n        videos: {\n          algorithms: {\n            enabled: null,\n            default: null\n          }\n        }\n      },\n      admin: {\n        email: ADMIN_EMAIL_VALIDATOR\n      },\n      contactForm: {\n        enabled: null\n      },\n      user: {\n        history: {\n          videos: {\n            enabled: null\n          }\n        },\n        videoQuota: USER_VIDEO_QUOTA_VALIDATOR,\n        videoQuotaDaily: USER_VIDEO_QUOTA_DAILY_VALIDATOR\n      },\n      videoChannels: {\n        maxPerUser: MAX_VIDEO_CHANNELS_PER_USER_VALIDATOR\n      },\n      transcoding: {\n        enabled: null,\n        threads: TRANSCODING_THREADS_VALIDATOR,\n        allowAdditionalExtensions: null,\n        allowAudioFiles: null,\n        profile: null,\n        concurrency: CONCURRENCY_VALIDATOR,\n        resolutions: {},\n        alwaysTranscodeOriginalResolution: null,\n        originalFile: {\n          keep: null\n        },\n        hls: {\n          enabled: null,\n          splitAudioAndVideo: null\n        },\n        webVideos: {\n          enabled: null\n        },\n        remoteRunners: {\n          enabled: null\n        },\n        fps: {\n          max: TRANSCODING_MAX_FPS_VALIDATOR\n        }\n      },\n      live: {\n        enabled: null,\n\n        maxDuration: MAX_LIVE_DURATION_VALIDATOR,\n        maxInstanceLives: MAX_INSTANCE_LIVES_VALIDATOR,\n        maxUserLives: MAX_USER_LIVES_VALIDATOR,\n        allowReplay: null,\n        latencySetting: {\n          enabled: null\n        },\n\n        transcoding: {\n          enabled: null,\n          threads: TRANSCODING_THREADS_VALIDATOR,\n          profile: null,\n          resolutions: {},\n          alwaysTranscodeOriginalResolution: null,\n          remoteRunners: {\n            enabled: null\n          },\n          fps: {\n            max: TRANSCODING_MAX_FPS_VALIDATOR\n          }\n        }\n      },\n      videoStudio: {\n        enabled: null,\n        remoteRunners: {\n          enabled: null\n        }\n      },\n      videoTranscription: {\n        enabled: null,\n        remoteRunners: {\n          enabled: null\n        }\n      },\n      videoFile: {\n        update: {\n          enabled: null\n        }\n      },\n      autoBlacklist: {\n        videos: {\n          ofUsers: {\n            enabled: null\n          }\n        }\n      },\n      followers: {\n        instance: {\n          enabled: null,\n          manualApproval: null\n        }\n      },\n      followings: {\n        instance: {\n          autoFollowBack: {\n            enabled: null\n          },\n          autoFollowIndex: {\n            enabled: null,\n            indexUrl: URL_VALIDATOR\n          }\n        }\n      },\n      broadcastMessage: {\n        enabled: null,\n        level: null,\n        dismissable: null,\n        message: null\n      },\n      search: {\n        remoteUri: {\n          users: null,\n          anonymous: null\n        },\n        searchIndex: {\n          enabled: null,\n          url: URL_VALIDATOR,\n          disableLocalSearch: null,\n          isDefaultSearch: null\n        }\n      },\n\n      instanceCustomHomepage: {\n        content: null\n      },\n\n      storyboards: {\n        enabled: null\n      }\n    }\n\n    const defaultValues = {\n      transcoding: {\n        resolutions: {} as { [id: string]: string }\n      },\n      live: {\n        transcoding: {\n          resolutions: {} as { [id: string]: string }\n        }\n      }\n    }\n\n    for (const resolution of this.editConfigurationService.getTranscodingResolutions()) {\n      defaultValues.transcoding.resolutions[resolution.id] = 'false'\n      formGroupData.transcoding.resolutions[resolution.id] = null\n\n      defaultValues.live.transcoding.resolutions[resolution.id] = 'false'\n      formGroupData.live.transcoding.resolutions[resolution.id] = null\n    }\n\n    this.buildForm(formGroupData)\n\n    if (this.route.snapshot.fragment) {\n      this.onNavChange(this.route.snapshot.fragment)\n    }\n\n    this.loadConfigAndUpdateForm()\n    this.loadCategoriesAndLanguages()\n\n    if (!this.isUpdateAllowed()) {\n      this.form.disable()\n    }\n  }\n\n  formValidated () {\n    this.forceCheck()\n    if (!this.form.valid) return\n\n    const value: ComponentCustomConfig = merge(this.customConfig, this.form.getRawValue())\n\n    forkJoin([\n      this.configService.updateCustomConfig(omit(value, 'instanceCustomHomepage')),\n      this.customPage.updateInstanceHomepage(value.instanceCustomHomepage.content)\n    ])\n      .subscribe({\n        next: ([ resConfig ]) => {\n          const instanceCustomHomepage = { content: value.instanceCustomHomepage.content }\n\n          this.customConfig = { ...resConfig, instanceCustomHomepage }\n\n          // Reload general configuration\n          this.serverService.resetConfig()\n            .subscribe(config => {\n              this.serverConfig = config\n            })\n\n          this.updateForm()\n\n          this.notifier.success($localize`Configuration updated.`)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  isUpdateAllowed () {\n    return this.serverConfig.webadmin.configuration.edition.allowed === true\n  }\n\n  hasConsistentOptions () {\n    if (this.hasLiveAllowReplayConsistentOptions()) return true\n\n    return false\n  }\n\n  hasLiveAllowReplayConsistentOptions () {\n    if (\n      this.editConfigurationService.isTranscodingEnabled(this.form) === false &&\n      this.editConfigurationService.isLiveEnabled(this.form) &&\n      this.form.value['live']['allowReplay'] === true\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  onNavChange (newActiveNav: string) {\n    this.activeNav = newActiveNav\n\n    this.router.navigate([], { fragment: this.activeNav })\n  }\n\n  grabAllErrors () {\n    return this.formReactiveService.grabAllErrors(this.formErrors)\n  }\n\n  private updateForm () {\n    this.form.patchValue(this.customConfig)\n  }\n\n  private loadConfigAndUpdateForm () {\n    forkJoin([\n      this.configService.getCustomConfig(),\n      this.customPage.getInstanceHomepage()\n    ]).subscribe({\n      next: ([ config, homepage ]) => {\n        this.customConfig = { ...config, instanceCustomHomepage: homepage }\n\n        this.updateForm()\n        this.markAllAsDirty()\n      },\n\n      error: err => this.notifier.error(err.message)\n    })\n  }\n\n  private loadCategoriesAndLanguages () {\n    forkJoin([\n      this.serverService.getVideoLanguages(),\n      this.serverService.getVideoCategories()\n    ]).subscribe({\n      next: ([ languages, categories ]) => {\n        this.languageItems = languages.map(l => ({ label: l.label, id: l.id }))\n        this.categoryItems = categories.map(l => ({ label: l.label, id: l.id }))\n      },\n\n      error: err => this.notifier.error(err.message)\n    })\n  }\n}\n","import { Routes } from '@angular/router'\nimport { EditCustomConfigComponent } from '@app/+admin/config/edit-custom-config'\nimport { UserRightGuard } from '@app/core'\nimport { UserRight } from '@peertube/peertube-models'\n\nexport const configRoutes: Routes = [\n  {\n    path: 'config',\n    canActivate: [ UserRightGuard ],\n    data: {\n      userRight: UserRight.MANAGE_CONFIGURATION\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'edit-custom',\n        pathMatch: 'full'\n      },\n      {\n        path: 'edit-custom',\n        component: EditCustomConfigComponent,\n        data: {\n          meta: {\n            title: $localize`Edit custom configuration`\n          }\n        }\n      }\n    ]\n  }\n]\n","import { Component } from '@angular/core'\nimport { AbuseListTableComponent } from '../../../shared/shared-abuse-list/abuse-list-table.component'\n\n@Component({\n  selector: 'my-abuse-list',\n  templateUrl: './abuse-list.component.html',\n  styleUrls: [],\n  imports: [ AbuseListTableComponent ]\n})\nexport class AbuseListComponent {\n}\n","<my-abuse-list-table viewType=\"admin\"></my-abuse-list-table>\n","<p-table\n  [value]=\"blockedAccounts\" [lazy]=\"true\" [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\"\n  [rows]=\"rowsPerPage\" [rowsPerPageOptions]=\"rowsPerPageOptions\" [first]=\"pagination.start\"\n  [sortField]=\"sort.field\" [sortOrder]=\"sort.order\" (onLazyLoad)=\"loadLazy($event)\"\n  [showCurrentPageReport]=\"true\" [currentPageReportTemplate]=\"getPaginationTemplate()\"\n>\n  <ng-template pTemplate=\"caption\">\n    <div class=\"caption\">\n      <div class=\"ms-auto\">\n        <my-advanced-input-filter (search)=\"onSearch($event)\"></my-advanced-input-filter>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th scope=\"col\" style=\"width: 150px;\" i18n>Action</th> <!-- column for action buttons -->\n      <th scope=\"col\" i18n>Account</th>\n      <th scope=\"col\" style=\"width: 150px;\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"createdAt\">Muted at <p-sortIcon field=\"createdAt\"></p-sortIcon></th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-accountBlock>\n    <tr>\n      <td class=\"action-cell\">\n        <button class=\"peertube-button secondary-button\" (click)=\"unblockAccount(accountBlock)\" i18n>Unmute</button>\n      </td>\n      <td>\n        <a [href]=\"accountBlock.blockedAccount.url\" i18n-title title=\"Open account in a new tab\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <div class=\"chip two-lines\">\n            <my-actor-avatar [actor]=\"accountBlock.blockedAccount\" actorType=\"account\" size=\"32\"></my-actor-avatar>\n            <div>\n              {{ accountBlock.blockedAccount.displayName }}\n              <span class=\"muted\">{{ accountBlock.blockedAccount.nameWithHost }}</span>\n            </div>\n          </div>\n        </a>\n      </td>\n\n      <td>{{ accountBlock.createdAt | ptDate: 'short' }}</td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\">\n    <tr>\n      <td myAutoColspan>\n        <div class=\"no-results\">\n          <ng-container *ngIf=\"search\" i18n>No account found matching current filters.</ng-container>\n          <ng-container *ngIf=\"!search\" i18n>No account found.</ng-container>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n","import { NgIf } from '@angular/common'\nimport { Component } from '@angular/core'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { GenericAccountBlocklistComponent } from '@app/shared/shared-moderation/account-blocklist.component'\nimport { BlocklistComponentType } from '@app/shared/shared-moderation/blocklist.service'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { SharedModule } from 'primeng/api'\nimport { TableModule } from 'primeng/table'\nimport { ActorAvatarComponent } from '../../../shared/shared-actor-image/actor-avatar.component'\nimport { AdvancedInputFilterComponent } from '../../../shared/shared-forms/advanced-input-filter.component'\nimport { AutoColspanDirective } from '../../../shared/shared-main/common/auto-colspan.directive'\n\n@Component({\n  selector: 'my-instance-account-blocklist',\n  styleUrls: [ '../../../shared/shared-moderation/moderation.scss' ],\n  templateUrl: '../../../shared/shared-moderation/account-blocklist.component.html',\n  imports: [\n    TableModule,\n    SharedModule,\n    AdvancedInputFilterComponent,\n    NgbTooltip,\n    ActorAvatarComponent,\n    AutoColspanDirective,\n    NgIf,\n    PTDatePipe\n  ]\n})\nexport class InstanceAccountBlocklistComponent extends GenericAccountBlocklistComponent {\n  mode = BlocklistComponentType.Instance\n\n  getIdentifier () {\n    return 'InstanceAccountBlocklistComponent'\n  }\n}\n","<p-table\n  [value]=\"blockedServers\" [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\"\n  [rows]=\"rowsPerPage\" [rowsPerPageOptions]=\"rowsPerPageOptions\" [first]=\"pagination.start\"\n  [sortField]=\"sort.field\" [sortOrder]=\"sort.order\"\n  [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\" [lazyLoadOnInit]=\"false\"\n  [showCurrentPageReport]=\"true\" [currentPageReportTemplate]=\"getPaginationTemplate()\"\n>\n  <ng-template pTemplate=\"caption\">\n    <div class=\"caption\">\n      <div class=\"left-buttons\">\n        <button class=\"peertube-create-button\" (click)=\"addServersToBlock()\" (key.enter)=\"addServersToBlock()\">\n          <my-global-icon iconName=\"add\" aria-hidden=\"true\"></my-global-icon>\n          <ng-container i18n>Mute domains</ng-container>\n        </button>\n      </div>\n\n      <div class=\"ms-auto\">\n        <my-advanced-input-filter (search)=\"onSearch($event)\"></my-advanced-input-filter>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th scope=\"col\" style=\"width: 150px;\" i18n>Action</th> <!-- column for action buttons -->\n      <th scope=\"col\" i18n>Instance</th>\n      <th scope=\"col\" style=\"width: 150px;\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"createdAt\">Muted at <p-sortIcon field=\"createdAt\"></p-sortIcon></th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-serverBlock>\n    <tr>\n      <td class=\"action-cell\">\n        <button class=\"peertube-button secondary-button\" (click)=\"unblockServer(serverBlock)\" i18n>Unmute</button>\n      </td>\n      <td>\n        <a [href]=\"'https://' + serverBlock.blockedServer.host\" i18n-title title=\"Open instance in a new tab\" target=\"_blank\" rel=\"noopener noreferrer\">\n          {{ serverBlock.blockedServer.host }}\n          <my-global-icon iconName=\"external-link\"></my-global-icon>\n        </a>\n      </td>\n      <td>{{ serverBlock.createdAt | ptDate: 'short' }}</td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\">\n    <tr>\n      <td myAutoColspan>\n        <div class=\"no-results\">\n          <ng-container *ngIf=\"search\" i18n>No server found matching current filters.</ng-container>\n          <ng-container *ngIf=\"!search\" i18n>No server found.</ng-container>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n\n<my-batch-domains-modal #batchDomainsModal i18n-action action=\"Mute domains\" (domains)=\"onDomainsToBlock($event)\"></my-batch-domains-modal>\n","import { NgIf } from '@angular/common'\nimport { Component } from '@angular/core'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { BlocklistComponentType } from '@app/shared/shared-moderation/blocklist.service'\nimport { GenericServerBlocklistComponent } from '@app/shared/shared-moderation/server-blocklist.component'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { SharedModule } from 'primeng/api'\nimport { TableModule } from 'primeng/table'\nimport { AdvancedInputFilterComponent } from '../../../shared/shared-forms/advanced-input-filter.component'\nimport { GlobalIconComponent } from '../../../shared/shared-icons/global-icon.component'\nimport { AutoColspanDirective } from '../../../shared/shared-main/common/auto-colspan.directive'\nimport { BatchDomainsModalComponent } from '../../../shared/shared-moderation/batch-domains-modal.component'\n\n@Component({\n  selector: 'my-instance-server-blocklist',\n  styleUrls: [ '../../../shared/shared-moderation/server-blocklist.component.scss' ],\n  templateUrl: '../../../shared/shared-moderation/server-blocklist.component.html',\n  imports: [\n    GlobalIconComponent,\n    TableModule,\n    SharedModule,\n    AdvancedInputFilterComponent,\n    NgbTooltip,\n    AutoColspanDirective,\n    NgIf,\n    BatchDomainsModalComponent,\n    PTDatePipe\n  ]\n})\nexport class InstanceServerBlocklistComponent extends GenericServerBlocklistComponent {\n  mode = BlocklistComponentType.Instance\n\n  getIdentifier () {\n    return 'InstanceServerBlocklistComponent'\n  }\n}\n","<p-table\n  [value]=\"blocklist\" [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\" [rows]=\"rowsPerPage\" [first]=\"pagination.start\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\" [sortField]=\"sort.field\" [sortOrder]=\"sort.order\" dataKey=\"id\"\n  [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\" [lazyLoadOnInit]=\"false\"\n  [showCurrentPageReport]=\"true\" [currentPageReportTemplate]=\"getPaginationTemplate()\"\n  [expandedRowKeys]=\"expandedRows\"\n>\n  <ng-template pTemplate=\"caption\">\n    <div class=\"caption\">\n      <div class=\"ms-auto\">\n        <my-advanced-input-filter [filters]=\"inputFilters\" (search)=\"onSearch($event)\"></my-advanced-input-filter>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th scope=\"col\" style=\"width: 40px;\">\n        <span i18n class=\"visually-hidden\">More information</span>\n      </th>\n      <th scope=\"col\" style=\"width: 150px;\">\n        <span i18n class=\"visually-hidden\">Actions</span>\n      </th>\n      <th scope=\"col\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"name\">Video <p-sortIcon field=\"name\"></p-sortIcon></th>\n      <th scope=\"col\" style=\"width: 100px;\" i18n>Sensitive</th>\n      <th scope=\"col\" style=\"width: 120px;\" i18n>Unfederated</th>\n      <th scope=\"col\" style=\"width: 150px;\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"createdAt\">Date <p-sortIcon field=\"createdAt\"></p-sortIcon></th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-videoBlock let-expanded=\"expanded\">\n    <tr>\n      <td *ngIf=\"!videoBlock.reason\">\n        <span i18n class=\"visually-hidden\">No more information is available for this row</span>\n      </td>\n\n      <td class=\"expand-cell\" *ngIf=\"videoBlock.reason\" >\n        <my-table-expander-icon [pRowToggler]=\"videoBlock\" [expanded]=\"expanded\"></my-table-expander-icon>\n      </td>\n\n      <td class=\"action-cell\">\n        <my-action-dropdown\n          [ngClass]=\"{ 'show': expanded }\" placement=\"bottom-right auto\" container=\"body\"\n          i18n-label label=\"Actions\" [actions]=\"videoBlocklistActions\" [entry]=\"videoBlock\" buttonSize=\"small\"\n        ></my-action-dropdown>\n      </td>\n\n      <td>\n        <my-video-cell [video]=\"videoBlock.video\" size=\"small\">\n          <div>\n            @if (videoBlock.type === 2) {\n              <span i18n-title title=\"The video was blocked due to automatic blocking of new videos\" class=\"pt-badge badge-info badge-small\" i18n>Auto block</span>\n            }\n          </div>\n        </my-video-cell>\n      </td>\n\n      <td>\n        <my-video-nsfw-badge [video]=\"videoBlock.video\" theme=\"red\"></my-video-nsfw-badge>\n      </td>\n\n      <td>\n        <span *ngIf=\"videoBlock.unfederated\" class=\"pt-badge badge-blue\" i18n>Unfederated</span>\n      </td>\n\n      <td>\n        {{ videoBlock.createdAt | ptDate: 'short' }}\n      </td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"rowexpansion\" let-videoBlock>\n    <tr>\n      <td class=\"expand-cell\" myAutoColspan>\n        <div class=\"d-flex moderation-expanded\">\n\n          <div class=\"left\">\n            <span class=\"moderation-expanded-label\" i18n>Block reason:</span>\n            <span class=\"moderation-expanded-text\" [innerHTML]=\"videoBlock.reasonHtml\"></span>\n          </div>\n\n          <div class=\"right\">\n            <my-embed [video]=\"videoBlock.video\"></my-embed>\n          </div>\n\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\">\n    <tr>\n      <td myAutoColspan>\n        <div class=\"no-results\">\n          <ng-container *ngIf=\"search\" i18n>No blocked video found matching current filters.</ng-container>\n          <ng-container *ngIf=\"!search\" i18n>No blocked video found.</ng-container>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { ConfirmService, MarkdownService, Notifier, RestPagination, RestTable, ServerService } from '@app/core'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { VideoService } from '@app/shared/shared-main/video/video.service'\nimport { VideoBlockService } from '@app/shared/shared-moderation/video-block.service'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { buildVideoEmbedLink, decorateVideoLink } from '@peertube/peertube-core-utils'\nimport { VideoBlacklist, VideoBlacklistType, VideoBlacklistType_Type } from '@peertube/peertube-models'\nimport { buildVideoOrPlaylistEmbed } from '@root-helpers/video'\nimport { SharedModule, SortMeta } from 'primeng/api'\nimport { TableModule } from 'primeng/table'\nimport { switchMap } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { AdvancedInputFilter, AdvancedInputFilterComponent } from '../../../shared/shared-forms/advanced-input-filter.component'\nimport { ActionDropdownComponent, DropdownAction } from '../../../shared/shared-main/buttons/action-dropdown.component'\nimport { AutoColspanDirective } from '../../../shared/shared-main/common/auto-colspan.directive'\nimport { EmbedComponent } from '../../../shared/shared-main/video/embed.component'\nimport { TableExpanderIconComponent } from '../../../shared/shared-tables/table-expander-icon.component'\nimport { VideoCellComponent } from '../../../shared/shared-tables/video-cell.component'\nimport { VideoNSFWBadgeComponent } from '../../../shared/shared-video/video-nsfw-badge.component'\n\n@Component({\n  selector: 'my-video-block-list',\n  templateUrl: './video-block-list.component.html',\n  styleUrls: [ '../../../shared/shared-moderation/moderation.scss' ],\n  imports: [\n    TableModule,\n    SharedModule,\n    AdvancedInputFilterComponent,\n    NgbTooltip,\n    NgIf,\n    TableExpanderIconComponent,\n    ActionDropdownComponent,\n    NgClass,\n    VideoCellComponent,\n    AutoColspanDirective,\n    EmbedComponent,\n    PTDatePipe,\n    VideoNSFWBadgeComponent\n  ]\n})\nexport class VideoBlockListComponent extends RestTable implements OnInit {\n  protected route = inject(ActivatedRoute)\n  protected router = inject(Router)\n  private notifier = inject(Notifier)\n  private serverService = inject(ServerService)\n  private confirmService = inject(ConfirmService)\n  private videoBlocklistService = inject(VideoBlockService)\n  private markdownRenderer = inject(MarkdownService)\n  private videoService = inject(VideoService)\n\n  blocklist: (VideoBlacklist & { reasonHtml?: string })[] = []\n  totalRecords = 0\n  sort: SortMeta = { field: 'createdAt', order: -1 }\n  pagination: RestPagination = { count: this.rowsPerPage, start: 0 }\n  blocklistTypeFilter: VideoBlacklistType_Type\n\n  videoBlocklistActions: DropdownAction<VideoBlacklist>[][] = []\n\n  inputFilters: AdvancedInputFilter[] = [\n    {\n      title: $localize`Advanced filters`,\n      children: [\n        {\n          value: 'type:auto',\n          label: $localize`Automatic blocks`\n        },\n        {\n          value: 'type:manual',\n          label: $localize`Manual blocks`\n        }\n      ]\n    }\n  ]\n\n  constructor () {\n    super()\n\n    this.videoBlocklistActions = [\n      [\n        {\n          label: $localize`Internal actions`,\n          isHeader: true,\n          isDisplayed: videoBlock => videoBlock.type === VideoBlacklistType.AUTO_BEFORE_PUBLISHED\n        },\n        {\n          label: $localize`Switch video block to manual`,\n          handler: videoBlock => {\n            this.videoBlocklistService.unblockVideo(videoBlock.video.id).pipe(\n              switchMap(_ => this.videoBlocklistService.blockVideo([ { videoId: videoBlock.video.id, unfederate: true } ]))\n            ).subscribe({\n              next: () => {\n                this.notifier.success($localize`Video ${videoBlock.video.name} switched to manual block.`)\n                this.reloadData()\n              },\n\n              error: err => this.notifier.error(err.message)\n            })\n          },\n          isDisplayed: videoBlock => videoBlock.type === VideoBlacklistType.AUTO_BEFORE_PUBLISHED\n        }\n      ],\n      [\n        {\n          label: $localize`Actions for the video`,\n          isHeader: true\n        },\n        {\n          label: $localize`Unblock`,\n          handler: videoBlock => this.unblockVideo(videoBlock)\n        },\n\n        {\n          label: $localize`Delete`,\n          handler: async videoBlock => {\n            const res = await this.confirmService.confirm(\n              $localize`Do you really want to delete this video?`,\n              $localize`Delete`\n            )\n            if (res === false) return\n\n            this.videoService.removeVideo(videoBlock.video.id)\n              .subscribe({\n                next: () => {\n                  this.notifier.success($localize`Video deleted.`)\n                  this.reloadData()\n                },\n\n                error: err => this.notifier.error(err.message)\n              })\n          }\n        }\n      ]\n    ]\n  }\n\n  ngOnInit () {\n    const serverConfig = this.serverService.getHTMLConfig()\n\n    // Don't filter if auto-blacklist is not enabled as this will be the only list\n    if (serverConfig.autoBlacklist.videos.ofUsers.enabled) {\n      this.blocklistTypeFilter = VideoBlacklistType.MANUAL\n    }\n\n    this.initialize()\n  }\n\n  getIdentifier () {\n    return 'VideoBlockListComponent'\n  }\n\n  toHtml (text: string) {\n    return this.markdownRenderer.textMarkdownToHTML({ markdown: text })\n  }\n\n  async unblockVideo (entry: VideoBlacklist) {\n    const confirmMessage = $localize`Do you really want to unblock this video? It will be available again in the videos list.`\n\n    const res = await this.confirmService.confirm(confirmMessage, $localize`Unblock`)\n    if (res === false) return\n\n    this.videoBlocklistService.unblockVideo(entry.video.id)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Video ${entry.video.name} unblocked.`)\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  getVideoEmbed (entry: VideoBlacklist) {\n    return buildVideoOrPlaylistEmbed({\n      embedUrl: decorateVideoLink({\n        url: buildVideoEmbedLink(entry.video, environment.originServerUrl),\n\n        title: false,\n        warningTitle: false\n      }),\n      aspectRatio: entry.video.aspectRatio,\n      embedTitle: entry.video.name\n    })\n  }\n\n  protected reloadDataInternal () {\n    this.videoBlocklistService.listBlocks({\n      pagination: this.pagination,\n      sort: this.sort,\n      search: this.search\n    }).subscribe({\n      next: async resultList => {\n        this.totalRecords = resultList.total\n\n        this.blocklist = resultList.data\n\n        for (const element of this.blocklist) {\n          Object.assign(element, {\n            reasonHtml: await this.toHtml(element.reason)\n          })\n        }\n      },\n\n      error: err => this.notifier.error(err.message)\n    })\n  }\n}\n","import { SortMeta } from 'primeng/api'\nimport { from } from 'rxjs'\nimport { catchError, concatMap, toArray } from 'rxjs/operators'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable, inject } from '@angular/core'\nimport { RestExtractor, RestPagination, RestService } from '@app/core'\nimport { arrayify } from '@peertube/peertube-core-utils'\nimport { ResultList, UserRegistration, UserRegistrationUpdateState } from '@peertube/peertube-models'\nimport { environment } from '../../../../environments/environment'\n\n@Injectable()\nexport class AdminRegistrationService {\n  private authHttp = inject(HttpClient)\n  private restExtractor = inject(RestExtractor)\n  private restService = inject(RestService)\n\n  private static BASE_REGISTRATION_URL = environment.apiUrl + '/api/v1/users/registrations'\n\n  listRegistrations (options: {\n    pagination: RestPagination\n    sort: SortMeta\n    search?: string\n  }) {\n    const { pagination, sort, search } = options\n\n    const url = AdminRegistrationService.BASE_REGISTRATION_URL\n\n    let params = new HttpParams()\n    params = this.restService.addRestGetParams(params, pagination, sort)\n\n    if (search) {\n      params = params.append('search', search)\n    }\n\n    return this.authHttp.get<ResultList<UserRegistration>>(url, { params })\n      .pipe(\n        catchError(res => this.restExtractor.handleError(res))\n      )\n  }\n\n  acceptRegistration (options: {\n    registration: UserRegistration\n    moderationResponse: string\n    preventEmailDelivery: boolean\n  }) {\n    const { registration, moderationResponse, preventEmailDelivery } = options\n\n    const url = AdminRegistrationService.BASE_REGISTRATION_URL + '/' + registration.id + '/accept'\n    const body: UserRegistrationUpdateState = { moderationResponse, preventEmailDelivery }\n\n    return this.authHttp.post(url, body)\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  rejectRegistration (options: {\n    registration: UserRegistration\n    moderationResponse: string\n    preventEmailDelivery: boolean\n  }) {\n    const { registration, moderationResponse, preventEmailDelivery } = options\n\n    const url = AdminRegistrationService.BASE_REGISTRATION_URL + '/' + registration.id + '/reject'\n    const body: UserRegistrationUpdateState = { moderationResponse, preventEmailDelivery }\n\n    return this.authHttp.post(url, body)\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  removeRegistrations (registrationsArg: UserRegistration | UserRegistration[]) {\n    const registrations = arrayify(registrationsArg)\n\n    return from(registrations)\n      .pipe(\n        concatMap(r => this.authHttp.delete(AdminRegistrationService.BASE_REGISTRATION_URL + '/' + r.id)),\n        toArray(),\n        catchError(err => this.restExtractor.handleError(err))\n      )\n  }\n}\n","import { Validators } from '@angular/forms'\nimport { BuildFormValidator } from '@app/shared/form-validators/form-validator.model'\n\nexport const REGISTRATION_MODERATION_RESPONSE_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.minLength(2), Validators.maxLength(3000) ],\n  MESSAGES: {\n    required: $localize`Moderation response is required.`,\n    minlength: $localize`Moderation response must be at least 2 characters long.`,\n    maxlength: $localize`Moderation response cannot be more than 3000 characters long.`\n  }\n}\n","<ng-template #modal>\n  <div class=\"modal-header\">\n    <h4 i18n class=\"modal-title\">\n      <ng-container *ngIf=\"isAccept()\">Accept {{ registration.username }} registration</ng-container>\n      <ng-container *ngIf=\"isReject()\">Reject {{ registration.username }} registration</ng-container>\n    </h4>\n\n    <button class=\"border-0 p-0\" title=\"Close this modal\" i18n-title (click)=\"hide()\">\n      <my-global-icon iconName=\"cross\"></my-global-icon>\n    </button>\n  </div>\n\n  <form novalidate [formGroup]=\"form\" (ngSubmit)=\"processRegistration()\">\n    <div class=\"modal-body mb-3\">\n\n      <my-alert i18n *ngIf=\"!registration.emailVerified\" type=\"warning\">\n        Registration email has not been verified. Email delivery has been disabled by default.\n      </my-alert>\n\n      <div class=\"description\">\n        <ng-container *ngIf=\"isAccept()\">\n          <p i18n>\n            <strong>Accepting</strong>&nbsp;<em>{{ registration.username }}</em> registration will create the account and channel.\n          </p>\n\n          <p *ngIf=\"isEmailEnabled()\" i18n [ngClass]=\"{ 'text-decoration-line-through': isPreventEmailDeliveryChecked() }\">\n            An email will be sent to <em>{{ registration.email }}</em> explaining its account has been created with the moderation response you'll write below.\n          </p>\n\n          <my-alert *ngIf=\"!isEmailEnabled()\" type=\"warning\" i18n>\n            Emails are not enabled on this instance so PeerTube won't be able to send an email to <em>{{ registration.email }}</em> explaining its account has been created.\n          </my-alert>\n        </ng-container>\n\n        <ng-container *ngIf=\"isReject()\">\n          <p i18n [ngClass]=\"{ 'text-decoration-line-through': isPreventEmailDeliveryChecked() }\">\n            An email will be sent to <em>{{ registration.email }}</em> explaining its registration request has been <strong>rejected</strong> with the moderation response you'll write below.\n          </p>\n\n          <my-alert *ngIf=\"!isEmailEnabled()\" type=\"warning\" i18n>\n            Emails are not enabled on this instance so PeerTube won't be able to send an email to <em>{{ registration.email }}</em> explaining its registration request has been rejected.\n          </my-alert>\n        </ng-container>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"moderationResponse\" i18n>Send a message to the user</label>\n\n        <textarea\n          formControlName=\"moderationResponse\" ngbAutofocus name=\"moderationResponse\" id=\"moderationResponse\"\n          [ngClass]=\"{ 'input-error': formErrors['moderationResponse'] }\" class=\"form-control\"\n        ></textarea>\n\n        <div *ngIf=\"formErrors.moderationResponse\" class=\"form-error\" role=\"alert\">\n          {{ formErrors.moderationResponse }}\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <my-peertube-checkbox\n          inputName=\"preventEmailDelivery\" formControlName=\"preventEmailDelivery\" [disabled]=\"!isEmailEnabled()\"\n          i18n-labelText labelText=\"Prevent email from being sent to the user\"\n        ></my-peertube-checkbox>\n      </div>\n    </div>\n\n    <div class=\"modal-footer inputs\">\n      <input\n        type=\"button\" role=\"button\" i18n-value value=\"Cancel\" class=\"peertube-button secondary-button\"\n        (click)=\"hide()\" (key.enter)=\"hide()\"\n      >\n\n      <input type=\"submit\" [value]=\"getSubmitValue()\" class=\"peertube-button primary-button\" [disabled]=\"!form.valid\">\n    </div>\n  </form>\n</ng-template>\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnInit, inject, output, viewChild } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { Notifier, ServerService } from '@app/core'\nimport { FormReactive } from '@app/shared/shared-forms/form-reactive'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref'\nimport { UserRegistration } from '@peertube/peertube-models'\nimport { PeertubeCheckboxComponent } from '../../../shared/shared-forms/peertube-checkbox.component'\nimport { GlobalIconComponent } from '../../../shared/shared-icons/global-icon.component'\nimport { AdminRegistrationService } from './admin-registration.service'\nimport { REGISTRATION_MODERATION_RESPONSE_VALIDATOR } from './process-registration-validators'\n\n@Component({\n  selector: 'my-process-registration-modal',\n  templateUrl: './process-registration-modal.component.html',\n  imports: [ NgIf, GlobalIconComponent, FormsModule, ReactiveFormsModule, NgClass, PeertubeCheckboxComponent, AlertComponent ]\n})\nexport class ProcessRegistrationModalComponent extends FormReactive implements OnInit {\n  protected formReactiveService = inject(FormReactiveService)\n  private server = inject(ServerService)\n  private modalService = inject(NgbModal)\n  private notifier = inject(Notifier)\n  private registrationService = inject(AdminRegistrationService)\n\n  readonly modal = viewChild<NgbModal>('modal')\n\n  readonly registrationProcessed = output()\n\n  registration: UserRegistration\n\n  private openedModal: NgbModalRef\n  private processMode: 'accept' | 'reject'\n\n  ngOnInit () {\n    this.buildForm({\n      moderationResponse: REGISTRATION_MODERATION_RESPONSE_VALIDATOR,\n      preventEmailDelivery: null\n    })\n  }\n\n  isAccept () {\n    return this.processMode === 'accept'\n  }\n\n  isReject () {\n    return this.processMode === 'reject'\n  }\n\n  openModal (registration: UserRegistration, mode: 'accept' | 'reject') {\n    this.processMode = mode\n    this.registration = registration\n\n    this.form.patchValue({\n      preventEmailDelivery: !this.isEmailEnabled() || registration.emailVerified !== true\n    })\n\n    this.openedModal = this.modalService.open(this.modal(), { centered: true })\n  }\n\n  hide () {\n    this.form.reset()\n\n    this.openedModal.close()\n  }\n\n  getSubmitValue () {\n    if (this.isAccept()) {\n      return $localize`Accept registration`\n    }\n\n    return $localize`Reject registration`\n  }\n\n  processRegistration () {\n    if (this.isAccept()) return this.acceptRegistration()\n\n    return this.rejectRegistration()\n  }\n\n  isEmailEnabled () {\n    return this.server.getHTMLConfig().email.enabled\n  }\n\n  isPreventEmailDeliveryChecked () {\n    return this.form.value.preventEmailDelivery\n  }\n\n  private acceptRegistration () {\n    this.registrationService.acceptRegistration({\n      registration: this.registration,\n      moderationResponse: this.form.value.moderationResponse,\n      preventEmailDelivery: this.form.value.preventEmailDelivery\n    }).subscribe({\n      next: () => {\n        this.notifier.success($localize`${this.registration.username} account created`)\n\n        this.registrationProcessed.emit()\n        this.hide()\n      },\n\n      error: err => this.notifier.error(err.message)\n    })\n  }\n\n  private rejectRegistration () {\n    this.registrationService.rejectRegistration({\n      registration: this.registration,\n      moderationResponse: this.form.value.moderationResponse,\n      preventEmailDelivery: this.form.value.preventEmailDelivery\n    }).subscribe({\n      next: () => {\n        this.notifier.success($localize`${this.registration.username} registration rejected`)\n\n        this.registrationProcessed.emit()\n        this.hide()\n      },\n\n      error: err => this.notifier.error(err.message)\n    })\n  }\n}\n","<ng-container>\n  <a [href]=\"'mailto:' + entry().email\" [title]=\"getTitle()\">\n    @if (showEmailVerifyInformation()) {\n      @if (entry().emailVerified === true) {\n        &#x2713; {{ entry().email }}\n      } @else {\n        <em *ngIf=\"!entry().emailVerified\">? {{ entry().email }}</em>\n      }\n    } @else {\n      {{ entry().email }}\n    }\n  </a>\n</ng-container>\n","import { Component, booleanAttribute, input } from '@angular/core'\nimport { User, UserRegistration } from '@peertube/peertube-models'\nimport { NgIf } from '@angular/common'\n\n@Component({\n  selector: 'my-user-email-info',\n  templateUrl: './user-email-info.component.html',\n  styleUrls: [ './user-email-info.component.scss' ],\n  imports: [ NgIf ]\n})\nexport class UserEmailInfoComponent {\n  readonly entry = input<User | UserRegistration>(undefined)\n  readonly showEmailVerifyInformation = input<boolean, unknown>(undefined, { transform: booleanAttribute })\n\n  getTitle () {\n    if (this.entry().emailVerified) {\n      return $localize`User email has been verified`\n    }\n\n    return $localize`User email hasn't been verified`\n  }\n}\n","<p-table\n  [value]=\"registrations\" [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\" [rows]=\"rowsPerPage\" [first]=\"pagination.start\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\" [sortField]=\"sort.field\" [sortOrder]=\"sort.order\" dataKey=\"id\"\n  [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\" [lazyLoadOnInit]=\"false\"\n  [(selection)]=\"selectedRows\" [showCurrentPageReport]=\"true\" [currentPageReportTemplate]=\"getPaginationTemplate()\"\n  [expandedRowKeys]=\"expandedRows\"\n>\n  <ng-template pTemplate=\"caption\">\n    <div class=\"caption\">\n      <div class=\"left-buttons\">\n        <my-action-dropdown\n          *ngIf=\"isInSelectionMode()\" i18n-label label=\"Batch actions\" theme=\"primary\"\n          [actions]=\"bulkActions\" [entry]=\"selectedRows\"\n        >\n        </my-action-dropdown>\n      </div>\n\n      <div class=\"ms-auto\">\n        <my-advanced-input-filter (search)=\"onSearch($event)\"></my-advanced-input-filter>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template pTemplate=\"header\">\n    <tr> <!-- header -->\n      <th scope=\"col\" style=\"width: 40px\">\n        <p-tableHeaderCheckbox ariaLabel=\"Select all rows\" i18n-ariaLabel></p-tableHeaderCheckbox>\n      </th>\n      <th scope=\"col\" style=\"width: 40px;\">\n        <span i18n class=\"visually-hidden\">More information</span>\n      </th>\n      <th scope=\"col\" style=\"width: 150px;\">\n        <span i18n class=\"visually-hidden\">Actions</span>\n      </th>\n      <th scope=\"col\" i18n>Account</th>\n      <th scope=\"col\" i18n>Email</th>\n      <th scope=\"col\" i18n>Channel</th>\n      <th scope=\"col\" i18n>Registration reason</th>\n      <th scope=\"col\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"state\" style=\"width: 80px;\">State <p-sortIcon field=\"state\"></p-sortIcon></th>\n      <th scope=\"col\" i18n>Moderation response</th>\n      <th scope=\"col\" style=\"width: 150px;\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"createdAt\">Requested on <p-sortIcon field=\"createdAt\"></p-sortIcon></th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-expanded=\"expanded\" let-registration>\n    <tr [pSelectableRow]=\"registration\">\n      <td class=\"checkbox-cell\">\n        <p-tableCheckbox [value]=\"registration\" ariaLabel=\"Select this row\" i18n-ariaLabel></p-tableCheckbox>\n      </td>\n\n      <td class=\"expand-cell\">\n        <my-table-expander-icon [pRowToggler]=\"registration\" [expanded]=\"expanded\"></my-table-expander-icon>\n      </td>\n\n      <td class=\"action-cell\">\n        <my-action-dropdown\n          [ngClass]=\"{ 'show': expanded }\" placement=\"bottom-right top-right left auto\" container=\"body\"\n          i18n-label label=\"Actions\" [actions]=\"registrationActions\" [entry]=\"registration\" buttonSize=\"small\"\n        ></my-action-dropdown>\n      </td>\n\n      <td>\n        <div class=\"chip two-lines\">\n          <div>\n            <span>{{ registration.username }}</span>\n            <span class=\"muted\">{{ registration.accountDisplayName }}</span>\n          </div>\n        </div>\n      </td>\n\n      <td>\n        <my-user-email-info [entry]=\"registration\" [showEmailVerifyInformation]=\"requiresEmailVerification\"></my-user-email-info>\n      </td>\n\n      <td>\n        <div class=\"chip two-lines\">\n          <div>\n            <span>{{ registration.channelHandle }}</span>\n            <span class=\"muted\">{{ registration.channelDisplayName }}</span>\n          </div>\n        </div>\n      </td>\n\n      <td container=\"body\" placement=\"left auto\" [ngbTooltip]=\"registration.registrationReason\">\n        {{ registration.registrationReason }}\n      </td>\n\n      <td class=\"c-hand abuse-states\" [pRowToggler]=\"registration\">\n\n        <div *ngIf=\"isRegistrationAccepted(registration)\" [title]=\"registration.state.label\" class=\"pt-badge badge-success\">\n          <my-global-icon iconName=\"tick\"></my-global-icon>\n        </div>\n\n        <div *ngIf=\"isRegistrationRejected(registration)\" [title]=\"registration.state.label\" class=\"pt-badge badge-danger\">\n          <my-global-icon iconName=\"cross\"></my-global-icon>\n        </div>\n      </td>\n\n      <td container=\"body\" placement=\"left auto\" [ngbTooltip]=\"registration.moderationResponse\">\n        {{ registration.moderationResponse }}\n      </td>\n\n      <td class=\"c-hand\" [pRowToggler]=\"registration\">{{ registration.createdAt | ptDate: 'short'  }}</td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"rowexpansion\" let-registration>\n    <tr>\n      <td myAutoColspan>\n        <div class=\"moderation-expanded\">\n          <div class=\"left\">\n            <div class=\"d-flex\">\n              <span class=\"moderation-expanded-label\" i18n>Registration reason:</span>\n              <span class=\"moderation-expanded-text\" [innerHTML]=\"registration.registrationReasonHTML\"></span>\n            </div>\n\n            <div *ngIf=\"registration.moderationResponse\">\n              <span class=\"moderation-expanded-label\" i18n>Moderation response:</span>\n              <span class=\"moderation-expanded-text\" [innerHTML]=\"registration.moderationResponseHTML\"></span>\n            </div>\n          </div>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\">\n    <tr>\n      <td myAutoColspan>\n        <div class=\"no-results\">\n          <ng-container *ngIf=\"search\" i18n>No registrations found matching current filters.</ng-container>\n          <ng-container *ngIf=\"!search\" i18n>No registrations found.</ng-container>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n\n<my-process-registration-modal #processRegistrationModal (registrationProcessed)=\"onRegistrationProcessed()\"></my-process-registration-modal>\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnInit, inject, viewChild } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { ConfirmService, MarkdownService, Notifier, RestPagination, RestTable, ServerService } from '@app/core'\nimport { formatICU } from '@app/helpers'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { UserRegistration, UserRegistrationState } from '@peertube/peertube-models'\nimport { SharedModule, SortMeta } from 'primeng/api'\nimport { TableModule } from 'primeng/table'\nimport { AdvancedInputFilter, AdvancedInputFilterComponent } from '../../../shared/shared-forms/advanced-input-filter.component'\nimport { GlobalIconComponent } from '../../../shared/shared-icons/global-icon.component'\nimport { ActionDropdownComponent, DropdownAction } from '../../../shared/shared-main/buttons/action-dropdown.component'\nimport { AutoColspanDirective } from '../../../shared/shared-main/common/auto-colspan.directive'\nimport { TableExpanderIconComponent } from '../../../shared/shared-tables/table-expander-icon.component'\nimport { UserEmailInfoComponent } from '../../shared/user-email-info.component'\nimport { AdminRegistrationService } from './admin-registration.service'\nimport { ProcessRegistrationModalComponent } from './process-registration-modal.component'\n\n@Component({\n  selector: 'my-registration-list',\n  templateUrl: './registration-list.component.html',\n  styleUrls: [ '../../../shared/shared-moderation/moderation.scss', './registration-list.component.scss' ],\n  imports: [\n    GlobalIconComponent,\n    TableModule,\n    SharedModule,\n    NgIf,\n    ActionDropdownComponent,\n    AdvancedInputFilterComponent,\n    NgbTooltip,\n    TableExpanderIconComponent,\n    NgClass,\n    UserEmailInfoComponent,\n    AutoColspanDirective,\n    ProcessRegistrationModalComponent,\n    PTDatePipe\n  ]\n})\nexport class RegistrationListComponent extends RestTable<UserRegistration> implements OnInit {\n  protected route = inject(ActivatedRoute)\n  protected router = inject(Router)\n  private server = inject(ServerService)\n  private notifier = inject(Notifier)\n  private markdownRenderer = inject(MarkdownService)\n  private confirmService = inject(ConfirmService)\n  private adminRegistrationService = inject(AdminRegistrationService)\n\n  readonly processRegistrationModal = viewChild<ProcessRegistrationModalComponent>('processRegistrationModal')\n\n  registrations: (UserRegistration & { registrationReasonHTML?: string, moderationResponseHTML?: string })[] = []\n  totalRecords = 0\n  sort: SortMeta = { field: 'createdAt', order: -1 }\n  pagination: RestPagination = { count: this.rowsPerPage, start: 0 }\n\n  registrationActions: DropdownAction<UserRegistration>[][] = []\n  bulkActions: DropdownAction<UserRegistration[]>[] = []\n\n  inputFilters: AdvancedInputFilter[] = []\n\n  requiresEmailVerification: boolean\n\n  constructor () {\n    super()\n\n    this.registrationActions = [\n      [\n        {\n          label: $localize`Accept this request`,\n          handler: registration => this.openRegistrationRequestProcessModal(registration, 'accept'),\n          isDisplayed: registration => registration.state.id === UserRegistrationState.PENDING\n        },\n        {\n          label: $localize`Reject this request`,\n          handler: registration => this.openRegistrationRequestProcessModal(registration, 'reject'),\n          isDisplayed: registration => registration.state.id === UserRegistrationState.PENDING\n        },\n        {\n          label: $localize`Remove this request`,\n          description: $localize`Remove the request from the list. The user can register again.`,\n          handler: registration => this.removeRegistrations([ registration ])\n        }\n      ]\n    ]\n\n    this.bulkActions = [\n      {\n        label: $localize`Delete`,\n        handler: registrations => this.removeRegistrations(registrations)\n      }\n    ]\n  }\n\n  ngOnInit () {\n    this.initialize()\n\n    this.server.getConfig()\n      .subscribe(config => {\n        this.requiresEmailVerification = config.signup.requiresEmailVerification\n      })\n  }\n\n  getIdentifier () {\n    return 'RegistrationListComponent'\n  }\n\n  isRegistrationAccepted (registration: UserRegistration) {\n    return registration.state.id === UserRegistrationState.ACCEPTED\n  }\n\n  isRegistrationRejected (registration: UserRegistration) {\n    return registration.state.id === UserRegistrationState.REJECTED\n  }\n\n  onRegistrationProcessed () {\n    this.reloadData()\n  }\n\n  protected reloadDataInternal () {\n    this.adminRegistrationService.listRegistrations({\n      pagination: this.pagination,\n      sort: this.sort,\n      search: this.search\n    }).subscribe({\n      next: async resultList => {\n        this.totalRecords = resultList.total\n        this.registrations = resultList.data\n\n        for (const registration of this.registrations) {\n          registration.registrationReasonHTML = await this.toHtml(registration.registrationReason)\n          registration.moderationResponseHTML = await this.toHtml(registration.moderationResponse)\n        }\n      },\n\n      error: err => this.notifier.error(err.message)\n    })\n  }\n\n  private openRegistrationRequestProcessModal (registration: UserRegistration, mode: 'accept' | 'reject') {\n    this.processRegistrationModal().openModal(registration, mode)\n  }\n\n  private async removeRegistrations (registrations: UserRegistration[]) {\n    const icuParams = { count: registrations.length, username: registrations[0].username }\n\n    const message = formatICU(\n      $localize`Do you really want to delete {count, plural, =1 {{username} registration request?} other {{count} registration requests?}}`,\n      icuParams\n    )\n\n    const res = await this.confirmService.confirm(message, $localize`Delete`)\n    if (res === false) return\n\n    this.adminRegistrationService.removeRegistrations(registrations)\n      .subscribe({\n        next: () => {\n          const message = formatICU(\n            $localize`Removed {count, plural, =1 {{username} registration request} other {{count} registration requests}}`,\n            icuParams\n          )\n\n          this.notifier.success(message)\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  private toHtml (text: string) {\n    return this.markdownRenderer.textMarkdownToHTML({ markdown: text })\n  }\n}\n","import { Component } from '@angular/core'\n\nimport { WatchedWordsListAdminOwnerComponent } from '@app/shared/standalone-watched-words/watched-words-list-admin-owner.component'\n\n@Component({\n  templateUrl: './watched-words-list-admin.component.html',\n  imports: [\n    WatchedWordsListAdminOwnerComponent\n  ]\n})\nexport class WatchedWordsListAdminComponent {}\n","<em class=\"d-block\" i18n>Video name/description and comments that contain any of the watched words are automatically tagged with the name of the list.</em>\n<em class=\"d-block mb-3\" i18n>These automatic tags can be used to filter comments and videos.</em>\n\n<my-watched-words-list-admin-owner mode=\"admin\"></my-watched-words-list-admin-owner>\n\n","import { Routes } from '@angular/router'\nimport { AbuseListComponent } from '@app/+admin/moderation/abuse-list'\nimport { InstanceAccountBlocklistComponent, InstanceServerBlocklistComponent } from '@app/+admin/moderation/instance-blocklist'\nimport { VideoBlockListComponent } from '@app/+admin/moderation/video-block-list'\nimport { UserRightGuard } from '@app/core'\nimport { UserRight } from '@peertube/peertube-models'\nimport { RegistrationListComponent } from './registration-list'\nimport { WatchedWordsListAdminComponent } from './watched-words-list/watched-words-list-admin.component'\n\nexport const moderationRoutes: Routes = [\n  {\n    path: 'moderation',\n    children: [\n      {\n        path: '',\n        redirectTo: 'abuses/list',\n        pathMatch: 'full'\n      },\n      {\n        path: 'video-abuses',\n        redirectTo: 'abuses/list',\n        pathMatch: 'full'\n      },\n      {\n        path: 'video-abuses/list',\n        redirectTo: 'abuses/list',\n        pathMatch: 'full'\n      },\n      {\n        path: 'abuses/list',\n        component: AbuseListComponent,\n        canActivate: [ UserRightGuard ],\n        data: {\n          userRight: UserRight.MANAGE_ABUSES,\n          meta: {\n            title: $localize`Reports`\n          }\n        }\n      },\n\n      {\n        path: 'video-blacklist',\n        redirectTo: 'video-blocks/list',\n        pathMatch: 'full'\n      },\n      {\n        path: 'video-auto-blacklist',\n        redirectTo: 'video-blocks/list',\n        pathMatch: 'full'\n      },\n      {\n        path: 'video-auto-blacklist/list',\n        redirectTo: 'video-blocks/list',\n        pathMatch: 'full'\n      },\n      {\n        path: 'video-blacklist',\n        redirectTo: 'video-blocks/list',\n        pathMatch: 'full'\n      },\n      {\n        path: 'video-blocks/list',\n        component: VideoBlockListComponent,\n        canActivate: [ UserRightGuard ],\n        data: {\n          userRight: UserRight.MANAGE_VIDEO_BLACKLIST,\n          meta: {\n            title: $localize`Blocked videos`\n          }\n        }\n      },\n\n      {\n        path: 'registrations/list',\n        component: RegistrationListComponent,\n        canActivate: [ UserRightGuard ],\n        data: {\n          userRight: UserRight.MANAGE_REGISTRATIONS,\n          meta: {\n            title: $localize`User registrations`\n          }\n        }\n      },\n\n      // We moved this component in admin overview pages\n      {\n        path: 'video-comments',\n        redirectTo: 'video-comments/list',\n        pathMatch: 'full'\n      },\n      {\n        path: 'video-comments/list',\n        redirectTo: '/admin/overview/comments/list',\n        pathMatch: 'full'\n      },\n\n      {\n        path: 'blocklist/accounts',\n        component: InstanceAccountBlocklistComponent,\n        canActivate: [ UserRightGuard ],\n        data: {\n          userRight: UserRight.MANAGE_ACCOUNTS_BLOCKLIST,\n          meta: {\n            title: $localize`Muted accounts`\n          }\n        }\n      },\n      {\n        path: 'blocklist/servers',\n        component: InstanceServerBlocklistComponent,\n        canActivate: [ UserRightGuard ],\n        data: {\n          userRight: UserRight.MANAGE_SERVERS_BLOCKLIST,\n          meta: {\n            title: $localize`Muted platforms`\n          }\n        }\n      },\n\n      {\n        path: 'watched-words/list',\n        component: WatchedWordsListAdminComponent,\n        canActivate: [ UserRightGuard ],\n        data: {\n          userRight: UserRight.MANAGE_INSTANCE_WATCHED_WORDS,\n          meta: {\n            title: $localize`Watched words`\n          }\n        }\n      }\n    ]\n  }\n]\n","import { catchError } from 'rxjs/operators'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable, inject } from '@angular/core'\nimport { ComponentPagination, RestExtractor, RestService } from '@app/core'\nimport { PluginService } from '@app/core/plugins/plugin.service'\nimport {\n  InstallOrUpdatePlugin,\n  ManagePlugin,\n  PeerTubePlugin,\n  PeerTubePluginIndex,\n  PluginType,\n  PluginType_Type,\n  RegisteredServerSettings,\n  ResultList\n} from '@peertube/peertube-models'\nimport { environment } from '../../../../environments/environment'\n\n@Injectable()\nexport class PluginApiService {\n  private authHttp = inject(HttpClient)\n  private restExtractor = inject(RestExtractor)\n  private restService = inject(RestService)\n  private pluginService = inject(PluginService)\n\n  private static BASE_PLUGIN_URL = environment.apiUrl + '/api/v1/plugins'\n\n  getPluginTypeLabel (type: PluginType_Type) {\n    if (type === PluginType.PLUGIN) {\n      return $localize`plugin`\n    }\n\n    return $localize`theme`\n  }\n\n  getPlugins (\n    pluginType: PluginType_Type,\n    componentPagination: ComponentPagination,\n    sort: string\n  ) {\n    const pagination = this.restService.componentToRestPagination(componentPagination)\n\n    let params = new HttpParams()\n    params = this.restService.addRestGetParams(params, pagination, sort)\n    params = params.append('pluginType', pluginType.toString())\n\n    return this.authHttp.get<ResultList<PeerTubePlugin>>(PluginApiService.BASE_PLUGIN_URL, { params })\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  searchAvailablePlugins (\n    pluginType: PluginType_Type,\n    componentPagination: ComponentPagination,\n    sort: string,\n    search?: string\n  ) {\n    const pagination = this.restService.componentToRestPagination(componentPagination)\n\n    let params = new HttpParams()\n    params = this.restService.addRestGetParams(params, pagination, sort)\n    params = params.append('pluginType', pluginType.toString())\n\n    if (search) params = params.append('search', search)\n\n    return this.authHttp.get<ResultList<PeerTubePluginIndex>>(PluginApiService.BASE_PLUGIN_URL + '/available', { params })\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  getPlugin (npmName: string) {\n    const path = PluginApiService.BASE_PLUGIN_URL + '/' + npmName\n\n    return this.authHttp.get<PeerTubePlugin>(path)\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  getPluginRegisteredSettings (pluginName: string, pluginType: PluginType_Type) {\n    const npmName = this.pluginService.nameToNpmName(pluginName, pluginType)\n    const path = PluginApiService.BASE_PLUGIN_URL + '/' + npmName + '/registered-settings'\n\n    return this.authHttp.get<RegisteredServerSettings>(path)\n      .pipe(\n        catchError(res => this.restExtractor.handleError(res))\n      )\n  }\n\n  updatePluginSettings (pluginName: string, pluginType: PluginType_Type, settings: any) {\n    const npmName = this.pluginService.nameToNpmName(pluginName, pluginType)\n    const path = PluginApiService.BASE_PLUGIN_URL + '/' + npmName + '/settings'\n\n    return this.authHttp.put(path, { settings })\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  uninstall (pluginName: string, pluginType: PluginType_Type) {\n    const body: ManagePlugin = {\n      npmName: this.pluginService.nameToNpmName(pluginName, pluginType)\n    }\n\n    return this.authHttp.post(PluginApiService.BASE_PLUGIN_URL + '/uninstall', body)\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  update (pluginName: string, pluginType: PluginType_Type) {\n    const body: ManagePlugin = {\n      npmName: this.pluginService.nameToNpmName(pluginName, pluginType)\n    }\n\n    return this.authHttp.post(PluginApiService.BASE_PLUGIN_URL + '/update', body)\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  install (npmName: string) {\n    const body: InstallOrUpdatePlugin = {\n      npmName\n    }\n\n    return this.authHttp.post(PluginApiService.BASE_PLUGIN_URL + '/install', body)\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  getPluginOrThemeHref (type: PluginType_Type, name: string) {\n    const typeString = type === PluginType.PLUGIN\n      ? 'plugin'\n      : 'theme'\n\n    return `https://www.npmjs.com/package/peertube-${typeString}-${name}`\n  }\n}\n","import { Component, inject, input } from '@angular/core'\nimport { PeerTubePlugin, PeerTubePluginIndex, PluginType_Type } from '@peertube/peertube-models'\nimport { PluginApiService } from './plugin-api.service'\nimport { GlobalIconComponent } from '../../../shared/shared-icons/global-icon.component'\n\n@Component({\n  selector: 'my-plugin-card',\n  templateUrl: './plugin-card.component.html',\n  styleUrls: [ './plugin-card.component.scss' ],\n  imports: [ GlobalIconComponent ]\n})\nexport class PluginCardComponent {\n  private pluginApiService = inject(PluginApiService)\n\n  readonly plugin = input<PeerTubePluginIndex | PeerTubePlugin>(undefined)\n  readonly version = input<string>(undefined)\n  readonly pluginType = input<PluginType_Type>(undefined)\n\n  getPluginOrThemeHref (name: string) {\n    return this.pluginApiService.getPluginOrThemeHref(this.pluginType(), name)\n  }\n}\n","<div class=\"card plugin\">\n  <div class=\"card-body\">\n    <div class=\"first-row\">\n      <span class=\"plugin-name\">{{ plugin().name }}</span>\n\n      <span class=\"plugin-version\">{{ version() }}</span>\n\n      <a class=\"plugin-icon\" target=\"_blank\" rel=\"noopener noreferrer\" [href]=\"plugin().homepage\" i18n-title title=\"Homepage (new window)\">\n        <my-global-icon iconName=\"home\"></my-global-icon>\n      </a>\n\n      <a class=\"plugin-icon\" target=\"_blank\" rel=\"noopener noreferrer\" [href]=\"getPluginOrThemeHref(plugin().name)\" i18n-title title=\"NPM page (new window)\">\n        <my-global-icon iconName=\"registry\"></my-global-icon>\n      </a>\n\n      <ng-content select=\"badges\"></ng-content>\n\n      <div class=\"buttons\">\n        <ng-content select=\"buttons\"></ng-content>\n      </div>\n    </div>\n\n    <div class=\"second-row\">\n      <div dir=\"auto\" class=\"description\">{{ plugin().description }}</div>\n    </div>\n  </div>\n</div>\n","<div class=\"no-results\" *ngIf=\"pagination.totalItems === 0\">\n  {{ getNoResultMessage() }}\n</div>\n\n<div class=\"plugins\" myInfiniteScroller (nearOfBottom)=\"onNearOfBottom()\" [dataObservable]=\"onDataSubject.asObservable()\">\n  <ng-container *ngFor=\"let plugin of plugins\">\n    <my-plugin-card [plugin]=\"plugin\" [version]=\"plugin.version\" [pluginType]=\"pluginType\">\n      <div ngProjectAs=\"buttons\">\n        <my-button\n          *ngIf=\"!isTheme(plugin)\" [ptRouterLink]=\"getShowRouterLink(plugin)\" label=\"Settings\" i18n-label\n          [responsiveLabel]=\"true\" icon=\"config\"\n        ></my-button>\n\n        <my-button\n          class=\"update-button\" *ngIf=\"isUpdateAvailable(plugin)\" (click)=\"update(plugin)\" [loading]=\"isUpdating(plugin)\"\n          [attr.disabled]=\"isUpdating(plugin) || isUninstalling(plugin)\"\n          [label]=\"getUpdateLabel(plugin)\" icon=\"refresh\" [responsiveLabel]=\"true\"\n        ></my-button>\n\n        <my-delete-button\n          (click)=\"uninstall(plugin)\"\n          label=\"Uninstall\" i18n-label [responsiveLabel]=\"true\"\n          [disabled]=\"isUpdating(plugin) || isUninstalling(plugin)\"\n        ></my-delete-button>\n      </div>\n    </my-plugin-card>\n  </ng-container>\n</div>\n","import { NgFor, NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { PluginApiService } from '@app/+admin/plugins/shared/plugin-api.service'\nimport { ComponentPagination, ConfirmService, hasMoreItems, Notifier, resetCurrentPage, updatePaginationOnDelete } from '@app/core'\nimport { PluginService } from '@app/core/plugins/plugin.service'\nimport { compareSemVer } from '@peertube/peertube-core-utils'\nimport { PeerTubePlugin, PluginType, PluginType_Type } from '@peertube/peertube-models'\nimport { Subject } from 'rxjs'\nimport { ButtonComponent } from '../../../shared/shared-main/buttons/button.component'\nimport { DeleteButtonComponent } from '../../../shared/shared-main/buttons/delete-button.component'\nimport { InfiniteScrollerDirective } from '../../../shared/shared-main/common/infinite-scroller.directive'\nimport { PluginCardComponent } from '../shared/plugin-card.component'\n\n@Component({\n  selector: 'my-plugin-list-installed',\n  templateUrl: './plugin-list-installed.component.html',\n  styleUrls: [ './plugin-list-installed.component.scss' ],\n  imports: [\n    NgIf,\n    InfiniteScrollerDirective,\n    NgFor,\n    PluginCardComponent,\n    ButtonComponent,\n    DeleteButtonComponent\n  ]\n})\nexport class PluginListInstalledComponent implements OnInit {\n  private pluginService = inject(PluginService)\n  private pluginApiService = inject(PluginApiService)\n  private notifier = inject(Notifier)\n  private confirmService = inject(ConfirmService)\n  private router = inject(Router)\n  private route = inject(ActivatedRoute)\n\n  pluginType: PluginType_Type\n\n  pagination: ComponentPagination = {\n    currentPage: 1,\n    itemsPerPage: 10,\n    totalItems: null\n  }\n  sort = 'name'\n\n  plugins: PeerTubePlugin[] = []\n  updating: { [name: string]: boolean } = {}\n  uninstalling: { [name: string]: boolean } = {}\n\n  onDataSubject = new Subject<any[]>()\n\n  ngOnInit () {\n    if (!this.route.snapshot.queryParams['pluginType']) {\n      const queryParams = { pluginType: PluginType.PLUGIN }\n\n      this.router.navigate([], { queryParams, replaceUrl: true })\n    }\n\n    this.route.queryParams.subscribe(query => {\n      if (!query['pluginType']) return\n\n      this.pluginType = parseInt(query['pluginType'], 10) as PluginType_Type\n\n      this.reloadPlugins()\n    })\n  }\n\n  reloadPlugins () {\n    this.plugins = []\n    resetCurrentPage(this.pagination)\n\n    this.loadMorePlugins()\n  }\n\n  loadMorePlugins () {\n    this.pluginApiService.getPlugins(this.pluginType, this.pagination, this.sort)\n      .subscribe({\n        next: res => {\n          this.plugins = this.plugins.concat(res.data)\n          this.pagination.totalItems = res.total\n\n          this.onDataSubject.next(res.data)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  onNearOfBottom () {\n    if (!hasMoreItems(this.pagination)) return\n\n    this.pagination.currentPage += 1\n\n    this.loadMorePlugins()\n  }\n\n  getNoResultMessage () {\n    if (this.pluginType === PluginType.PLUGIN) {\n      return $localize`You don't have plugins installed yet.`\n    }\n\n    return $localize`You don't have themes installed yet.`\n  }\n\n  isUpdateAvailable (plugin: PeerTubePlugin) {\n    return plugin.latestVersion && compareSemVer(plugin.latestVersion, plugin.version) > 0\n  }\n\n  getUpdateLabel (plugin: PeerTubePlugin) {\n    return $localize`Update to ${plugin.latestVersion}`\n  }\n\n  isUpdating (plugin: PeerTubePlugin) {\n    return !!this.updating[this.getPluginKey(plugin)]\n  }\n\n  isUninstalling (plugin: PeerTubePlugin) {\n    return !!this.uninstalling[this.getPluginKey(plugin)]\n  }\n\n  isTheme (plugin: PeerTubePlugin) {\n    return plugin.type === PluginType.THEME\n  }\n\n  async uninstall (plugin: PeerTubePlugin) {\n    const pluginKey = this.getPluginKey(plugin)\n    if (this.uninstalling[pluginKey]) return\n\n    const res = await this.confirmService.confirm(\n      $localize`Do you really want to uninstall ${plugin.name}?`,\n      $localize`Uninstall`\n    )\n    if (res === false) return\n\n    this.uninstalling[pluginKey] = true\n\n    this.pluginApiService.uninstall(plugin.name, plugin.type)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`${plugin.name} uninstalled.`)\n\n          this.plugins = this.plugins.filter(p => p.name !== plugin.name)\n          updatePaginationOnDelete(this.pagination)\n\n          this.uninstalling[pluginKey] = false\n        },\n\n        error: err => {\n          this.notifier.error(err.message)\n          this.uninstalling[pluginKey] = false\n        }\n      })\n  }\n\n  async update (plugin: PeerTubePlugin) {\n    const pluginKey = this.getPluginKey(plugin)\n    if (this.updating[pluginKey]) return\n\n    if (this.isMajorUpgrade(plugin)) {\n      const res = await this.confirmService.confirm(\n        $localize`This is a major plugin upgrade. Please go on the plugin homepage to check potential release notes.`,\n        $localize`Upgrade`,\n        { confirmButtonText: $localize`Proceed upgrade` }\n      )\n\n      if (res === false) return\n    }\n\n    this.updating[pluginKey] = true\n\n    this.pluginApiService.update(plugin.name, plugin.type)\n      .pipe()\n      .subscribe({\n        next: res => {\n          this.updating[pluginKey] = false\n\n          this.notifier.success($localize`${plugin.name} updated.`)\n\n          Object.assign(plugin, res)\n        },\n\n        error: err => {\n          this.notifier.error(err.message)\n          this.updating[pluginKey] = false\n        }\n      })\n  }\n\n  getShowRouterLink (plugin: PeerTubePlugin) {\n    return [ '/admin', 'settings', 'plugins', 'show', this.pluginService.nameToNpmName(plugin.name, plugin.type) ]\n  }\n\n  getPluginOrThemeHref (name: string) {\n    return this.pluginApiService.getPluginOrThemeHref(this.pluginType, name)\n  }\n\n  private getPluginKey (plugin: PeerTubePlugin) {\n    return plugin.name + plugin.type\n  }\n\n  private isMajorUpgrade (plugin: PeerTubePlugin) {\n    if (!plugin.latestVersion) return false\n\n    const latestMajor = parseInt(plugin.latestVersion.split('.')[0])\n    const currentMajor = parseInt(plugin.version.split('.')[0])\n\n    return latestMajor > currentMajor\n  }\n}\n","<my-alert class=\"mt-3\" type=\"primary\" i18n *ngIf=\"pluginInstalled\">\n  To load your new installed plugins or themes, refresh the page.\n</my-alert>\n\n<div class=\"result-and-search\">\n  @if (!search) {\n    <div>\n      <my-global-icon iconName=\"trending\" aria-hidden=\"true\"></my-global-icon>\n\n      @if (isThemeSearch()) {\n        <ng-container i18n>Popular themes</ng-container>\n      } @else {\n        <ng-container i18n>Popular plugins</ng-container>\n      }\n    </div>\n  }\n\n  @if (search && !isSearching) {\n    <div>\n      <my-global-icon iconName=\"search\"></my-global-icon>\n\n      <ng-container i18n>\n        {{ pagination.totalItems }} {pagination.totalItems, plural, =1 {result} other {results}} for \"{{ search }}\"\n      </ng-container>\n    </div>\n  }\n\n  <div class=\"search-bar\">\n    <input type=\"text\" (input)=\"onSearchChange($event)\" i18n-placeholder placeholder=\"Search...\" myAutofocus />\n  </div>\n</div>\n\n<div class=\"no-results\" i18n *ngIf=\"pagination.totalItems === 0\">\n  No results.\n</div>\n\n<div class=\"plugins\" myInfiniteScroller (nearOfBottom)=\"onNearOfBottom()\" [dataObservable]=\"onDataSubject.asObservable()\">\n  <ng-container *ngFor=\"let plugin of plugins\" >\n    <my-plugin-card [plugin]=\"plugin\" [version]=\"plugin.latestVersion\" [pluginType]=\"pluginType\">\n      <div ngProjectAs=\"badges\">\n        <span i18n *ngIf=\"plugin.installed\" class=\"pt-badge badge-success\">Installed</span>\n\n        <span\n          *ngIf=\"plugin.official\" class=\"pt-badge badge-primary\"\n          i18n i18n-title title=\"This plugin is developed by Framasoft, the not-for-profit that develops PeerTube\"\n        >Official</span>\n\n        <span\n          *ngIf=\"plugin.recommended\" class=\"pt-badge badge-primary\"\n          i18n i18n-title title=\"This plugin is recommended by Framasoft, the not-for-profit that develops PeerTube\"\n        >Recommended</span>\n      </div>\n\n      <div ngProjectAs=\"buttons\">\n        <my-edit-button\n          *ngIf=\"plugin.installed === true && !isThemeSearch()\" [ptRouterLink]=\"getShowRouterLink(plugin)\"\n          label=\"Settings\" i18n-label [responsiveLabel]=\"true\"\n        ></my-edit-button>\n\n        <my-button\n          *ngIf=\"plugin.installed === false\" (click)=\"install(plugin)\"\n          [loading]=\"isInstalling(plugin)\" label=\"Install\" [responsiveLabel]=\"true\"\n          icon=\"cloud-download\" [attr.disabled]=\"isInstalling(plugin)\"\n        ></my-button>\n      </div>\n\n    </my-plugin-card>\n  </ng-container>\n</div>\n","import { NgFor, NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { PluginApiService } from '@app/+admin/plugins/shared/plugin-api.service'\nimport { ComponentPagination, ConfirmService, hasMoreItems, Notifier, PluginService, resetCurrentPage } from '@app/core'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport { PeerTubePluginIndex, PluginType, PluginType_Type } from '@peertube/peertube-models'\nimport { logger } from '@root-helpers/logger'\nimport { Subject } from 'rxjs'\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators'\nimport { GlobalIconComponent } from '../../../shared/shared-icons/global-icon.component'\nimport { ButtonComponent } from '../../../shared/shared-main/buttons/button.component'\nimport { EditButtonComponent } from '../../../shared/shared-main/buttons/edit-button.component'\nimport { AutofocusDirective } from '../../../shared/shared-main/common/autofocus.directive'\nimport { InfiniteScrollerDirective } from '../../../shared/shared-main/common/infinite-scroller.directive'\nimport { PluginCardComponent } from '../shared/plugin-card.component'\n\n@Component({\n  selector: 'my-plugin-search',\n  templateUrl: './plugin-search.component.html',\n  styleUrls: [ './plugin-search.component.scss' ],\n  imports: [\n    NgIf,\n    GlobalIconComponent,\n    AutofocusDirective,\n    InfiniteScrollerDirective,\n    NgFor,\n    PluginCardComponent,\n    EditButtonComponent,\n    ButtonComponent,\n    AlertComponent\n  ]\n})\nexport class PluginSearchComponent implements OnInit {\n  private pluginService = inject(PluginService)\n  private pluginApiService = inject(PluginApiService)\n  private notifier = inject(Notifier)\n  private confirmService = inject(ConfirmService)\n  private router = inject(Router)\n  private route = inject(ActivatedRoute)\n\n  pluginType: PluginType_Type\n\n  pagination: ComponentPagination = {\n    currentPage: 1,\n    itemsPerPage: 10,\n    totalItems: null\n  }\n  sort = '-trending'\n\n  search = ''\n  isSearching = false\n\n  plugins: PeerTubePluginIndex[] = []\n  installing: { [name: string]: boolean } = {}\n  pluginInstalled = false\n\n  onDataSubject = new Subject<any[]>()\n\n  private searchSubject = new Subject<string>()\n\n  ngOnInit () {\n    if (!this.route.snapshot.queryParams['pluginType']) {\n      const queryParams = { pluginType: PluginType.PLUGIN }\n\n      this.router.navigate([], { queryParams })\n    }\n\n    this.route.queryParams.subscribe(query => {\n      if (!query['pluginType']) return\n\n      this.pluginType = parseInt(query['pluginType'], 10) as PluginType_Type\n      this.search = query['search'] || ''\n\n      this.reloadPlugins()\n    })\n\n    this.searchSubject.asObservable()\n      .pipe(\n        debounceTime(400),\n        distinctUntilChanged()\n      )\n      .subscribe(search => this.router.navigate([], { queryParams: { search }, queryParamsHandling: 'merge' }))\n  }\n\n  onSearchChange (event: Event) {\n    const target = event.target as HTMLInputElement\n\n    this.searchSubject.next(target.value)\n  }\n\n  reloadPlugins () {\n    resetCurrentPage(this.pagination)\n    this.plugins = []\n\n    this.loadMorePlugins()\n  }\n\n  loadMorePlugins () {\n    this.isSearching = true\n\n    this.pluginApiService.searchAvailablePlugins(this.pluginType, this.pagination, this.sort, this.search)\n      .subscribe({\n        next: res => {\n          this.isSearching = false\n\n          this.plugins = this.plugins.concat(res.data)\n          this.pagination.totalItems = res.total\n\n          this.onDataSubject.next(res.data)\n        },\n\n        error: err => {\n          logger.error(err)\n\n          const message = $localize`The plugin index is not available. Please retry later.`\n          this.notifier.error(message)\n        }\n      })\n  }\n\n  onNearOfBottom () {\n    if (!hasMoreItems(this.pagination)) return\n\n    this.pagination.currentPage += 1\n\n    this.loadMorePlugins()\n  }\n\n  isInstalling (plugin: PeerTubePluginIndex) {\n    return !!this.installing[plugin.npmName]\n  }\n\n  getShowRouterLink (plugin: PeerTubePluginIndex) {\n    return [ '/admin', 'settings', 'plugins', 'show', this.pluginService.nameToNpmName(plugin.name, this.pluginType) ]\n  }\n\n  isThemeSearch () {\n    return this.pluginType === PluginType.THEME\n  }\n\n  async install (plugin: PeerTubePluginIndex) {\n    if (this.installing[plugin.npmName]) return\n\n    const res = await this.confirmService.confirm(\n      $localize`Please only install plugins or themes you trust, since they can execute any code on your platform.`,\n      $localize`Install ${plugin.name}?`\n    )\n    if (res === false) return\n\n    this.installing[plugin.npmName] = true\n\n    this.pluginApiService.install(plugin.npmName)\n      .subscribe({\n        next: () => {\n          this.installing[plugin.npmName] = false\n          this.pluginInstalled = true\n\n          this.notifier.success($localize`${plugin.name} installed.`)\n\n          plugin.installed = true\n        },\n\n        error: err => {\n          this.installing[plugin.npmName] = false\n\n          this.notifier.error(err.message)\n        }\n      })\n  }\n}\n","<ng-container *ngIf=\"plugin\">\n\n  <h2 class=\"mb-4\">\n    <ng-container>{{ pluginTypeLabel }}</ng-container>\n    {{ plugin.name }}\n  </h2>\n\n  <form *ngIf=\"hasRegisteredSettings()\" (ngSubmit)=\"formValidated()\" [formGroup]=\"form\">\n    <div *ngFor=\"let setting of registeredSettings\" [id]=\"getWrapperId(setting)\">\n      <my-dynamic-form-field [hidden]=\"isSettingHidden(setting)\" [form]=\"form\" [setting]=\"setting\" [formErrors]=\"formErrors\"></my-dynamic-form-field>\n    </div>\n\n    <input class=\"peertube-button primary-button mt-3\" type=\"submit\" i18n value=\"Update plugin settings\" [disabled]=\"!form.valid\">\n  </form>\n\n  <div *ngIf=\"!hasRegisteredSettings()\" i18n class=\"no-settings\">\n    This {{ pluginTypeLabel }} does not have settings.\n  </div>\n\n</ng-container>\n","import { Subscription } from 'rxjs'\nimport { map, switchMap } from 'rxjs/operators'\nimport { Component, OnDestroy, OnInit, inject } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { HooksService, Notifier, PluginService } from '@app/core'\nimport { FormReactive } from '@app/shared/shared-forms/form-reactive'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { PeerTubePlugin, RegisterServerSettingOptions } from '@peertube/peertube-models'\nimport { PluginApiService } from '../shared/plugin-api.service'\nimport { DynamicFormFieldComponent } from '../../../shared/shared-forms/dynamic-form-field.component'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { NgIf, NgFor } from '@angular/common'\nimport { BuildFormArgument } from '@app/shared/form-validators/form-validator.model'\n\n@Component({\n  selector: 'my-plugin-show-installed',\n  templateUrl: './plugin-show-installed.component.html',\n  imports: [ NgIf, FormsModule, ReactiveFormsModule, NgFor, DynamicFormFieldComponent ]\n})\nexport class PluginShowInstalledComponent extends FormReactive implements OnInit, OnDestroy {\n  protected formReactiveService = inject(FormReactiveService)\n  private pluginService = inject(PluginService)\n  private pluginAPIService = inject(PluginApiService)\n  private notifier = inject(Notifier)\n  private hooks = inject(HooksService)\n  private route = inject(ActivatedRoute)\n\n  plugin: PeerTubePlugin\n  registeredSettings: RegisterServerSettingOptions[] = []\n  pluginTypeLabel: string\n\n  private sub: Subscription\n  private npmName: string\n\n  ngOnInit () {\n    this.sub = this.route.params.subscribe(\n      routeParams => {\n        this.npmName = routeParams['npmName']\n\n        this.loadPlugin(this.npmName)\n      }\n    )\n  }\n\n  ngOnDestroy () {\n    if (this.sub) this.sub.unsubscribe()\n  }\n\n  formValidated () {\n    const settings = this.form.value\n\n    this.pluginAPIService.updatePluginSettings(this.plugin.name, this.plugin.type, settings)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Settings updated.`)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  hasRegisteredSettings () {\n    return Array.isArray(this.registeredSettings) && this.registeredSettings.length !== 0\n  }\n\n  isSettingHidden (setting: RegisterServerSettingOptions) {\n    const script = this.pluginService.getRegisteredSettingsScript(this.npmName)\n\n    if (!script?.isSettingHidden) return false\n\n    return script.isSettingHidden({ setting, formValues: this.form.value })\n  }\n\n  getWrapperId (setting: RegisterServerSettingOptions) {\n    if (!setting.name) return\n\n    return setting.name + '-wrapper'\n  }\n\n  private loadPlugin (npmName: string) {\n    this.pluginAPIService.getPlugin(npmName)\n      .pipe(switchMap(plugin => {\n        return this.pluginAPIService.getPluginRegisteredSettings(plugin.name, plugin.type)\n          .pipe(map(data => ({ plugin, registeredSettings: data.registeredSettings })))\n      }))\n      .subscribe({\n        next: async ({ plugin, registeredSettings }) => {\n          this.plugin = plugin\n\n          this.registeredSettings = await this.translateSettings(registeredSettings)\n\n          this.pluginTypeLabel = this.pluginAPIService.getPluginTypeLabel(this.plugin.type)\n\n          this.buildSettingsForm()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  private buildSettingsForm () {\n    const buildOptions: BuildFormArgument = {}\n    const settingsValues: any = {}\n\n    for (const setting of this.registeredSettings) {\n      buildOptions[setting.name] = null\n      settingsValues[setting.name] = this.getSetting(setting.name)\n    }\n\n    this.buildForm(buildOptions)\n\n    this.form.patchValue(settingsValues)\n\n    this.hooks.runAction('action:admin-plugin-settings.init', 'admin-plugin', { npmName: this.npmName })\n  }\n\n  private getSetting (name: string) {\n    const settings = this.plugin.settings\n\n    if (settings?.[name] !== undefined) return settings[name]\n\n    const registered = this.registeredSettings.find(r => r.name === name)\n\n    return registered.default\n  }\n\n  private async translateSettings (settings: RegisterServerSettingOptions[]) {\n    for (const setting of settings) {\n      await this.pluginService.translateSetting(this.npmName, setting)\n    }\n\n    return settings\n  }\n}\n","import { Routes } from '@angular/router'\nimport { PluginListInstalledComponent } from '@app/+admin/plugins/plugin-list-installed/plugin-list-installed.component'\nimport { PluginSearchComponent } from '@app/+admin/plugins/plugin-search/plugin-search.component'\nimport { PluginShowInstalledComponent } from '@app/+admin/plugins/plugin-show-installed/plugin-show-installed.component'\nimport { UserRightGuard } from '@app/core'\nimport { UserRight } from '@peertube/peertube-models'\n\nexport const pluginsRoutes: Routes = [\n  {\n    path: 'plugins',\n    canActivate: [ UserRightGuard ],\n    data: {\n      userRight: UserRight.MANAGE_PLUGINS\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'list-installed?pluginType=1',\n        pathMatch: 'full'\n      },\n      {\n        path: 'list-installed',\n        component: PluginListInstalledComponent,\n        data: {\n          meta: {\n            title: $localize`List installed plugins`\n          }\n        }\n      },\n      {\n        path: 'search',\n        component: PluginSearchComponent,\n        data: {\n          meta: {\n            title: $localize`Search plugins`\n          }\n        }\n      },\n      {\n        path: 'show/:npmName',\n        component: PluginShowInstalledComponent,\n        data: {\n          meta: {\n            title: $localize`Show plugin`\n          }\n        }\n      }\n    ]\n  }\n]\n","import { Observable } from 'rxjs'\nimport { catchError } from 'rxjs/operators'\nimport { HttpClient } from '@angular/common/http'\nimport { Injectable, inject } from '@angular/core'\nimport { RestExtractor } from '@app/core'\nimport { Debug } from '@peertube/peertube-models'\nimport { environment } from '../../../../environments/environment'\n\n@Injectable()\nexport class DebugService {\n  private authHttp = inject(HttpClient)\n  private restExtractor = inject(RestExtractor)\n\n  private static BASE_DEBUG_URL = environment.apiUrl + '/api/v1/server/debug'\n\n  getDebug (): Observable<Debug> {\n    return this.authHttp.get<Debug>(DebugService.BASE_DEBUG_URL)\n      .pipe(\n        catchError(err => this.restExtractor.handleError(err))\n      )\n  }\n}\n","import { Component, OnInit, inject } from '@angular/core'\nimport { Notifier } from '@app/core'\nimport { Debug } from '@peertube/peertube-models'\nimport { DebugService } from './debug.service'\n\n@Component({\n  templateUrl: './debug.component.html',\n  styleUrls: [ './debug.component.scss' ],\n  imports: []\n})\nexport class DebugComponent implements OnInit {\n  private debugService = inject(DebugService)\n  private notifier = inject(Notifier)\n\n  debug: Debug\n\n  ngOnInit (): void {\n    this.load()\n  }\n\n  load () {\n    this.debugService.getDebug()\n      .subscribe({\n        next: debug => this.debug = debug,\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n}\n","<h2 class=\"fs-5\" i18n>IP address</h2>\n\n<p i18n>PeerTube thinks your web browser public IP is <strong>{{ debug?.ip }}</strong>.</p>\n\n<p i18n>If this is not your correct public IP, please consider fixing it because:</p>\n<ul>\n  <li i18n>Views may not be counted correctly (reduced compared to what they should be)</li>\n  <li i18n>Anti brute force system could be overzealous</li>\n  <li i18n>P2P system could not work correctly</li>\n</ul>\n\n<p i18n>To fix it:<p>\n<ul>\n  <li i18n>Check the <code>trust_proxy</code> configuration key</li>\n</ul>\n","import { SortMeta } from 'primeng/api'\nimport { Observable } from 'rxjs'\nimport { catchError, map } from 'rxjs/operators'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable, inject } from '@angular/core'\nimport { RestExtractor, RestPagination, RestService } from '@app/core'\nimport { Job, ResultList } from '@peertube/peertube-models'\nimport { environment } from '../../../../environments/environment'\nimport { JobStateClient } from '../../../../types/job-state-client.type'\nimport { JobTypeClient } from '../../../../types/job-type-client.type'\n\n@Injectable()\nexport class JobService {\n  private authHttp = inject(HttpClient)\n  private restService = inject(RestService)\n  private restExtractor = inject(RestExtractor)\n\n  private static BASE_JOB_URL = environment.apiUrl + '/api/v1/jobs'\n\n  listJobs (options: {\n    jobState?: JobStateClient\n    jobType: JobTypeClient\n    pagination: RestPagination\n    sort: SortMeta\n  }): Observable<ResultList<Job>> {\n    const { jobState, jobType, pagination, sort } = options\n\n    let params = new HttpParams()\n    params = this.restService.addRestGetParams(params, pagination, sort)\n\n    if (jobType !== 'all') params = params.append('jobType', jobType)\n\n    return this.authHttp.get<ResultList<Job>>(JobService.BASE_JOB_URL + `/${jobState || ''}`, { params })\n      .pipe(\n        map(res => this.restExtractor.convertResultListDateToHuman(res, [ 'createdAt', 'processedOn', 'finishedOn' ], 'precise')),\n        map(res => this.restExtractor.applyToResultListData(res, this.prettyPrintData.bind(this))),\n        map(res => this.restExtractor.applyToResultListData(res, this.buildUniqId.bind(this))),\n        catchError(err => this.restExtractor.handleError(err))\n      )\n  }\n\n  private prettyPrintData (obj: Job) {\n    const data = JSON.stringify(obj.data, null, 2)\n\n    return Object.assign(obj, { data })\n  }\n\n  private buildUniqId (obj: Job) {\n    return Object.assign(obj, { uniqId: `${obj.id}-${obj.type}` })\n  }\n}\n","<div class=\"admin-sub-header\">\n  <div class=\"select-filter-block\">\n    <label for=\"jobType\" i18n>Job type</label>\n\n    <my-select-options\n      class=\"select-job-type\" inputId=\"jobType\" filter=\"true\"\n      [items]=\"jobTypeItems\" [(ngModel)]=\"jobType\" (ngModelChange)=\"onJobStateOrTypeChanged()\"\n    ></my-select-options>\n  </div>\n\n  <div class=\"select-filter-block\">\n    <label for=\"jobState\" i18n>Job state</label>\n\n    <my-select-options\n      class=\"select-job-state\" inputId=\"jobState\"\n      [items]=\"jobStateItems\" [(ngModel)]=\"jobState\" (ngModelChange)=\"onJobStateOrTypeChanged()\"\n    ></my-select-options>\n  </div>\n\n  <div class=\"align-self-end\">\n    <my-button i18n-label label=\"Refresh\" icon=\"refresh\" (click)=\"refresh()\"></my-button>\n  </div>\n</div>\n\n<p-table\n  [value]=\"jobs\" [lazy]=\"true\" [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\" [rows]=\"rowsPerPage\" [first]=\"pagination.start\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\" [sortField]=\"sort.field\" [sortOrder]=\"sort.order\"\n  (onLazyLoad)=\"loadLazy($event)\" dataKey=\"uniqId\" [first]=\"pagination.start\" [tableStyle]=\"{'table-layout':'auto'}\"\n  [showCurrentPageReport]=\"true\" [currentPageReportTemplate]=\"getPaginationTemplate()\" [expandedRowKeys]=\"expandedRows\"\n>\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th scope=\"col\" style=\"width: 40px;\">\n        <span i18n class=\"visually-hidden\">More information</span>\n      </th>\n      <th scope=\"col\" class=\"job-id\" i18n>ID</th>\n      <th scope=\"col\" style=\"width: 200px\" class=\"job-type\" i18n>Type</th>\n      <th scope=\"col\" style=\"width: 200px\" class=\"job-priority\" i18n>Priority <small>(1 = highest priority)</small></th>\n      <th scope=\"col\" style=\"width: 200px\" class=\"job-state\" i18n *ngIf=\"jobState === 'all'\">State</th>\n      <th scope=\"col\" style=\"width: 100px\" class=\"job-progress\" i18n *ngIf=\"hasGlobalProgress()\">Progress</th>\n      <th scope=\"col\" style=\"width: 200px\" class=\"job-date\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"createdAt\">Created <p-sortIcon field=\"createdAt\"></p-sortIcon></th>\n      <th scope=\"col\" style=\"width: 230px;\" i18n>Processed/Finished</th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-expanded=\"expanded\" let-job>\n    <tr>\n      <td class=\"expand-cell\">\n        <my-table-expander-icon [pRowToggler]=\"job\" [expanded]=\"expanded\"></my-table-expander-icon>\n      </td>\n\n      <td class=\"job-id c-hand\" [pRowToggler]=\"job\" [title]=\"job.id\">{{ job.id }}</td>\n\n      <td class=\"job-type c-hand\" [pRowToggler]=\"job\">\n        <span class=\"pt-badge ellipsis\" [ngClass]=\"getRandomJobTypeBadge(job.type)\">{{ job.type }}</span>\n      </td>\n\n      <td class=\"job-priority c-hand\" [pRowToggler]=\"job\">{{ job.priority }}</td>\n\n      <td class=\"job-state c-hand\" [pRowToggler]=\"job\" *ngIf=\"jobState === 'all'\">\n        <span class=\"ellipsis\" [ngClass]=\"getJobStateClasses(job.state)\">{{ job.state }}</span>\n      </td>\n\n      <td *ngIf=\"hasGlobalProgress()\" class=\"job-progress c-hand\" [pRowToggler]=\"job\">\n        <ng-container *ngIf=\"hasProgress(job)\">{{ getProgress(job) }}</ng-container>\n      </td>\n\n      <td class=\"job-date c-hand\" [pRowToggler]=\"job\">{{ job.createdAt }}</td>\n\n      <td class=\"fs-7\">\n        <div>{{ job.processedOn }}</div>\n        <div>{{ job.finishedOn}}</div>\n      </td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"rowexpansion\" let-job>\n    <tr>\n      <td myAutoColspan>\n        <pre>{{ [\n          'Job: ' + job.id,\n          'Type: ' + job.type,\n          'Processed on ' + (job.processedOn || '-'),\n          'Finished on ' + (job.finishedOn || '-')\n        ].join('\\n') }}</pre>\n      </td>\n    </tr>\n\n    <tr>\n      <td myAutoColspan>\n        <pre>{{ job.data }}</pre>\n      </td>\n    </tr>\n\n    <tr class=\"job-error\" *ngIf=\"job.error\">\n      <td myAutoColspan>\n        <pre>{{ job.error }}</pre>\n      </td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\">\n    <tr>\n      <td myAutoColspan>\n        <div class=\"no-results\">\n          <div class=\"d-block\">\n            @if (jobState === 'all') {\n              @if (jobType === 'all') {\n                <ng-container i18n>No jobs found.</ng-container>\n              } @else {\n                <ng-container i18n>No <code>{{ jobType }}</code> jobs found.</ng-container>\n              }\n            } @else {\n              @if (jobType === 'all') {\n                <ng-container i18n>No <span [ngClass]=\"getJobStateClasses(jobState)\">{{ jobState }}</span> jobs found.</ng-container>\n              } @else {\n                <ng-container i18n>No <code>{{ jobType }}</code> jobs found that are <span [ngClass]=\"getJobStateClasses(jobState)\">{{ jobState }}</span>.</ng-container>\n              }\n            }\n          </div>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { Notifier, RestPagination, RestTable } from '@app/core'\nimport { SelectOptionsComponent } from '@app/shared/shared-forms/select/select-options.component'\n\nimport { AutoColspanDirective } from '@app/shared/shared-main/common/auto-colspan.directive'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { Job, JobState, JobType } from '@peertube/peertube-models'\nimport { peertubeLocalStorage } from '@root-helpers/peertube-web-storage'\nimport { SharedModule, SortMeta } from 'primeng/api'\nimport { TableModule } from 'primeng/table'\nimport { SelectOptionsItem } from 'src/types'\nimport { JobStateClient } from '../../../../types/job-state-client.type'\nimport { JobTypeClient } from '../../../../types/job-type-client.type'\nimport { ButtonComponent } from '../../../shared/shared-main/buttons/button.component'\nimport { TableExpanderIconComponent } from '../../../shared/shared-tables/table-expander-icon.component'\nimport { JobService } from './job.service'\n\n@Component({\n  selector: 'my-jobs',\n  templateUrl: './jobs.component.html',\n  styleUrls: [ './jobs.component.scss' ],\n  imports: [\n    FormsModule,\n    NgClass,\n    ButtonComponent,\n    TableModule,\n    SharedModule,\n    NgIf,\n    NgbTooltip,\n    TableExpanderIconComponent,\n    SelectOptionsComponent,\n    AutoColspanDirective\n  ]\n})\nexport class JobsComponent extends RestTable implements OnInit {\n  private notifier = inject(Notifier)\n  private jobsService = inject(JobService)\n\n  private static LS_STATE = 'jobs-list-state'\n  private static LS_TYPE = 'jobs-list-type'\n\n  jobState: JobStateClient = 'all'\n  jobStates: JobStateClient[] = [ 'all', 'active', 'completed', 'failed', 'waiting', 'delayed' ]\n  jobStateItems: SelectOptionsItem[] = this.jobStates.map(s => ({\n    id: s,\n    label: s,\n    classes: this.getJobStateClasses(s)\n  }))\n\n  jobType: JobTypeClient = 'all'\n  jobTypes: JobTypeClient[] = [\n    'all',\n\n    'activitypub-cleaner',\n    'activitypub-follow',\n    'activitypub-http-broadcast-parallel',\n    'activitypub-http-broadcast',\n    'activitypub-http-fetcher',\n    'activitypub-http-unicast',\n    'activitypub-refresher',\n    'actor-keys',\n    'after-video-channel-import',\n    'create-user-export',\n    'email',\n    'federate-video',\n    'generate-video-storyboard',\n    'manage-video-torrent',\n    'move-to-file-system',\n    'move-to-object-storage',\n    'notify',\n    'transcoding-job-builder',\n    'video-channel-import',\n    'video-file-import',\n    'video-import',\n    'video-live-ending',\n    'video-redundancy',\n    'video-studio-edition',\n    'video-transcoding',\n    'video-transcription',\n    'videos-views-stats'\n  ]\n  jobTypeItems: SelectOptionsItem[] = this.jobTypes.map(i => ({ id: i, label: i }))\n\n  jobs: Job[] = []\n  totalRecords: number\n  sort: SortMeta = { field: 'createdAt', order: -1 }\n  pagination: RestPagination = { count: this.rowsPerPage, start: 0 }\n\n  ngOnInit () {\n    this.loadJobStateAndType()\n    this.initialize()\n  }\n\n  getIdentifier () {\n    return 'JobsComponent'\n  }\n\n  getJobStateClasses (state: JobStateClient) {\n    switch (state) {\n      case 'active':\n        return [ 'pt-badge', 'badge-blue' ]\n      case 'completed':\n        return [ 'pt-badge', 'badge-green' ]\n      case 'delayed':\n        return [ 'pt-badge', 'badge-brown' ]\n      case 'failed':\n        return [ 'pt-badge', 'badge-red' ]\n      case 'waiting':\n        return [ 'pt-badge', 'badge-yellow' ]\n    }\n\n    return []\n  }\n\n  onJobStateOrTypeChanged () {\n    this.pagination.start = 0\n\n    this.reloadData()\n    this.saveJobStateAndType()\n  }\n\n  hasGlobalProgress () {\n    return this.jobType === 'all' || this.jobType === 'video-transcoding'\n  }\n\n  hasProgress (job: Job) {\n    return job.type === 'video-transcoding'\n  }\n\n  getProgress (job: Job) {\n    if (job.state === 'active') return job.progress + '%'\n\n    return ''\n  }\n\n  refresh () {\n    this.jobs = []\n    this.totalRecords = 0\n\n    this.reloadData()\n  }\n\n  getRandomJobTypeBadge (type: string) {\n    return this.getRandomBadge('type', type)\n  }\n\n  protected reloadDataInternal () {\n    let jobState = this.jobState as JobState\n    if (this.jobState === 'all') jobState = null\n\n    this.jobsService\n      .listJobs({\n        jobState,\n        jobType: this.jobType,\n        pagination: this.pagination,\n        sort: this.sort\n      })\n      .subscribe({\n        next: resultList => {\n          this.jobs = resultList.data\n          this.totalRecords = resultList.total\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  private loadJobStateAndType () {\n    const state = peertubeLocalStorage.getItem(JobsComponent.LS_STATE)\n    if (state && state !== 'undefined') this.jobState = state as JobState\n\n    const jobType = peertubeLocalStorage.getItem(JobsComponent.LS_TYPE)\n    if (jobType && jobType !== 'undefined') this.jobType = jobType as JobType\n  }\n\n  private saveJobStateAndType () {\n    peertubeLocalStorage.setItem(JobsComponent.LS_STATE, this.jobState)\n    peertubeLocalStorage.setItem(JobsComponent.LS_TYPE, this.jobType)\n  }\n}\n","import omit from 'lodash-es/omit'\nimport { logger } from '@root-helpers/logger'\nimport { ServerLogLevel } from '@peertube/peertube-models'\n\nexport class LogRow {\n  date: Date\n  localeDate: string\n  level: ServerLogLevel\n  message: string\n  meta: string\n\n  by: string\n  domain: string\n  action: string\n\n  constructor (row: any) {\n    this.date = new Date(row.timestamp)\n    this.localeDate = this.date.toLocaleString()\n    this.level = row.level\n    this.message = row.message\n\n    const metaObj = omit(row, 'timestamp', 'level', 'message', 'label')\n\n    if (Object.keys(metaObj).length !== 0) this.meta = JSON.stringify(metaObj, undefined, 2)\n\n    if (row.level === 'audit') {\n      try {\n        const message = JSON.parse(row.message)\n\n        this.by = message.user\n        this.domain = message.domain\n        this.action = message.action\n\n        this.meta = JSON.stringify(message, null, 2)\n        this.message = ''\n      } catch (err) {\n        logger.error('Cannot parse audit message.', err)\n      }\n    }\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable, inject } from '@angular/core'\nimport { RestExtractor, RestService } from '@app/core'\nimport { ServerLogLevel } from '@peertube/peertube-models'\nimport { catchError, map } from 'rxjs/operators'\nimport { environment } from '../../../../environments/environment'\nimport { LogRow } from './log-row.model'\n\n@Injectable()\nexport class LogsService {\n  private authHttp = inject(HttpClient)\n  private restService = inject(RestService)\n  private restExtractor = inject(RestExtractor)\n\n  private static BASE_LOG_URL = environment.apiUrl + '/api/v1/server/logs'\n  private static BASE_AUDIT_LOG_URL = environment.apiUrl + '/api/v1/server/audit-logs'\n\n  getLogs (options: {\n    isAuditLog: boolean\n    startDate: string\n    tagsOneOf?: string[]\n    level?: ServerLogLevel\n    endDate?: string\n  }) {\n    const { isAuditLog, startDate, endDate, tagsOneOf } = options\n\n    let params = new HttpParams()\n    params = params.append('startDate', startDate)\n\n    if (!isAuditLog) params = params.append('level', options.level)\n    if (endDate) params = params.append('endDate', options.endDate)\n    if (tagsOneOf) params = this.restService.addArrayParams(params, 'tagsOneOf', tagsOneOf)\n\n    const path = isAuditLog\n      ? LogsService.BASE_AUDIT_LOG_URL\n      : LogsService.BASE_LOG_URL\n\n    return this.authHttp.get<LogRow[]>(path, { params })\n      .pipe(\n        map(rows => rows.map(r => new LogRow(r))),\n        catchError(err => this.restExtractor.handleError(err))\n      )\n  }\n}\n","<div class=\"header\">\n\n  <div>\n    <label i18n for=\"log-type\">Log type</label>\n\n    <div class=\"peertube-select-container\">\n      <select id=\"log-type\" [(ngModel)]=\"logType\" (ngModelChange)=\"refresh()\" class=\"form-control\">\n        <option *ngFor=\"let logTypeChoice of logTypeChoices\" [value]=\"logTypeChoice.id\">{{ logTypeChoice.label }}</option>\n      </select>\n    </div>\n  </div>\n\n  @if (!isAuditLog()) {\n    <div>\n      <label i18n for=\"log-start-date\">Start date</label>\n\n      <my-select-options inputId=\"log-start-date\" [items]=\"timeChoices\" [(ngModel)]=\"startDate\" (ngModelChange)=\"refresh()\">\n        <ng-template ptTemplate=\"item\" let-item>\n          {{ item.label }} ({{ item.id | ptDate: item.dateFormat }} - <span i18n>now</span>)\n        </ng-template>\n      </my-select-options>\n    </div>\n\n    <div>\n      <label i18n for=\"log-level\">Log level</label>\n\n      <my-select-options inputId=\"log-level\" [items]=\"levelChoices\" [(ngModel)]=\"level\" (ngModelChange)=\"refresh()\">\n        <ng-template ptTemplate=\"item\" let-item>\n          <span class=\"level-choice me-1\" [ngClass]=\"item.id\">&#11044;</span> {{ item.label }}\n        </ng-template>\n      </my-select-options>\n    </div>\n\n    <div>\n      <label i18n for=\"log-tags\">Filter logs by tags</label>\n\n      <my-select-tags\n        *ngIf=\"!isAuditLog()\"\n        inputId=\"log-tags\"\n        i18n-placeholder placeholder=\"Example: ffmpeg, api\"\n        [(ngModel)]=\"tagsOneOf\" (ngModelChange)=\"refresh()\"\n      ></my-select-tags>\n    </div>\n  }\n\n  <my-button class=\"mt-auto\" i18n-label label=\"Refresh\" icon=\"refresh\" (click)=\"refresh()\"></my-button>\n</div>\n\n<div class=\"logs\">\n  <div *ngIf=\"loading\" i18n>Loading...</div>\n\n  <div #logsElement>\n    <my-copy-button\n      *ngIf=\"logs.length !== 0\"\n      i18n-notification notification=\"Logs copied\" i18n-title title=\"Copy logs\"\n      withBorder=\"true\" [elementContent]=\"logsContent\"\n    ></my-copy-button>\n\n    <div *ngIf=\"!loading && logs.length === 0\" i18n>No log.</div>\n\n    <div #logsContent>\n      <div *ngFor=\"let log of logs\" class=\"log-row\" [ngClass]=\"{ error: log.level === 'error', warn: log.level === 'warn' }\">\n        <span class=\"log-level\">{{ log.level }}</span>\n\n        <span class=\"log-date\">[{{ log.localeDate }}]</span>\n\n        <strong class=\"log-by\" *ngIf=\"log.by\" i18n>By {{ log.by }} -></strong>\n        <strong class=\"log-domain-action\" *ngIf=\"log.domain\">{{ log.domain }} -> {{ log.action }}</strong>\n\n        {{ log.message }}\n\n        <pre>{{ log.meta }}</pre>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgClass, NgFor, NgIf } from '@angular/common'\nimport { Component, ElementRef, OnInit, inject, viewChild } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { LocalStorageService, Notifier } from '@app/core'\nimport { SelectOptionsComponent } from '@app/shared/shared-forms/select/select-options.component'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { PeerTubeTemplateDirective } from '@app/shared/shared-main/common/peertube-template.directive'\nimport { ServerLogLevel } from '@peertube/peertube-models'\nimport { SelectTagsComponent } from '../../../shared/shared-forms/select/select-tags.component'\nimport { ButtonComponent } from '../../../shared/shared-main/buttons/button.component'\nimport { CopyButtonComponent } from '../../../shared/shared-main/buttons/copy-button.component'\nimport { LogRow } from './log-row.model'\nimport { LogsService } from './logs.service'\n\n@Component({\n  templateUrl: './logs.component.html',\n  styleUrls: [ './logs.component.scss' ],\n  imports: [\n    FormsModule,\n    NgFor,\n    NgIf,\n    NgClass,\n    SelectTagsComponent,\n    ButtonComponent,\n    PTDatePipe,\n    CopyButtonComponent,\n    SelectOptionsComponent,\n    PeerTubeTemplateDirective\n  ]\n})\nexport class LogsComponent implements OnInit {\n  private logsService = inject(LogsService)\n  private notifier = inject(Notifier)\n  private localStorage = inject(LocalStorageService)\n\n  private static LS_LOG_TYPE_CHOICE_KEY = 'admin-logs-log-type-choice'\n\n  readonly logsElement = viewChild<ElementRef<HTMLElement>>('logsElement')\n  readonly logsContent = viewChild<ElementRef<HTMLElement>>('logsContent')\n\n  loading = false\n\n  rawLogs: string\n  logs: LogRow[] = []\n\n  timeChoices: { id: string, label: string, dateFormat: string }[] = []\n  levelChoices: { id: ServerLogLevel, label: string }[] = []\n  logTypeChoices: { id: 'audit' | 'standard', label: string }[] = []\n\n  startDate: string\n  level: ServerLogLevel\n  logType: 'audit' | 'standard'\n  tagsOneOf: string[] = []\n\n  ngOnInit (): void {\n    this.buildTimeChoices()\n    this.buildLevelChoices()\n    this.buildLogTypeChoices()\n\n    this.loadPreviousChoices()\n\n    this.load()\n  }\n\n  refresh () {\n    this.logs = []\n\n    this.localStorage.setItem(LogsComponent.LS_LOG_TYPE_CHOICE_KEY, this.logType)\n\n    this.load()\n  }\n\n  load () {\n    this.loading = true\n\n    const tagsOneOf = this.tagsOneOf.length !== 0\n      ? this.tagsOneOf\n      : undefined\n\n    this.logsService.getLogs({\n      isAuditLog: this.isAuditLog(),\n      level: this.level,\n      startDate: this.startDate,\n      tagsOneOf\n    }).subscribe({\n      next: logs => {\n        this.logs = logs\n\n        this.rawLogs = this.logs.map(l => `${l.level} ${l.localeDate} ${l.message} ${l.meta}`).join('\\n')\n\n        setTimeout(() => {\n          this.logsElement().nativeElement.scrollIntoView({ block: 'end', inline: 'nearest' })\n        })\n      },\n\n      error: err => this.notifier.error(err.message),\n\n      complete: () => this.loading = false\n    })\n  }\n\n  isAuditLog () {\n    return this.logType === 'audit'\n  }\n\n  buildTimeChoices () {\n    const lastHour = new Date()\n    lastHour.setHours(lastHour.getHours() - 1)\n\n    const lastDay = new Date()\n    lastDay.setDate(lastDay.getDate() - 1)\n\n    const lastWeek = new Date()\n    lastWeek.setDate(lastWeek.getDate() - 7)\n\n    this.timeChoices = [\n      {\n        id: lastWeek.toISOString(),\n        label: $localize`Last week`,\n        dateFormat: 'shortDate'\n      },\n      {\n        id: lastDay.toISOString(),\n        label: $localize`Last day`,\n        dateFormat: 'short'\n      },\n      {\n        id: lastHour.toISOString(),\n        label: $localize`Last hour`,\n        dateFormat: 'mediumTime'\n      }\n    ]\n\n    this.startDate = lastHour.toISOString()\n  }\n\n  buildLevelChoices () {\n    this.levelChoices = [\n      {\n        id: 'debug',\n        label: $localize`debug`\n      },\n      {\n        id: 'info',\n        label: $localize`info`\n      },\n      {\n        id: 'warn',\n        label: $localize`warning`\n      },\n      {\n        id: 'error',\n        label: $localize`error`\n      }\n    ]\n\n    this.level = 'warn'\n  }\n\n  buildLogTypeChoices () {\n    this.logTypeChoices = [\n      {\n        id: 'standard',\n        label: $localize`Standard logs`\n      },\n      {\n        id: 'audit',\n        label: $localize`Audit logs`\n      }\n    ]\n  }\n\n  private loadPreviousChoices () {\n    this.logType = this.localStorage.getItem(LogsComponent.LS_LOG_TYPE_CHOICE_KEY)\n\n    if (this.logType !== 'standard' && this.logType !== 'audit') this.logType = 'audit'\n  }\n}\n","import { SortMeta } from 'primeng/api'\nimport { catchError, concatMap, forkJoin, from, map, toArray } from 'rxjs'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable, inject } from '@angular/core'\nimport { RestExtractor, RestPagination, RestService, ServerService } from '@app/core'\nimport { arrayify, peertubeTranslate } from '@peertube/peertube-core-utils'\nimport { ResultList, Runner, RunnerJob, RunnerJobAdmin, RunnerJobState, RunnerRegistrationToken } from '@peertube/peertube-models'\nimport { environment } from '../../../../environments/environment'\n\nexport type RunnerJobFormatted = RunnerJob & {\n  payload: string\n  privatePayload: string\n}\n\n@Injectable()\nexport class RunnerService {\n  private authHttp = inject(HttpClient)\n  private server = inject(ServerService)\n  private restService = inject(RestService)\n  private restExtractor = inject(RestExtractor)\n\n  private static BASE_RUNNER_URL = environment.apiUrl + '/api/v1/runners'\n\n  listRegistrationTokens (options: {\n    pagination: RestPagination\n    sort: SortMeta\n  }) {\n    const { pagination, sort } = options\n\n    let params = new HttpParams()\n    params = this.restService.addRestGetParams(params, pagination, sort)\n\n    return this.authHttp.get<ResultList<RunnerRegistrationToken>>(RunnerService.BASE_RUNNER_URL + '/registration-tokens', { params })\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  generateToken () {\n    return this.authHttp.post(RunnerService.BASE_RUNNER_URL + '/registration-tokens/generate', {})\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  removeToken (token: RunnerRegistrationToken) {\n    return this.authHttp.delete(RunnerService.BASE_RUNNER_URL + '/registration-tokens/' + token.id)\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  // ---------------------------------------------------------------------------\n\n  listRunnerJobs (options: {\n    pagination: RestPagination\n    sort: SortMeta\n    search?: string\n  }) {\n    const { pagination, sort, search } = options\n\n    let params = new HttpParams()\n    params = this.restService.addRestGetParams(params, pagination, sort)\n\n    if (search) {\n      params = this.buildParamsFromSearch(search, params)\n    }\n\n    return forkJoin([\n      this.authHttp.get<ResultList<RunnerJobAdmin>>(RunnerService.BASE_RUNNER_URL + '/jobs', { params }),\n      this.server.getServerLocale()\n    ]).pipe(\n      map(([ res, translations ]) => {\n        const newData = res.data.map(job => {\n          return {\n            ...job,\n\n            state: {\n              id: job.state.id,\n              label: peertubeTranslate(job.state.label, translations)\n            },\n            payload: JSON.stringify(job.payload, null, 2),\n            privatePayload: JSON.stringify(job.privatePayload, null, 2)\n          } as RunnerJobFormatted\n        })\n\n        return {\n          total: res.total,\n          data: newData\n        }\n      }),\n      map(res => this.restExtractor.convertResultListDateToHuman(res, [ 'createdAt', 'startedAt', 'finishedAt' ], 'precise')),\n      catchError(res => this.restExtractor.handleError(res))\n    )\n  }\n\n  private buildParamsFromSearch (search: string, params: HttpParams) {\n    const filters = this.restService.parseQueryStringFilter(search, {\n      stateOneOf: {\n        prefix: 'state:',\n        multiple: true,\n        handler: v => {\n          if (v === 'completed') return RunnerJobState.COMPLETED\n          if (v === 'processing') return RunnerJobState.PROCESSING\n          if (v === 'errored') return RunnerJobState.ERRORED\n          if (v === 'pending') return RunnerJobState.PENDING\n          if (v === 'waiting-for-parent-job') return RunnerJobState.WAITING_FOR_PARENT_JOB\n          if (v === 'parent-errored') return RunnerJobState.PARENT_ERRORED\n\n          return undefined\n        }\n      }\n    })\n\n    return this.restService.addObjectParams(params, filters)\n  }\n\n  // ---------------------------------------------------------------------------\n\n  cancelJobs (jobsArg: RunnerJob | RunnerJob[]) {\n    const jobs = arrayify(jobsArg)\n\n    return from(jobs)\n      .pipe(\n        concatMap(job => this.authHttp.post(RunnerService.BASE_RUNNER_URL + '/jobs/' + job.uuid + '/cancel', {})),\n        toArray(),\n        catchError(err => this.restExtractor.handleError(err))\n      )\n  }\n\n  removeJobs (jobsArg: RunnerJob | RunnerJob[]) {\n    const jobs = arrayify(jobsArg)\n\n    return from(jobs)\n      .pipe(\n        concatMap(job => this.authHttp.delete(RunnerService.BASE_RUNNER_URL + '/jobs/' + job.uuid)),\n        toArray(),\n        catchError(err => this.restExtractor.handleError(err))\n      )\n  }\n\n  // ---------------------------------------------------------------------------\n\n  listRunners (options: {\n    pagination: RestPagination\n    sort: SortMeta\n  }) {\n    const { pagination, sort } = options\n\n    let params = new HttpParams()\n    params = this.restService.addRestGetParams(params, pagination, sort)\n\n    return this.authHttp.get<ResultList<Runner>>(RunnerService.BASE_RUNNER_URL + '/', { params })\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  deleteRunner (runner: Runner) {\n    return this.authHttp.delete(RunnerService.BASE_RUNNER_URL + '/' + runner.id)\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n}\n","<p-table\n  [value]=\"runnerJobs\" [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\" [rows]=\"rowsPerPage\" [first]=\"pagination.start\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\" [sortField]=\"sort.field\" [sortOrder]=\"sort.order\"\n  [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\" [lazyLoadOnInit]=\"false\"\n  [(selection)]=\"selectedRows\" [showCurrentPageReport]=\"true\" [currentPageReportTemplate]=\"getPaginationTemplate()\"\n  [expandedRowKeys]=\"expandedRows\" dataKey=\"uuid\"\n>\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th scope=\"col\" style=\"width: 40px\">\n        <p-tableHeaderCheckbox ariaLabel=\"Select all rows\" i18n-ariaLabel></p-tableHeaderCheckbox>\n      </th>\n      <th scope=\"col\" style=\"width: 40px;\">\n        <span i18n class=\"visually-hidden\">More information</span>\n      </th>\n      <th scope=\"col\" style=\"width: 120px;\">\n        <span i18n class=\"visually-hidden\">Actions</span>\n      </th>\n      <th scope=\"col\" i18n>UUID</th>\n      <th scope=\"col\" i18n>Type</th>\n      <th scope=\"col\" style=\"width: 150px\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"state\">State <p-sortIcon field=\"state\"></p-sortIcon></th>\n      <th scope=\"col\" style=\"width: 100px\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"priority\">Priority <p-sortIcon field=\"priority\"></p-sortIcon></th>\n      <th scope=\"col\" style=\"width: 100px\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"progress\">Progress <p-sortIcon field=\"progress\"></p-sortIcon></th>\n      <th scope=\"col\" style=\"width: 100px;\" i18n>Runner</th>\n      <th scope=\"col\" style=\"width: 200px;\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"createdAt\">Created <p-sortIcon field=\"createdAt\"></p-sortIcon></th>\n      <th scope=\"col\" style=\"width: 230px;\" i18n>Processed/Finished</th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"caption\">\n\n    <div class=\"caption\">\n      <div class=\"left-buttons\">\n        <my-action-dropdown\n          *ngIf=\"isInSelectionMode()\" i18n-label label=\"Batch actions\" theme=\"primary\"\n          [actions]=\"bulkActions\" [entry]=\"selectedRows\"\n        >\n        </my-action-dropdown>\n      </div>\n\n      <div class=\"ms-auto d-flex flex-wrap gap-2\">\n        <my-advanced-input-filter class=\"me-2\" [filters]=\"inputFilters\" (search)=\"onSearch($event)\"></my-advanced-input-filter>\n\n        <my-button i18n-label label=\"Refresh\" icon=\"refresh\" (click)=\"reloadData()\"></my-button>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-expanded=\"expanded\" let-runnerJob>\n    <tr [pSelectableRow]=\"runnerJob\">\n      <td class=\"checkbox-cell\">\n        <p-tableCheckbox [value]=\"runnerJob\" ariaLabel=\"Select this row\" i18n-ariaLabel></p-tableCheckbox>\n      </td>\n\n      <td class=\"expand-cell\">\n        <my-table-expander-icon [pRowToggler]=\"runnerJob\" [expanded]=\"expanded\"></my-table-expander-icon>\n      </td>\n\n      <td class=\"action-cell\">\n        <my-action-dropdown\n          placement=\"bottom-right top-right left auto\" container=\"body\"\n          i18n-label label=\"Actions\" [actions]=\"actions\" [entry]=\"runnerJob\" buttonSize=\"small\"\n        ></my-action-dropdown>\n      </td>\n\n      <td>{{ runnerJob.uuid }}</td>\n\n      <td>\n        <span class=\"pt-badge ellipsis\" [title]=\"runnerJob.type\" [ngClass]=\"getRandomRunnerTypeBadge(runnerJob.type)\">{{ runnerJob.type }}</span>\n      </td>\n\n      <td>\n        <span class=\"pt-badge ellipsis\" [title]=\"runnerJob.state.label\" [ngClass]=\"getStateBadgeColor(runnerJob)\">{{ runnerJob.state.label }}</span>\n      </td>\n\n      <td>{{ runnerJob.priority }}</td>\n\n      <td>\n        <ng-container *ngIf=\"runnerJob.progress\">{{ runnerJob.progress }}%</ng-container>\n      </td>\n\n      <td>\n        <div *ngIf=\"runnerJob.runner?.name\" class=\"pt-badge\" [ngClass]=\"getRandomRunnerNameBadge(runnerJob.runner.name)\">\n          {{ runnerJob.runner.name }}\n        </div>\n      </td>\n      <td>{{ runnerJob.createdAt }}</td>\n\n      <td class=\"fs-7\">\n        <div>{{ runnerJob.startedAt }}</div>\n        <div>{{ runnerJob.finishedAt}}</div>\n      </td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"rowexpansion\" let-runnerJob>\n    <tr>\n      <td myAutoColspan>\n        <div class=\"mt-2 fs-7 font-monospace\">\n          Parent job: {{ runnerJob.parent?.uuid || '-' }} <br />\n          Processed on {{ (runnerJob.startedAt || '-') }} <br />\n          Finished on {{ (runnerJob.finishedAt || '-') }} <br />\n        </div>\n\n        <div class=\"mt-2\">\n          <strong i18n>Payload:</strong>\n          <pre>{{ runnerJob.payload }}</pre>\n        </div>\n\n        <div class=\"mt-2\">\n          <strong i18n>Private payload:</strong>\n          <pre>{{ runnerJob.privatePayload }}</pre>\n        </div>\n\n        <pre *ngIf=\"runnerJob.error\" class=\"text-danger\" >{{ runnerJob.error }}</pre>\n      </td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\">\n    <tr>\n      <td myAutoColspan>\n        <div class=\"no-results\">\n          <ng-container i18n>No runner jobs found.</ng-container>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\n\nimport { ConfirmService, Notifier, RestPagination, RestTable } from '@app/core'\nimport { formatICU } from '@app/helpers'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { RunnerJob, RunnerJobState } from '@peertube/peertube-models'\nimport { SharedModule, SortMeta } from 'primeng/api'\nimport { TableModule } from 'primeng/table'\nimport { AdvancedInputFilter, AdvancedInputFilterComponent } from '../../../../shared/shared-forms/advanced-input-filter.component'\n\nimport { AutoColspanDirective } from '../../../../shared/shared-main/common/auto-colspan.directive'\nimport { ActionDropdownComponent, DropdownAction } from '../../../../shared/shared-main/buttons/action-dropdown.component'\nimport { ButtonComponent } from '../../../../shared/shared-main/buttons/button.component'\nimport { TableExpanderIconComponent } from '../../../../shared/shared-tables/table-expander-icon.component'\nimport { RunnerJobFormatted, RunnerService } from '../runner.service'\n\n@Component({\n  selector: 'my-runner-job-list',\n  templateUrl: './runner-job-list.component.html',\n  imports: [\n    TableModule,\n    SharedModule,\n    NgbTooltip,\n    NgIf,\n    ActionDropdownComponent,\n    AdvancedInputFilterComponent,\n    ButtonComponent,\n    TableExpanderIconComponent,\n    NgClass,\n    AutoColspanDirective\n  ]\n})\nexport class RunnerJobListComponent extends RestTable<RunnerJob> implements OnInit {\n  private runnerService = inject(RunnerService)\n  private notifier = inject(Notifier)\n  private confirmService = inject(ConfirmService)\n\n  runnerJobs: RunnerJobFormatted[] = []\n  totalRecords = 0\n\n  sort: SortMeta = { field: 'createdAt', order: -1 }\n  pagination: RestPagination = { count: this.rowsPerPage, start: 0 }\n\n  actions: DropdownAction<RunnerJob>[][] = []\n  bulkActions: DropdownAction<RunnerJob[]>[][] = []\n\n  inputFilters: AdvancedInputFilter[] = [\n    {\n      title: $localize`Advanced filters`,\n      children: [\n        {\n          value: 'state:completed',\n          label: $localize`Completed jobs`\n        },\n        {\n          value: 'state:pending state:waiting-for-parent-job',\n          label: $localize`Pending jobs`\n        },\n        {\n          value: 'state:processing',\n          label: $localize`Jobs that are being processed`\n        },\n        {\n          value: 'state:errored state:parent-errored',\n          label: $localize`Failed jobs`\n        }\n      ]\n    }\n  ]\n\n  ngOnInit () {\n    this.actions = [\n      [\n        {\n          label: $localize`Cancel this job`,\n          handler: job => this.cancelJobs([ job ]),\n          isDisplayed: job => this.canCancelJob(job)\n        }\n      ],\n      [\n        {\n          label: $localize`Delete this job`,\n          handler: job => this.removeJobs([ job ])\n        }\n      ]\n    ]\n\n    this.bulkActions = [\n      [\n        {\n          label: $localize`Cancel`,\n          handler: jobs => this.cancelJobs(jobs),\n          isDisplayed: jobs => jobs.every(j => this.canCancelJob(j))\n        }\n      ],\n      [\n        {\n          label: $localize`Delete`,\n          handler: jobs => this.removeJobs(jobs)\n        }\n      ]\n    ]\n\n    this.initialize()\n  }\n\n  getIdentifier () {\n    return 'RunnerJobListComponent'\n  }\n\n  async cancelJobs (jobs: RunnerJob[]) {\n    const message = formatICU(\n      $localize`Do you really want to cancel {count, plural, =1 {this job} other {{count} jobs}}? Children jobs will also be cancelled.`,\n      { count: jobs.length }\n    )\n\n    const res = await this.confirmService.confirm(message, $localize`Cancel`)\n\n    if (res === false) return\n\n    this.runnerService.cancelJobs(jobs)\n      .subscribe({\n        next: () => {\n          this.reloadData()\n\n          this.notifier.success(\n            formatICU(\n              $localize`{count, plural, =1 {Job cancelled} other {{count} jobs cancelled}}`,\n              { count: jobs.length }\n            )\n          )\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  async removeJobs (jobs: RunnerJob[]) {\n    const message = formatICU(\n      $localize`Do you really want to remove {count, plural, =1 {this job} other {{count} jobs}}? Children jobs will also be removed.`,\n      { count: jobs.length }\n    )\n\n    const res = await this.confirmService.confirm(message, $localize`Remove`)\n\n    if (res === false) return\n\n    this.runnerService.removeJobs(jobs)\n      .subscribe({\n        next: () => {\n          this.reloadData()\n\n          this.notifier.success(\n            formatICU(\n              $localize`{count, plural, =1 {Job removed} other {{count} jobs removed}}`,\n              { count: jobs.length }\n            )\n          )\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  getStateBadgeColor (job: RunnerJob) {\n    switch (job.state.id) {\n      case RunnerJobState.ERRORED:\n      case RunnerJobState.PARENT_ERRORED:\n        return 'badge-danger'\n\n      case RunnerJobState.COMPLETED:\n        return 'badge-success'\n\n      case RunnerJobState.PENDING:\n      case RunnerJobState.WAITING_FOR_PARENT_JOB:\n        return 'badge-warning'\n\n      default:\n        return 'badge-info'\n    }\n  }\n\n  getRandomRunnerNameBadge (value: string) {\n    return this.getRandomBadge('runner', value)\n  }\n\n  getRandomRunnerTypeBadge (value: string) {\n    return this.getRandomBadge('type', value)\n  }\n\n  protected reloadDataInternal () {\n    this.runnerService.listRunnerJobs({ pagination: this.pagination, sort: this.sort, search: this.search })\n      .subscribe({\n        next: resultList => {\n          this.runnerJobs = resultList.data\n          this.totalRecords = resultList.total\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  private canCancelJob (job: RunnerJob) {\n    return job.state.id === RunnerJobState.PENDING ||\n      job.state.id === RunnerJobState.PROCESSING ||\n      job.state.id === RunnerJobState.WAITING_FOR_PARENT_JOB\n  }\n}\n","<p-table\n  [value]=\"runners\" [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\" [rows]=\"rowsPerPage\" [first]=\"pagination.start\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\" [sortField]=\"sort.field\" [sortOrder]=\"sort.order\"\n  [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\"\n  [showCurrentPageReport]=\"true\" [currentPageReportTemplate]=\"getPaginationTemplate()\"\n>\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th scope=\"col\" style=\"width: 120px;\">\n        <span i18n class=\"visually-hidden\">Actions</span>\n      </th>\n      <th scope=\"col\" i18n>Name</th>\n      <th scope=\"col\" i18n>Description</th>\n      <th scope=\"col\" i18n>IP</th>\n      <th scope=\"col\" i18n>Last contact</th>\n      <th scope=\"col\" style=\"width: 150px;\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"createdAt\">Created <p-sortIcon field=\"createdAt\"></p-sortIcon></th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-runner>\n    <tr>\n      <td class=\"action-cell\">\n        <my-action-dropdown\n          placement=\"bottom-right top-right left auto\" container=\"body\"\n          i18n-label label=\"Actions\" [actions]=\"actions\" [entry]=\"runner\" buttonSize=\"small\"\n        ></my-action-dropdown>\n      </td>\n\n      <td>{{ runner.name }}</td>\n\n      <td>{{ runner.description }}</td>\n\n      <td>{{ runner.ip }}</td>\n\n      <td>{{ runner.lastContact | ptDate: 'short' }}</td>\n\n      <td>{{ runner.createdAt | ptDate: 'short' }}</td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\">\n    <tr>\n      <td myAutoColspan>\n        <div class=\"no-results\">\n          <ng-container i18n>No remote runners found.</ng-container>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n","import { Component, OnInit, inject } from '@angular/core'\nimport { ConfirmService, Notifier, RestPagination, RestTable } from '@app/core'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { Runner } from '@peertube/peertube-models'\nimport { SharedModule, SortMeta } from 'primeng/api'\nimport { TableModule } from 'primeng/table'\nimport { ActionDropdownComponent, DropdownAction } from '../../../../shared/shared-main/buttons/action-dropdown.component'\nimport { AutoColspanDirective } from '../../../../shared/shared-main/common/auto-colspan.directive'\nimport { RunnerService } from '../runner.service'\n\n@Component({\n  selector: 'my-runner-list',\n  templateUrl: './runner-list.component.html',\n  imports: [\n    TableModule,\n    SharedModule,\n    NgbTooltip,\n    ActionDropdownComponent,\n    AutoColspanDirective,\n    PTDatePipe\n  ]\n})\nexport class RunnerListComponent extends RestTable<Runner> implements OnInit {\n  private runnerService = inject(RunnerService)\n  private notifier = inject(Notifier)\n  private confirmService = inject(ConfirmService)\n\n  runners: Runner[] = []\n  totalRecords = 0\n\n  sort: SortMeta = { field: 'createdAt', order: -1 }\n  pagination: RestPagination = { count: this.rowsPerPage, start: 0 }\n\n  actions: DropdownAction<Runner>[][] = []\n\n  ngOnInit () {\n    this.actions = [\n      [\n        {\n          label: $localize`Remove`,\n          handler: runer => this.deleteRunner(runer)\n        }\n      ]\n    ]\n\n    this.initialize()\n  }\n\n  getIdentifier () {\n    return 'RunnerListComponent'\n  }\n\n  async deleteRunner (runner: Runner) {\n    const res = await this.confirmService.confirm(\n      $localize`Do you really want to delete this runner? It won't be able to process jobs anymore.`,\n      $localize`Remove ${runner.name}`\n    )\n\n    if (res === false) return\n\n    this.runnerService.deleteRunner(runner)\n      .subscribe({\n        next: () => {\n          this.reloadData()\n          this.notifier.success($localize`Runner removed.`)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  protected reloadDataInternal () {\n    this.runnerService.listRunners({ pagination: this.pagination, sort: this.sort })\n      .subscribe({\n        next: resultList => {\n          this.runners = resultList.data\n          this.totalRecords = resultList.total\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n}\n","<p-table\n  [value]=\"registrationTokens\" [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\" [rows]=\"rowsPerPage\" [first]=\"pagination.start\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\" [sortField]=\"sort.field\" [sortOrder]=\"sort.order\"\n  [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\"\n  [showCurrentPageReport]=\"true\" [currentPageReportTemplate]=\"getPaginationTemplate()\"\n>\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th scope=\"col\" style=\"width: 120px;\">\n        <span i18n class=\"visually-hidden\">Actions</span>\n      </th>\n      <th scope=\"col\" i18n>Token</th>\n      <th scope=\"col\" style=\"width: 150px;\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"createdAt\">Created <p-sortIcon field=\"createdAt\"></p-sortIcon></th>\n      <th scope=\"col\" style=\"width: 160px;\" i18n>Associated runners</th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"caption\">\n    <div class=\"caption\">\n      <div class=\"left-buttons\">\n        <my-button theme=\"primary\" i18n-label label=\"Generate token\" icon=\"add\" (click)=\"generateToken()\"></my-button>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-registrationToken>\n    <tr>\n      <td class=\"action-cell\">\n        <my-action-dropdown\n          placement=\"bottom-right top-right left auto\" container=\"body\"\n          i18n-label label=\"Actions\" [actions]=\"actions\" [entry]=\"registrationToken\" buttonSize=\"small\"\n        ></my-action-dropdown>\n      </td>\n\n      <td>\n        {{ registrationToken.registrationToken }}\n\n        <my-copy-button\n          [value]=\"registrationToken.registrationToken\" i18n-notification notification=\"Registration token copied\"\n          i18n-title title=\"Copy registration token\"\n        ></my-copy-button>\n      </td>\n\n      <td>{{ registrationToken.createdAt | ptDate: 'short'  }}</td>\n\n      <td>{{ registrationToken.registeredRunnersCount }}</td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\">\n    <tr>\n      <td myAutoColspan>\n        <div class=\"no-results\">\n          <ng-container i18n>No registration token found for remote runners.</ng-container>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n","import { Component, OnInit, inject } from '@angular/core'\n\nimport { ConfirmService, Notifier, RestPagination, RestTable } from '@app/core'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { RunnerRegistrationToken } from '@peertube/peertube-models'\nimport { SharedModule, SortMeta } from 'primeng/api'\nimport { TableModule } from 'primeng/table'\n\nimport { ActionDropdownComponent, DropdownAction } from '../../../../shared/shared-main/buttons/action-dropdown.component'\nimport { ButtonComponent } from '../../../../shared/shared-main/buttons/button.component'\nimport { CopyButtonComponent } from '../../../../shared/shared-main/buttons/copy-button.component'\nimport { AutoColspanDirective } from '../../../../shared/shared-main/common/auto-colspan.directive'\nimport { RunnerService } from '../runner.service'\n\n@Component({\n  selector: 'my-runner-registration-token-list',\n  styleUrls: [ './runner-registration-token-list.component.scss' ],\n  templateUrl: './runner-registration-token-list.component.html',\n  imports: [\n    TableModule,\n    SharedModule,\n    NgbTooltip,\n    ButtonComponent,\n    ActionDropdownComponent,\n    CopyButtonComponent,\n    AutoColspanDirective,\n    PTDatePipe\n  ]\n})\nexport class RunnerRegistrationTokenListComponent extends RestTable<RunnerRegistrationToken> implements OnInit {\n  private runnerService = inject(RunnerService)\n  private notifier = inject(Notifier)\n  private confirmService = inject(ConfirmService)\n\n  registrationTokens: RunnerRegistrationToken[] = []\n  totalRecords = 0\n\n  sort: SortMeta = { field: 'createdAt', order: -1 }\n  pagination: RestPagination = { count: this.rowsPerPage, start: 0 }\n\n  actions: DropdownAction<RunnerRegistrationToken>[][] = []\n\n  ngOnInit () {\n    this.actions = [\n      [\n        {\n          label: $localize`Remove this token`,\n          handler: token => this.removeToken(token)\n        }\n      ]\n    ]\n\n    this.initialize()\n  }\n\n  getIdentifier () {\n    return 'RunnerRegistrationTokenListComponent'\n  }\n\n  generateToken () {\n    this.runnerService.generateToken()\n      .subscribe({\n        next: () => {\n          this.reloadData()\n          this.notifier.success($localize`Registration token generated.`)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  async removeToken (token: RunnerRegistrationToken) {\n    const res = await this.confirmService.confirm(\n      $localize`Do you really want to remove this registration token? All associated runners will also be removed.`,\n      $localize`Remove registration token`\n    )\n\n    if (res === false) return\n\n    this.runnerService.removeToken(token)\n      .subscribe({\n        next: () => {\n          this.reloadData()\n          this.notifier.success($localize`Registration token removed.`)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  protected reloadDataInternal () {\n    this.runnerService.listRegistrationTokens({ pagination: this.pagination, sort: this.sort })\n      .subscribe({\n        next: resultList => {\n          this.registrationTokens = resultList.data\n          this.totalRecords = resultList.total\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n}\n","import { Routes } from '@angular/router'\nimport { UserRightGuard } from '@app/core'\nimport { UserRight } from '@peertube/peertube-models'\nimport { RunnerJobListComponent } from './runner-job-list'\nimport { RunnerListComponent } from './runner-list'\nimport { RunnerRegistrationTokenListComponent } from './runner-registration-token-list'\n\nexport const RunnersRoutes: Routes = [\n  {\n    path: 'runners',\n    canActivate: [ UserRightGuard ],\n    data: {\n      userRight: UserRight.MANAGE_RUNNERS\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'jobs-list',\n        pathMatch: 'full'\n      },\n\n      {\n        path: 'jobs-list',\n        component: RunnerJobListComponent,\n        data: {\n          meta: {\n            title: $localize`List runner jobs`\n          }\n        }\n      },\n\n      {\n        path: 'runners-list',\n        component: RunnerListComponent,\n        data: {\n          meta: {\n            title: $localize`List remote runners`\n          }\n        }\n      },\n\n      {\n        path: 'registration-tokens-list',\n        component: RunnerRegistrationTokenListComponent,\n        data: {\n          meta: {\n            title: $localize`List registration runner tokens`\n          }\n        }\n      }\n    ]\n  }\n]\n","import { Routes } from '@angular/router'\nimport { UserRightGuard } from '@app/core'\nimport { UserRight } from '@peertube/peertube-models'\nimport { DebugComponent } from './debug'\nimport { JobsComponent } from './jobs/jobs.component'\nimport { LogsComponent } from './logs'\nimport { RunnersRoutes } from './runners'\n\nexport const systemRoutes: Routes = [\n  {\n    path: 'system',\n    children: [\n      {\n        path: '',\n        redirectTo: 'jobs',\n        pathMatch: 'full'\n      },\n      {\n        path: 'jobs',\n        canActivate: [ UserRightGuard ],\n        component: JobsComponent,\n        data: {\n          meta: {\n            userRight: UserRight.MANAGE_JOBS,\n            title: $localize`Jobs`\n          }\n        }\n      },\n      {\n        path: 'logs',\n        canActivate: [ UserRightGuard ],\n        component: LogsComponent,\n        data: {\n          meta: {\n            userRight: UserRight.MANAGE_LOGS,\n            title: $localize`Logs`\n          }\n        }\n      },\n      {\n        path: 'debug',\n        canActivate: [ UserRightGuard ],\n        component: DebugComponent,\n        data: {\n          meta: {\n            userRight: UserRight.MANAGE_DEBUG,\n            title: $localize`Debug`\n          }\n        }\n      },\n\n      ...RunnersRoutes\n    ]\n  }\n]\n","import { Component, OnInit, inject } from '@angular/core'\nimport { RouterOutlet } from '@angular/router'\nimport { AuthService, ServerService } from '@app/core'\nimport { HorizontalMenuComponent, HorizontalMenuEntry } from '@app/shared/shared-main/menu/horizontal-menu.component'\nimport { UserRight, UserRightType } from '@peertube/peertube-models'\n\n@Component({\n  selector: 'my-admin-moderation',\n  templateUrl: './admin-moderation.component.html',\n  imports: [ HorizontalMenuComponent, RouterOutlet ]\n})\nexport class AdminModerationComponent implements OnInit {\n  private auth = inject(AuthService)\n  private server = inject(ServerService)\n\n  menuEntries: HorizontalMenuEntry[] = []\n\n  ngOnInit () {\n    this.server.configReloaded.subscribe(() => this.buildMenu())\n\n    this.buildMenu()\n  }\n\n  private buildMenu () {\n    this.menuEntries = []\n\n    if (this.hasRight(UserRight.MANAGE_ABUSES)) {\n      this.menuEntries.push({\n        label: $localize`Reports`,\n        routerLink: '/admin/moderation/abuses/list'\n      })\n    }\n\n    if (this.hasRight(UserRight.MANAGE_REGISTRATIONS)) {\n      this.menuEntries.push({\n        label: $localize`Registrations`,\n        routerLink: '/admin/moderation/registrations/list'\n      })\n    }\n\n    if (this.hasRight(UserRight.MANAGE_VIDEO_BLACKLIST)) {\n      this.menuEntries.push({\n        label: $localize`Video blocks`,\n        routerLink: '/admin/moderation/video-blocks/list'\n      })\n    }\n\n    if (this.hasRight(UserRight.MANAGE_ACCOUNTS_BLOCKLIST) || this.hasRight(UserRight.MANAGE_SERVERS_BLOCKLIST)) {\n      const item: HorizontalMenuEntry = {\n        label: $localize`Mutes`,\n        routerLink: '',\n        children: []\n      }\n\n      if (this.hasRight(UserRight.MANAGE_ACCOUNTS_BLOCKLIST)) {\n        item.children.push({\n          label: $localize`Muted accounts`,\n          routerLink: '/admin/moderation/blocklist/accounts'\n        })\n      }\n\n      if (this.hasRight(UserRight.MANAGE_SERVERS_BLOCKLIST)) {\n        item.children.push({\n          label: $localize`Muted servers`,\n          routerLink: '/admin/moderation/blocklist/servers'\n        })\n      }\n\n      item.routerLink = item.children[0].routerLink\n\n      this.menuEntries.push(item)\n    }\n\n    if (this.hasRight(UserRight.MANAGE_INSTANCE_WATCHED_WORDS)) {\n      this.menuEntries.push({\n        label: $localize`Watched words`,\n        routerLink: '/admin/moderation/watched-words/list'\n      })\n    }\n  }\n\n  private hasRight (right: UserRightType) {\n    return this.auth.getUser().hasRight(right)\n  }\n}\n","<div class=\"root\">\n  <a i18n class=\"visually-hidden-focusable skip-to-content-sub-menu\" href=\"#admin-moderation-content\" (click)=\"$event.preventDefault(); adminContent.focus()\">Skip the sub menu</a>\n\n  <div class=\"margin-content\">\n    <my-horizontal-menu i18n-h1 h1=\"Moderation\" h1Icon=\"moderation\" [menuEntries]=\"menuEntries\"></my-horizontal-menu>\n  </div>\n\n  <div #adminContent tabindex=\"-1\" id=\"admin-moderation-content\" class=\"margin-content outline-0\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component, OnInit, inject } from '@angular/core'\nimport { RouterOutlet } from '@angular/router'\nimport { AuthService } from '@app/core'\nimport { HorizontalMenuComponent, HorizontalMenuEntry } from '@app/shared/shared-main/menu/horizontal-menu.component'\nimport { UserRight, UserRightType } from '@peertube/peertube-models'\n\n@Component({\n  selector: 'my-admin-overview',\n  templateUrl: './admin-overview.component.html',\n  imports: [ HorizontalMenuComponent, RouterOutlet ]\n})\nexport class AdminOverviewComponent implements OnInit {\n  private auth = inject(AuthService)\n\n  menuEntries: HorizontalMenuEntry[] = []\n\n  ngOnInit () {\n    this.buildMenu()\n  }\n\n  private buildMenu () {\n    this.menuEntries = []\n\n    if (this.hasRight(UserRight.MANAGE_USERS)) {\n      this.menuEntries.push({\n        label: $localize`Users`,\n        routerLink: '/admin/overview/users'\n      })\n    }\n\n    if (this.hasRight(UserRight.SEE_ALL_VIDEOS)) {\n      this.menuEntries.push({\n        label: $localize`Videos`,\n        routerLink: '/admin/overview/videos',\n        queryParams: {\n          search: 'isLocal:true'\n        }\n      })\n    }\n\n    if (this.hasRight(UserRight.SEE_ALL_COMMENTS)) {\n      this.menuEntries.push({\n        label: $localize`Comments`,\n        routerLink: '/admin/overview/comments'\n      })\n    }\n  }\n\n  private hasRight (right: UserRightType) {\n    return this.auth.getUser().hasRight(right)\n  }\n}\n","<div class=\"root\">\n  <a i18n class=\"visually-hidden-focusable skip-to-content-sub-menu\" href=\"#admin-overview-content\" (click)=\"$event.preventDefault(); adminContent.focus()\">Skip the sub menu</a>\n\n  <div class=\"margin-content\">\n    <my-horizontal-menu i18n-h1 h1=\"Overview\" h1Icon=\"overview\" [menuEntries]=\"menuEntries\"></my-horizontal-menu>\n  </div>\n\n  <div #adminContent tabindex=\"-1\" id=\"admin-overview-content\" class=\"margin-content outline-0\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component, OnInit, inject } from '@angular/core'\nimport { RouterOutlet } from '@angular/router'\nimport { AuthService, ServerService } from '@app/core'\nimport { HorizontalMenuComponent, HorizontalMenuEntry } from '@app/shared/shared-main/menu/horizontal-menu.component'\nimport { PluginType, UserRight, UserRightType } from '@peertube/peertube-models'\n\n@Component({\n  selector: 'my-admin-settings',\n  templateUrl: './admin-settings.component.html',\n  imports: [ HorizontalMenuComponent, RouterOutlet ]\n})\nexport class AdminSettingsComponent implements OnInit {\n  private auth = inject(AuthService)\n  private server = inject(ServerService)\n\n  menuEntries: HorizontalMenuEntry[] = []\n\n  ngOnInit () {\n    this.server.configReloaded.subscribe(() => this.buildMenu())\n\n    this.buildMenu()\n  }\n\n  private buildMenu () {\n    this.menuEntries = []\n\n    this.buildConfigurationItems()\n    this.buildFederationItems()\n    this.buildPluginItems()\n    this.buildRunnerItems()\n    this.buildSystemItems()\n  }\n\n  private buildFederationItems () {\n    if (!this.hasRight(UserRight.MANAGE_SERVER_FOLLOW)) return\n\n    this.menuEntries.push({\n      label: $localize`Federation`,\n      routerLink: '/admin/settings/follows/following-list',\n      children: [\n        {\n          label: $localize`Following`,\n          routerLink: '/admin/settings/follows/following-list'\n        },\n        {\n          label: $localize`Followers`,\n          routerLink: '/admin/settings/follows/followers-list'\n        },\n        {\n          label: $localize`Video redundancies`,\n          routerLink: '/admin/settings/follows/video-redundancies-list'\n        }\n      ]\n    })\n  }\n\n  private buildConfigurationItems () {\n    if (this.hasRight(UserRight.MANAGE_CONFIGURATION)) {\n      this.menuEntries.push({ label: $localize`Configuration`, routerLink: '/admin/settings/config' })\n    }\n  }\n\n  private buildPluginItems () {\n    if (this.hasRight(UserRight.MANAGE_PLUGINS)) {\n      this.menuEntries.push({\n        label: $localize`Plugins/Themes`,\n        routerLink: '/admin/settings/plugins',\n        queryParams: {\n          pluginType: PluginType.PLUGIN\n        },\n        children: [\n          {\n            label: $localize`Installed plugins`,\n            routerLink: '/admin/settings/plugins/list-installed',\n            queryParams: {\n              pluginType: PluginType.PLUGIN\n            }\n          },\n          {\n            label: $localize`Search plugins`,\n            routerLink: '/admin/settings/plugins/search',\n            queryParams: {\n              pluginType: PluginType.PLUGIN\n            }\n          },\n          {\n            label: $localize`Installed themes`,\n            routerLink: '/admin/settings/plugins/list-installed',\n            queryParams: {\n              pluginType: PluginType.THEME\n            }\n          },\n          {\n            label: $localize`Search themes`,\n            routerLink: '/admin/settings/plugins/search',\n            queryParams: {\n              pluginType: PluginType.THEME\n            }\n          }\n        ]\n      })\n    }\n  }\n\n  private buildRunnerItems () {\n    if (!this.isRemoteRunnersEnabled() || !this.hasRight(UserRight.MANAGE_RUNNERS)) return\n\n    this.menuEntries.push({\n      label: $localize`Runners`,\n      routerLink: '/admin/settings/system/runners/runners-list',\n      children: [\n        {\n          label: $localize`Remote runners`,\n          routerLink: '/admin/settings/system/runners/runners-list'\n        },\n\n        {\n          label: $localize`Runner jobs`,\n          routerLink: '/admin/settings/system/runners/jobs-list'\n        },\n\n        {\n          label: $localize`Registration tokens`,\n          routerLink: '/admin/settings/system/runners/registration-tokens-list'\n        }\n      ]\n    })\n  }\n\n  private buildSystemItems () {\n    const systemItems: HorizontalMenuEntry = {\n      label: $localize`System`,\n      routerLink: '',\n      children: []\n    }\n\n    if (this.hasRight(UserRight.MANAGE_JOBS)) {\n      systemItems.children.push({\n        label: $localize`Local jobs`,\n        routerLink: '/admin/settings/system/jobs'\n      })\n    }\n\n    if (this.hasRight(UserRight.MANAGE_LOGS)) {\n      systemItems.children.push({\n        label: $localize`Logs`,\n        routerLink: '/admin/settings/system/logs'\n      })\n    }\n\n    if (this.hasRight(UserRight.MANAGE_DEBUG)) {\n      systemItems.children.push({\n        label: $localize`Debug`,\n        routerLink: '/admin/settings/system/debug'\n      })\n    }\n\n    if (systemItems.children.length === 0) return\n\n    systemItems.routerLink = systemItems.children[0].routerLink\n\n    this.menuEntries.push(systemItems)\n  }\n\n  private hasRight (right: UserRightType) {\n    return this.auth.getUser().hasRight(right)\n  }\n\n  private isRemoteRunnersEnabled () {\n    const config = this.server.getHTMLConfig()\n\n    return config.transcoding.remoteRunners.enabled ||\n      config.live.transcoding.remoteRunners.enabled ||\n      config.videoStudio.remoteRunners.enabled ||\n      config.videoTranscription.remoteRunners.enabled\n  }\n}\n","<div class=\"root\">\n  <a i18n class=\"visually-hidden-focusable skip-to-content-sub-menu\" href=\"#admin-settings-content\" (click)=\"$event.preventDefault(); adminContent.focus()\">Skip the sub menu</a>\n\n  <div class=\"margin-content\">\n    <my-horizontal-menu i18n-h1 h1=\"Settings\" h1Icon=\"config\" [menuEntries]=\"menuEntries\"></my-horizontal-menu>\n  </div>\n\n  <div #adminContent tabindex=\"-1\" id=\"admin-settings-content\" class=\"margin-content outline-0\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","<p-table\n  [value]=\"followers\" [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\" [rows]=\"rowsPerPage\" [first]=\"pagination.start\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\" [sortField]=\"sort.field\" [sortOrder]=\"sort.order\"\n  [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\" [lazyLoadOnInit]=\"false\"\n  [showCurrentPageReport]=\"true\" [currentPageReportTemplate]=\"getPaginationTemplate()\"\n  [(selection)]=\"selectedRows\"\n>\n  <ng-template pTemplate=\"caption\">\n    <div class=\"caption\">\n      <div class=\"left-buttons\">\n        <my-action-dropdown\n          *ngIf=\"isInSelectionMode()\" i18n-label label=\"Batch actions\" theme=\"primary\"\n          [actions]=\"bulkActions\" [entry]=\"selectedRows\"\n        >\n        </my-action-dropdown>\n      </div>\n\n      <div class=\"ms-auto\">\n        <my-advanced-input-filter [filters]=\"searchFilters\" (search)=\"onSearch($event)\"></my-advanced-input-filter>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th scope=\"col\" style=\"width: 40px\">\n        <p-tableHeaderCheckbox ariaLabel=\"Select all rows\" i18n-ariaLabel></p-tableHeaderCheckbox>\n      </th>\n      <th scope=\"col\" style=\"width: 150px;\" i18n>Actions</th>\n      <th scope=\"col\" i18n>Follower</th>\n      <th scope=\"col\" style=\"width: 100px;\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"state\">State <p-sortIcon field=\"state\"></p-sortIcon></th>\n      <th scope=\"col\" style=\"width: 150px;\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"score\">Link health <p-sortIcon field=\"score\"></p-sortIcon></th>\n      <th scope=\"col\" style=\"width: 150px;\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"createdAt\">Created <p-sortIcon field=\"createdAt\"></p-sortIcon></th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-follow>\n    <tr>\n      <td class=\"checkbox-cell\">\n        <p-tableCheckbox [value]=\"follow\" ariaLabel=\"Select this row\" i18n-ariaLabel></p-tableCheckbox>\n      </td>\n\n      <td class=\"action-cell\">\n        <my-button *ngIf=\"follow.state !== 'accepted'\" i18n-title title=\"Accept\" icon=\"tick\" (click)=\"acceptFollower([ follow ])\"></my-button>\n        <my-button *ngIf=\"follow.state !== 'rejected'\" i18n-title title=\"Reject\" icon=\"cross\" (click)=\"rejectFollower([ follow ])\"></my-button>\n\n        <my-delete-button *ngIf=\"follow.state === 'rejected'\" (click)=\"deleteFollowers([ follow ])\"></my-delete-button>\n      </td>\n      <td>\n        <a [href]=\"follow.follower.url\" i18n-title title=\"Open actor page in a new tab\" target=\"_blank\" rel=\"noopener noreferrer\">\n          {{ buildFollowerName(follow) }}\n          <my-global-icon iconName=\"external-link\"></my-global-icon>\n        </a>\n      </td>\n\n      <td>\n        <span *ngIf=\"follow.state === 'accepted'\" class=\"pt-badge badge-green\" i18n>Accepted</span>\n        <span *ngIf=\"follow.state === 'pending'\" class=\"pt-badge badge-yellow\" i18n>Pending</span>\n        <span *ngIf=\"follow.state === 'rejected'\" class=\"pt-badge badge-red\" i18n>Rejected</span>\n      </td>\n\n      <td>{{ follow.score / 10000 * 100 }}</td>\n      <td>{{ follow.createdAt | ptDate: 'short' }}</td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\">\n    <tr>\n      <td myAutoColspan>\n        <div class=\"no-results\">\n          <ng-container *ngIf=\"search\" i18n>No follower found matching current filters.</ng-container>\n          <ng-container *ngIf=\"!search\" i18n>Your instance doesn't have any follower.</ng-container>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n","import { NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { ConfirmService, Notifier, RestPagination, RestTable } from '@app/core'\nimport { formatICU } from '@app/helpers'\nimport { InstanceFollowService } from '@app/shared/shared-instance/instance-follow.service'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { ActorFollow } from '@peertube/peertube-models'\nimport { SharedModule, SortMeta } from 'primeng/api'\nimport { TableModule } from 'primeng/table'\nimport { AdvancedInputFilter, AdvancedInputFilterComponent } from '../../../shared/shared-forms/advanced-input-filter.component'\nimport { GlobalIconComponent } from '../../../shared/shared-icons/global-icon.component'\nimport { ActionDropdownComponent, DropdownAction } from '../../../shared/shared-main/buttons/action-dropdown.component'\nimport { ButtonComponent } from '../../../shared/shared-main/buttons/button.component'\nimport { DeleteButtonComponent } from '../../../shared/shared-main/buttons/delete-button.component'\nimport { AutoColspanDirective } from '../../../shared/shared-main/common/auto-colspan.directive'\n\n@Component({\n  selector: 'my-followers-list',\n  templateUrl: './followers-list.component.html',\n  styleUrls: [ './followers-list.component.scss' ],\n  imports: [\n    GlobalIconComponent,\n    TableModule,\n    SharedModule,\n    NgIf,\n    ActionDropdownComponent,\n    AdvancedInputFilterComponent,\n    NgbTooltip,\n    ButtonComponent,\n    DeleteButtonComponent,\n    AutoColspanDirective,\n    PTDatePipe\n  ]\n})\nexport class FollowersListComponent extends RestTable<ActorFollow> implements OnInit {\n  private confirmService = inject(ConfirmService)\n  private notifier = inject(Notifier)\n  private followService = inject(InstanceFollowService)\n\n  followers: ActorFollow[] = []\n  totalRecords = 0\n  sort: SortMeta = { field: 'createdAt', order: -1 }\n  pagination: RestPagination = { count: this.rowsPerPage, start: 0 }\n\n  searchFilters: AdvancedInputFilter[] = []\n\n  bulkActions: DropdownAction<ActorFollow[]>[] = []\n\n  ngOnInit () {\n    this.initialize()\n\n    this.searchFilters = this.followService.buildFollowsListFilters()\n\n    this.bulkActions = [\n      {\n        label: $localize`Reject`,\n        handler: follows => this.rejectFollower(follows),\n        isDisplayed: follows => follows.every(f => f.state !== 'rejected')\n      },\n      {\n        label: $localize`Accept`,\n        handler: follows => this.acceptFollower(follows),\n        isDisplayed: follows => follows.every(f => f.state !== 'accepted')\n      },\n      {\n        label: $localize`Delete`,\n        handler: follows => this.deleteFollowers(follows),\n        isDisplayed: follows => follows.every(f => f.state === 'rejected')\n      }\n    ]\n  }\n\n  getIdentifier () {\n    return 'FollowersListComponent'\n  }\n\n  acceptFollower (follows: ActorFollow[]) {\n    this.followService.acceptFollower(follows)\n      .subscribe({\n        next: () => {\n          const message = formatICU(\n            $localize`Accepted {count, plural, =1 {{followerName} follow request} other {{count} follow requests}}`,\n            { count: follows.length, followerName: this.buildFollowerName(follows[0]) }\n          )\n          this.notifier.success(message)\n\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  async rejectFollower (follows: ActorFollow[]) {\n    const message = formatICU(\n      $localize`Do you really want to reject {count, plural, =1 {{followerName} follow request?} other {{count} follow requests?}}`,\n      { count: follows.length, followerName: this.buildFollowerName(follows[0]) }\n    )\n\n    const res = await this.confirmService.confirm(message, $localize`Reject`)\n    if (res === false) return\n\n    this.followService.rejectFollower(follows)\n      .subscribe({\n        next: () => {\n          const message = formatICU(\n            $localize`Rejected {count, plural, =1 {{followerName} follow request} other {{count} follow requests}}`,\n            { count: follows.length, followerName: this.buildFollowerName(follows[0]) }\n          )\n          this.notifier.success(message)\n\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  async deleteFollowers (follows: ActorFollow[]) {\n    const icuParams = { count: follows.length, followerName: this.buildFollowerName(follows[0]) }\n\n    let message = $localize`Deleted followers will be able to send again a follow request.`\n    message += '<br /><br />'\n\n    message += formatICU(\n      $localize`Do you really want to delete {count, plural, =1 {{followerName} follow request?} other {{count} follow requests?}}`,\n      icuParams\n    )\n\n    const res = await this.confirmService.confirm(message, $localize`Delete`)\n    if (res === false) return\n\n    this.followService.removeFollower(follows)\n      .subscribe({\n        next: () => {\n          const message = formatICU(\n            $localize`Removed {count, plural, =1 {{followerName} follow request} other {{count} follow requests}}`,\n            icuParams\n          )\n\n          this.notifier.success(message)\n\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  buildFollowerName (follow: ActorFollow) {\n    return follow.follower.name + '@' + follow.follower.host\n  }\n\n  protected reloadDataInternal () {\n    this.followService.getFollowers({ pagination: this.pagination, sort: this.sort, search: this.search })\n      .subscribe({\n        next: resultList => {\n          this.followers = resultList.data\n          this.totalRecords = resultList.total\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n}\n","<ng-template #modal>\n  <div class=\"modal-header\">\n    <h4 i18n class=\"modal-title\">Follow</h4>\n\n    <button class=\"border-0 p-0\" title=\"Close this modal\" i18n-title (click)=\"hide()\">\n      <my-global-icon iconName=\"cross\"></my-global-icon>\n    </button>\n  </div>\n\n  <div class=\"modal-body\">\n    <form novalidate [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n      <div class=\"form-group\">\n        <label i18n for=\"hostsOrHandles\">1 host (without \"http://\"), account handle or channel handle per line</label>\n\n        <textarea\n          [placeholder]=\"placeholder\" formControlName=\"hostsOrHandles\" type=\"text\" id=\"hostsOrHandles\" name=\"hostsOrHandles\"\n          class=\"form-control\" [ngClass]=\"{ 'input-error': formErrors['hostsOrHandles'] }\" ngbAutofocus\n        ></textarea>\n\n        <div *ngIf=\"formErrors.hostsOrHandles\" class=\"form-error\" role=\"alert\">\n          {{ formErrors.hostsOrHandles }}\n\n          <div *ngIf=\"form.controls['hostsOrHandles'].errors.validHostsOrHandles\">\n            {{ form.controls['hostsOrHandles'].errors.validHostsOrHandles.value }}\n          </div>\n        </div>\n      </div>\n\n      <my-alert i18n *ngIf=\"httpEnabled() === false\"  type=\"warning\">\n        It seems that you are not on a HTTPS server. Your webserver needs to have TLS activated in order to follow servers.\n      </my-alert>\n\n      <div class=\"form-group inputs\">\n        <input\n          type=\"button\" role=\"button\" i18n-value value=\"Cancel\" class=\"peertube-button secondary-button\"\n          (click)=\"hide()\" (key.enter)=\"hide()\"\n        >\n\n        <input type=\"submit\" i18n-value value=\"Follow\" class=\"peertube-button primary-button\" [disabled]=\"!form.valid\" />\n      </div>\n    </form>\n  </div>\n\n</ng-template>\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnInit, inject, output, viewChild } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { Notifier } from '@app/core'\nimport { formatICU } from '@app/helpers'\nimport { UNIQUE_HOSTS_OR_HANDLE_VALIDATOR } from '@app/shared/form-validators/host-validators'\nimport { FormReactive } from '@app/shared/shared-forms/form-reactive'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { InstanceFollowService } from '@app/shared/shared-instance/instance-follow.service'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref'\nimport { splitAndGetNotEmpty } from '@root-helpers/string'\nimport { GlobalIconComponent } from '../../../shared/shared-icons/global-icon.component'\n\n@Component({\n  selector: 'my-follow-modal',\n  templateUrl: './follow-modal.component.html',\n  styleUrls: [ './follow-modal.component.scss' ],\n  imports: [ GlobalIconComponent, FormsModule, ReactiveFormsModule, NgClass, NgIf, AlertComponent ]\n})\nexport class FollowModalComponent extends FormReactive implements OnInit {\n  protected formReactiveService = inject(FormReactiveService)\n  private modalService = inject(NgbModal)\n  private followService = inject(InstanceFollowService)\n  private notifier = inject(Notifier)\n\n  readonly modal = viewChild<NgbModal>('modal')\n\n  readonly newFollow = output()\n\n  placeholder = 'example.com\\nchocobozzz@example.com\\nchocobozzz_channel@example.com'\n\n  private openedModal: NgbModalRef\n\n  ngOnInit () {\n    this.buildForm({\n      hostsOrHandles: UNIQUE_HOSTS_OR_HANDLE_VALIDATOR\n    })\n  }\n\n  openModal () {\n    this.openedModal = this.modalService.open(this.modal(), { centered: true })\n  }\n\n  hide () {\n    this.openedModal.close()\n  }\n\n  submit () {\n    this.addFollowing()\n\n    this.form.reset()\n    this.hide()\n  }\n\n  httpEnabled () {\n    return window.location.protocol === 'https:'\n  }\n\n  private addFollowing () {\n    const hostsOrHandles = splitAndGetNotEmpty(this.form.value['hostsOrHandles'])\n\n    this.followService.follow(hostsOrHandles)\n      .subscribe({\n        next: () => {\n          this.notifier.success(\n            formatICU(\n              $localize`{count, plural, =1 {Follow request sent!} other {Follow requests sent!}}`,\n              { count: hostsOrHandles.length }\n            )\n          )\n\n          this.newFollow.emit()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n}\n","import { Component, inject, input, model } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { Notifier } from '@app/core'\nimport { RedundancyService } from '@app/shared/shared-main/video/redundancy.service'\nimport { PeertubeCheckboxComponent } from '../../../shared/shared-forms/peertube-checkbox.component'\n\n@Component({\n  selector: 'my-redundancy-checkbox',\n  templateUrl: './redundancy-checkbox.component.html',\n  imports: [ PeertubeCheckboxComponent, FormsModule ]\n})\nexport class RedundancyCheckboxComponent {\n  private notifier = inject(Notifier)\n  private redundancyService = inject(RedundancyService)\n\n  readonly host = input<string>(undefined)\n  readonly redundancyAllowed = model<boolean>(undefined)\n\n  updateRedundancyState () {\n    this.redundancyService.updateRedundancy(this.host(), this.redundancyAllowed())\n      .subscribe({\n        next: () => {\n          const stateLabel = this.redundancyAllowed() ? $localize`enabled` : $localize`disabled`\n\n          this.notifier.success($localize`Redundancy for ${this.host()} is ${stateLabel}`)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n}\n","<my-peertube-checkbox\n  [inputName]=\"host() + '-redundancy-allowed'\" [(ngModel)]=\"redundancyAllowed\" (ngModelChange)=\"updateRedundancyState()\"\n></my-peertube-checkbox>\n","<p-table\n  [value]=\"following\" [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\" [rows]=\"rowsPerPage\" [first]=\"pagination.start\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\" [sortField]=\"sort.field\" [sortOrder]=\"sort.order\"\n  [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\" [lazyLoadOnInit]=\"false\"\n  [showCurrentPageReport]=\"true\" [currentPageReportTemplate]=\"getPaginationTemplate()\"\n  [(selection)]=\"selectedRows\"\n>\n  <ng-template pTemplate=\"caption\">\n    <div class=\"caption\">\n      <div class=\"left-buttons\">\n        <my-action-dropdown\n          *ngIf=\"isInSelectionMode()\" i18n-label label=\"Batch actions\" theme=\"primary\"\n          [actions]=\"bulkActions\" [entry]=\"selectedRows\"\n        >\n        </my-action-dropdown>\n\n        <button *ngIf=\"!isInSelectionMode()\" class=\"peertube-create-button\" (click)=\"openFollowModal()\">\n          <my-global-icon iconName=\"following\" aria-hidden=\"true\"></my-global-icon>\n          <ng-container i18n>Follow</ng-container>\n        </button>\n      </div>\n\n      <div class=\"ms-auto d-flex gap-2 flex-wrap\">\n        <my-advanced-input-filter [filters]=\"searchFilters\" (search)=\"onSearch($event)\"></my-advanced-input-filter>\n\n        <my-button i18n-label label=\"Refresh\" icon=\"refresh\" (click)=\"reloadData()\"></my-button>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th scope=\"col\" style=\"width: 40px\">\n        <p-tableHeaderCheckbox ariaLabel=\"Select all rows\" i18n-ariaLabel></p-tableHeaderCheckbox>\n      </th>\n      <th scope=\"col\" style=\"width: 150px;\" i18n>Action</th>\n      <th scope=\"col\" i18n>Following</th>\n      <th scope=\"col\" style=\"width: 100px;\" i18n pSortableColumn=\"state\">State <p-sortIcon field=\"state\"></p-sortIcon></th>\n      <th scope=\"col\" style=\"width: 150px;\" i18n pSortableColumn=\"createdAt\">Created <p-sortIcon field=\"createdAt\"></p-sortIcon></th>\n      <th scope=\"col\" style=\"width: 160px;\" i18n pSortableColumn=\"redundancyAllowed\">Redundancy allowed <p-sortIcon field=\"redundancyAllowed\"></p-sortIcon></th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-follow>\n    <tr pSelectableRow=\"follow\">\n      <td class=\"checkbox-cell\">\n        <p-tableCheckbox [value]=\"follow\" ariaLabel=\"Select this row\" i18n-ariaLabel></p-tableCheckbox>\n      </td>\n\n      <td class=\"action-cell\">\n        <my-delete-button label (click)=\"removeFollowing([ follow ])\"></my-delete-button>\n      </td>\n      <td>\n        <a [href]=\"follow.following.url\" i18n-title title=\"Open instance in a new tab\" target=\"_blank\" rel=\"noopener noreferrer\">\n          {{ buildFollowingName(follow) }}\n          <my-global-icon iconName=\"external-link\"></my-global-icon>\n        </a>\n      </td>\n\n      <td>\n        <span *ngIf=\"follow.state === 'accepted'\" class=\"pt-badge badge-green\" i18n>Accepted</span>\n        <span *ngIf=\"follow.state === 'pending'\" class=\"pt-badge badge-yellow\" i18n>Pending</span>\n        <span *ngIf=\"follow.state === 'rejected'\" class=\"pt-badge badge-red\" i18n>Rejected</span>\n      </td>\n\n      <td>{{ follow.createdAt | ptDate: 'short' }}</td>\n      <td>\n        <my-redundancy-checkbox\n          *ngIf=\"isInstanceFollowing(follow)\"\n          [host]=\"follow.following.host\" [redundancyAllowed]=\"follow.following.hostRedundancyAllowed\"\n        ></my-redundancy-checkbox>\n      </td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\">\n    <tr>\n      <td myAutoColspan>\n        <div class=\"no-results\">\n          <ng-container *ngIf=\"search\" i18n>No host found matching current filters.</ng-container>\n          <ng-container *ngIf=\"!search\" i18n>Your instance is not following anyone.</ng-container>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n\n<my-follow-modal #followModal></my-follow-modal>\n","import { NgIf } from '@angular/common'\nimport { Component, OnInit, inject, viewChild } from '@angular/core'\nimport { ConfirmService, Notifier, RestPagination, RestTable } from '@app/core'\nimport { formatICU } from '@app/helpers'\nimport { InstanceFollowService } from '@app/shared/shared-instance/instance-follow.service'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { ActorFollow } from '@peertube/peertube-models'\nimport { SharedModule, SortMeta } from 'primeng/api'\nimport { TableModule } from 'primeng/table'\nimport { AdvancedInputFilter, AdvancedInputFilterComponent } from '../../../shared/shared-forms/advanced-input-filter.component'\nimport { GlobalIconComponent } from '../../../shared/shared-icons/global-icon.component'\nimport { ActionDropdownComponent, DropdownAction } from '../../../shared/shared-main/buttons/action-dropdown.component'\nimport { ButtonComponent } from '../../../shared/shared-main/buttons/button.component'\nimport { DeleteButtonComponent } from '../../../shared/shared-main/buttons/delete-button.component'\nimport { AutoColspanDirective } from '../../../shared/shared-main/common/auto-colspan.directive'\nimport { RedundancyCheckboxComponent } from '../shared/redundancy-checkbox.component'\nimport { FollowModalComponent } from './follow-modal.component'\n\n@Component({\n  templateUrl: './following-list.component.html',\n  styleUrls: [ './following-list.component.scss' ],\n  imports: [\n    GlobalIconComponent,\n    TableModule,\n    SharedModule,\n    NgIf,\n    ActionDropdownComponent,\n    AdvancedInputFilterComponent,\n    DeleteButtonComponent,\n    RedundancyCheckboxComponent,\n    AutoColspanDirective,\n    FollowModalComponent,\n    PTDatePipe,\n    ButtonComponent\n  ]\n})\nexport class FollowingListComponent extends RestTable<ActorFollow> implements OnInit {\n  private notifier = inject(Notifier)\n  private confirmService = inject(ConfirmService)\n  private followService = inject(InstanceFollowService)\n\n  readonly followModal = viewChild<FollowModalComponent>('followModal')\n\n  following: ActorFollow[] = []\n  totalRecords = 0\n  sort: SortMeta = { field: 'createdAt', order: -1 }\n  pagination: RestPagination = { count: this.rowsPerPage, start: 0 }\n\n  searchFilters: AdvancedInputFilter[] = []\n\n  bulkActions: DropdownAction<ActorFollow[]>[] = []\n\n  ngOnInit () {\n    this.initialize()\n\n    this.searchFilters = this.followService.buildFollowsListFilters()\n\n    this.bulkActions = [\n      {\n        label: $localize`Delete`,\n        handler: follows => this.removeFollowing(follows)\n      }\n    ]\n  }\n\n  getIdentifier () {\n    return 'FollowingListComponent'\n  }\n\n  openFollowModal () {\n    this.followModal().openModal()\n  }\n\n  isInstanceFollowing (follow: ActorFollow) {\n    return follow.following.name === 'peertube'\n  }\n\n  buildFollowingName (follow: ActorFollow) {\n    return follow.following.name + '@' + follow.following.host\n  }\n\n  async removeFollowing (follows: ActorFollow[]) {\n    const icuParams = { count: follows.length, entryName: this.buildFollowingName(follows[0]) }\n\n    const message = formatICU(\n      $localize`Do you really want to unfollow {count, plural, =1 {{entryName}?} other {{count} entries?}}`,\n      icuParams\n    )\n\n    const res = await this.confirmService.confirm(message, $localize`Unfollow`)\n    if (res === false) return\n\n    this.followService.unfollow(follows)\n      .subscribe({\n        next: () => {\n          const message = formatICU(\n            $localize`You are not following {count, plural, =1 {{entryName} anymore.} other {these {count} entries anymore.}}`,\n            icuParams\n          )\n\n          this.notifier.success(message)\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  protected reloadDataInternal () {\n    this.followService.getFollowing({ pagination: this.pagination, sort: this.sort, search: this.search })\n      .subscribe({\n        next: resultList => {\n          this.following = resultList.data\n          this.totalRecords = resultList.total\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n}\n","import { Component, input } from '@angular/core'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { RedundancyInformation } from '@peertube/peertube-models'\nimport { BytesPipe } from '../../../shared/shared-main/common/bytes.pipe'\n\n@Component({\n  selector: 'my-video-redundancy-information',\n  templateUrl: './video-redundancy-information.component.html',\n  styleUrls: [ './video-redundancy-information.component.scss' ],\n  imports: [ PTDatePipe, BytesPipe ]\n})\nexport class VideoRedundancyInformationComponent {\n  readonly redundancyElement = input<RedundancyInformation>(undefined)\n}\n","<div>\n  <span class=\"label\">Url</span>\n  <a target=\"_blank\" rel=\"noopener noreferrer\" [href]=\"redundancyElement().fileUrl\">{{ redundancyElement().fileUrl }}</a>\n</div>\n\n<div>\n  <span class=\"label\">Created on</span>\n  <span>{{ redundancyElement().createdAt | ptDate: 'medium' }}</span>\n</div>\n\n<div>\n  <span class=\"label\">Expires on</span>\n  <span>{{ redundancyElement().expiresOn | ptDate: 'medium' }}</span>\n</div>\n\n<div>\n  <span class=\"label\">Size</span>\n  <span>{{ redundancyElement().size | bytes: 1 }}</span>\n</div>\n","<div class=\"admin-sub-header\">\n  <div class=\"select-filter-block\">\n    <label for=\"displayType\" i18n>Display</label>\n\n    <div class=\"peertube-select-container\">\n      <select id=\"displayType\" name=\"displayType\" [(ngModel)]=\"displayType\" (ngModelChange)=\"onDisplayTypeChanged()\" class=\"form-control\">\n        <option value=\"my-videos\" i18n>My videos duplicated by remote instances</option>\n        <option value=\"remote-videos\" i18n>Remote videos duplicated by my instance</option>\n      </select>\n    </div>\n  </div>\n</div>\n\n<p-table\n  [value]=\"videoRedundancies\" [lazy]=\"true\" [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\"\n  [rows]=\"rowsPerPage\"  [first]=\"pagination.start\" [rowsPerPageOptions]=\"rowsPerPageOptions\"\n  [sortField]=\"sort.field\" [sortOrder]=\"sort.order\" (onLazyLoad)=\"loadLazy($event)\" dataKey=\"id\"\n  [expandedRowKeys]=\"expandedRows\"\n>\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th scope=\"col\" style=\"width: 40px;\">\n        <span i18n class=\"visually-hidden\">More information</span>\n      </th>\n      <th scope=\"col\" style=\"width: 150px;\" i18n>Action</th>\n      <th scope=\"col\" style=\"width: 160px;\" i18n *ngIf=\"isDisplayingRemoteVideos()\">Strategy</th>\n      <th scope=\"col\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"name\">Video <p-sortIcon field=\"name\"></p-sortIcon></th >\n      <th scope=\"col\" style=\"width: 100px;\" i18n *ngIf=\"isDisplayingRemoteVideos()\">Total size</th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-expanded=\"expanded\" let-redundancy>\n    <tr>\n      <td class=\"expand-cell\">\n        <my-table-expander-icon [pRowToggler]=\"redundancy\" [expanded]=\"expanded\" i18n-tooltip tooltip=\"List redundancies\"></my-table-expander-icon>\n      </td>\n\n      <td class=\"action-cell\">\n        <my-delete-button label (click)=\"removeRedundancy(redundancy)\"></my-delete-button>\n      </td>\n\n      <td *ngIf=\"isDisplayingRemoteVideos()\">{{ getRedundancyStrategy(redundancy) }}</td>\n\n      <td>\n        <a [href]=\"redundancy.url\" i18n-title title=\"Open video in a new tab\" target=\"_blank\" rel=\"noopener noreferrer\">\n          {{ redundancy.name }}\n          <my-global-icon iconName=\"external-link\"></my-global-icon>\n        </a>\n      </td>\n\n      <td *ngIf=\"isDisplayingRemoteVideos()\">{{ getTotalSize(redundancy) | bytes: 1 }}</td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"rowexpansion\" let-redundancy>\n    <tr *ngIf=\"redundancy.redundancies.files.length !== 0\">\n      <td class=\"expand-cell\" myAutoColspan>\n        <div *ngFor=\"let file of redundancy.redundancies.files\" class=\"expansion-block\">\n          <my-video-redundancy-information [redundancyElement]=\"file\"></my-video-redundancy-information>\n        </div>\n      </td>\n    </tr>\n\n    <tr *ngIf=\"redundancy.redundancies.streamingPlaylists.length !== 0\">\n      <td class=\"expand-cell\" myAutoColspan>\n        <div *ngFor=\"let playlist of redundancy.redundancies.streamingPlaylists\">\n          <my-video-redundancy-information [redundancyElement]=\"playlist\"></my-video-redundancy-information>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\">\n    <tr>\n      <td myAutoColspan>\n        <div class=\"no-results\">\n          <ng-container *ngIf=\"isDisplayingRemoteVideos()\" i18n>Your instance doesn't mirror any video.</ng-container>\n          <ng-container *ngIf=\"!isDisplayingRemoteVideos()\" i18n>Your instance has no mirrored videos.</ng-container>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n\n\n<div class=\"redundancies-charts\" *ngIf=\"isDisplayingRemoteVideos() && dataLoaded\">\n  <h6 i18n>Enabled strategies stats</h6>\n\n  <div class=\"chart-blocks\">\n\n    <div *ngIf=\"noRedundancies\" i18n class=\"no-results\">\n      No redundancy strategy is enabled on your instance.\n    </div>\n\n    <div class=\"chart-block\" *ngFor=\"let r of redundanciesGraphsData\">\n      <p-chart [ariaLabel]=\"r.ariaLabel\" type=\"pie\" [data]=\"r.graphData\" [options]=\"r.options\" width=\"300px\" height=\"300px\"></p-chart>\n    </div>\n\n  </div>\n</div>\n","import { NgFor, NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { ConfirmService, Notifier, RestPagination, RestTable, ServerService } from '@app/core'\nimport { BytesPipe } from '@app/shared/shared-main/common/bytes.pipe'\nimport { RedundancyService } from '@app/shared/shared-main/video/redundancy.service'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { VideoRedundanciesTarget, VideoRedundancy, VideosRedundancyStats } from '@peertube/peertube-models'\nimport { peertubeLocalStorage } from '@root-helpers/peertube-web-storage'\nimport { ChartData, ChartOptions, TooltipItem } from 'chart.js'\nimport { SharedModule, SortMeta } from 'primeng/api'\nimport { ChartModule } from 'primeng/chart'\nimport { TableModule } from 'primeng/table'\nimport { GlobalIconComponent } from '../../../shared/shared-icons/global-icon.component'\nimport { DeleteButtonComponent } from '../../../shared/shared-main/buttons/delete-button.component'\nimport { AutoColspanDirective } from '../../../shared/shared-main/common/auto-colspan.directive'\nimport { TableExpanderIconComponent } from '../../../shared/shared-tables/table-expander-icon.component'\nimport { VideoRedundancyInformationComponent } from './video-redundancy-information.component'\n\n@Component({\n  selector: 'my-video-redundancies-list',\n  templateUrl: './video-redundancies-list.component.html',\n  styleUrls: [ './video-redundancies-list.component.scss' ],\n  imports: [\n    GlobalIconComponent,\n    FormsModule,\n    TableModule,\n    SharedModule,\n    NgIf,\n    NgbTooltip,\n    TableExpanderIconComponent,\n    DeleteButtonComponent,\n    AutoColspanDirective,\n    NgFor,\n    VideoRedundancyInformationComponent,\n    ChartModule,\n    BytesPipe\n  ]\n})\nexport class VideoRedundanciesListComponent extends RestTable implements OnInit {\n  private notifier = inject(Notifier)\n  private confirmService = inject(ConfirmService)\n  private redundancyService = inject(RedundancyService)\n  private serverService = inject(ServerService)\n\n  private static LS_DISPLAY_TYPE = 'video-redundancies-list-display-type'\n\n  videoRedundancies: VideoRedundancy[] = []\n  totalRecords = 0\n\n  sort: SortMeta = { field: 'name', order: 1 }\n  pagination: RestPagination = { count: this.rowsPerPage, start: 0 }\n  displayType: VideoRedundanciesTarget = 'my-videos'\n\n  redundanciesGraphsData: { stats: VideosRedundancyStats, graphData: ChartData, options: ChartOptions, ariaLabel: string }[] = []\n\n  noRedundancies = false\n\n  // Prevent layout shift for redundancy stats\n  dataLoaded = false\n\n  private bytesPipe: BytesPipe\n\n  constructor () {\n    super()\n\n    this.bytesPipe = new BytesPipe()\n  }\n\n  getIdentifier () {\n    return 'VideoRedundanciesListComponent'\n  }\n\n  ngOnInit () {\n    this.loadSelectLocalStorage()\n\n    this.initialize()\n\n    this.serverService.getServerStats()\n      .subscribe(res => {\n        const redundancies = res.videosRedundancy\n\n        if (redundancies.length === 0) this.noRedundancies = true\n\n        for (const r of redundancies) {\n          this.buildPieData(r)\n        }\n      })\n  }\n\n  isDisplayingRemoteVideos () {\n    return this.displayType === 'remote-videos'\n  }\n\n  getTotalSize (redundancy: VideoRedundancy) {\n    return redundancy.redundancies.streamingPlaylists.reduce((a, b) => a + b.size, 0)\n  }\n\n  onDisplayTypeChanged () {\n    this.pagination.start = 0\n    this.saveSelectLocalStorage()\n\n    this.reloadData()\n  }\n\n  getRedundancyStrategy (redundancy: VideoRedundancy) {\n    if (redundancy.redundancies.streamingPlaylists.length !== 0) {\n      return redundancy.redundancies.streamingPlaylists[0].strategy\n    }\n\n    return ''\n  }\n\n  buildPieData (stats: VideosRedundancyStats) {\n    if (stats.totalSize === 0) return\n\n    const totalAvailable = stats.totalSize\n      ? stats.totalSize - stats.totalUsed\n      : null\n\n    const labels = [ $localize`Used (${this.bytesToHuman(stats.totalUsed)})` ]\n    const data = [ stats.totalUsed ]\n\n    // Not in manual strategy\n    if (totalAvailable) {\n      labels.push(\n        $localize`Available (${this.bytesToHuman(totalAvailable)})`\n      )\n\n      data.push(totalAvailable)\n    }\n\n    this.redundanciesGraphsData.push({\n      stats,\n      ariaLabel: $localize`Redundancy strategy \"${stats.strategy}\". ` + labels.join('. '),\n\n      graphData: {\n        labels,\n        datasets: [\n          {\n            data,\n            backgroundColor: [\n              '#FF6384',\n              '#36A2EB'\n            ],\n            hoverBackgroundColor: [\n              '#FF6384',\n              '#36A2EB'\n            ]\n          }\n        ]\n      },\n\n      options: {\n        plugins: {\n          title: {\n            display: true,\n            text: stats.strategy\n          },\n\n          tooltip: {\n            callbacks: {\n              label: (tooltip: TooltipItem<any>) => {\n                return tooltip.label\n              }\n            }\n          }\n        }\n      }\n    })\n  }\n\n  async removeRedundancy (redundancy: VideoRedundancy) {\n    const message = $localize`Do you really want to remove this video redundancy?`\n    const res = await this.confirmService.confirm(message, $localize`Remove redundancy`)\n    if (res === false) return\n\n    this.redundancyService.removeVideoRedundancies(redundancy)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Video redundancies removed!`)\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  protected reloadDataInternal () {\n    this.dataLoaded = false\n\n    const options = {\n      pagination: this.pagination,\n      sort: this.sort,\n      target: this.displayType\n    }\n\n    this.redundancyService.listVideoRedundancies(options)\n      .subscribe({\n        next: resultList => {\n          this.videoRedundancies = resultList.data\n          this.totalRecords = resultList.total\n\n          this.dataLoaded = true\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  private loadSelectLocalStorage () {\n    const displayType = peertubeLocalStorage.getItem(VideoRedundanciesListComponent.LS_DISPLAY_TYPE)\n    if (displayType) this.displayType = displayType as VideoRedundanciesTarget\n  }\n\n  private saveSelectLocalStorage () {\n    peertubeLocalStorage.setItem(VideoRedundanciesListComponent.LS_DISPLAY_TYPE, this.displayType)\n  }\n\n  private bytesToHuman (bytes: number) {\n    return this.bytesPipe.transform(bytes, 1)\n  }\n}\n","import { Routes } from '@angular/router'\nimport { VideoRedundanciesListComponent } from '@app/+admin/follows/video-redundancies-list'\nimport { UserRightGuard } from '@app/core'\nimport { UserRight } from '@peertube/peertube-models'\nimport { FollowersListComponent } from './followers-list'\nimport { FollowingListComponent } from './following-list/following-list.component'\n\nexport const followsRoutes: Routes = [\n  {\n    path: 'follows',\n    canActivate: [ UserRightGuard ],\n    data: {\n      userRight: UserRight.MANAGE_SERVER_FOLLOW\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'following-list',\n        pathMatch: 'full'\n      },\n      {\n        path: 'following-list',\n        component: FollowingListComponent,\n        data: {\n          meta: {\n            title: $localize`Following`\n          }\n        }\n      },\n      {\n        path: 'followers-list',\n        component: FollowersListComponent,\n        data: {\n          meta: {\n            title: $localize`Followers`\n          }\n        }\n      },\n      {\n        path: 'following-add',\n        redirectTo: 'following-list'\n      },\n      {\n        path: 'video-redundancies-list',\n        component: VideoRedundanciesListComponent,\n        data: {\n          meta: {\n            title: $localize`Redundancy`\n          }\n        }\n      }\n    ]\n  }\n]\n","import { Component } from '@angular/core'\nimport { VideoCommentService } from '@app/shared/shared-video-comment/video-comment.service'\nimport { FeedFormat } from '@peertube/peertube-models'\n\nimport { VideoCommentListAdminOwnerComponent } from '../../../shared/shared-video-comment/video-comment-list-admin-owner.component'\n\n@Component({\n  selector: 'my-video-comment-list',\n  templateUrl: './video-comment-list.component.html',\n  imports: [\n    VideoCommentListAdminOwnerComponent\n  ]\n})\nexport class VideoCommentListComponent {\n  syndicationItems = [\n    {\n      format: FeedFormat.RSS,\n      label: 'media rss 2.0',\n      url: VideoCommentService.BASE_FEEDS_URL + FeedFormat.RSS.toLowerCase()\n    },\n    {\n      format: FeedFormat.ATOM,\n      label: 'atom 1.0',\n      url: VideoCommentService.BASE_FEEDS_URL + FeedFormat.ATOM.toLowerCase()\n    },\n    {\n      format: FeedFormat.JSON,\n      label: 'json 1.0',\n      url: VideoCommentService.BASE_FEEDS_URL + FeedFormat.JSON.toLowerCase()\n    }\n  ]\n}\n","<em i18n>This view also shows comments from muted accounts.</em>\n\n<my-video-comment-list-admin-owner mode=\"admin\"></my-video-comment-list-admin-owner>\n\n","import { Directive, OnInit } from '@angular/core'\nimport { ConfigService } from '@app/+admin/config/shared/config.service'\nimport { AuthService, ScreenService, ServerService, User } from '@app/core'\nimport { peertubeTranslate, USER_ROLE_LABELS } from '@peertube/peertube-core-utils'\nimport { HTMLServerConfig, UserAdminFlag, UserRole } from '@peertube/peertube-models'\nimport { SelectOptionsItem } from '../../../../../types/select-options-item.model'\nimport { FormReactive } from '@app/shared/shared-forms/form-reactive'\n\n@Directive()\nexport abstract class UserEdit extends FormReactive implements OnInit {\n  videoQuotaOptions: SelectOptionsItem[] = []\n  videoQuotaDailyOptions: SelectOptionsItem[] = []\n  username: string\n  user: User\n\n  roles: { value: string, label: string }[] = []\n\n  protected serverConfig: HTMLServerConfig\n\n  protected abstract serverService: ServerService\n  protected abstract configService: ConfigService\n  protected abstract screenService: ScreenService\n  protected abstract auth: AuthService\n  abstract isCreation (): boolean\n  abstract getFormButtonTitle (): string\n\n  ngOnInit () {\n    this.serverConfig = this.serverService.getHTMLConfig()\n\n    this.buildRoles()\n  }\n\n  get subscribersCount () {\n    const forAccount = this.user\n      ? this.user.account.followersCount\n      : 0\n    const forChannels = this.user\n      ? this.user.videoChannels.map(c => c.followersCount).reduce((a, b) => a + b, 0)\n      : 0\n    return forAccount + forChannels\n  }\n\n  getAuthPlugins () {\n    return this.serverConfig.plugin.registeredIdAndPassAuths.map(p => p.npmName)\n      .concat(this.serverConfig.plugin.registeredExternalAuths.map(p => p.npmName))\n  }\n\n  buildRoles () {\n    const authUser = this.auth.getUser()\n\n    this.serverService.getServerLocale()\n      .subscribe(translations => {\n        if (authUser.role.id === UserRole.ADMINISTRATOR) {\n          this.roles = Object.entries(USER_ROLE_LABELS)\n            .map(([ key, value ]) => ({ value: key.toString(), label: peertubeTranslate(value, translations) }))\n          return\n        }\n\n        this.roles = [\n          { value: UserRole.USER.toString(), label: peertubeTranslate(USER_ROLE_LABELS[UserRole.USER], translations) }\n        ]\n      })\n  }\n\n  displayDangerZone () {\n    if (this.isCreation()) return false\n    if (!this.user) return false\n    if (this.user.pluginAuth) return false\n    if (this.auth.getUser().id === this.user.id) return false\n\n    return true\n  }\n\n  resetPassword () {\n    return\n  }\n\n  disableTwoFactorAuth () {\n    return\n  }\n\n  getUserVideoQuota () {\n    return this.form.value['videoQuota']\n  }\n\n  protected buildAdminFlags (formValue: any) {\n    return formValue.byPassAutoBlock ? UserAdminFlag.BYPASS_VIDEO_AUTO_BLACKLIST : UserAdminFlag.NONE\n  }\n\n  protected buildQuotaOptions () {\n    this.videoQuotaOptions = this.configService.videoQuotaOptions\n    this.videoQuotaDailyOptions = this.configService.videoQuotaDailyOptions\n  }\n}\n","<form (ngSubmit)=\"formValidated()\" [formGroup]=\"form\">\n\n  <div class=\"input-group\">\n    <input id=\"password\"\n      [attr.type]=\"showPassword ? 'text' : 'password'\" class=\"form-control\"\n      formControlName=\"password\" [ngClass]=\"{ 'input-error': formErrors['password'] }\"\n      autocomplete=\"new-password\"\n    >\n    <button class=\"btn\" (click)=\"togglePasswordVisibility()\" type=\"button\">\n      @if (showPassword) {\n        <ng-container i18n>Hide</ng-container>\n      } @else {\n        <ng-container i18n>Show</ng-container>\n      }\n    </button>\n  </div>\n\n  <div *ngIf=\"formErrors.password\" class=\"form-error\" role=\"alert\">\n    {{ formErrors.password }}\n  </div>\n\n  <input class=\"peertube-button danger-button mt-2\" type=\"submit\" value=\"{{ getFormButtonTitle() }}\" [disabled]=\"!form.valid\">\n</form>\n","import { Component, OnInit, inject, input } from '@angular/core'\nimport { Notifier } from '@app/core'\nimport { USER_PASSWORD_VALIDATOR } from '@app/shared/form-validators/user-validators'\nimport { FormReactive } from '@app/shared/shared-forms/form-reactive'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { UserUpdate } from '@peertube/peertube-models'\nimport { NgClass, NgIf } from '@angular/common'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { UserAdminService } from '@app/shared/shared-users/user-admin.service'\n\n@Component({\n  selector: 'my-user-password',\n  templateUrl: './user-password.component.html',\n  styleUrls: [ './user-password.component.scss' ],\n  imports: [ FormsModule, ReactiveFormsModule, NgClass, NgIf ]\n})\nexport class UserPasswordComponent extends FormReactive implements OnInit {\n  protected formReactiveService = inject(FormReactiveService)\n  private notifier = inject(Notifier)\n  private userAdminService = inject(UserAdminService)\n\n  readonly userId = input<number>(undefined)\n  readonly username = input<string>(undefined)\n\n  error: string\n  showPassword = false\n\n  ngOnInit () {\n    this.buildForm({\n      password: USER_PASSWORD_VALIDATOR\n    })\n  }\n\n  formValidated () {\n    this.error = undefined\n\n    const userUpdate: UserUpdate = this.form.value\n\n    this.userAdminService.updateUser(this.userId(), userUpdate)\n      .subscribe({\n        next: () => this.notifier.success($localize`Password changed for user ${this.username()}.`),\n\n        error: err => {\n          this.error = err.message\n        }\n      })\n  }\n\n  togglePasswordVisibility () {\n    this.showPassword = !this.showPassword\n  }\n\n  getFormButtonTitle () {\n    return $localize`Update user password`\n  }\n}\n","<nav aria-label=\"breadcrumb\">\n  <ol class=\"pt-breadcrumb\">\n    <li class=\"breadcrumb-item\">\n      <a routerLink=\"/admin/overview/users\" i18n>Users</a>\n    </li>\n\n    @if (isCreation()) {\n      <li class=\"breadcrumb-item\" i18n>Create</li>\n    } @else {\n      <li class=\"breadcrumb-item\" i18n>Edit</li>\n\n      <li class=\"breadcrumb-item\" aria-current=\"page\">\n        <a *ngIf=\"user\" [routerLink]=\"[ '/a', user?.username ]\">{{ user?.username }}</a>\n      </li>\n    }\n  </ol>\n</nav>\n\n<ng-template #dashboard>\n  <div *ngIf=\"!isCreation() && user\" class=\"dashboard\">\n    <div>\n      <a>\n        <div class=\"dashboard-num\">{{ user.videosCount }} ({{ user.videoQuotaUsed | bytes: 0 }})</div>\n        <div class=\"dashboard-label\" i18n>{user.videosCount, plural, =1 {Video} other {Videos}}</div>\n      </a>\n    </div>\n    <div>\n      <a>\n        <div class=\"dashboard-num\">{{ user.videoChannels.length || 0 }}</div>\n        <div class=\"dashboard-label\" i18n>{user.videoChannels.length, plural, =1 {Channel} other {Channels}}</div>\n      </a>\n    </div>\n    <div>\n      <a>\n        <div class=\"dashboard-num\">{{ subscribersCount }}</div>\n        <div class=\"dashboard-label\" i18n>{subscribersCount, plural, =1 {Subscriber} other {Subscribers}}</div>\n      </a>\n    </div>\n    <div>\n      <a [routerLink]=\"[ '/admin/moderation/abuses/list' ]\" [queryParams]=\"{ 'search': 'reportee:&quot;' + user?.account.displayName + '&quot;' }\">\n        <div class=\"dashboard-num\">{{ user.abusesCount }}</div>\n        <div class=\"dashboard-label\" i18n>Incriminated in reports</div>\n      </a>\n    </div>\n    <div>\n      <a [routerLink]=\"[ '/admin/moderation/abuses/list' ]\" [queryParams]=\"{ 'search': 'reporter:&quot;' + user?.account.displayName + '&quot; state:accepted' }\">\n        <div class=\"dashboard-num\">{{ user.abusesAcceptedCount }} / {{ user.abusesCreatedCount }}</div>\n        <div class=\"dashboard-label\" i18n>Authored reports accepted</div>\n      </a>\n    </div>\n    <div>\n      <a>\n        <div class=\"dashboard-num\">{{ user.videoCommentsCount }}</div>\n        <div class=\"dashboard-label\" i18n>{user.videoCommentsCount, plural, =1 {Comment} other {Comments}}</div>\n      </a>\n    </div>\n  </div>\n</ng-template>\n\n<my-alert *ngIf=\"error\" type=\"danger\">{{ error }}</my-alert>\n\n<div class=\"pt-two-cols d-xxl-none\"> <!-- hidden on large screens, as it is then displayed on the right side of the form -->\n  <div class=\"col-0 col-xl-3\"></div>\n\n  <div class=\"col-12 col-xl-9\">\n    <ng-template *ngTemplateOutlet=\"dashboard\"></ng-template>\n  </div>\n</div>\n\n<div class=\"pt-two-cols mt-4\"> <!-- user grid -->\n  <div class=\"title-col\">\n    <div class=\"anchor\" id=\"user\"></div> <!-- user anchor -->\n\n    @if (isCreation()) {\n      <h2 i18n>NEW USER</h2>\n    } @else if (user) {\n      <h2 class=\"visually-hidden\">EDIT USER {{ user.username }}</h2>\n\n      <my-actor-avatar-edit\n        actorType=\"account\" [displayName]=\"user.account.displayName\" [avatars]=\"user.account.avatars\"\n        editable=\"false\" [username]=\"user.username\" displayUsername=\"false\"\n      ></my-actor-avatar-edit>\n    }\n  </div>\n\n  <div class=\"content-col\">\n    <div class=\"row\">\n      <form class=\"col\" (ngSubmit)=\"formValidated()\" [formGroup]=\"form\">\n        <div class=\"form-group\" *ngIf=\"isCreation()\">\n          <label i18n for=\"username\">Username</label>\n          <input\n            type=\"text\" id=\"username\" i18n-placeholder placeholder=\"john\" class=\"form-control\"\n            formControlName=\"username\" [ngClass]=\"{ 'input-error': formErrors['username'] }\"\n          >\n          <div *ngIf=\"formErrors.username\" class=\"form-error\" role=\"alert\">\n            {{ formErrors.username }}\n          </div>\n        </div>\n\n        <div class=\"form-group\" *ngIf=\"isCreation()\">\n          <label i18n for=\"channelName\">Channel name</label>\n          <input\n            type=\"text\" id=\"channelName\" i18n-placeholder placeholder=\"john_channel\" class=\"form-control\"\n            formControlName=\"channelName\" [ngClass]=\"{ 'input-error': formErrors['channelName'] }\"\n          >\n          <div *ngIf=\"formErrors.channelName\" class=\"form-error\" role=\"alert\">\n            {{ formErrors.channelName }}\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"email\">Email</label>\n          <input\n            type=\"text\" id=\"email\" i18n-placeholder placeholder=\"mail@example.com\" class=\"form-control\"\n            formControlName=\"email\" [ngClass]=\"{ 'input-error': formErrors['email'] }\"\n            autocomplete=\"off\" [readonly]=\"user && user.pluginAuth !== null\"\n          >\n          <div *ngIf=\"formErrors.email\" class=\"form-error\" role=\"alert\">\n            {{ formErrors.email }}\n          </div>\n        </div>\n\n        <div class=\"form-group\" *ngIf=\"isCreation()\">\n          <label i18n for=\"password\">Password</label>\n\n          <my-help *ngIf=\"isPasswordOptional()\">\n            <ng-container i18n>\n              If you leave the password empty, an email will be sent to the user.\n            </ng-container>\n          </my-help>\n\n          <my-input-text formControlName=\"password\" inputId=\"password\" [formError]=\"formErrors['password']\" autocomplete=\"new-password\"></my-input-text>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n for=\"role\">Role</label>\n          <div class=\"peertube-select-container\">\n              <select id=\"role\" formControlName=\"role\" class=\"form-control\">\n                <option *ngFor=\"let role of roles\" [value]=\"role.value\">\n                {{ role.label }}\n                </option>\n              </select>\n          </div>\n\n          <div *ngIf=\"formErrors.role\" class=\"form-error\" role=\"alert\">\n            {{ formErrors.role }}\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n id=\"videoQuotaLabel\" for=\"videoQuota\">Video quota</label>\n\n          <my-select-custom-value\n            labelId=\"videoQuotaLabel\"\n            inputId=\"videoQuota\"\n            [items]=\"videoQuotaOptions\"\n            formControlName=\"videoQuota\"\n            i18n-inputSuffix inputSuffix=\"bytes\" inputType=\"number\"\n            [clearable]=\"false\"\n          ></my-select-custom-value>\n\n          <my-user-real-quota-info [videoQuota]=\"getUserVideoQuota()\"></my-user-real-quota-info>\n\n          <div *ngIf=\"formErrors.videoQuota\" class=\"form-error\" role=\"alert\">\n            {{ formErrors.videoQuota }}\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label i18n id=\"videoQuotaDailyLabel\" for=\"videoQuotaDaily\">Daily video quota</label>\n\n          <my-select-custom-value\n            labelId=\"videoQuotaDailyLabel\"\n            inputId=\"videoQuotaDaily\"\n            [items]=\"videoQuotaDailyOptions\"\n            formControlName=\"videoQuotaDaily\"\n            i18n-inputSuffix inputSuffix=\"bytes\" inputType=\"number\"\n            [clearable]=\"false\"\n          ></my-select-custom-value>\n\n          <div *ngIf=\"formErrors.videoQuotaDaily\" class=\"form-error\" role=\"alert\">\n            {{ formErrors.videoQuotaDaily }}\n          </div>\n        </div>\n\n        <div class=\"form-group\" *ngIf=\"!isCreation() && getAuthPlugins().length !== 0\">\n          <label i18n for=\"pluginAuth\">Auth plugin</label>\n\n          <div class=\"peertube-select-container\">\n            <select id=\"pluginAuth\" formControlName=\"pluginAuth\" class=\"form-control\">\n              <option [value]=\"null\" i18n>None (local authentication)</option>\n              <option *ngFor=\"let authPlugin of getAuthPlugins()\" [value]=\"authPlugin\">{{ authPlugin }}</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <my-peertube-checkbox\n            inputName=\"byPassAutoBlock\" formControlName=\"byPassAutoBlock\"\n            i18n-labelText labelText=\"User bypasses video validation by moderators\"\n          >\n            <ng-container ngProjectAs=\"description\" i18n>\n              Enable this checkbox if this user doesn't need to have its videos reviewed by moderators.\n            </ng-container>\n          </my-peertube-checkbox>\n        </div>\n\n        <input class=\"peertube-button primary-button\" type=\"submit\" value=\"{{ getFormButtonTitle() }}\" [disabled]=\"!form.valid\">\n      </form>\n\n      <div class=\"d-none d-xxl-block col-7\">\n        <ng-template *ngTemplateOutlet=\"dashboard\"></ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<div *ngIf=\"displayDangerZone()\" class=\"pt-two-cols mt-5\"> <!-- danger zone grid -->\n  <div class=\"title-col\">\n    <div class=\"anchor\" id=\"danger\"></div> <!-- danger zone anchor -->\n    <h2 i18n class=\"pt-title-danger\">DANGER ZONE</h2>\n  </div>\n\n  <div class=\"content-col\">\n\n    <div class=\"danger-zone\">\n    <div class=\"form-group\">\n        <div class=\"mb-1 fw-bold\" i18n>Send a link to reset the password by email to the user</div>\n        <button class=\"peertube-button danger-button\" (click)=\"resetPassword()\" i18n>Ask for new password</button>\n      </div>\n\n      <div class=\"form-group\">\n        <div class=\"mb-1 fw-bold\" i18n>Manually set the user password</div>\n        <my-user-password [userId]=\"user.id\" [username]=\"user.username\"></my-user-password>\n      </div>\n\n      <div *ngIf=\"user.twoFactorEnabled\" class=\"form-group\">\n        <div class=\"mb-1 fw-bold\" i18n>This user has two factor authentication enabled</div>\n        <button class=\"peertube-button danger-button\" (click)=\"disableTwoFactorAuth()\" i18n>Disable two factor authentication</button>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { NgClass, NgFor, NgIf, NgTemplateOutlet } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { Router, RouterLink } from '@angular/router'\nimport { ConfigService } from '@app/+admin/config/shared/config.service'\nimport { AuthService, Notifier, ScreenService, ServerService } from '@app/core'\nimport {\n  USER_CHANNEL_NAME_VALIDATOR,\n  USER_EMAIL_VALIDATOR,\n  USER_PASSWORD_OPTIONAL_VALIDATOR,\n  USER_PASSWORD_VALIDATOR,\n  USER_ROLE_VALIDATOR,\n  USER_USERNAME_VALIDATOR,\n  USER_VIDEO_QUOTA_DAILY_VALIDATOR,\n  USER_VIDEO_QUOTA_VALIDATOR\n} from '@app/shared/form-validators/user-validators'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport { UserAdminService } from '@app/shared/shared-users/user-admin.service'\nimport { UserCreate, UserRole } from '@peertube/peertube-models'\nimport { ActorAvatarEditComponent } from '../../../../shared/shared-actor-image-edit/actor-avatar-edit.component'\nimport { InputTextComponent } from '../../../../shared/shared-forms/input-text.component'\nimport { PeertubeCheckboxComponent } from '../../../../shared/shared-forms/peertube-checkbox.component'\nimport { SelectCustomValueComponent } from '../../../../shared/shared-forms/select/select-custom-value.component'\nimport { HelpComponent } from '../../../../shared/shared-main/buttons/help.component'\nimport { BytesPipe } from '../../../../shared/shared-main/common/bytes.pipe'\nimport { UserRealQuotaInfoComponent } from '../../../shared/user-real-quota-info.component'\nimport { UserEdit } from './user-edit'\nimport { UserPasswordComponent } from './user-password.component'\n\n@Component({\n  selector: 'my-user-create',\n  templateUrl: './user-edit.component.html',\n  styleUrls: [ './user-edit.component.scss' ],\n  imports: [\n    RouterLink,\n    NgIf,\n    NgTemplateOutlet,\n    ActorAvatarEditComponent,\n    FormsModule,\n    ReactiveFormsModule,\n    NgClass,\n    HelpComponent,\n    InputTextComponent,\n    NgFor,\n    SelectCustomValueComponent,\n    UserRealQuotaInfoComponent,\n    PeertubeCheckboxComponent,\n    UserPasswordComponent,\n    BytesPipe,\n    AlertComponent\n  ]\n})\nexport class UserCreateComponent extends UserEdit implements OnInit {\n  protected serverService = inject(ServerService)\n  protected formReactiveService = inject(FormReactiveService)\n  protected configService = inject(ConfigService)\n  protected screenService = inject(ScreenService)\n  protected auth = inject(AuthService)\n  private router = inject(Router)\n  private notifier = inject(Notifier)\n  private userAdminService = inject(UserAdminService)\n\n  error: string\n\n  constructor () {\n    super()\n\n    this.buildQuotaOptions()\n  }\n\n  ngOnInit () {\n    super.ngOnInit()\n\n    const defaultValues = {\n      role: UserRole.USER.toString(),\n      videoQuota: -1,\n      videoQuotaDaily: -1\n    }\n\n    this.buildForm({\n      username: USER_USERNAME_VALIDATOR,\n      channelName: USER_CHANNEL_NAME_VALIDATOR,\n      email: USER_EMAIL_VALIDATOR,\n      password: this.isPasswordOptional() ? USER_PASSWORD_OPTIONAL_VALIDATOR : USER_PASSWORD_VALIDATOR,\n      role: USER_ROLE_VALIDATOR,\n      videoQuota: USER_VIDEO_QUOTA_VALIDATOR,\n      videoQuotaDaily: USER_VIDEO_QUOTA_DAILY_VALIDATOR,\n      byPassAutoBlock: null\n    }, defaultValues)\n  }\n\n  formValidated () {\n    this.error = undefined\n\n    const userCreate: UserCreate = this.form.value\n\n    userCreate.adminFlags = this.buildAdminFlags(this.form.value)\n\n    // A select in HTML is always mapped as a string, we convert it to number\n    userCreate.videoQuota = parseInt(this.form.value['videoQuota'], 10)\n    userCreate.videoQuotaDaily = parseInt(this.form.value['videoQuotaDaily'], 10)\n\n    this.userAdminService.addUser(userCreate)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`User ${userCreate.username} created.`)\n          this.router.navigate([ '/admin/overview/users/list' ])\n        },\n\n        error: err => {\n          this.error = err.message\n        }\n      })\n  }\n\n  isCreation () {\n    return true\n  }\n\n  isPasswordOptional () {\n    return this.serverConfig.email.enabled\n  }\n\n  getFormButtonTitle () {\n    return $localize`Create user`\n  }\n}\n","import { NgClass, NgFor, NgIf, NgTemplateOutlet } from '@angular/common'\nimport { Component, OnDestroy, OnInit, inject } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router'\nimport { ConfigService } from '@app/+admin/config/shared/config.service'\nimport { AuthService, Notifier, ScreenService, ServerService, User, UserService } from '@app/core'\nimport {\n  USER_EMAIL_VALIDATOR,\n  USER_ROLE_VALIDATOR,\n  USER_VIDEO_QUOTA_DAILY_VALIDATOR,\n  USER_VIDEO_QUOTA_VALIDATOR\n} from '@app/shared/form-validators/user-validators'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport { TwoFactorService } from '@app/shared/shared-users/two-factor.service'\nimport { UserAdminService } from '@app/shared/shared-users/user-admin.service'\nimport { UserAdminFlag, UserRole, User as UserType, UserUpdate } from '@peertube/peertube-models'\nimport { Subscription } from 'rxjs'\nimport { ActorAvatarEditComponent } from '../../../../shared/shared-actor-image-edit/actor-avatar-edit.component'\nimport { InputTextComponent } from '../../../../shared/shared-forms/input-text.component'\nimport { PeertubeCheckboxComponent } from '../../../../shared/shared-forms/peertube-checkbox.component'\nimport { SelectCustomValueComponent } from '../../../../shared/shared-forms/select/select-custom-value.component'\nimport { HelpComponent } from '../../../../shared/shared-main/buttons/help.component'\nimport { BytesPipe } from '../../../../shared/shared-main/common/bytes.pipe'\nimport { UserRealQuotaInfoComponent } from '../../../shared/user-real-quota-info.component'\nimport { UserEdit } from './user-edit'\nimport { UserPasswordComponent } from './user-password.component'\n\n@Component({\n  selector: 'my-user-update',\n  templateUrl: './user-edit.component.html',\n  styleUrls: [ './user-edit.component.scss' ],\n  imports: [\n    RouterLink,\n    NgIf,\n    NgTemplateOutlet,\n    ActorAvatarEditComponent,\n    FormsModule,\n    ReactiveFormsModule,\n    NgClass,\n    HelpComponent,\n    InputTextComponent,\n    NgFor,\n    SelectCustomValueComponent,\n    UserRealQuotaInfoComponent,\n    PeertubeCheckboxComponent,\n    UserPasswordComponent,\n    BytesPipe,\n    AlertComponent\n  ]\n})\nexport class UserUpdateComponent extends UserEdit implements OnInit, OnDestroy {\n  protected formReactiveService = inject(FormReactiveService)\n  protected serverService = inject(ServerService)\n  protected configService = inject(ConfigService)\n  protected screenService = inject(ScreenService)\n  protected auth = inject(AuthService)\n  private route = inject(ActivatedRoute)\n  private router = inject(Router)\n  private notifier = inject(Notifier)\n  private userService = inject(UserService)\n  private twoFactorService = inject(TwoFactorService)\n  private userAdminService = inject(UserAdminService)\n\n  error: string\n\n  private paramsSub: Subscription\n\n  constructor () {\n    super()\n\n    this.buildQuotaOptions()\n  }\n\n  ngOnInit () {\n    super.ngOnInit()\n\n    const defaultValues = {\n      role: UserRole.USER.toString(),\n      videoQuota: '-1',\n      videoQuotaDaily: '-1'\n    }\n\n    this.buildForm({\n      email: USER_EMAIL_VALIDATOR,\n      role: USER_ROLE_VALIDATOR,\n      videoQuota: USER_VIDEO_QUOTA_VALIDATOR,\n      videoQuotaDaily: USER_VIDEO_QUOTA_DAILY_VALIDATOR,\n      byPassAutoBlock: null,\n      pluginAuth: null\n    }, defaultValues)\n\n    this.paramsSub = this.route.params.subscribe(routeParams => {\n      const userId = routeParams['id']\n      this.userService.getUser(userId, true)\n        .subscribe({\n          next: user => this.onUserFetched(user),\n\n          error: err => {\n            this.error = err.message\n          }\n        })\n    })\n  }\n\n  ngOnDestroy () {\n    this.paramsSub.unsubscribe()\n  }\n\n  formValidated () {\n    this.error = undefined\n\n    const userUpdate: UserUpdate = this.form.value\n    userUpdate.adminFlags = this.buildAdminFlags(this.form.value)\n\n    // A select in HTML is always mapped as a string, we convert it to number\n    userUpdate.videoQuota = parseInt(this.form.value['videoQuota'], 10)\n    userUpdate.videoQuotaDaily = parseInt(this.form.value['videoQuotaDaily'], 10)\n\n    if (userUpdate.pluginAuth === 'null') userUpdate.pluginAuth = null\n\n    this.userAdminService.updateUser(this.user.id, userUpdate)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`User ${this.user.username} updated.`)\n          this.router.navigate([ '/admin/overview/users/list' ])\n        },\n\n        error: err => {\n          this.error = err.message\n        }\n      })\n  }\n\n  isCreation () {\n    return false\n  }\n\n  isPasswordOptional () {\n    return false\n  }\n\n  getFormButtonTitle () {\n    return $localize`Update user`\n  }\n\n  resetPassword () {\n    this.userService.askResetPassword(this.user.email)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`An email asking for password reset has been sent to ${this.user.username}.`)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  disableTwoFactorAuth () {\n    this.twoFactorService.disableTwoFactor({ userId: this.user.id })\n      .subscribe({\n        next: () => {\n          this.user.twoFactorEnabled = false\n\n          this.notifier.success($localize`Two factor authentication of ${this.user.username} disabled.`)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  private onUserFetched (userJson: UserType) {\n    this.user = new User(userJson)\n\n    this.form.patchValue({\n      email: userJson.email,\n      role: userJson.role.id.toString(),\n      videoQuota: userJson.videoQuota,\n      videoQuotaDaily: userJson.videoQuotaDaily,\n      pluginAuth: userJson.pluginAuth,\n      byPassAutoBlock: userJson.adminFlags & UserAdminFlag.BYPASS_VIDEO_AUTO_BLACKLIST\n    })\n  }\n}\n","<p-table\n  [value]=\"users\" [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\" [rows]=\"rowsPerPage\" [first]=\"pagination.start\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\" [sortField]=\"sort.field\" [sortOrder]=\"sort.order\" dataKey=\"id\" [resizableColumns]=\"true\"\n  [(selection)]=\"selectedRows\" [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\" [lazyLoadOnInit]=\"false\" [selectionPageOnly]=\"true\"\n  [showCurrentPageReport]=\"true\" [currentPageReportTemplate]=\"getPaginationTemplate()\" [expandedRowKeys]=\"expandedRows\"\n>\n  <ng-template pTemplate=\"caption\">\n    <div class=\"caption\">\n      <div class=\"left-buttons\">\n        <my-action-dropdown\n          *ngIf=\"isInSelectionMode()\" i18n-label label=\"Batch actions\" theme=\"primary\"\n          [actions]=\"bulkActions\" [entry]=\"selectedRows\"\n        >\n        </my-action-dropdown>\n\n        <a *ngIf=\"!isInSelectionMode()\" class=\"peertube-create-button\" routerLink=\"/admin/overview/users/create\">\n          <my-global-icon iconName=\"user-add\" aria-hidden=\"true\"></my-global-icon>\n          <ng-container i18n>Create user</ng-container>\n        </a>\n      </div>\n\n      <div class=\"ms-auto\">\n        <my-advanced-input-filter [filters]=\"inputFilters\" (search)=\"onSearch($event)\"></my-advanced-input-filter>\n      </div>\n\n    </div>\n  </ng-template>\n\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th scope=\"col\" style=\"width: 40px\">\n        <p-tableHeaderCheckbox ariaLabel=\"Select all rows\" i18n-ariaLabel></p-tableHeaderCheckbox>\n      </th>\n\n      <th scope=\"col\" style=\"width: 40px;\">\n        <span i18n class=\"visually-hidden\">More information</span>\n      </th>\n\n      <th scope=\"col\" style=\"width: 70px;\">\n        <div class=\"c-hand column-toggle\" ngbDropdown placement=\"bottom-left auto\" container=\"body\" autoClose=\"outside\">\n          <button type=\"button\" class=\"border-0 p-0\" ngbDropdownToggle i18n-title title=\"Open table configuration\">\n            <my-global-icon iconName=\"columns\"></my-global-icon>\n          </button>\n\n          <div ngbDropdownMenu class=\"p-3\">\n            <div class=\"form-group\">\n              <label i18n for=\"select-columns\">Select the columns to display</label>\n\n              <my-select-checkbox\n                inputId=\"select-columns\"\n                [availableItems]=\"columns\"\n                [selectableGroup]=\"false\" [(ngModel)]=\"selectedColumns\"\n                i18n-placeholder placeholder=\"Select the columns to display\"\n              >\n              </my-select-checkbox>\n            </div>\n\n            <div class=\"form-group\">\n              <my-peertube-checkbox\n                inputName=\"highlightBannedUsers\" [(ngModel)]=\"highlightBannedUsers\"\n                i18n-labelText labelText=\"Highlight banned users\"\n              ></my-peertube-checkbox>\n            </div>\n          </div>\n        </div>\n      </th>\n      <th scope=\"col\" *ngIf=\"isSelected('username')\" pResizableColumn [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"username\">{{ getColumn('username').label }} <p-sortIcon field=\"username\"></p-sortIcon></th>\n      <th scope=\"col\" *ngIf=\"isSelected('role')\" style=\"width: 120px;\" [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"role\">{{ getColumn('role').label }} <p-sortIcon field=\"role\"></p-sortIcon></th>\n      <th scope=\"col\" *ngIf=\"isSelected('email')\">{{ getColumn('email').label }}</th>\n      <th scope=\"col\" *ngIf=\"isSelected('quota')\" style=\"width: 160px;\" [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"videoQuotaUsed\">{{ getColumn('quota').label }} <p-sortIcon field=\"videoQuotaUsed\"></p-sortIcon></th>\n      <th scope=\"col\" *ngIf=\"isSelected('quotaDaily')\" style=\"width: 160px;\">{{ getColumn('quotaDaily').label }}</th>\n      <th scope=\"col\" *ngIf=\"isSelected('totalVideoFileSize')\" style=\"width: 100px;\">{{ getColumn('totalVideoFileSize').label }}</th>\n      <th scope=\"col\" *ngIf=\"isSelected('pluginAuth')\" style=\"width: 140px;\" pResizableColumn >{{ getColumn('pluginAuth').label }}</th>\n      <th scope=\"col\" *ngIf=\"isSelected('createdAt')\" style=\"width: 150px;\" [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"createdAt\">{{ getColumn('createdAt').label }} <p-sortIcon field=\"createdAt\"></p-sortIcon></th>\n      <th scope=\"col\" *ngIf=\"isSelected('lastLoginDate')\" style=\"width: 150px;\" [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"lastLoginDate\">{{ getColumn('lastLoginDate').label }} <p-sortIcon field=\"lastLoginDate\"></p-sortIcon></th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-expanded=\"expanded\" let-user>\n\n    <tr [pSelectableRow]=\"user\" [ngClass]=\"{ banned: highlightBannedUsers && user.blocked }\">\n      <td class=\"checkbox-cell\">\n        <p-tableCheckbox [value]=\"user\" ariaLabel=\"Select this row\" i18n-ariaLabel></p-tableCheckbox>\n      </td>\n\n      <td class=\"expand-cell\" [ngClass]=\"{ 'empty-cell': !user.blockedReason }\">\n        <my-table-expander-icon *ngIf=\"user.blockedReason\" [pRowToggler]=\"user\" [expanded]=\"expanded\"></my-table-expander-icon>\n      </td>\n\n      <td class=\"action-cell\">\n        <my-user-moderation-dropdown\n          *ngIf=\"!isInSelectionMode()\" [user]=\"user\" [account]=\"user.accountMutedStatus\" [displayOptions]=\"userModerationDisplayOptions\"\n          container=\"body\" (userChanged)=\"onUserChanged()\" (userDeleted)=\"onUserChanged()\" buttonSize=\"small\">\n        </my-user-moderation-dropdown>\n      </td>\n\n      <td *ngIf=\"isSelected('username')\" class=\"cell-username\">\n        <a i18n-title title=\"Open account in a new tab\" target=\"_blank\" rel=\"noopener noreferrer\" [routerLink]=\"[ '/a/' + user.username ]\">\n          <div class=\"chip two-lines\">\n            <my-actor-avatar [actor]=\"user?.account\" actorType=\"account\" size=\"32\"></my-actor-avatar>\n            <div>\n              <span>{{ user.account.displayName }}</span>\n              <span class=\"muted\">{{ user.username }}</span>\n            </div>\n          </div>\n        </a>\n\n        <div *ngIf=\"user.accountMutedStatus.mutedByInstance\" class=\"pt-badge badge-red\" i18n>Muted</div>\n        <div *ngIf=\"user.blocked\" class=\"pt-badge badge-red\" i18n>Banned</div>\n      </td>\n\n      <td *ngIf=\"isSelected('role')\">\n        <span *ngIf=\"user.blocked\" class=\"pt-badge badge-banned\" i18n-title title=\"The user was banned\">{{ user.role.label }}</span>\n        <span *ngIf=\"!user.blocked\" class=\"pt-badge\" [ngClass]=\"getRoleClass(user.role.id)\">{{ user.role.label }}</span>\n      </td>\n\n      <td *ngIf=\"isSelected('email')\">\n        <my-user-email-info [entry]=\"user\" showEmailVerifyInformation=\"true\"></my-user-email-info>\n      </td>\n\n      <td *ngIf=\"isSelected('quota')\">\n        <my-progress-bar\n          i18n-label label=\"Total video quota\" [max]=\"user.rawVideoQuota\" [value]=\"user.rawVideoQuotaUsed\"\n          [valueFormatted]=\"user.videoQuotaUsed\" [maxFormatted]=\"user.videoQuota\" size=\"small\"\n        >\n        </my-progress-bar>\n      </td>\n\n      <td *ngIf=\"isSelected('quotaDaily')\">\n        <my-progress-bar\n          i18n-label label=\"Total daily video quota\" [max]=\"user.rawVideoQuotaDaily\" [value]=\"user.rawVideoQuotaUsedDaily\"\n          [valueFormatted]=\"user.videoQuotaUsedDaily\" [maxFormatted]=\"user.videoQuotaDaily\" size=\"small\"\n        >\n        </my-progress-bar>\n      </td>\n\n      <td *ngIf=\"isSelected('totalVideoFileSize')\">\n        {{ user.totalVideoFileSize | bytes }}\n      </td>\n\n      <td *ngIf=\"isSelected('pluginAuth')\">\n        <span *ngIf=\"user.pluginAuth\" [ngbTooltip]=\"user.pluginAuth\">{{ user.pluginAuth }}</span>\n      </td>\n\n      <td *ngIf=\"isSelected('createdAt')\" [title]=\"user.createdAt\">{{ user.createdAt | ptDate: 'short' }}</td>\n\n      <td *ngIf=\"isSelected('lastLoginDate')\" [title]=\"user.lastLoginDate\">{{ user.lastLoginDate | ptDate: 'short' }}</td>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"rowexpansion\" let-user>\n    <tr class=\"user-blocked-reason\">\n      <td myAutoColspan>\n        <span i18n class=\"ban-reason-label\">Ban reason:</span>\n        {{ user.blockedReason }}\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n\n<my-user-ban-modal #userBanModal (userBanned)=\"onUserChanged()\"></my-user-ban-modal>\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnDestroy, OnInit, inject, viewChild } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router'\nimport {\n  AuthService,\n  ConfirmService,\n  HooksService,\n  LocalStorageService,\n  Notifier,\n  PluginService,\n  RestPagination,\n  RestTable\n} from '@app/core'\nimport { formatICU, getBackendHost } from '@app/helpers'\nimport { Actor } from '@app/shared/shared-main/account/actor.model'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { ProgressBarComponent } from '@app/shared/shared-main/common/progress-bar.component'\nimport { BlocklistService } from '@app/shared/shared-moderation/blocklist.service'\nimport { UserBanModalComponent } from '@app/shared/shared-moderation/user-ban-modal.component'\nimport { UserAdminService } from '@app/shared/shared-users/user-admin.service'\nimport { NgbDropdown, NgbDropdownMenu, NgbDropdownToggle, NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { User, UserRole, UserRoleType } from '@peertube/peertube-models'\nimport { logger } from '@root-helpers/logger'\nimport { SharedModule, SortMeta } from 'primeng/api'\nimport { TableModule } from 'primeng/table'\nimport { lastValueFrom } from 'rxjs'\nimport { ActorAvatarComponent } from '../../../../shared/shared-actor-image/actor-avatar.component'\nimport { AdvancedInputFilter, AdvancedInputFilterComponent } from '../../../../shared/shared-forms/advanced-input-filter.component'\nimport { PeertubeCheckboxComponent } from '../../../../shared/shared-forms/peertube-checkbox.component'\nimport { SelectCheckboxComponent } from '../../../../shared/shared-forms/select/select-checkbox.component'\nimport { GlobalIconComponent } from '../../../../shared/shared-icons/global-icon.component'\nimport { ActionDropdownComponent, DropdownAction } from '../../../../shared/shared-main/buttons/action-dropdown.component'\nimport { AutoColspanDirective } from '../../../../shared/shared-main/common/auto-colspan.directive'\nimport { BytesPipe } from '../../../../shared/shared-main/common/bytes.pipe'\nimport {\n  AccountMutedStatus,\n  UserModerationDisplayType,\n  UserModerationDropdownComponent\n} from '../../../../shared/shared-moderation/user-moderation-dropdown.component'\nimport { TableExpanderIconComponent } from '../../../../shared/shared-tables/table-expander-icon.component'\nimport { UserEmailInfoComponent } from '../../../shared/user-email-info.component'\n\ntype UserForList = User & {\n  rawVideoQuota: number\n  rawVideoQuotaUsed: number\n  rawVideoQuotaDaily: number\n  rawVideoQuotaUsedDaily: number\n}\n\n@Component({\n  selector: 'my-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: [ './user-list.component.scss' ],\n  imports: [\n    GlobalIconComponent,\n    TableModule,\n    SharedModule,\n    NgIf,\n    ActionDropdownComponent,\n    RouterLink,\n    AdvancedInputFilterComponent,\n    NgbDropdown,\n    NgbDropdownToggle,\n    NgbDropdownMenu,\n    SelectCheckboxComponent,\n    FormsModule,\n    PeertubeCheckboxComponent,\n    NgbTooltip,\n    NgClass,\n    TableExpanderIconComponent,\n    UserModerationDropdownComponent,\n    ActorAvatarComponent,\n    UserEmailInfoComponent,\n    AutoColspanDirective,\n    UserBanModalComponent,\n    PTDatePipe,\n    BytesPipe,\n    ProgressBarComponent\n  ]\n})\nexport class UserListComponent extends RestTable<User> implements OnInit, OnDestroy {\n  protected route = inject(ActivatedRoute)\n  protected router = inject(Router)\n  private notifier = inject(Notifier)\n  private confirmService = inject(ConfirmService)\n  private auth = inject(AuthService)\n  private blocklist = inject(BlocklistService)\n  private userAdminService = inject(UserAdminService)\n  private peertubeLocalStorage = inject(LocalStorageService)\n  private hooks = inject(HooksService)\n  private pluginService = inject(PluginService)\n\n  private static readonly LS_SELECTED_COLUMNS_KEY = 'admin-user-list-selected-columns'\n\n  readonly userBanModal = viewChild<UserBanModalComponent>('userBanModal')\n\n  users: (User & { accountMutedStatus: AccountMutedStatus })[] = []\n\n  totalRecords = 0\n  sort: SortMeta = { field: 'createdAt', order: 1 }\n  pagination: RestPagination = { count: this.rowsPerPage, start: 0 }\n\n  highlightBannedUsers = false\n\n  bulkActions: DropdownAction<User[]>[][] = []\n  columns: { id: string, label: string }[]\n\n  inputFilters: AdvancedInputFilter[] = [\n    {\n      title: $localize`Advanced filters`,\n      children: [\n        {\n          value: 'banned:true',\n          label: $localize`Banned users`\n        }\n      ]\n    }\n  ]\n\n  userModerationDisplayOptions: UserModerationDisplayType = {\n    instanceAccount: true,\n    instanceUser: true,\n    myAccount: false\n  }\n\n  private _selectedColumns: string[] = []\n\n  get authUser () {\n    return this.auth.getUser()\n  }\n\n  get selectedColumns () {\n    return this._selectedColumns || []\n  }\n\n  set selectedColumns (val: string[]) {\n    this._selectedColumns = val\n\n    this.saveSelectedColumns()\n  }\n\n  async ngOnInit () {\n    this.initialize()\n\n    this.pluginService.addAction('admin-users-list:load-data', () => this.reloadDataInternal())\n\n    const bulkActions: DropdownAction<User[]>[][] = [\n      [\n        {\n          label: $localize`Delete`,\n          description: $localize`Videos will be deleted, comments will be tombstoned.`,\n          handler: users => this.removeUsers(users),\n          isDisplayed: users => users.every(u => this.authUser.canManage(u))\n        },\n        {\n          label: $localize`Ban`,\n          description: $localize`User won't be able to login anymore, but videos and comments will be kept as is.`,\n          handler: users => this.openBanUserModal(users),\n          isDisplayed: users => users.every(u => this.authUser.canManage(u) && u.blocked === false)\n        },\n        {\n          label: $localize`Unban`,\n          handler: users => this.unbanUsers(users),\n          isDisplayed: users => users.every(u => this.authUser.canManage(u) && u.blocked === true)\n        }\n      ],\n      [\n        {\n          label: $localize`Set Email as Verified`,\n          handler: users => this.setEmailsAsVerified(users),\n          isDisplayed: users => {\n            return users.every(u => this.authUser.canManage(u) && !u.blocked && u.emailVerified !== true)\n          }\n        }\n      ]\n    ]\n\n    this.bulkActions = await this.hooks.wrapObject(bulkActions, 'admin-users', 'filter:admin-users-list.bulk-actions.create.result')\n\n    this.columns = [\n      { id: 'username', label: $localize`Username` },\n      { id: 'role', label: $localize`Role` },\n      { id: 'email', label: $localize`Email` },\n      { id: 'quota', label: $localize`Video quota` },\n      { id: 'totalVideoFileSize', label: $localize`Total size` },\n      { id: 'createdAt', label: $localize`Created` },\n      { id: 'lastLoginDate', label: $localize`Last login` },\n\n      { id: 'quotaDaily', label: $localize`Daily quota` },\n      { id: 'pluginAuth', label: $localize`Auth plugin` }\n    ]\n\n    this.loadSelectedColumns()\n  }\n\n  ngOnDestroy () {\n    this.pluginService.removeAction('admin-users-list:load-data')\n  }\n\n  loadSelectedColumns () {\n    const result = this.peertubeLocalStorage.getItem(UserListComponent.LS_SELECTED_COLUMNS_KEY)\n\n    if (result) {\n      try {\n        this.selectedColumns = JSON.parse(result)\n        return\n      } catch (err) {\n        logger.error('Cannot load selected columns.', err)\n      }\n    }\n\n    // Default behaviour\n    this.selectedColumns = [ 'username', 'role', 'email', 'quota', 'totalVideoFileSize', 'createdAt', 'lastLoginDate' ]\n    return\n  }\n\n  saveSelectedColumns () {\n    this.peertubeLocalStorage.setItem(UserListComponent.LS_SELECTED_COLUMNS_KEY, JSON.stringify(this.selectedColumns))\n  }\n\n  getIdentifier () {\n    return 'UserListComponent'\n  }\n\n  getRoleClass (role: UserRoleType) {\n    switch (role) {\n      case UserRole.ADMINISTRATOR:\n        return 'badge-purple'\n      case UserRole.MODERATOR:\n        return 'badge-blue'\n      default:\n        return 'badge-yellow'\n    }\n  }\n\n  isSelected (id: string) {\n    return this.selectedColumns.find(c => c === id)\n  }\n\n  getColumn (id: string) {\n    return this.columns.find(c => c.id === id)\n  }\n\n  getUserVideoQuotaPercentage (user: UserForList) {\n    return user.rawVideoQuotaUsed * 100 / user.rawVideoQuota\n  }\n\n  getUserVideoQuotaDailyPercentage (user: UserForList) {\n    return user.rawVideoQuotaUsedDaily * 100 / user.rawVideoQuotaDaily\n  }\n\n  openBanUserModal (users: User[]) {\n    for (const user of users) {\n      if (user.username === 'root') {\n        this.notifier.error($localize`You cannot ban root.`)\n        return\n      }\n    }\n\n    this.userBanModal().openModal(users)\n  }\n\n  onUserChanged () {\n    this.reloadData()\n  }\n\n  async unbanUsers (users: User[]) {\n    const res = await this.confirmService.confirm(\n      formatICU(\n        $localize`Do you really want to unban {count, plural, =1 {1 user} other {{count} users}}?`,\n        { count: users.length }\n      ),\n      $localize`Unban`\n    )\n\n    if (res === false) return\n\n    this.userAdminService.unbanUsers(users)\n      .subscribe({\n        next: () => {\n          this.notifier.success(\n            formatICU(\n              $localize`{count, plural, =1 {1 user unbanned.} other {{count} users unbanned.}}`,\n              { count: users.length }\n            )\n          )\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  async removeUsers (users: User[]) {\n    if (users.some(u => u.username === 'root')) {\n      this.notifier.error($localize`You cannot delete root.`)\n      return\n    }\n\n    const message = $localize`<p>You can't create users or channels with a username that already used by a deleted user/channel.</p>` +\n      $localize`It means the following usernames will be permanently deleted and cannot be recovered:` +\n      '<ul>' + users.map(u => '<li>' + u.username + '</li>').join('') + '</ul>'\n\n    const res = await this.confirmService.confirm(message, $localize`Delete`)\n    if (res === false) return\n\n    this.userAdminService.removeUsers(users)\n      .subscribe({\n        next: () => {\n          this.notifier.success(\n            formatICU(\n              $localize`{count, plural, =1 {1 user deleted.} other {{count} users deleted.}}`,\n              { count: users.length }\n            )\n          )\n\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  setEmailsAsVerified (users: User[]) {\n    this.userAdminService.updateUsers(users, { emailVerified: true })\n      .subscribe({\n        next: () => {\n          this.notifier.success(\n            formatICU(\n              $localize`{count, plural, =1 {1 user email set as verified.} other {{count} user emails set as verified.}}`,\n              { count: users.length }\n            )\n          )\n\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  protected async reloadDataInternal () {\n    const obs = this.userAdminService.getUsers({\n      pagination: this.pagination,\n      sort: this.sort,\n      search: this.search\n    })\n\n    try {\n      const resultList = await lastValueFrom(obs)\n\n      this.users = resultList.data.map(u => ({\n        ...u,\n\n        accountMutedStatus: {\n          ...u.account,\n\n          nameWithHost: Actor.CREATE_BY_STRING(u.account.name, u.account.host),\n\n          mutedByInstance: false,\n          mutedByUser: false,\n          mutedServerByInstance: false,\n          mutedServerByUser: false\n        }\n      }))\n      this.totalRecords = resultList.total\n\n      this.loadMutedStatus()\n    } catch (err) {\n      this.notifier.error(err.message)\n    }\n  }\n\n  private loadMutedStatus () {\n    this.blocklist.getStatus({ accounts: this.users.map(u => u.username + '@' + getBackendHost()) })\n      .subscribe(blockStatus => {\n        for (const user of this.users) {\n          user.accountMutedStatus.mutedByInstance = blockStatus.accounts[user.username + '@' + getBackendHost()].blockedByServer\n        }\n      })\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable, inject } from '@angular/core'\nimport { RestExtractor, RestPagination, RestService } from '@app/core'\nimport { AdvancedInputFilter } from '@app/shared/shared-forms/advanced-input-filter.component'\nimport { Video } from '@app/shared/shared-main/video/video.model'\nimport { VideoListParams, VideoService } from '@app/shared/shared-main/video/video.service'\nimport { getAllPrivacies, omit } from '@peertube/peertube-core-utils'\nimport { ResultList, VideoInclude, VideoPrivacy } from '@peertube/peertube-models'\nimport { Observable } from 'rxjs'\nimport { catchError, switchMap } from 'rxjs/operators'\n\n@Injectable()\nexport class VideoAdminService {\n  private videoService = inject(VideoService)\n  private authHttp = inject(HttpClient)\n  private restExtractor = inject(RestExtractor)\n  private restService = inject(RestService)\n\n  getAdminVideos (\n    options: VideoListParams & { pagination: RestPagination, search?: string }\n  ): Observable<ResultList<Video>> {\n    const { pagination, search } = options\n\n    let params = new HttpParams()\n    params = this.videoService.buildVideoListParams({ params, ...omit(options, [ 'search', 'pagination' ]) })\n\n    params = params.set('start', pagination.start.toString())\n      .set('count', pagination.count.toString())\n\n    params = this.buildAdminParamsFromSearch(search, params)\n\n    return this.authHttp\n      .get<ResultList<Video>>(VideoService.BASE_VIDEO_URL, { params })\n      .pipe(\n        switchMap(res => this.videoService.extractVideos(res)),\n        catchError(err => this.restExtractor.handleError(err))\n      )\n  }\n\n  buildAdminInputFilter (): AdvancedInputFilter[] {\n    return [\n      {\n        title: $localize`Moderation`,\n        children: [\n          {\n            value: 'nsfw:true',\n            label: $localize`Sensitive videos`\n          }\n        ]\n      },\n\n      {\n        title: $localize`Video type`,\n        children: [\n          {\n            value: 'isLive:false',\n            label: $localize`VOD`\n          },\n          {\n            value: 'isLive:true',\n            label: $localize`Live`\n          }\n        ]\n      },\n\n      {\n        title: $localize`Video files`,\n        children: [\n          {\n            value: 'webVideos:true isLocal:true',\n            label: $localize`With Web Videos`\n          },\n          {\n            value: 'webVideos:false isLocal:true',\n            label: $localize`Without Web Videos`\n          },\n          {\n            value: 'hls:true isLocal:true',\n            label: $localize`With HLS`\n          },\n          {\n            value: 'hls:false isLocal:true',\n            label: $localize`Without HLS`\n          }\n        ]\n      },\n\n      {\n        title: $localize`Videos scope`,\n        children: [\n          {\n            value: 'isLocal:false',\n            label: $localize`Remote videos`\n          },\n          {\n            value: 'isLocal:true',\n            label: $localize`Local videos`\n          }\n        ]\n      },\n\n      {\n        title: $localize`Exclude`,\n        children: [\n          {\n            value: 'excludeMuted',\n            label: $localize`Exclude muted accounts`\n          },\n          {\n            value: 'excludePublic',\n            label: $localize`Exclude public videos`\n          }\n        ]\n      }\n    ]\n  }\n\n  private buildAdminParamsFromSearch (search: string, params: HttpParams) {\n    let include = VideoInclude.BLACKLISTED |\n      VideoInclude.BLOCKED_OWNER |\n      VideoInclude.NOT_PUBLISHED_STATE |\n      VideoInclude.FILES |\n      VideoInclude.SOURCE |\n      VideoInclude.AUTOMATIC_TAGS\n\n    let privacyOneOf = getAllPrivacies()\n\n    if (!search) return this.restService.addObjectParams(params, { include, privacyOneOf })\n\n    const filters = this.restService.parseQueryStringFilter(search, {\n      isLocal: {\n        prefix: 'isLocal:',\n        isBoolean: true\n      },\n      hasHLSFiles: {\n        prefix: 'hls:',\n        isBoolean: true\n      },\n      hasWebVideoFiles: {\n        prefix: 'webVideos:',\n        isBoolean: true\n      },\n      isLive: {\n        prefix: 'isLive:',\n        isBoolean: true\n      },\n      excludeMuted: {\n        prefix: 'excludeMuted',\n        handler: () => true\n      },\n      excludePublic: {\n        prefix: 'excludePublic',\n        handler: () => true\n      },\n      autoTagOneOf: {\n        prefix: 'autoTag:',\n        multiple: true\n      },\n      nsfw: {\n        prefix: 'nsfw:',\n        isBoolean: true\n      }\n    })\n\n    if (filters.excludeMuted) {\n      include &= ~VideoInclude.BLOCKED_OWNER\n\n      filters.excludeMuted = undefined\n    }\n\n    if (filters.excludePublic) {\n      privacyOneOf = [ VideoPrivacy.PRIVATE, VideoPrivacy.UNLISTED, VideoPrivacy.INTERNAL, VideoPrivacy.PASSWORD_PROTECTED ]\n\n      filters.excludePublic = undefined\n    }\n\n    return this.restService.addObjectParams(params, { ...filters, include, privacyOneOf })\n  }\n}\n","<p-table\n  [value]=\"videos\" [paginator]=\"totalRecords > 0\" [totalRecords]=\"totalRecords\" [rows]=\"rowsPerPage\" [first]=\"pagination.start\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\" [sortField]=\"sort.field\" [sortOrder]=\"sort.order\" dataKey=\"id\" [resizableColumns]=\"true\"\n  [(selection)]=\"selectedRows\" [lazy]=\"true\" (onLazyLoad)=\"loadLazy($event)\" [lazyLoadOnInit]=\"false\" [selectionPageOnly]=\"true\"\n  [showCurrentPageReport]=\"true\" [currentPageReportTemplate]=\"getPaginationTemplate()\"\n  [expandedRowKeys]=\"expandedRows\" [ngClass]=\"{ loading: loading }\" (onRowExpand)=\"onVideoPanelOpened($event)\"\n>\n  <ng-template pTemplate=\"caption\">\n    <div class=\"caption\">\n      <div class=\"left-buttons\">\n        <my-action-dropdown\n          *ngIf=\"isInSelectionMode()\" i18n-label label=\"Batch actions\" theme=\"primary\"\n          [actions]=\"bulkActions\" [entry]=\"selectedRows\"\n        >\n        </my-action-dropdown>\n      </div>\n\n      <div class=\"ms-auto right-form\">\n        <my-advanced-input-filter [filters]=\"inputFilters\" (search)=\"onSearch($event)\"></my-advanced-input-filter>\n\n        <my-button i18n-label label=\"Refresh\" icon=\"refresh\" (click)=\"reloadData()\"></my-button>\n      </div>\n\n    </div>\n  </ng-template>\n\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th scope=\"col\" style=\"width: 40px\">\n        <p-tableHeaderCheckbox ariaLabel=\"Select all rows\" i18n-ariaLabel></p-tableHeaderCheckbox>\n      </th>\n      <th scope=\"col\" style=\"width: 40px;\">\n        <span i18n class=\"visually-hidden\">More information</span>\n      </th>\n      <th scope=\"col\" style=\"width: 70px;\">\n        <span i18n class=\"visually-hidden\">Actions</span>\n      </th>\n      <th scope=\"col\" i18n>Video</th>\n      <th scope=\"col\" i18n>Info</th>\n      <th scope=\"col\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"localVideoFilesSize\">Files <p-sortIcon field=\"localVideoFilesSize\"></p-sortIcon></th>\n      <th scope=\"col\" style=\"width: 150px;\" i18n [ngbTooltip]=\"sortTooltip\" container=\"body\" pSortableColumn=\"publishedAt\">Published <p-sortIcon field=\"publishedAt\"></p-sortIcon></th>\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-expanded=\"expanded\" let-video>\n\n    <tr [pSelectableRow]=\"video\" (onRowExpand)=\"onVideoPanelOpened(video)\">\n      <td class=\"checkbox-cell\">\n        <p-tableCheckbox [value]=\"video\" ariaLabel=\"Select this row\" i18n-ariaLabel></p-tableCheckbox>\n      </td>\n\n      <td class=\"expand-cell\">\n        <my-table-expander-icon [pRowToggler]=\"video\" [expanded]=\"expanded\"></my-table-expander-icon>\n      </td>\n\n      <td class=\"action-cell\">\n        <my-video-actions-dropdown\n          placement=\"bottom auto\" buttonDirection=\"horizontal\" buttonStyled=\"true\" [video]=\"video\" [displayOptions]=\"videoActionsOptions\"\n          (videoRemoved)=\"reloadData()\" (videoFilesRemoved)=\"reloadData()\" (transcodingCreated)=\"reloadData()\" buttonSize=\"small\"\n        ></my-video-actions-dropdown>\n      </td>\n\n      <td>\n        <my-video-cell [video]=\"video\" size=\"small\"></my-video-cell>\n      </td>\n\n      <td>\n        <div>\n          @if (video.isLocal) {\n            <span class=\"pt-badge badge-blue\" i18n>Local</span>\n          } @else {\n            <span class=\"pt-badge badge-purple\" i18n>Remote</span>\n          }\n\n          <my-video-privacy-badge [video]=\"video\"></my-video-privacy-badge>\n\n          <my-video-nsfw-badge [video]=\"video\" theme=\"red\"></my-video-nsfw-badge>\n\n          <span *ngIf=\"isUnpublished(video)\" class=\"pt-badge badge-yellow\">{{ video.state.label }}</span>\n\n          <span *ngIf=\"isAccountBlocked(video)\" class=\"pt-badge badge-red\" i18n>Account muted</span>\n          <span *ngIf=\"isServerBlocked(video)\" class=\"pt-badge badge-red\" i18n>Server muted</span>\n\n          <span *ngIf=\"isVideoBlocked(video)\" class=\"pt-badge badge-red\" i18n>Blocked</span>\n        </div>\n\n        <div>\n          @for (tag of video.automaticTags; track tag) {\n            <a\n              i18n-title title=\"Only display videos with this tag\"\n              class=\"pt-badge badge-secondary me-1\"\n              [routerLink]=\"[ '.' ]\" [queryParams]=\"{ 'search': buildSearchAutoTag(tag) }\"\n            >{{ tag }}</a>\n          }\n        </div>\n      </td>\n\n      <td>\n        <span *ngIf=\"hasOriginalFile(video)\" class=\"pt-badge badge-blue\" i18n>Original file</span>\n        <span *ngIf=\"hasHLS(video)\" class=\"pt-badge badge-blue\" i18n>HLS</span>\n        <span *ngIf=\"hasWebVideos(video)\" class=\"pt-badge badge-blue\" i18n>Web Videos ({{ video.files.length }})</span>\n        <span *ngIf=\"video.isLive\" class=\"pt-badge badge-blue\" i18n>Live</span>\n        <span *ngIf=\"hasObjectStorage(video)\" class=\"pt-badge badge-purple\" i18n>Object storage</span>\n\n        <span *ngIf=\"!isImport(video) && !video.isLive && video.isLocal\">{{ getFilesSize(video) | bytes: 1 }}</span>\n      </td>\n\n      <td>\n        {{ video.publishedAt | ptDate: 'short' }}\n      </td>\n\n    </tr>\n  </ng-template>\n\n  <ng-template pTemplate=\"rowexpansion\" let-video>\n    <tr>\n      <td class=\"video-info expand-cell\" myAutoColspan>\n        <div>\n          <div class=\"me-3\" *ngIf=\"hasOriginalFile(video)\">\n            <ng-container i18n>Original file:</ng-container>\n\n            <ul>\n              <li>\n                <a title=\"Download this file\" i18n-title [href]=\"getDownloadUrl(video, video.videoSource.fileDownloadUrl)\">{{ video.videoSource.inputFilename }}</a>: {{ video.videoSource.size | bytes: 1 }}\n\n                <button class=\"border-0 p-0\" i18n-title title=\"Delete this file\" (click)=\"removeVideoSourceFile(video)\">\n                  <my-global-icon iconName=\"delete\"></my-global-icon>\n                </button>\n              </li>\n            </ul>\n          </div>\n\n          <div class=\"me-3\" *ngIf=\"hasWebVideos(video)\">\n            <ng-container i18n>Web Videos:</ng-container>\n\n            <ul>\n              <li *ngFor=\"let file of video.files\">\n                <a title=\"Download this file\" i18n-title [href]=\"getDownloadUrl(video, file.fileDownloadUrl)\">{{ file.resolution.label }}</a>: {{ file.size | bytes: 1 }}\n\n                <button\n                  *ngIf=\"canRemoveOneFile(video)\" class=\"border-0 p-0\"\n                  i18n-title title=\"Delete this file\"\n                  (click)=\"removeVideoFile(video, file, 'web-videos')\"\n                >\n                  <my-global-icon iconName=\"delete\"></my-global-icon>\n                </button>\n              </li>\n            </ul>\n          </div>\n\n          <div *ngIf=\"hasHLS(video)\">\n            <ng-container i18n>HLS:</ng-container>\n\n            <ul>\n              <li *ngFor=\"let file of video.streamingPlaylists[0].files\">\n                <a title=\"Download this file\" i18n-title [href]=\"getDownloadUrl(video, file.fileDownloadUrl)\">{{ file.resolution.label }}</a>: {{ file.size | bytes: 1 }}\n\n                <button\n                  *ngIf=\"canRemoveOneFile(video)\" class=\"border-0 p-0\"\n                  i18n-title title=\"Delete this file\"\n                  (click)=\"removeVideoFile(video, file, 'hls')\"\n                >\n                  <my-global-icon iconName=\"delete\"></my-global-icon>\n                </button>\n              </li>\n            </ul>\n          </div>\n\n          <my-embed class=\"ms-auto\" [video]=\"video\"></my-embed>\n        </div>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n\n<my-video-block #videoBlockModal (videoBlocked)=\"reloadData()\"></my-video-block>\n","import { NgClass, NgFor, NgIf } from '@angular/common'\nimport { Component, OnInit, inject, viewChild } from '@angular/core'\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router'\nimport { AuthService, ConfirmService, Notifier, RestPagination, RestTable, ServerService } from '@app/core'\nimport { formatICU } from '@app/helpers'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { VideoCaptionService } from '@app/shared/shared-main/video-caption/video-caption.service'\nimport { VideoDetails } from '@app/shared/shared-main/video/video-details.model'\nimport { VideoFileTokenService } from '@app/shared/shared-main/video/video-file-token.service'\nimport { Video } from '@app/shared/shared-main/video/video.model'\nimport { VideoService } from '@app/shared/shared-main/video/video.service'\nimport { VideoBlockComponent } from '@app/shared/shared-moderation/video-block.component'\nimport { VideoBlockService } from '@app/shared/shared-moderation/video-block.service'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { getAllFiles } from '@peertube/peertube-core-utils'\nimport { FileStorage, NSFWFlag, UserRight, VideoFile, VideoState, VideoStreamingPlaylistType } from '@peertube/peertube-models'\nimport { videoRequiresFileToken } from '@root-helpers/video'\nimport { SharedModule, SortMeta } from 'primeng/api'\nimport { TableModule, TableRowExpandEvent } from 'primeng/table'\nimport { finalize } from 'rxjs/operators'\nimport { AdvancedInputFilter, AdvancedInputFilterComponent } from '../../../shared/shared-forms/advanced-input-filter.component'\nimport { GlobalIconComponent } from '../../../shared/shared-icons/global-icon.component'\nimport { ActionDropdownComponent, DropdownAction } from '../../../shared/shared-main/buttons/action-dropdown.component'\nimport { ButtonComponent } from '../../../shared/shared-main/buttons/button.component'\nimport { AutoColspanDirective } from '../../../shared/shared-main/common/auto-colspan.directive'\nimport { BytesPipe } from '../../../shared/shared-main/common/bytes.pipe'\nimport { EmbedComponent } from '../../../shared/shared-main/video/embed.component'\nimport { TableExpanderIconComponent } from '../../../shared/shared-tables/table-expander-icon.component'\nimport { VideoCellComponent } from '../../../shared/shared-tables/video-cell.component'\nimport {\n  VideoActionsDisplayType,\n  VideoActionsDropdownComponent\n} from '../../../shared/shared-video-miniature/video-actions-dropdown.component'\nimport { VideoNSFWBadgeComponent } from '../../../shared/shared-video/video-nsfw-badge.component'\nimport { VideoPrivacyBadgeComponent } from '../../../shared/shared-video/video-privacy-badge.component'\nimport { VideoAdminService } from './video-admin.service'\n\n@Component({\n  selector: 'my-video-list',\n  templateUrl: './video-list.component.html',\n  styleUrls: [ './video-list.component.scss' ],\n  imports: [\n    GlobalIconComponent,\n    TableModule,\n    NgClass,\n    SharedModule,\n    NgIf,\n    ActionDropdownComponent,\n    AdvancedInputFilterComponent,\n    ButtonComponent,\n    NgbTooltip,\n    TableExpanderIconComponent,\n    VideoActionsDropdownComponent,\n    VideoCellComponent,\n    AutoColspanDirective,\n    NgFor,\n    EmbedComponent,\n    VideoBlockComponent,\n    PTDatePipe,\n    RouterLink,\n    BytesPipe,\n    VideoPrivacyBadgeComponent,\n    VideoNSFWBadgeComponent\n  ]\n})\nexport class VideoListComponent extends RestTable<Video> implements OnInit {\n  protected route = inject(ActivatedRoute)\n  protected router = inject(Router)\n  private confirmService = inject(ConfirmService)\n  private auth = inject(AuthService)\n  private notifier = inject(Notifier)\n  private videoService = inject(VideoService)\n  private videoAdminService = inject(VideoAdminService)\n  private videoBlockService = inject(VideoBlockService)\n  private videoCaptionService = inject(VideoCaptionService)\n  private server = inject(ServerService)\n  private videoFileTokenService = inject(VideoFileTokenService)\n\n  readonly videoBlockModal = viewChild<VideoBlockComponent>('videoBlockModal')\n\n  videos: Video[] = []\n\n  totalRecords = 0\n  sort: SortMeta = { field: 'publishedAt', order: -1 }\n  pagination: RestPagination = { count: this.rowsPerPage, start: 0 }\n\n  bulkActions: DropdownAction<Video[]>[][] = []\n\n  inputFilters: AdvancedInputFilter[]\n\n  videoActionsOptions: VideoActionsDisplayType = {\n    playlist: false,\n    download: false,\n    update: true,\n    blacklist: true,\n    delete: true,\n    report: false,\n    duplicate: true,\n    mute: true,\n    liveInfo: false,\n    removeFiles: true,\n    transcoding: true,\n    generateTranscription: true\n  }\n\n  loading = true\n\n  private videoFileTokens: { [videoId: number]: string } = {}\n\n  get authUser () {\n    return this.auth.getUser()\n  }\n\n  get serverConfig () {\n    return this.server.getHTMLConfig()\n  }\n\n  ngOnInit () {\n    this.initialize()\n\n    this.inputFilters = this.videoAdminService.buildAdminInputFilter()\n\n    this.bulkActions = [\n      [\n        {\n          label: $localize`Delete`,\n          handler: videos => this.removeVideos(videos),\n          isDisplayed: () => this.authUser.hasRight(UserRight.REMOVE_ANY_VIDEO),\n          iconName: 'delete'\n        },\n        {\n          label: $localize`Block`,\n          handler: videos => this.videoBlockModal().show(videos),\n          isDisplayed: videos => this.authUser.hasRight(UserRight.MANAGE_VIDEO_BLACKLIST) && videos.every(v => !v.blacklisted),\n          iconName: 'no'\n        },\n        {\n          label: $localize`Unblock`,\n          handler: videos => this.unblockVideos(videos),\n          isDisplayed: videos => this.authUser.hasRight(UserRight.MANAGE_VIDEO_BLACKLIST) && videos.every(v => v.blacklisted),\n          iconName: 'undo'\n        }\n      ],\n      [\n        {\n          label: $localize`Run HLS transcoding`,\n          handler: videos => this.runTranscoding(videos, 'hls'),\n          isDisplayed: videos => videos.every(v => v.canRunTranscoding(this.authUser)),\n          iconName: 'cog'\n        },\n        {\n          label: $localize`Run Web Video transcoding`,\n          handler: videos => this.runTranscoding(videos, 'web-video'),\n          isDisplayed: videos => videos.every(v => v.canRunTranscoding(this.authUser)),\n          iconName: 'cog'\n        },\n        {\n          label: $localize`Delete HLS files`,\n          handler: videos => this.removeVideoFiles(videos, 'hls'),\n          isDisplayed: videos => videos.every(v => v.canRemoveAllHLSOrWebFiles(this.authUser)),\n          iconName: 'delete'\n        },\n        {\n          label: $localize`Delete Web Video files`,\n          handler: videos => this.removeVideoFiles(videos, 'web-videos'),\n          isDisplayed: videos => videos.every(v => v.canRemoveAllHLSOrWebFiles(this.authUser)),\n          iconName: 'delete'\n        }\n      ],\n      [\n        {\n          label: $localize`Generate caption`,\n          handler: videos => this.generateCaption(videos),\n          isDisplayed: videos => videos.every(v => v.canGenerateTranscription(this.authUser, this.serverConfig.videoTranscription.enabled)),\n          iconName: 'video-lang'\n        }\n      ]\n    ]\n  }\n\n  getIdentifier () {\n    return 'VideoListComponent'\n  }\n\n  isUnpublished (video: Video) {\n    return video.state.id !== VideoState.LIVE_ENDED && video.state.id !== VideoState.PUBLISHED\n  }\n\n  isAccountBlocked (video: Video) {\n    return video.blockedOwner\n  }\n\n  isServerBlocked (video: Video) {\n    return video.blockedServer\n  }\n\n  isVideoBlocked (video: Video) {\n    return video.blacklisted\n  }\n\n  isImport (video: Video) {\n    return video.state.id === VideoState.TO_IMPORT\n  }\n\n  hasOriginalFile (video: Video) {\n    return !!video.videoSource?.fileDownloadUrl\n  }\n\n  hasHLS (video: Video) {\n    const p = video.streamingPlaylists.find(p => p.type === VideoStreamingPlaylistType.HLS)\n    if (!p) return false\n\n    return p.files.length !== 0\n  }\n\n  hasWebVideos (video: Video) {\n    return video.files.length !== 0\n  }\n\n  hasObjectStorage (video: Video) {\n    if (!video.isLocal) return false\n\n    const files = getAllFiles(video)\n\n    return files.some(f => f.storage === FileStorage.OBJECT_STORAGE)\n  }\n\n  canRemoveOneFile (video: Video) {\n    return video.canRemoveOneFile(this.authUser)\n  }\n\n  getFilesSize (video: Video) {\n    let total = getAllFiles(video).reduce((p, f) => p += f.size, 0)\n\n    if (video.videoSource?.fileDownloadUrl) {\n      total += video.videoSource.size || 0\n    }\n\n    return total\n  }\n\n  async removeVideoFile (video: Video, file: VideoFile, type: 'hls' | 'web-videos') {\n    const message = $localize`Are you sure you want to delete this ${file.resolution.label} file?`\n    const res = await this.confirmService.confirm(message, $localize`Delete file`)\n    if (res === false) return\n\n    this.videoService.removeFile(video.uuid, file.id, type)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`File removed.`)\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  async removeVideoSourceFile (video: Video) {\n    const message = $localize`Are you sure you want to delete the original file of this video?`\n    const res = await this.confirmService.confirm(message, $localize`Delete original file`)\n    if (res === false) return\n\n    this.videoService.removeSourceFile(video.uuid)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Original file removed.`)\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  buildSearchAutoTag (tag: string) {\n    const str = `autoTag:\"${tag}\"`\n\n    if (this.search) return this.search + ' ' + str\n\n    return str\n  }\n\n  // ---------------------------------------------------------------------------\n\n  onVideoPanelOpened (event: TableRowExpandEvent) {\n    const video = event.data as VideoDetails\n\n    if (!video.videoSource?.filename && !videoRequiresFileToken(video)) return\n\n    this.videoFileTokenService.getVideoFileToken({ videoUUID: video.uuid })\n      .subscribe(({ token }) => {\n        this.videoFileTokens[video.id] = token\n      })\n  }\n\n  getDownloadUrl (video: VideoDetails, downloadUrl: string) {\n    const token = this.videoFileTokens[video.id]\n    if (!token) return downloadUrl\n\n    return downloadUrl + `?videoFileToken=${token}`\n  }\n\n  // ---------------------------------------------------------------------------\n\n  protected reloadDataInternal () {\n    this.loading = true\n\n    this.videoAdminService.getAdminVideos({\n      pagination: this.pagination,\n      sort: this.sort,\n\n      // Always list NSFW video, overriding instance/user setting\n      nsfw: 'both',\n      nsfwFlagsExcluded: NSFWFlag.NONE,\n\n      search: this.search\n    }).pipe(finalize(() => this.loading = false))\n      .subscribe({\n        next: resultList => {\n          this.videos = resultList.data\n          this.totalRecords = resultList.total\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  private async removeVideos (videos: Video[]) {\n    const message = formatICU(\n      $localize`Are you sure you want to delete {count, plural, =1 {this video} other {these {count} videos}}?`,\n      { count: videos.length }\n    )\n\n    const res = await this.confirmService.confirm(message, $localize`Delete`)\n    if (res === false) return\n\n    this.videoService.removeVideo(videos.map(v => v.id))\n      .subscribe({\n        next: () => {\n          this.notifier.success(\n            formatICU(\n              $localize`Deleted {count, plural, =1 {1 video} other {{count} videos}}.`,\n              { count: videos.length }\n            )\n          )\n\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  private unblockVideos (videos: Video[]) {\n    this.videoBlockService.unblockVideo(videos.map(v => v.id))\n      .subscribe({\n        next: () => {\n          this.notifier.success(\n            formatICU(\n              $localize`Unblocked {count, plural, =1 {1 video} other {{count} videos}}.`,\n              { count: videos.length }\n            )\n          )\n\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  private async removeVideoFiles (videos: Video[], type: 'hls' | 'web-videos') {\n    let message: string\n\n    if (type === 'hls') {\n      message = formatICU(\n        $localize`Are you sure you want to delete {count, plural, =1 {1 HLS streaming playlist} other {{count} HLS streaming playlists}}?`,\n        { count: videos.length }\n      )\n    } else {\n      message = formatICU(\n        $localize`Are you sure you want to delete Web Video files of {count, plural, =1 {1 video} other {{count} videos}}?`,\n        { count: videos.length }\n      )\n    }\n\n    const res = await this.confirmService.confirm(message, $localize`Delete`)\n    if (res === false) return\n\n    this.videoService.removeVideoFiles(videos.map(v => v.id), type)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Files were removed.`)\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  private runTranscoding (videos: Video[], type: 'hls' | 'web-video') {\n    this.videoService.runTranscoding({ videos, type })\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Transcoding jobs created.`)\n\n          this.reloadData()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  private generateCaption (videos: Video[]) {\n    this.videoCaptionService.generateCaption({ videos })\n      .subscribe({\n        next: result => {\n          if (result.success) {\n            this.notifier.success(\n              formatICU(\n                $localize`{count, plural, =1 {1 transcription job created.} other {{count} transcription jobs created.}}`,\n                { count: result.success }\n              )\n            )\n          }\n\n          if (result.alreadyHasCaptions) {\n            this.notifier.info(\n              formatICU(\n                $localize`{count, plural, =1 {1 video already has captions.} other {{count} videos already have captions.}}`,\n                { count: result.alreadyHasCaptions }\n              )\n            )\n          }\n\n          if (result.alreadyBeingTranscribed) {\n            this.notifier.info(\n              formatICU(\n                // eslint-disable-next-line max-len\n                $localize`{count, plural, =1 {1 video is already being transcribed.} other {{count} videos are already being transcribed.}}`,\n                { count: result.alreadyBeingTranscribed }\n              )\n            )\n          }\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n}\n","import { Routes, UrlSegment } from '@angular/router'\nimport { VideoCommentListComponent } from './comments'\nimport { UserCreateComponent, UserListComponent, UserUpdateComponent } from './users'\nimport { VideoListComponent } from './videos'\nimport { UserRightGuard } from '@app/core'\nimport { UserRight } from '@peertube/peertube-models'\n\nfunction basePathRedirect ({ url }: { url: UrlSegment[] }) {\n  return `/admin/overview/${url.map(u => u.path).join('/')}`\n}\n\nexport const overviewRoutes: Routes = [\n  {\n    path: 'comments',\n    pathMatch: 'prefix',\n    redirectTo: basePathRedirect\n  },\n\n  {\n    path: 'videos',\n    pathMatch: 'prefix',\n    redirectTo: basePathRedirect\n  },\n\n  {\n    path: 'users',\n    pathMatch: 'prefix',\n    redirectTo: basePathRedirect\n  },\n\n  {\n    path: 'overview',\n\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'users'\n      },\n\n      {\n        path: 'comments',\n        canActivate: [ UserRightGuard ],\n        data: {\n          userRight: UserRight.SEE_ALL_COMMENTS\n        },\n        children: [\n          {\n            path: '',\n            redirectTo: 'list',\n            pathMatch: 'full'\n          },\n          {\n            path: 'list',\n            component: VideoCommentListComponent,\n            data: {\n              meta: {\n                title: $localize`Comments list`\n              }\n            }\n          }\n        ]\n      },\n\n      {\n        path: 'users',\n        canActivate: [ UserRightGuard ],\n        data: {\n          userRight: UserRight.MANAGE_USERS\n        },\n        children: [\n          {\n            path: '',\n            redirectTo: 'list',\n            pathMatch: 'full'\n          },\n          {\n            path: 'list',\n            component: UserListComponent,\n            data: {\n              meta: {\n                title: $localize`Users list`\n              }\n            }\n          },\n          {\n            path: 'create',\n            component: UserCreateComponent,\n            data: {\n              meta: {\n                title: $localize`Create a user`\n              }\n            }\n          },\n          {\n            path: 'update/:id',\n            component: UserUpdateComponent,\n            data: {\n              meta: {\n                title: $localize`Update a user`\n              }\n            }\n          }\n        ]\n      },\n\n      {\n        path: 'videos',\n        canActivate: [ UserRightGuard ],\n        data: {\n          userRight: UserRight.SEE_ALL_VIDEOS\n        },\n        children: [\n          {\n            path: '',\n            redirectTo: 'list',\n            pathMatch: 'full'\n          },\n          {\n            path: 'list',\n            component: VideoListComponent,\n            data: {\n              meta: {\n                title: $localize`Videos list`\n              }\n            }\n          }\n        ]\n      }\n    ]\n  }\n]\n","import { Route, Routes, UrlSegment } from '@angular/router'\nimport { configRoutes, EditConfigurationService } from '@app/+admin/config'\nimport { moderationRoutes } from '@app/+admin/moderation/moderation.routes'\nimport { pluginsRoutes } from '@app/+admin/plugins/plugins.routes'\nimport { DebugService, JobService, LogsService, RunnerService, systemRoutes } from '@app/+admin/system'\nimport { CustomMarkupService } from '@app/shared/shared-custom-markup/custom-markup.service'\nimport { DynamicElementService } from '@app/shared/shared-custom-markup/dynamic-element.service'\nimport { InstanceFollowService } from '@app/shared/shared-instance/instance-follow.service'\nimport { CustomPageService } from '@app/shared/shared-main/custom-page/custom-page.service'\nimport { AbuseService } from '@app/shared/shared-moderation/abuse.service'\nimport { BlocklistService } from '@app/shared/shared-moderation/blocklist.service'\nimport { BulkService } from '@app/shared/shared-moderation/bulk.service'\nimport { VideoBlockService } from '@app/shared/shared-moderation/video-block.service'\nimport { FindInBulkService } from '@app/shared/shared-search/find-in-bulk.service'\nimport { SearchService } from '@app/shared/shared-search/search.service'\nimport { TwoFactorService } from '@app/shared/shared-users/two-factor.service'\nimport { UserAdminService } from '@app/shared/shared-users/user-admin.service'\nimport { VideoCommentService } from '@app/shared/shared-video-comment/video-comment.service'\nimport { VideoPlaylistService } from '@app/shared/shared-video-playlist/video-playlist.service'\nimport { WatchedWordsListService } from '@app/shared/standalone-watched-words/watched-words-list.service'\nimport { AdminModerationComponent } from './admin-moderation.component'\nimport { AdminOverviewComponent } from './admin-overview.component'\nimport { AdminSettingsComponent } from './admin-settings.component'\nimport { ConfigService } from './config/shared/config.service'\nimport { followsRoutes } from './follows'\nimport { AdminRegistrationService } from './moderation/registration-list'\nimport { overviewRoutes, VideoAdminService } from './overview'\nimport { PluginApiService } from './plugins/shared/plugin-api.service'\n\nconst commonConfig = {\n  path: '',\n  providers: [\n    BlocklistService,\n    UserAdminService,\n    BulkService,\n    AdminRegistrationService,\n    CustomMarkupService,\n    CustomPageService,\n    DebugService,\n    EditConfigurationService,\n    InstanceFollowService,\n    JobService,\n    LogsService,\n    PluginApiService,\n    RunnerService,\n    TwoFactorService,\n    UserAdminService,\n    VideoAdminService,\n    VideoBlockService,\n    VideoCommentService,\n    ConfigService,\n    AbuseService,\n    DynamicElementService,\n    FindInBulkService,\n    SearchService,\n    VideoPlaylistService,\n    WatchedWordsListService\n  ]\n}\n\nfunction isOverviewRoute (segments: UrlSegment[]) {\n  if (segments.length === 0) return false\n\n  const rootPath = segments[0].path\n\n  return overviewRoutes.some(r => r.path === rootPath || r.path.startsWith(`${rootPath}/`))\n}\n\nfunction isModerationRoute (segments: UrlSegment[]) {\n  if (segments.length === 0) return false\n\n  const rootPath = segments[0].path\n\n  return moderationRoutes.some(r => r.path === rootPath || r.path.startsWith(`${rootPath}/`))\n}\n\nfunction baseSettingsPathRedirect ({ url }: { url: UrlSegment[] }) {\n  return `/admin/settings/${url.map(u => u.path).join('/')}`\n}\n\nexport default [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'overview'\n  },\n\n  {\n    ...commonConfig,\n\n    component: AdminModerationComponent,\n    canMatch: [\n      (_route: Route, segments: UrlSegment[]) => {\n        return isModerationRoute(segments)\n      }\n    ],\n\n    children: moderationRoutes\n  },\n\n  {\n    ...commonConfig,\n\n    component: AdminOverviewComponent,\n    canMatch: [\n      (_route: Route, segments: UrlSegment[]) => {\n        return isOverviewRoute(segments)\n      }\n    ],\n\n    children: overviewRoutes\n  },\n\n  {\n    path: 'config',\n    pathMatch: 'prefix',\n    redirectTo: baseSettingsPathRedirect\n  },\n\n  {\n    path: 'follows',\n    pathMatch: 'prefix',\n    redirectTo: baseSettingsPathRedirect\n  },\n\n  {\n    path: 'system',\n    pathMatch: 'prefix',\n    redirectTo: baseSettingsPathRedirect\n  },\n\n  {\n    path: 'plugins',\n    pathMatch: 'prefix',\n    redirectTo: baseSettingsPathRedirect\n  },\n\n  {\n    ...commonConfig,\n\n    path: 'settings',\n    component: AdminSettingsComponent,\n    canMatch: [\n      (_route: Route, segments: UrlSegment[]) => {\n        return !isOverviewRoute(segments) && !isModerationRoute(segments)\n      }\n    ],\n\n    children: [\n      {\n        path: '',\n        redirectTo: 'config',\n        pathMatch: 'full'\n      },\n\n      ...configRoutes,\n      ...followsRoutes,\n      ...systemRoutes,\n      ...pluginsRoutes\n    ]\n  }\n] satisfies Routes\n"]}