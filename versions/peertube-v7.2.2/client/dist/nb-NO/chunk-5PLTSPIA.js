import{a as W,b as F}from"./chunk-ANGOORPW.js";import{a as D}from"./chunk-OPOGZMDG.js";import{d as G}from"./chunk-UI5MIAKJ.js";import{$f as z,Af as N,B as n,He as C,M as R,Pf as x,Q as d,Qf as B,S as c,Tc as y,Tf as S,Uf as b,Vc as _,Wd as V,Xc as O,Y as U,aa as u,c as A,e as I,j as v,kg as H,lg as j,mf as f,n as p,qg as Y,v as T,x as g,xe as w,xg as k}from"./chunk-F7FAPFPY.js";import{g as q,i as m}from"./chunk-AI7IVZV2.js";var J=q(z());var E=class{id;position;startTimestamp;stopTimestamp;type;video;constructor(t,e={}){this.id=t.id,this.position=t.position,this.startTimestamp=t.startTimestamp,this.stopTimestamp=t.stopTimestamp,this.type=t.type,t.video&&(this.video=new G(t.video,e))}};var P=class{id;uuid;shortUUID;isLocal;url;displayName;description;privacy;videosLength;type;createdAt;updatedAt;ownerAccount;videoChannel;thumbnailPath;thumbnailUrl;embedPath;embedUrl;ownerBy;videoChannelBy;static buildWatchUrl(t){return w({shortUUID:t.shortUUID||t.uuid})}constructor(t,e){this.id=t.id,this.uuid=t.uuid,this.shortUUID=t.shortUUID,this.url=t.url,this.isLocal=t.isLocal,this.displayName=t.displayName,this.description=t.description,this.privacy=t.privacy,this.thumbnailPath=t.thumbnailPath,this.thumbnailUrl=this.thumbnailPath?t.thumbnailUrl||x()+t.thumbnailPath:x()+"/client/assets/images/default-playlist.jpg",this.embedPath=t.embedPath,this.embedUrl=t.embedUrl||B()+t.embedPath,this.videosLength=t.videosLength,this.type=t.type,this.createdAt=new Date(t.createdAt),this.updatedAt=new Date(t.updatedAt),this.ownerAccount=t.ownerAccount,this.ownerBy=b.CREATE_BY_STRING(t.ownerAccount.name,t.ownerAccount.host),t.videoChannel&&(this.videoChannel=t.videoChannel,this.videoChannelBy=b.CREATE_BY_STRING(t.videoChannel.name,t.videoChannel.host)),this.privacy.label=C(this.privacy.label,e),this.type.id===V.WATCH_LATER&&(this.displayName=C(this.displayName,e))}};var L=(0,J.default)("peertube:playlists:VideoPlaylistService"),r=class r{authHttp=u(O);auth=u(j);serverService=u(k);restExtractor=u(H);restService=u(Y);videoExistsInPlaylistNotifier=new I(1);videoExistsInPlaylistCacheSubject=new A;videoExistsInPlaylistObservable;videoExistsObservableCache={};videoExistsCache={};myAccountPlaylistCache=void 0;myAccountPlaylistCacheRunning;myAccountPlaylistCacheSubject=new A;constructor(){this.videoExistsInPlaylistObservable=T(N({time:200,bulkGet:t=>this.auth.isLoggedIn()?this.doVideosExistInPlaylist(t):v({}),notifierObservable:this.videoExistsInPlaylistNotifier}).pipe(p(({response:t})=>t)),this.videoExistsInPlaylistCacheSubject)}listChannelPlaylists(t,e){let i=F.BASE_VIDEO_CHANNEL_URL+t.nameWithHost+"/video-playlists",s=this.restService.componentToRestPagination(e),a=new y;return a=this.restService.addRestGetParams(a,s),this.authHttp.get(i,{params:a}).pipe(d(o=>this.extractPlaylists(o)),n(o=>this.restExtractor.handleError(o)))}listMyPlaylistWithCache(t,e){if(!e){if(this.myAccountPlaylistCacheRunning)return this.myAccountPlaylistCacheRunning;if(this.myAccountPlaylistCache)return v(this.myAccountPlaylistCache)}let i=this.listAccountPlaylists(t.account,void 0,"-updatedAt",e).pipe(c(s=>{e||(this.myAccountPlaylistCacheRunning=void 0,this.myAccountPlaylistCache=s)}),R());return e||(this.myAccountPlaylistCacheRunning=i),i}listAccountPlaylists(t,e,i,s){let a=W.BASE_ACCOUNT_URL+t.nameWithHost+"/video-playlists",o=e?this.restService.componentToRestPagination(e):void 0,l=new y;return l=this.restService.addRestGetParams(l,o,i),s&&(l=this.restService.addObjectParams(l,{search:s})),this.authHttp.get(a,{params:l}).pipe(d(h=>this.extractPlaylists(h)),n(h=>this.restExtractor.handleError(h)))}getVideoPlaylist(t){let e=r.BASE_VIDEO_PLAYLIST_URL+t;return this.authHttp.get(e).pipe(d(i=>this.extractPlaylist(i)),n(i=>this.restExtractor.handleError(i)))}createVideoPlaylist(t){let e=S(t);return this.authHttp.post(r.BASE_VIDEO_PLAYLIST_URL,e).pipe(c(i=>{this.myAccountPlaylistCache&&(this.myAccountPlaylistCache.total++,this.myAccountPlaylistCache.data.push({id:i.videoPlaylist.id,displayName:t.displayName}),this.myAccountPlaylistCacheSubject.next(this.myAccountPlaylistCache))}),n(i=>this.restExtractor.handleError(i)))}updateVideoPlaylist(t,e){let i=S(e);return this.authHttp.put(r.BASE_VIDEO_PLAYLIST_URL+t.id,i).pipe(c(()=>{if(!this.myAccountPlaylistCache)return;let s=this.myAccountPlaylistCache.data.find(a=>a.id===t.id);s.displayName=e.displayName,this.myAccountPlaylistCacheSubject.next(this.myAccountPlaylistCache)}),n(s=>this.restExtractor.handleError(s)))}removeVideoPlaylist(t){return this.authHttp.delete(r.BASE_VIDEO_PLAYLIST_URL+t.id).pipe(c(()=>{this.myAccountPlaylistCache&&(this.myAccountPlaylistCache.total--,this.myAccountPlaylistCache.data=this.myAccountPlaylistCache.data.filter(e=>e.id!==t.id),this.myAccountPlaylistCacheSubject.next(this.myAccountPlaylistCache))}),n(e=>this.restExtractor.handleError(e)))}addVideoInPlaylist(t,e){let i=r.BASE_VIDEO_PLAYLIST_URL+t+"/videos";return this.authHttp.post(i,e).pipe(c(s=>{if(this.videoExistsCache[e.videoId].push({playlistId:t,playlistElementId:s.videoPlaylistElement.id,startTimestamp:e.startTimestamp,stopTimestamp:e.stopTimestamp}),this.runVideoExistsInPlaylistCheck(e.videoId),this.myAccountPlaylistCache){let o=this.myAccountPlaylistCache.data.find(h=>h.id===t);if(!o)return;let l=this.myAccountPlaylistCache.data.filter(h=>h!==o);this.myAccountPlaylistCache.data=[o,...l]}}),n(s=>this.restExtractor.handleError(s)))}updateVideoOfPlaylist(t,e,i,s){return this.authHttp.put(r.BASE_VIDEO_PLAYLIST_URL+t+"/videos/"+e,i).pipe(c(()=>{let a=this.videoExistsCache[s];if(a){let o=a.find(l=>l.playlistElementId===e);o.startTimestamp=i.startTimestamp,o.stopTimestamp=i.stopTimestamp}this.runVideoExistsInPlaylistCheck(s)}),n(a=>this.restExtractor.handleError(a)))}removeVideoFromPlaylist(t,e,i){return this.authHttp.delete(r.BASE_VIDEO_PLAYLIST_URL+t+"/videos/"+e).pipe(c(()=>{i&&(this.videoExistsCache[i]&&(this.videoExistsCache[i]=this.videoExistsCache[i].filter(s=>s.playlistElementId!==e)),this.runVideoExistsInPlaylistCheck(i))}),n(s=>this.restExtractor.handleError(s)))}reorderPlaylist(t,e,i){let s={startPosition:e,insertAfterPosition:i};return this.authHttp.post(r.BASE_VIDEO_PLAYLIST_URL+t+"/videos/reorder",s).pipe(n(a=>this.restExtractor.handleError(a)))}getPlaylistVideos(t){let e=r.BASE_VIDEO_PLAYLIST_URL+t.videoPlaylistId+"/videos",i=this.restService.componentToRestPagination(t.componentPagination),s=new y;return s=this.restService.addRestGetParams(s,i),this.authHttp.get(e,{params:s}).pipe(d(a=>this.extractVideoPlaylistElements(a)),n(a=>this.restExtractor.handleError(a)))}listenToMyAccountPlaylistsChange(){return this.myAccountPlaylistCacheSubject.asObservable()}listenToVideoPlaylistChange(t){if(this.videoExistsObservableCache[t])return this.videoExistsObservableCache[t];let e=this.videoExistsInPlaylistObservable.pipe(p(i=>i[t]),g(i=>!!i),c(i=>this.videoExistsCache[t]=i));return this.videoExistsObservableCache[t]=e,e}runVideoExistsInPlaylistCheck(t){return L("Running playlist check."),this.videoExistsCache[t]?(L("Found cache for %d.",t),this.videoExistsInPlaylistCacheSubject.next({[t]:this.videoExistsCache[t]})):(L("Fetching from network for %d.",t),this.videoExistsInPlaylistNotifier.next(t))}extractPlaylists(t){return this.serverService.getServerLocale().pipe(p(e=>{let i=t.data,s=t.total,a=[];for(let o of i)a.push(new P(o,e));return{data:a,total:s}}))}extractPlaylist(t){return this.serverService.getServerLocale().pipe(p(e=>new P(t,e)))}extractVideoPlaylistElements(t){return this.serverService.getServerLocale().pipe(p(e=>{let i=t.data,s=t.total,a=[];for(let o of i)a.push(new E(o,e));return{total:s,data:a}}))}doVideosExistInPlaylist(t){let e=r.MY_VIDEO_PLAYLIST_URL+"videos-exist",i=new y;return i=this.restService.addObjectParams(i,{videoIds:t}),this.authHttp.get(e,{params:i,context:new _().set(D,!0)}).pipe(n(s=>this.restExtractor.handleError(s)))}};m(r,"BASE_VIDEO_PLAYLIST_URL",f.apiUrl+"/api/v1/video-playlists/"),m(r,"MY_VIDEO_PLAYLIST_URL",f.apiUrl+"/api/v1/users/me/video-playlists/"),m(r,"\u0275fac",function(e){return new(e||r)}),m(r,"\u0275prov",U({token:r,factory:r.\u0275fac}));var M=r;export{P as a,M as b};
/**i18n:1cf7c077143c4c267fdafbe5508f191afcef21bad6aba22a3a8dc180e1003753*/
//# sourceMappingURL=chunk-5PLTSPIA.js.map
