{
  "version": 3,
  "sources": ["src/app/shared/shared-main/common/progress-bar.component.ts", "src/app/shared/shared-main/common/progress-bar.component.html"],
  "sourcesContent": ["import { CommonModule } from '@angular/common'\nimport { Component, numberAttribute, input } from '@angular/core'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\n\n@Component({\n  selector: 'my-progress-bar',\n  styleUrls: [ './progress-bar.component.scss' ],\n  templateUrl: './progress-bar.component.html',\n  imports: [\n    CommonModule,\n    NgbTooltip\n  ]\n})\nexport class ProgressBarComponent {\n  readonly value = input.required<number, unknown>({ transform: numberAttribute })\n  readonly label = input.required<string>()\n\n  readonly valueFormatted = input.required<string | number>()\n\n  readonly maxFormatted = input<string>(undefined)\n\n  readonly size = input<'normal' | 'small'>('normal')\n\n  readonly max = input(100, { transform: numberAttribute })\n  readonly min = input(0, { transform: numberAttribute })\n\n  readonly theme = input<'green' | 'red' | 'main'>('main')\n\n  percentage () {\n    return this.value() * 100 / this.max()\n  }\n}\n", "<div\n  role=\"progressbar\" class=\"progress-container\" tabindex=\"0\" [ngbTooltip]=\"label()\"\n  [attr.aria-valuenow]=\"value()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max()\"\n  [attr.aria-label]=\"label()\"\n  [ngClass]=\"{ red: theme() === 'red', green: theme() === 'green', small: size() === 'small' }\"\n>\n  <div class=\"progress-bar\" [style]=\"{ width: percentage() + '%' }\"></div>\n\n  <span class=\"value\">{{ valueFormatted() }}</span>\n  <span class=\"max\" *ngIf=\"maxFormatted()\">{{ maxFormatted() }}</span>\n</div>\n"],
  "mappings": "4VCSEA,EAAA,EAAA,OAAA,CAAA,EAAyCC,EAAA,CAAA,EAAoBC,EAAA,kBAApBC,EAAA,EAAAC,EAAAC,EAAAC,aAAA,CAAA,GDI3C,IAAaC,GAAoB,IAAA,CAA3B,IAAOA,EAAP,MAAOA,CAAoB,CACtBC,MAAQC,EAAMC,SAA0B,CAAEC,UAAWC,CAAe,CAAE,EACtEC,MAAQJ,EAAMC,SAAQ,EAEtBI,eAAiBL,EAAMC,SAAQ,EAE/BJ,aAAeG,EAAcM,MAAS,EAEtCC,KAAOP,EAA0B,QAAQ,EAEzCQ,IAAMR,EAAM,IAAK,CAAEE,UAAWC,CAAe,CAAE,EAC/CM,IAAMT,EAAM,EAAG,CAAEE,UAAWC,CAAe,CAAE,EAE7CO,MAAQV,EAAgC,MAAM,EAEvDW,YAAU,CACR,OAAO,KAAKZ,MAAK,EAAK,IAAM,KAAKS,IAAG,CACtC,KAjBWV,wCAAAA,EAAoB,KAApBA,sBAAAA,EAAoBc,UAAA,CAAA,CAAA,iBAAA,CAAA,EAAAC,OAAA,CAAAd,MAAA,CAAA,EAAA,OAAA,EAAAK,MAAA,CAAA,EAAA,OAAA,EAAAC,eAAA,CAAA,EAAA,gBAAA,EAAAR,aAAA,CAAA,EAAA,cAAA,EAAAU,KAAA,CAAA,EAAA,MAAA,EAAAC,IAAA,CAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,EAAA,KAAA,EAAAC,MAAA,CAAA,EAAA,OAAA,CAAA,EAAAI,MAAA,EAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,OAAA,cAAA,WAAA,IAAA,gBAAA,IAAA,EAAA,qBAAA,EAAA,aAAA,SAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,MAAA,EAAA,MAAA,EAAA,CAAA,EAAA,KAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICbjC3B,EAAA,EAAA,MAAA,CAAA,EAME6B,EAAA,EAAA,MAAA,CAAA,EAEA7B,EAAA,EAAA,OAAA,CAAA,EAAoBC,EAAA,CAAA,EAAsBC,EAAA,EAC1C4B,EAAA,EAAAC,EAAA,EAAA,EAAA,OAAA,CAAA,EACF7B,EAAA,SAT6D8B,EAAA,aAAAJ,EAAAf,MAAA,CAAA,EAAsB,UAAAoB,EAAA,EAAAC,EAAAN,EAAAT,MAAA,IAAA,MAAAS,EAAAT,MAAA,IAAA,QAAAS,EAAAZ,KAAA,IAAA,OAAA,CAAA,gFAKvDb,EAAA,EAAAgC,EAAAC,EAAA,GAAAC,EAAAT,EAAAR,WAAA,EAAA,GAAA,CAAA,EAENjB,EAAA,CAAA,EAAAC,EAAAwB,EAAAd,eAAA,CAAA,EACDX,EAAA,EAAA6B,EAAA,OAAAJ,EAAAtB,aAAA,CAAA,kBDAjBgC,EAAYC,EAAAC,EACZC,CAAU,EAAAC,OAAA,CAAA;gEAAA,CAAA,CAAA,GAGR,IAAOnC,EAAPoC,SAAOpC,CAAoB,GAAA",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "ctx_r0", "maxFormatted", "ProgressBarComponent", "value", "input", "required", "transform", "numberAttribute", "label", "valueFormatted", "undefined", "size", "max", "min", "theme", "percentage", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275element", "\u0275\u0275template", "ProgressBarComponent_span_4_Template", "\u0275\u0275property", "\u0275\u0275pureFunction3", "_c0", "\u0275\u0275styleMap", "\u0275\u0275pureFunction1", "_c1", "CommonModule", "NgClass", "NgIf", "NgbTooltip", "styles", "_ProgressBarComponent"]
}
