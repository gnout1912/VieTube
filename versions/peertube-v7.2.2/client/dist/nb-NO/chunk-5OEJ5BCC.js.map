{"version":3,"sources":["src/app/shared/shared-main/users/user-history.service.ts","src/app/shared/shared-main/video/video-ownership.service.ts","src/app/shared/shared-main/channel/video-channel-sync.service.ts","node_modules/@angular/cdk/fesm2022/fake-event-detection-DWOdFTFz.mjs","node_modules/@angular/cdk/fesm2022/backwards-compatibility-DHR38MsD.mjs","node_modules/@angular/cdk/fesm2022/platform-DmdVEw_C.mjs","node_modules/@angular/cdk/fesm2022/style-loader-Cu9AvjH9.mjs","node_modules/@angular/cdk/fesm2022/array-I1yfCXUO.mjs"],"sourcesContent":["import { catchError, switchMap } from 'rxjs/operators'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable, inject } from '@angular/core'\nimport { ComponentPaginationLight, RestExtractor, RestService } from '@app/core'\nimport { ResultList } from '@peertube/peertube-models'\nimport { environment } from '../../../../environments/environment'\nimport { Video } from '../video/video.model'\nimport { VideoService } from '../video/video.service'\n\n@Injectable()\nexport class UserHistoryService {\n  private authHttp = inject(HttpClient)\n  private restExtractor = inject(RestExtractor)\n  private restService = inject(RestService)\n  private videoService = inject(VideoService)\n\n  static BASE_USER_VIDEOS_HISTORY_URL = environment.apiUrl + '/api/v1/users/me/history/videos'\n\n  list (historyPagination: ComponentPaginationLight, search?: string) {\n    const pagination = this.restService.componentToRestPagination(historyPagination)\n\n    let params = new HttpParams()\n    params = this.restService.addRestGetParams(params, pagination)\n\n    if (search) params = params.append('search', search)\n\n    return this.authHttp\n      .get<ResultList<Video>>(UserHistoryService.BASE_USER_VIDEOS_HISTORY_URL, { params })\n      .pipe(\n        switchMap(res => this.videoService.extractVideos(res)),\n        catchError(err => this.restExtractor.handleError(err))\n      )\n  }\n\n  deleteElement (video: Video) {\n    return this.authHttp\n      .delete(UserHistoryService.BASE_USER_VIDEOS_HISTORY_URL + '/' + video.id)\n      .pipe(catchError(err => this.restExtractor.handleError(err)))\n  }\n\n  clearAll () {\n    return this.authHttp\n      .post(UserHistoryService.BASE_USER_VIDEOS_HISTORY_URL + '/remove', {})\n      .pipe(catchError(err => this.restExtractor.handleError(err)))\n  }\n}\n","import { SortMeta } from 'primeng/api'\nimport { Observable } from 'rxjs'\nimport { catchError } from 'rxjs/operators'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable, inject } from '@angular/core'\nimport { RestExtractor, RestPagination, RestService } from '@app/core'\nimport { ResultList, VideoChangeOwnership, VideoChangeOwnershipAccept, VideoChangeOwnershipCreate } from '@peertube/peertube-models'\nimport { environment } from '../../../../environments/environment'\n\n@Injectable()\nexport class VideoOwnershipService {\n  private authHttp = inject(HttpClient)\n  private restService = inject(RestService)\n  private restExtractor = inject(RestExtractor)\n\n  private static BASE_VIDEO_CHANGE_OWNERSHIP_URL = environment.apiUrl + '/api/v1/videos/'\n\n  changeOwnership (id: number, username: string) {\n    const url = VideoOwnershipService.BASE_VIDEO_CHANGE_OWNERSHIP_URL + id + '/give-ownership'\n    const body: VideoChangeOwnershipCreate = {\n      username\n    }\n\n    return this.authHttp.post(url, body)\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  getOwnershipChanges (pagination: RestPagination, sort: SortMeta): Observable<ResultList<VideoChangeOwnership>> {\n    const url = VideoOwnershipService.BASE_VIDEO_CHANGE_OWNERSHIP_URL + 'ownership'\n\n    let params = new HttpParams()\n    params = this.restService.addRestGetParams(params, pagination, sort)\n\n    return this.authHttp.get<ResultList<VideoChangeOwnership>>(url, { params })\n      .pipe(catchError(res => this.restExtractor.handleError(res)))\n  }\n\n  acceptOwnership (id: number, input: VideoChangeOwnershipAccept) {\n    const url = VideoOwnershipService.BASE_VIDEO_CHANGE_OWNERSHIP_URL + 'ownership/' + id + '/accept'\n    return this.authHttp.post(url, input)\n      .pipe(catchError(err => this.restExtractor.handleError(err)))\n  }\n\n  refuseOwnership (id: number) {\n    const url = VideoOwnershipService.BASE_VIDEO_CHANGE_OWNERSHIP_URL + 'ownership/' + id + '/refuse'\n    return this.authHttp.post(url, {})\n      .pipe(catchError(err => this.restExtractor.handleError(err)))\n  }\n}\n","import { SortMeta } from 'primeng/api'\nimport { catchError, Observable } from 'rxjs'\nimport { environment } from 'src/environments/environment'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable, inject } from '@angular/core'\nimport { RestExtractor, RestPagination, RestService } from '@app/core'\nimport { ResultList, VideoChannelSync, VideoChannelSyncCreate } from '@peertube/peertube-models'\nimport { Account } from '../account/account.model'\nimport { AccountService } from '../account/account.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VideoChannelSyncService {\n  private authHttp = inject(HttpClient)\n  private restExtractor = inject(RestExtractor)\n  private restService = inject(RestService)\n\n  static BASE_VIDEO_CHANNEL_URL = environment.apiUrl + '/api/v1/video-channel-syncs'\n\n  listAccountVideoChannelsSyncs (parameters: {\n    sort: SortMeta\n    pagination: RestPagination\n    account: Account\n  }): Observable<ResultList<VideoChannelSync>> {\n    const { pagination, sort, account } = parameters\n\n    let params = new HttpParams()\n    params = this.restService.addRestGetParams(params, pagination, sort)\n\n    const url = AccountService.BASE_ACCOUNT_URL + account.nameWithHost + '/video-channel-syncs'\n\n    return this.authHttp.get<ResultList<VideoChannelSync>>(url, { params })\n      .pipe(catchError(err => this.restExtractor.handleError(err)))\n  }\n\n  createSync (body: VideoChannelSyncCreate) {\n    return this.authHttp.post<{ videoChannelSync: VideoChannelSync }>(VideoChannelSyncService.BASE_VIDEO_CHANNEL_URL, body)\n      .pipe(catchError(err => this.restExtractor.handleError(err)))\n  }\n\n  deleteSync (videoChannelsSyncId: number) {\n    const url = `${VideoChannelSyncService.BASE_VIDEO_CHANNEL_URL}/${videoChannelsSyncId}`\n\n    return this.authHttp.delete(url)\n      .pipe(catchError(err => this.restExtractor.handleError(err)))\n  }\n}\n","/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n  // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n  // a clickable element. We can distinguish these events when `event.buttons` is zero, or\n  // `event.detail` is zero depending on the browser:\n  // - `event.buttons` works on Firefox, but fails on Chrome.\n  // - `detail` works on Chrome, but fails on Firefox.\n  return event.buttons === 0 || event.detail === 0;\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n  const touch = event.touches && event.touches[0] || event.changedTouches && event.changedTouches[0];\n  // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n  // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n  // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n  // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n  return !!touch && touch.identifier === -1 && (touch.radiusX == null || touch.radiusX === 1) && (touch.radiusY == null || touch.radiusY === 1);\n}\nexport { isFakeTouchstartFromScreenReader as a, isFakeMousedownFromScreenReader as i };\n","import { VERSION } from '@angular/core';\n\n// TODO(crisbeto): remove this function when making breaking changes for v20.\n/**\n * Binds an event listener with specific options in a backwards-compatible way.\n * This function is necessary, because `Renderer2.listen` only supports listener options\n * after 19.1 and during the v19 period we support any 19.x version.\n * @docs-private\n */\nfunction _bindEventWithOptions(renderer, target, eventName, callback, options) {\n  const major = parseInt(VERSION.major);\n  const minor = parseInt(VERSION.minor);\n  // Event options in `listen` are only supported in 19.1 and beyond.\n  // We also allow 0.0.x, because that indicates a build at HEAD.\n  if (major > 19 || major === 19 && minor > 0 || major === 0 && minor === 0) {\n    return renderer.listen(target, eventName, callback, options);\n  }\n  target.addEventListener(eventName, callback, options);\n  return () => {\n    target.removeEventListener(eventName, callback, options);\n  };\n}\nexport { _bindEventWithOptions as _ };\n","import * as i0 from '@angular/core';\nimport { inject, PLATFORM_ID, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n} catch {\n  hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nlet Platform = /*#__PURE__*/(() => {\n  class Platform {\n    _platformId = inject(PLATFORM_ID);\n    // We want to use the Angular platform check because if the Document is shimmed\n    // without the navigator, the following checks will fail. This is preferred because\n    // sometimes the Document may be shimmed without the user's knowledge or intention\n    /** Whether the Angular application is being rendered in the browser. */\n    isBrowser = this._platformId ? isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n    /** Whether the current browser is Microsoft Edge. */\n    EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n    /** Whether the current rendering engine is Microsoft Trident. */\n    TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n    // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n    /** Whether the current rendering engine is Blink. */\n    BLINK = this.isBrowser && !!(window.chrome || hasV8BreakIterator) && typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT;\n    // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n    // ensure that Webkit runs standalone and is not used as another engine's base.\n    /** Whether the current rendering engine is WebKit. */\n    WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n    /** Whether the current platform is Apple iOS. */\n    IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n    // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n    // them self as Gecko-like browsers and modify the userAgent's according to that.\n    // Since we only cover one explicit Firefox case, we can simply check for Firefox\n    // instead of having an unstable check for Gecko.\n    /** Whether the current browser is Firefox. */\n    FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n    /** Whether the current platform is Android. */\n    // Trident on mobile adds the android platform to the userAgent to trick detections.\n    ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n    // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n    // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n    // Safari browser should also use Webkit as its layout engine.\n    /** Whether the current browser is Safari. */\n    SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    constructor() {}\n    static ɵfac = function Platform_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || Platform)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Platform,\n      factory: Platform.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return Platform;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { Platform as P };\n","import * as i0 from '@angular/core';\nimport { inject, Injector, EnvironmentInjector, ApplicationRef, createComponent, Injectable } from '@angular/core';\n\n/** Apps in which we've loaded styles. */\nconst appsWithLoaders = /*#__PURE__*/new WeakMap();\n/**\n * Service that loads structural styles dynamically\n * and ensures that they're only loaded once per app.\n */\nlet _CdkPrivateStyleLoader = /*#__PURE__*/(() => {\n  class _CdkPrivateStyleLoader {\n    _appRef;\n    _injector = inject(Injector);\n    _environmentInjector = inject(EnvironmentInjector);\n    /**\n     * Loads a set of styles.\n     * @param loader Component which will be instantiated to load the styles.\n     */\n    load(loader) {\n      // Resolve the app ref lazily to avoid circular dependency errors if this is called too early.\n      const appRef = this._appRef = this._appRef || this._injector.get(ApplicationRef);\n      let data = appsWithLoaders.get(appRef);\n      // If we haven't loaded for this app before, we have to initialize it.\n      if (!data) {\n        data = {\n          loaders: new Set(),\n          refs: []\n        };\n        appsWithLoaders.set(appRef, data);\n        // When the app is destroyed, we need to clean up all the related loaders.\n        appRef.onDestroy(() => {\n          appsWithLoaders.get(appRef)?.refs.forEach(ref => ref.destroy());\n          appsWithLoaders.delete(appRef);\n        });\n      }\n      // If the loader hasn't been loaded before, we need to instatiate it.\n      if (!data.loaders.has(loader)) {\n        data.loaders.add(loader);\n        data.refs.push(createComponent(loader, {\n          environmentInjector: this._environmentInjector\n        }));\n      }\n    }\n    static ɵfac = function _CdkPrivateStyleLoader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || _CdkPrivateStyleLoader)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: _CdkPrivateStyleLoader,\n      factory: _CdkPrivateStyleLoader.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return _CdkPrivateStyleLoader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { _CdkPrivateStyleLoader as _ };\n","function coerceArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nexport { coerceArray as c };\n"],"mappings":"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","names":["UserHistoryService","authHttp","inject","HttpClient","restExtractor","RestExtractor","restService","RestService","videoService","VideoService","list","historyPagination","search","pagination","componentToRestPagination","params","HttpParams","addRestGetParams","append","get","BASE_USER_VIDEOS_HISTORY_URL","pipe","switchMap","res","extractVideos","catchError","err","handleError","deleteElement","video","delete","id","clearAll","post","__publicField","environment","apiUrl","factory","ɵfac","_UserHistoryService","VideoOwnershipService","authHttp","inject","HttpClient","restService","RestService","restExtractor","RestExtractor","changeOwnership","id","username","url","BASE_VIDEO_CHANGE_OWNERSHIP_URL","body","post","pipe","catchError","res","handleError","getOwnershipChanges","pagination","sort","params","HttpParams","addRestGetParams","get","acceptOwnership","input","err","refuseOwnership","__publicField","environment","apiUrl","factory","ɵfac","_VideoOwnershipService","VideoChannelSyncService","authHttp","inject","HttpClient","restExtractor","RestExtractor","restService","RestService","listAccountVideoChannelsSyncs","parameters","pagination","sort","account","params","HttpParams","addRestGetParams","url","AccountService","BASE_ACCOUNT_URL","nameWithHost","get","pipe","catchError","err","handleError","createSync","body","post","BASE_VIDEO_CHANNEL_URL","deleteSync","videoChannelsSyncId","delete","__publicField","environment","apiUrl","factory","ɵfac","providedIn","_VideoChannelSyncService","isFakeMousedownFromScreenReader","event","isFakeTouchstartFromScreenReader","touch","_bindEventWithOptions","renderer","target","eventName","callback","options","major","VERSION","minor","hasV8BreakIterator","Platform","_Platform","inject","PLATFORM_ID","isPlatformBrowser","__publicField","__ngFactoryType__","ɵɵdefineInjectable","appsWithLoaders","_CdkPrivateStyleLoader","__CdkPrivateStyleLoader","inject","Injector","EnvironmentInjector","loader","appRef","ApplicationRef","data","ref","createComponent","__publicField","__ngFactoryType__","ɵɵdefineInjectable","coerceArray","value"],"x_google_ignoreList":[3,4,5,6,7]}