{"version":3,"mappings":"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","names":["DateToggleComponent","fromNowPipe","inject","FromNowPipe","date","input","undefined","toggled","model","dateRelative","dateAbsolute","ngOnChanges","updateDates","toggle","update","getTitle","target","getContent","transform","toLocaleDateString","T","selectors","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵlistener","ɵɵtext","ɵɵelementEnd","n","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","styles","_DateToggleComponent","yi","e","r","ɵɵelementContainerStart","ɵɵi18n","ee","A","i","_","ɵɵi18nExp","ctx_r0","viewers","ɵɵpipeBind1","I","Pi","views","VideoViewsCounterComponent","isLive","required","booleanAttribute","getExactNumberOfViews","formatICU","i18n_0","$localize","o","i18n_2","c","ɵɵtemplate","VideoViewsCounterComponent_Conditional_1_Template","VideoViewsCounterComponent_Conditional_2_Template","ɵɵconditional","dependencies","NumberFormatterPipe","encapsulation","changeDetection","_VideoViewsCounterComponent","Ii","bi","wi","ɵɵelement","$implicit","reason_r3","help","ɵɵsanitizeHtml","xi","AccountReportComponent_ng_template_0_div_13_2_ng_template_0_Template","Fi","description","Vi","AccountReportComponent_ng_template_0_div_13_2_Template","AccountReportComponent_ng_template_0_div_13_ng_container_3_Template","id","label","Li","se","ɵɵelementContainer","de","ctx_r1","originHost","$i","formErrors","reason","ki","M","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","hide","report","AccountReportComponent_ng_template_0_div_13_Template","ɵɵi18nStart","AccountReportComponent_ng_template_0_ng_container_17_Template","ɵɵi18nEnd","AccountReportComponent_ng_template_0_div_20_Template","ɵɵtextInterpolate","modalTitle","form","predefinedReasons","isRemote","currentHost","ɵɵpureFunction1","_c1","valid","AccountReportComponent","FormReactive","formReactiveService","FormReactiveService","modalService","NgbModal","abuseService","AbuseService","notifier","Notifier","modal","viewChild","error","account","openedModal","window","location","host","ngOnInit","buildForm","ABUSE_REASON_VALIDATOR","mapValues","abusePredefinedReasonsMap","getPrefefinedReasons","show","displayName","open","centered","keyboard","size","close","get","value","Object","keys","pickBy","reportVideo","subscribe","next","success","err","message","isLocal","__ngFactoryType__","viewQuery","L","W","ue","t","m","C","AccountReportComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","GlobalIconComponent","FormsModule","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","ReactiveFormsModule","FormGroupDirective","FormControlName","FormGroupName","NgFor","PeertubeCheckboxComponent","NgIf","PeerTubeTemplateDirective","NgClass","_AccountReportComponent","Hi","Gi","Wi","zi","CommentReportComponent_ng_template_0_div_13_2_ng_template_0_Template","Ui","Bi","CommentReportComponent_ng_template_0_div_13_2_Template","CommentReportComponent_ng_template_0_div_13_ng_container_3_Template","Xi","ji","Qi","CommentReportComponent_ng_template_0_div_13_Template","CommentReportComponent_ng_template_0_ng_container_17_Template","CommentReportComponent_ng_template_0_div_20_Template","CommentReportComponent","comment","CommentReportComponent_ng_template_0_Template","_CommentReportComponent","Ki","qi","Yi","Ji","VideoReportComponent_ng_template_0_div_13_2_ng_template_0_Template","Zi","en","VideoReportComponent_ng_template_0_div_13_2_Template","VideoReportComponent_ng_template_0_div_13_ng_container_3_Template","tn","timestamp","endAt","video","duration","nn","on","rn","VideoReportComponent_ng_template_0_div_13_Template","VideoReportComponent_ng_template_0_div_19_Template","VideoReportComponent_ng_template_0_ng_container_22_Template","VideoReportComponent_ng_template_0_div_25_Template","name","startAt","hasStart","VideoReportComponent","hasEnd","D","pe","VideoReportComponent_ng_template_0_Template","EmbedComponent","TimestampInputComponent","_VideoReportComponent","VIDEO_BLOCK_REASON_VALIDATOR","VALIDATORS","Validators","minLength","maxLength","MESSAGES","minlength","maxlength","videos","length","dn","getSingleVideo","_n","cn","VideoBlockComponent_ng_template_0_ng_container_2_h4_1_Template","VideoBlockComponent_ng_template_0_ng_container_2_h4_2_Template","pn","mn","un","gn","VideoBlockComponent_ng_template_0_div_10_span_3_Template","VideoBlockComponent_ng_template_0_div_10_span_4_Template","isMultiple","fn","vn","VideoBlockComponent_ng_template_0_ng_container_1_Template","VideoBlockComponent_ng_template_0_ng_container_2_Template","block","VideoBlockComponent_ng_template_0_div_9_Template","VideoBlockComponent_ng_template_0_div_10_Template","VideoBlockComponent_ng_template_0_strong_11_Template","hasLocal","hasLive","VideoBlockComponent","videoBlocklistService","VideoBlockService","videoBlocked","output","defaultValues","unfederate","some","v","options","map","videoId","blockVideo","count","videoName","find","blacklisted","blacklistedReason","emit","an","ce","VideoBlockComponent_ng_template_0_Template","_VideoBlockComponent","Cn","On","En","Sn","getCaptionLink","hn","SubtitleFilesDownloadComponent_li_2_ng_container_3_Template","SubtitleFilesDownloadComponent_li_2_ng_template_4_Template","caption_r3","language","automaticallyGenerated","SubtitleFilesDownloadComponent","videoCaptions","downloaded","activeNavId","getCaptions","hasCaptions","download","assign","getCaption","caption","logger","fileUrl","ngContentSelectors","ɵɵtwoWayListener","$event","i0","ɵɵtwoWayBindingSet","SubtitleFilesDownloadComponent_li_2_Template","ɵɵprojection","w","ɵɵtwoWayProperty","nav_r4","InputTextComponent","NgbNavModule","NgbNavContent","NgbNav","NgbNavItem","NgbNavItemRole","NgbNavLinkButton","NgbNavLinkBase","NgbNavOutlet","_SubtitleFilesDownloadComponent","An","Tn","vt","Ct","key","Rn","Mn","getVideoFileLink","Dn","Nn","VideoFilesDownloadComponent_ng_container_5_ng_template_5_ng_template_0_Template","rootNavContent_r3","yn","VideoFilesDownloadComponent_ng_container_5_ng_template_5_Template","Pn","In","VideoFilesDownloadComponent_ng_container_6_ng_template_3_ng_template_0_Template","bn","VideoFilesDownloadComponent_ng_container_6_ng_template_3_Template","file_r4","resolution","wn","item_r5","xn","Fn","VideoFilesDownloadComponent_ng_template_11_Conditional_3_Template","VideoFilesDownloadComponent_ng_template_11_Conditional_4_Template","Vn","Ln","VideoFilesDownloadComponent_ng_template_16_For_2_ng_template_0_Template","metadataInfo_r7","_c2","item_r6","$n","ɵɵrepeaterCreate","VideoFilesDownloadComponent_ng_template_16_For_2_Template","_forTrack0","ɵɵrepeater","videoFileMetadataFormat","kn","Hn","VideoFilesDownloadComponent_ng_container_17_ng_template_3_For_2_ng_template_0_Template","item_r8","Gn","VideoFilesDownloadComponent_ng_container_17_ng_template_3_For_2_Template","videoFileMetadataVideoStream","Wn","VideoFilesDownloadComponent_ng_container_17_ng_template_3_Template","zn","Un","VideoFilesDownloadComponent_ng_container_18_ng_template_3_For_2_ng_template_0_Template","item_r9","Bn","VideoFilesDownloadComponent_ng_container_18_ng_template_3_For_2_Template","videoFileMetadataAudioStream","Xn","VideoFilesDownloadComponent_ng_container_18_ng_template_3_Template","jn","navMetadata_r10","Qn","Kn","VideoFilesDownloadComponent","localeId","LOCALE_ID","videoService","VideoService","originalVideoFile","videoFileToken","downloadType","activeResolutionId","isAdvancedCustomizationCollapsed","bytesPipe","numbersPipe","constructor","BytesPipe","hasFiles","onResolutionIdChange","getVideoFiles","files","hls","getHlsPlaylist","resolutionId","__async","metadata","videoFile","getVideoFile","metadataUrl","hydrateMetadataFromMetadataUrl","getMetadataFormat","format","getMetadataStream","streams","file","f","suffix","isConfidentialVideo","fileDownloadUrl","torrentDownloadUrl","videoRequiresFileToken","hasMetadata","keyToTranslateFunction","encoder","format_long_name","bit_rate","sanitizedFormat","tags","pick","objectKeysTyped","val","type","stream","s","codec_type","codec_long_name","profile","isNaN","width","height","display_aspect_ratio","avg_frame_rate","pix_fmt","sample_rate","channel_layout","observable","getVideoFileMetadata","pipe","tap","res","firstValueFrom","VideoFilesDownloadComponent_my_alert_0_Template","VideoFilesDownloadComponent_ng_template_3_Template","VideoFilesDownloadComponent_ng_container_5_Template","VideoFilesDownloadComponent_ng_container_6_Template","VideoFilesDownloadComponent_ng_template_11_Template","VideoFilesDownloadComponent_ng_template_16_Template","VideoFilesDownloadComponent_ng_container_17_Template","VideoFilesDownloadComponent_ng_container_18_Template","VideoFilesDownloadComponent_div_19_Template","VideoFilesDownloadComponent_Conditional_30_Template","VideoFilesDownloadComponent_Conditional_31_Template","resolutionNav_r11","tmp_14_0","Xe","RadioControlValueAccessor","NgModel","NgbNavLink","NgbCollapse","KeyValuePipe","NgbTooltip","NgTemplateOutlet","AlertComponent","_VideoFilesDownloadComponent","qn","Yn","Jn","Zn","videoFileChosen","ɵɵtextInterpolate3","ɵɵpipeBind2","eo","ɵɵtextInterpolate2","to","fps","io","_r3","VideoGenerateDownloadComponent_For_3_Conditional_8_Template","VideoGenerateDownloadComponent_For_3_Conditional_9_Template","getLabel","getFileSize","no","_r5","includeAudio","VideoGenerateDownloadComponent","videoFiles","buildVideoFiles","maxBy","getResolutionAndFPSLabel","hasAudio","hasVideo","audio","findAudioFileOnly","hasAudioSplitted","findCurrentFile","push","generateDownloadUrl","VideoResolution","H_NOVIDEO","VideoGenerateDownloadComponent_div_1_Template","VideoGenerateDownloadComponent_For_3_Template","VideoGenerateDownloadComponent_div_4_Template","_VideoGenerateDownloadComponent","oo","ro","ao","lo","_r4","hide_r3","so","_o","onDownloaded","VideoDownloadComponent_ng_template_0_Case_16_ng_template_2_Template","cancelBlock_r6","co","po","_r7","VideoDownloadComponent_ng_template_0_Case_17_ng_template_2_Template","mo","uo","_r8","VideoDownloadComponent_ng_template_0_Case_18_ng_template_2_Template","go","VideoDownloadComponent_ng_template_0_option_10_Template","VideoDownloadComponent_ng_template_0_ng_template_14_Template","VideoDownloadComponent_ng_template_0_Case_16_Template","VideoDownloadComponent_ng_template_0_Case_17_Template","VideoDownloadComponent_ng_template_0_Case_18_Template","loaded","tmp_7_0","VideoDownloadComponent","authService","AuthService","videoFileTokenService","VideoFileTokenService","hooks","HooksService","videoPassword","activeModal","getOriginalVideoFileObs","source","getVideoFileToken","videoUUID","uuid","token","shown","runAction","isLoggedIn","of","user","getUser","isOwnerOrHasSeeAllVideosRight","getSource","catchError","console","VideoDownloadComponent_ng_template_0_Template","NgSelectOption","ɵNgSelectMultipleOption","SelectControlValueAccessor","_VideoDownloadComponent","fo","vo","Co","Oo","Eo","So","then","VideoAddToPlaylistComponent","ho","Ao","_r2","ctx_r2","videoExistsInPlaylistChange","To","VideoActionsDropdownComponent_ng_container_0_div_1_Defer_4_Template","ɵɵdefer","VideoActionsDropdownComponent_ng_container_0_div_1_Defer_5_DepsFn","getPlaylistDropdownPlacement","ɵɵdeferWhen","dropdownOpened","Ro","VideoActionsDropdownComponent_ng_container_0_div_1_Template","onVideoBlocked","isUserLoggedIn","displayOptions","playlist","videoActions","_c5","buttonSize","placement","buttonDirection","buttonStyled","VideoActionsDropdownComponent","confirmService","ConfirmService","blocklistService","BlocklistService","screenService","ScreenService","videoCaptionService","VideoCaptionService","redundancyService","RedundancyService","serverService","ServerService","playlistDropdown","playlistAdd","videoDownloadModal","videoReportModal","videoBlockModal","blacklist","delete","duplicate","mute","liveInfo","removeFiles","transcoding","generateTranscription","transcriptionWidget","moreActions","actionAvailabilityHint","transcriptionWidgetOpened","videoFilesRemoved","videoRemoved","videoUnblocked","videoAccountMuted","transcodingCreated","modalOpened","showTranscriptionWidget","hideTranscriptionWidget","hasMutedAccount","reload","buildActions","showDownloadModal","VideoDetails","getVideo","videoDetails","showReportModal","showBlockModal","isVideoUpdatable","isUpdatableBy","isVideoEditable","isEditableBy","getHTMLConfig","videoStudio","enabled","isVideoStatsAvailable","isVideoRemovable","isRemovableBy","isVideoBlockable","isBlockableBy","isVideoUnblockable","isUnblockableBy","isVideoLiveInfoAvailable","isLiveInfoAvailableBy","canGenerateTranscription","videoTranscription","isVideoDownloadableByAnonymous","downloadEnabled","isVideoDownloadableByUser","canVideoBeDuplicated","canBeDuplicatedBy","isVideoAccountMutable","canRemoveVideoFiles","canRemoveAllHLSOrWebFiles","canRunTranscoding","unblockVideo","confirmMessage","confirm","removeVideo","duplicateVideo","addVideoRedundancy","muteVideoAccount","params","nameWithHost","Actor","CREATE_BY_STRING","blockAccountByUser","unmuteVideoAccount","unblockAccountByUser","removeVideoFiles","runTranscoding","generateCaption","result","alreadyBeingTranscribed","info","alreadyHasCaptions","isInSmallView","handler","isDisplayed","iconName","ownerOrModeratorPrivilege","Array","isArray","linkBuilder","shortUUID","concat","De","VideoActionsDropdownComponent_ng_container_0_Template","NgbDropdown","NgbDropdownAnchor","NgbDropdownMenu","ActionDropdownComponent","_VideoActionsDropdownComponent","Mo","Do","searchTarget","ActorHostComponent","auth","server","dropdown","title","config","useSearchIndex","search","remoteUri","users","anonymous","Tt","Rt","dropdown_r2","ɵɵreference","ɵɵsanitizeUrl","ɵɵpureFunction2","CommonModule","NgbDropdownModule","NgbDropdownToggle","ButtonComponent","RouterLink","_ActorHostComponent","Ni","No","yo","Po","Io","nsfwTooltip","bo","VideoMiniatureComponent_ng_template_5_button_0_Template","hasNSFWWarning","wo","channelLinkTitle","actorImageSize","channel","_c0","byVideoChannel","xo","Fo","VideoMiniatureComponent_div_8_Conditional_1_Conditional_0_Template","VideoMiniatureComponent_div_8_Conditional_1_Conditional_1_Template","displayOwnerVideoChannel","displayOwnerAccount","Vo","authorAccount","Lo","authorChannel","$o","ko","Ho","VideoMiniatureComponent_div_8_div_2_Conditional_5_ng_container_0_Template","nsfwWarningButton_r3","Go","VideoMiniatureComponent_div_8_div_2_Conditional_2_Template","VideoMiniatureComponent_div_8_div_2_Conditional_3_Template","VideoMiniatureComponent_div_8_div_2_my_actor_host_4_Template","VideoMiniatureComponent_div_8_div_2_Conditional_5_Template","ownerRouterLink","ownerHref","ownerTarget","getAriaLabel","displayAsRow","Wo","VideoMiniatureComponent_div_8_Conditional_1_Template","VideoMiniatureComponent_div_8_div_2_Template","avatar","by","zo","onVideoRemoved","onVideoUnblocked","onVideoAccountMuted","videoActionsDisplayOptions","Uo","Bo","VideoMiniatureComponent_Conditional_14_ng_container_0_Template","Xo","publishedAt","jo","Qo","VideoMiniatureComponent","videoPlaylistService","VideoPlaylistService","cd","ChangeDetectorRef","privacyLabel","forceChannelInBy","displayVideoActions","numberAttribute","videoLinkType","showActions","serverConfig","addToWatchLaterText","addedToWatchLaterText","inWatchLaterPlaylist","watchLaterPlaylist","videoRouterLink","videoHref","videoTarget","ownerDisplayType","actionsLoaded","preferAuthorDisplayName","client","miniature","buildVideoLink","buildOwnerLink","setUpBy","buildNSFWTooltip","isInTouchScreen","loadActions","url","Video","buildWatchUrl","linkType","isUnlistedVideo","privacy","VideoPrivacy","UNLISTED","isPrivateVideo","PRIVATE","isPasswordProtectedVideo","PASSWORD_PROTECTED","loadWatchLater","onWatchLaterClick","currentState","removeFromWatchLater","addToWatchLater","body","addVideoInPlaylist","playlistElementId","videoPlaylistElement","removeVideoFromPlaylist","isWatchLaterPlaylistDisplayed","getClasses","isNSFWWarnedForUser","hasNSFWBlur","isNSFWBlurForUser","buildDefaultOwnerDisplayType","userInformationLoaded","switchMap","listenToVideoPlaylistChange","existResult","specialPlaylists","p","VideoPlaylistType","WATCH_LATER","existsInWatchLater","playlistId","markForCheck","runVideoExistsInPlaylistCheck","VideoMiniatureComponent_ng_container_2_Template","VideoMiniatureComponent_ng_container_3_Template","VideoMiniatureComponent_ng_container_4_Template","VideoMiniatureComponent_ng_template_5_Template","VideoMiniatureComponent_div_8_Template","VideoMiniatureComponent_my_video_actions_dropdown_13_Template","VideoMiniatureComponent_Conditional_14_Template","VideoMiniatureComponent_my_date_toggle_16_Template","VideoMiniatureComponent_ng_container_18_Template","VideoMiniatureComponent_my_video_views_counter_19_Template","VideoThumbnailComponent","ActorAvatarComponent","LinkComponent","NgbTooltipModule","_VideoMiniatureComponent","vi","a","Ci","b","hr","Hr","d","Si","Ri","Mi","g","Ns","h"],"ignoreList":[],"sources":["src/app/shared/shared-main/date/date-toggle.component.ts","src/app/shared/shared-main/date/date-toggle.component.html","src/app/shared/shared-video/video-views-counter.component.html","src/app/shared/shared-video/video-views-counter.component.ts","src/app/shared/shared-moderation/report-modals/report.component.html","src/app/shared/shared-moderation/report-modals/account-report.component.ts","src/app/shared/shared-moderation/report-modals/comment-report.component.ts","src/app/shared/shared-moderation/report-modals/video-report.component.html","src/app/shared/shared-moderation/report-modals/video-report.component.ts","src/app/shared/form-validators/video-block-validators.ts","src/app/shared/shared-moderation/video-block.component.html","src/app/shared/shared-moderation/video-block.component.ts","src/app/shared/shared-video-miniature/download/subtitle-files-download.component.html","src/app/shared/shared-video-miniature/download/subtitle-files-download.component.ts","src/app/shared/shared-video-miniature/download/video-files-download.component.html","src/app/shared/shared-video-miniature/download/video-files-download.component.ts","src/app/shared/shared-video-miniature/download/video-generate-download.component.html","src/app/shared/shared-video-miniature/download/video-generate-download.component.ts","src/app/shared/shared-video-miniature/download/video-download.component.html","src/app/shared/shared-video-miniature/download/video-download.component.ts","src/app/shared/shared-video-miniature/video-actions-dropdown.component.html","src/app/shared/shared-video-miniature/video-actions-dropdown.component.ts","src/app/shared/standalone-actor/actor-host.component.ts","src/app/shared/standalone-actor/actor-host.component.html","src/app/shared/shared-video-miniature/video-miniature.component.html","src/app/shared/shared-video-miniature/video-miniature.component.ts"],"sourcesContent":["import { Component, OnChanges, inject, input, model } from '@angular/core'\nimport { FromNowPipe } from './from-now.pipe'\n\n@Component({\n  selector: 'my-date-toggle',\n  templateUrl: './date-toggle.component.html',\n  styleUrls: [ './date-toggle.component.scss' ],\n  standalone: true\n})\nexport class DateToggleComponent implements OnChanges {\n  private fromNowPipe = inject(FromNowPipe)\n\n  readonly date = input<Date>(undefined)\n  readonly toggled = model(false)\n\n  dateRelative: string\n  dateAbsolute: string\n\n  ngOnChanges () {\n    this.updateDates()\n  }\n\n  toggle () {\n    this.toggled.update(toggled => !toggled)\n  }\n\n  getTitle () {\n    const target = this.toggled()\n      ? this.dateRelative\n      : this.dateAbsolute\n\n    return $localize`Toggle this date format to \"${target}\"`\n  }\n\n  getContent () {\n    return this.toggled()\n      ? this.dateAbsolute\n      : this.dateRelative\n  }\n\n  private updateDates () {\n    this.dateRelative = this.fromNowPipe.transform(this.date())\n    this.dateAbsolute = this.date().toLocaleDateString()\n  }\n}\n","<span\n  class=\"date-toggle\"\n  [title]=\"getTitle()\"\n  [ariaLabel]=\"getTitle()\"\n  role=\"button\"\n  tabindex=\"0\"\n  (click)=\"toggle()\"\n  (keyup.enter)=\"toggle()\"\n>\n  {{ getContent() }}\n</span>\n","<span [title]=\"getExactNumberOfViews()\">\n  @if (isLive()) {\n    <ng-container i18n>\n      {viewers(), plural, =1 {1 viewer} other {{{ viewers() | myNumberFormatter }} viewers}}\n    </ng-container>\n  } @else {\n    <ng-container i18n>\n      {views(), plural, =1 {1 view} other {{{ views() | myNumberFormatter }} views}}\n    </ng-container>\n  }\n</span>\n","import { booleanAttribute, ChangeDetectionStrategy, Component, input } from '@angular/core'\nimport { formatICU } from '@app/helpers'\nimport { NumberFormatterPipe } from '../shared-main/common/number-formatter.pipe'\n\n@Component({\n  selector: 'my-video-views-counter',\n  styleUrls: [ './video-views-counter.component.scss' ],\n  templateUrl: './video-views-counter.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ NumberFormatterPipe ]\n})\nexport class VideoViewsCounterComponent {\n  readonly isLive = input.required<boolean, unknown>({ transform: booleanAttribute })\n  readonly viewers = input.required<number>()\n  readonly views = input.required<number>()\n\n  getExactNumberOfViews () {\n    if (this.isLive()) {\n      return formatICU($localize`{viewers, plural, =0 {No viewers} =1 {1 viewer} other {{viewers} viewers}}`, { viewers: this.viewers() })\n    }\n\n    return formatICU($localize`{views, plural, =0 {No view} =1 {1 view} other {{views} views}}`, { views: this.views() })\n  }\n}\n","<ng-template #modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\">{{ modalTitle }}</h4>\n    <button class=\"border-0 p-0\" title=\"Close this modal\" i18n-title (click)=\"hide()\">\n      <my-global-icon iconName=\"cross\"></my-global-icon>\n    </button>\n  </div>\n\n  <div class=\"modal-body\">\n    <form novalidate [formGroup]=\"form\" (ngSubmit)=\"report()\">\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n\n        <label i18n for=\"reportPredefinedReasons\">What is the issue?</label>\n\n        <div class=\"ms-2 mt-2 d-flex flex-column\">\n          <ng-container formGroupName=\"predefinedReasons\">\n\n            <div class=\"form-group\" *ngFor=\"let reason of predefinedReasons\">\n              <my-peertube-checkbox [inputName]=\"reason.id\" [formControlName]=\"reason.id\" [labelText]=\"reason.label\">\n                <ng-template *ngIf=\"reason.help\" ptTemplate=\"help\">\n                  <div [innerHTML]=\"reason.help\"></div>\n                </ng-template>\n\n                <ng-container *ngIf=\"reason.description\" ngProjectAs=\"description\">\n                  <div [innerHTML]=\"reason.description\"></div>\n                </ng-container>\n              </my-peertube-checkbox>\n            </div>\n\n          </ng-container>\n        </div>\n      </div>\n\n      <div class=\"col-7\">\n        <div i18n class=\"information\">\n          Your report will be sent to moderators of {{ currentHost }}<ng-container *ngIf=\"isRemote()\"> and will be forwarded to the comment origin ({{ originHost }}) too</ng-container>.\n        </div>\n\n        <div class=\"form-group\">\n          <textarea\n            i18n-placeholder placeholder=\"Please describe the issue...\" formControlName=\"reason\" ngbAutofocus\n            [ngClass]=\"{ 'input-error': formErrors['reason'] }\" class=\"form-control\"\n          ></textarea>\n          <div *ngIf=\"formErrors.reason\" class=\"form-error\" role=\"alert\">\n            {{ formErrors.reason }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group inputs\">\n      <input\n        type=\"button\" role=\"button\" i18n-value value=\"Cancel\" class=\"peertube-button secondary-button\"\n        (click)=\"hide()\" (key.enter)=\"hide()\"\n      >\n\n      <input type=\"submit\" i18n-value value=\"Submit\" class=\"peertube-button primary-button\" [disabled]=\"!form.valid\">\n    </div>\n\n    </form>\n  </div>\n</ng-template>\n","import { mapValues, pickBy } from 'lodash-es'\nimport { Component, OnInit, inject, viewChild } from '@angular/core'\nimport { Notifier } from '@app/core'\nimport { ABUSE_REASON_VALIDATOR } from '@app/shared/form-validators/abuse-validators'\nimport { FormReactive } from '@app/shared/shared-forms/form-reactive'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref'\nimport { abusePredefinedReasonsMap } from '@peertube/peertube-core-utils'\nimport { AbusePredefinedReasonsString } from '@peertube/peertube-models'\nimport { AbuseService } from '../abuse.service'\nimport { PeerTubeTemplateDirective } from '../../shared-main/common/peertube-template.directive'\nimport { PeertubeCheckboxComponent } from '../../shared-forms/peertube-checkbox.component'\nimport { NgFor, NgIf, NgClass } from '@angular/common'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { GlobalIconComponent } from '../../shared-icons/global-icon.component'\nimport { Account } from '@app/shared/shared-main/account/account.model'\n\n@Component({\n  selector: 'my-account-report',\n  templateUrl: './report.component.html',\n  styleUrls: [ './report.component.scss' ],\n  imports: [\n    GlobalIconComponent,\n    FormsModule,\n    ReactiveFormsModule,\n    NgFor,\n    PeertubeCheckboxComponent,\n    NgIf,\n    PeerTubeTemplateDirective,\n    NgClass\n  ]\n})\nexport class AccountReportComponent extends FormReactive implements OnInit {\n  protected formReactiveService = inject(FormReactiveService)\n  private modalService = inject(NgbModal)\n  private abuseService = inject(AbuseService)\n  private notifier = inject(Notifier)\n\n  readonly modal = viewChild<NgbModal>('modal')\n\n  error: string = null\n  predefinedReasons: { id: AbusePredefinedReasonsString, label: string, description?: string, help?: string }[] = []\n  modalTitle: string\n  account: Account = null\n\n  private openedModal: NgbModalRef\n\n  get currentHost () {\n    return window.location.host\n  }\n\n  get originHost () {\n    if (this.isRemote()) {\n      return this.account.host\n    }\n\n    return ''\n  }\n\n  ngOnInit () {\n    this.buildForm({\n      reason: ABUSE_REASON_VALIDATOR,\n      predefinedReasons: mapValues(abusePredefinedReasonsMap, _ => null as any)\n    })\n\n    this.predefinedReasons = this.abuseService.getPrefefinedReasons('account')\n  }\n\n  show (account: Account) {\n    this.account = account\n\n    this.modalTitle = $localize`Report ${this.account.displayName}`\n\n    this.openedModal = this.modalService.open(this.modal(), { centered: true, keyboard: false, size: 'lg' })\n  }\n\n  hide () {\n    this.openedModal.close()\n    this.openedModal = null\n  }\n\n  report () {\n    const reason = this.form.get('reason').value\n    const predefinedReasons = Object.keys(pickBy(this.form.get('predefinedReasons').value)) as AbusePredefinedReasonsString[]\n\n    this.abuseService.reportVideo({\n      reason,\n      predefinedReasons,\n      account: {\n        id: this.account.id\n      }\n    }).subscribe({\n      next: () => {\n        this.notifier.success($localize`Account reported.`)\n        this.hide()\n      },\n\n      error: err => this.notifier.error(err.message)\n    })\n  }\n\n  isRemote () {\n    return !this.account.isLocal\n  }\n}\n","import { mapValues, pickBy } from 'lodash-es'\nimport { Component, OnInit, inject, input, viewChild } from '@angular/core'\nimport { Notifier } from '@app/core'\nimport { ABUSE_REASON_VALIDATOR } from '@app/shared/form-validators/abuse-validators'\nimport { FormReactive } from '@app/shared/shared-forms/form-reactive'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref'\nimport { abusePredefinedReasonsMap } from '@peertube/peertube-core-utils'\nimport { AbusePredefinedReasonsString } from '@peertube/peertube-models'\nimport { AbuseService } from '../abuse.service'\nimport { PeerTubeTemplateDirective } from '../../shared-main/common/peertube-template.directive'\nimport { PeertubeCheckboxComponent } from '../../shared-forms/peertube-checkbox.component'\nimport { NgFor, NgIf, NgClass } from '@angular/common'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { GlobalIconComponent } from '../../shared-icons/global-icon.component'\nimport { VideoComment } from '@app/shared/shared-video-comment/video-comment.model'\n\n@Component({\n  selector: 'my-comment-report',\n  templateUrl: './report.component.html',\n  styleUrls: [ './report.component.scss' ],\n  imports: [\n    GlobalIconComponent,\n    FormsModule,\n    ReactiveFormsModule,\n    NgFor,\n    PeertubeCheckboxComponent,\n    NgIf,\n    PeerTubeTemplateDirective,\n    NgClass\n  ]\n})\nexport class CommentReportComponent extends FormReactive implements OnInit {\n  protected formReactiveService = inject(FormReactiveService)\n  private modalService = inject(NgbModal)\n  private abuseService = inject(AbuseService)\n  private notifier = inject(Notifier)\n\n  readonly comment = input<VideoComment>(null)\n\n  readonly modal = viewChild<NgbModal>('modal')\n\n  modalTitle: string\n  error: string = null\n  predefinedReasons: { id: AbusePredefinedReasonsString, label: string, description?: string, help?: string }[] = []\n\n  private openedModal: NgbModalRef\n\n  get currentHost () {\n    return window.location.host\n  }\n\n  get originHost () {\n    if (this.isRemote()) {\n      return this.comment().account.host\n    }\n\n    return ''\n  }\n\n  ngOnInit () {\n    this.modalTitle = $localize`Report comment`\n\n    this.buildForm({\n      reason: ABUSE_REASON_VALIDATOR,\n      predefinedReasons: mapValues(abusePredefinedReasonsMap, _ => null as any)\n    })\n\n    this.predefinedReasons = this.abuseService.getPrefefinedReasons('comment')\n  }\n\n  show () {\n    this.openedModal = this.modalService.open(this.modal(), { centered: true, keyboard: false, size: 'lg' })\n  }\n\n  hide () {\n    this.openedModal.close()\n    this.openedModal = null\n  }\n\n  report () {\n    const reason = this.form.get('reason').value\n    const predefinedReasons = Object.keys(pickBy(this.form.get('predefinedReasons').value)) as AbusePredefinedReasonsString[]\n\n    this.abuseService.reportVideo({\n      reason,\n      predefinedReasons,\n      comment: {\n        id: this.comment().id\n      }\n    }).subscribe({\n      next: () => {\n        this.notifier.success($localize`Comment reported.`)\n        this.hide()\n      },\n\n      error: err => this.notifier.error(err.message)\n    })\n  }\n\n  isRemote () {\n    return !this.comment().isLocal\n  }\n}\n","<ng-template #modal>\n  <div class=\"modal-header\">\n    <h4 i18n class=\"modal-title\">Report video \"{{ video().name }}\"</h4>\n    <button class=\"border-0 p-0\" title=\"Close this modal\" i18n-title (click)=\"hide()\">\n      <my-global-icon iconName=\"cross\"></my-global-icon>\n    </button>\n  </div>\n\n  <div class=\"modal-body\">\n    <form novalidate [formGroup]=\"form\" (ngSubmit)=\"report()\">\n\n    <div class=\"row\">\n      <div class=\"col-12 col-md-5\">\n        <label i18n for=\"reportPredefinedReasons\">What is the issue?</label>\n\n        <div class=\"ms-2 mt-2 d-flex flex-column\">\n          <ng-container formGroupName=\"predefinedReasons\">\n\n            <div class=\"form-group\" *ngFor=\"let reason of predefinedReasons\">\n              <my-peertube-checkbox [inputName]=\"reason.id\" [formControlName]=\"reason.id\" [labelText]=\"reason.label\">\n                <ng-template *ngIf=\"reason.help\" ptTemplate=\"help\">\n                  <div [innerHTML]=\"reason.help\"></div>\n                </ng-template>\n\n                <ng-container *ngIf=\"reason.description\" ngProjectAs=\"description\">\n                  <div [innerHTML]=\"reason.description\"></div>\n                </ng-container>\n              </my-peertube-checkbox>\n            </div>\n\n          </ng-container>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-md-7\">\n        <my-embed [video]=\"video()\"></my-embed>\n\n        <div class=\"mb-1 mt-3 start-at\" formGroupName=\"timestamp\">\n          <my-peertube-checkbox\n            formControlName=\"hasStart\"\n            i18n-labelText labelText=\"Start at\"\n          ></my-peertube-checkbox>\n\n          <my-timestamp-input\n            [timestamp]=\"timestamp.startAt\"\n            [maxTimestamp]=\"video().duration\"\n            formControlName=\"startAt\"\n            inputName=\"startAt\"\n          >\n          </my-timestamp-input>\n        </div>\n\n        <div class=\"mb-3 stop-at\"  formGroupName=\"timestamp\" *ngIf=\"timestamp.hasStart\">\n          <my-peertube-checkbox\n            formControlName=\"hasEnd\"\n            i18n-labelText labelText=\"Stop at\"\n          ></my-peertube-checkbox>\n\n          <my-timestamp-input\n            [timestamp]=\"timestamp.endAt\"\n            [maxTimestamp]=\"video().duration\"\n            formControlName=\"endAt\"\n            inputName=\"endAt\"\n          >\n          </my-timestamp-input>\n        </div>\n\n        <div i18n class=\"information\">\n          Your report will be sent to moderators of {{ currentHost }}<ng-container *ngIf=\"isRemote()\"> and will be forwarded to the video origin ({{ originHost }}) too</ng-container>.\n        </div>\n\n        <div class=\"form-group\">\n          <textarea\n            i18n-placeholder placeholder=\"Please describe the issue...\" formControlName=\"reason\" ngbAutofocus\n            [ngClass]=\"{ 'input-error': formErrors['reason'] }\" class=\"form-control\"\n          ></textarea>\n          <div *ngIf=\"formErrors.reason\" class=\"form-error\" role=\"alert\">\n            {{ formErrors.reason }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group inputs\">\n      <input\n        type=\"button\" role=\"button\" i18n-value value=\"Cancel\" class=\"peertube-button secondary-button\"\n        (click)=\"hide()\" (key.enter)=\"hide()\"\n      >\n\n      <input type=\"submit\" i18n-value value=\"Submit\" class=\"peertube-button primary-button\" [disabled]=\"!form.valid\">\n    </div>\n\n    </form>\n  </div>\n</ng-template>\n","import { mapValues, pickBy } from 'lodash-es'\nimport { Component, OnInit, inject, input, viewChild } from '@angular/core'\nimport { Notifier } from '@app/core'\nimport { ABUSE_REASON_VALIDATOR } from '@app/shared/form-validators/abuse-validators'\nimport { FormReactive } from '@app/shared/shared-forms/form-reactive'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref'\nimport { abusePredefinedReasonsMap } from '@peertube/peertube-core-utils'\nimport { AbusePredefinedReasonsString } from '@peertube/peertube-models'\nimport { AbuseService } from '../abuse.service'\nimport { TimestampInputComponent } from '../../shared-forms/timestamp-input.component'\nimport { EmbedComponent } from '../../shared-main/video/embed.component'\nimport { PeerTubeTemplateDirective } from '../../shared-main/common/peertube-template.directive'\nimport { PeertubeCheckboxComponent } from '../../shared-forms/peertube-checkbox.component'\nimport { NgFor, NgIf, NgClass } from '@angular/common'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { GlobalIconComponent } from '../../shared-icons/global-icon.component'\nimport { Video } from '@app/shared/shared-main/video/video.model'\n\n@Component({\n  selector: 'my-video-report',\n  templateUrl: './video-report.component.html',\n  styleUrls: [ './report.component.scss' ],\n  imports: [\n    GlobalIconComponent,\n    FormsModule,\n    ReactiveFormsModule,\n    NgFor,\n    PeertubeCheckboxComponent,\n    NgIf,\n    PeerTubeTemplateDirective,\n    EmbedComponent,\n    TimestampInputComponent,\n    NgClass\n  ]\n})\nexport class VideoReportComponent extends FormReactive implements OnInit {\n  protected formReactiveService = inject(FormReactiveService)\n  private modalService = inject(NgbModal)\n  private abuseService = inject(AbuseService)\n  private notifier = inject(Notifier)\n\n  readonly video = input<Video>(null)\n\n  readonly modal = viewChild<NgbModal>('modal')\n\n  error: string = null\n  predefinedReasons: { id: AbusePredefinedReasonsString, label: string, description?: string, help?: string }[] = []\n\n  private openedModal: NgbModalRef\n\n  get currentHost () {\n    return window.location.host\n  }\n\n  get originHost () {\n    if (this.isRemote()) {\n      return this.video().account.host\n    }\n\n    return ''\n  }\n\n  get timestamp () {\n    return this.form.get('timestamp').value\n  }\n\n  ngOnInit () {\n    this.buildForm({\n      reason: ABUSE_REASON_VALIDATOR,\n      predefinedReasons: mapValues(abusePredefinedReasonsMap, _ => null as any),\n      timestamp: {\n        hasStart: null,\n        startAt: null,\n        hasEnd: null,\n        endAt: null\n      }\n    })\n\n    this.predefinedReasons = this.abuseService.getPrefefinedReasons('video')\n  }\n\n  show () {\n    this.openedModal = this.modalService.open(this.modal(), { centered: true, keyboard: false, size: 'lg' })\n  }\n\n  hide () {\n    this.openedModal.close()\n    this.openedModal = null\n  }\n\n  report () {\n    const reason = this.form.get('reason').value\n    const predefinedReasons = Object.keys(pickBy(this.form.get('predefinedReasons').value)) as AbusePredefinedReasonsString[]\n    const { hasStart, startAt, hasEnd, endAt } = this.form.get('timestamp').value\n\n    this.abuseService.reportVideo({\n      reason,\n      predefinedReasons,\n      video: {\n        id: this.video().id,\n        startAt: hasStart && startAt ? startAt : undefined,\n        endAt: hasEnd && endAt ? endAt : undefined\n      }\n    }).subscribe({\n      next: () => {\n        this.notifier.success($localize`Video reported.`)\n        this.hide()\n      },\n\n      error: err => this.notifier.error(err.message)\n    })\n  }\n\n  isRemote () {\n    return !this.video().isLocal\n  }\n}\n","import { Validators } from '@angular/forms'\nimport { BuildFormValidator } from './form-validator.model'\n\nexport const VIDEO_BLOCK_REASON_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.minLength(2), Validators.maxLength(300) ],\n  MESSAGES: {\n    minlength: $localize`Block reason must be at least 2 characters long.`,\n    maxlength: $localize`Block reason cannot be more than 300 characters long.`\n  }\n}\n","<ng-template #modal>\n  <div class=\"modal-header\">\n    <ng-container *ngIf=\"isMultiple()\">\n      <h4 i18n class=\"modal-title\">Block {{ videos.length }} videos</h4>\n    </ng-container>\n\n    <ng-container *ngIf=\"!isMultiple()\">\n      <h4 i18n class=\"modal-title\" *ngIf=\"!getSingleVideo().isLive\">Block video \"{{ getSingleVideo().name }}\"</h4>\n      <h4 i18n class=\"modal-title\" *ngIf=\"getSingleVideo().isLive\">Block live \"{{ getSingleVideo().name }}\"</h4>\n    </ng-container>\n\n    <button class=\"border-0 p-0\" title=\"Close this modal\" i18n-title (click)=\"hide()\">\n      <my-global-icon iconName=\"cross\"></my-global-icon>\n    </button>\n  </div>\n\n  <div class=\"modal-body\">\n\n    <form novalidate [formGroup]=\"form\" (ngSubmit)=\"block()\">\n      <div class=\"form-group\">\n        <textarea\n          i18n-placeholder placeholder=\"Please describe the reason...\" formControlName=\"reason\"\n          [ngClass]=\"{ 'input-error': formErrors['reason'] }\" class=\"form-control\"\n        ></textarea>\n        <div *ngIf=\"formErrors.reason\" class=\"form-error\" role=\"alert\">\n          {{ formErrors.reason }}\n        </div>\n      </div>\n\n      <div class=\"form-group\" *ngIf=\"hasLocal()\">\n        <my-peertube-checkbox\n          inputName=\"unfederate\" formControlName=\"unfederate\"\n          i18n-labelText labelText=\"Unfederate\"\n        >\n          <ng-container ngProjectAs=\"description\">\n            <span *ngIf=\"isMultiple()\" i18n>This will ask remote instances to delete local videos</span>\n            <span *ngIf=\"!isMultiple()\" i18n>This will ask remote instances to delete this video</span>\n          </ng-container>\n        </my-peertube-checkbox>\n      </div>\n\n      <strong class=\"live-info\" *ngIf=\"hasLive()\" i18n>\n        Blocking a live will automatically terminate the live stream.\n      </strong>\n\n      <div class=\"form-group inputs\">\n        <input\n          type=\"button\" role=\"button\" i18n-value value=\"Cancel\" class=\"peertube-button secondary-button\"\n          (click)=\"hide()\" (key.enter)=\"hide()\"\n        >\n\n        <input type=\"submit\" i18n-value value=\"Block\" class=\"peertube-button primary-button\" [disabled]=\"!form.valid\" />\n      </div>\n    </form>\n\n  </div>\n</ng-template>\n","import { Component, OnInit, inject, output, viewChild } from '@angular/core'\nimport { Notifier } from '@app/core'\nimport { formatICU } from '@app/helpers'\nimport { FormReactive } from '@app/shared/shared-forms/form-reactive'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { Video } from '@app/shared/shared-main/video/video.model'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap/modal/modal-ref'\nimport { VIDEO_BLOCK_REASON_VALIDATOR } from '../form-validators/video-block-validators'\nimport { VideoBlockService } from './video-block.service'\nimport { PeertubeCheckboxComponent } from '../shared-forms/peertube-checkbox.component'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { GlobalIconComponent } from '../shared-icons/global-icon.component'\nimport { NgIf, NgClass } from '@angular/common'\n\n@Component({\n  selector: 'my-video-block',\n  templateUrl: './video-block.component.html',\n  styleUrls: [ './video-block.component.scss' ],\n  imports: [ NgIf, GlobalIconComponent, FormsModule, ReactiveFormsModule, NgClass, PeertubeCheckboxComponent ]\n})\nexport class VideoBlockComponent extends FormReactive implements OnInit {\n  protected formReactiveService = inject(FormReactiveService)\n  private modalService = inject(NgbModal)\n  private videoBlocklistService = inject(VideoBlockService)\n  private notifier = inject(Notifier)\n\n  readonly modal = viewChild<NgbModal>('modal')\n\n  readonly videoBlocked = output()\n\n  videos: Video[]\n\n  error: string = null\n\n  private openedModal: NgbModalRef\n\n  ngOnInit () {\n    const defaultValues = { unfederate: 'true' }\n\n    this.buildForm({\n      reason: VIDEO_BLOCK_REASON_VALIDATOR,\n      unfederate: null\n    }, defaultValues)\n  }\n\n  isMultiple () {\n    return this.videos.length > 1\n  }\n\n  getSingleVideo () {\n    return this.videos[0]\n  }\n\n  hasLive () {\n    return this.videos.some(v => v.isLive)\n  }\n\n  hasLocal () {\n    return this.videos.some(v => v.isLocal)\n  }\n\n  show (videos: Video[]) {\n    this.videos = videos\n\n    this.openedModal = this.modalService.open(this.modal(), { centered: true, keyboard: false })\n  }\n\n  hide () {\n    this.openedModal.close()\n    this.openedModal = null\n  }\n\n  block () {\n    const options = this.videos.map(v => ({\n      videoId: v.id,\n      reason: this.form.value['reason'] || undefined,\n      unfederate: v.isLocal\n        ? this.form.value['unfederate']\n        : undefined\n    }))\n\n    this.videoBlocklistService.blockVideo(options)\n      .subscribe({\n        next: () => {\n          const message = formatICU(\n            $localize`{count, plural, =1 {Blocked {videoName}.} other {Blocked {count} videos.}}`,\n            { count: this.videos.length, videoName: this.getSingleVideo().name }\n          )\n\n          this.notifier.success(message)\n          this.hide()\n\n          for (const o of options) {\n            const video = this.videos.find(v => v.id === o.videoId)\n\n            video.blacklisted = true\n            video.blacklistedReason = o.reason\n          }\n\n          this.videoBlocked.emit()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n}\n","<ul ngbNav #nav=\"ngbNav\" class=\"nav-tabs\" [(activeId)]=\"activeNavId\">\n\n  <li *ngFor=\"let caption of getCaptions()\" [ngbNavItem]=\"caption.language.id\">\n    <button ngbNavLink>\n      {{ caption.language.label }}\n\n      <ng-container *ngIf=\"caption.automaticallyGenerated\" i18n>(auto-generated)</ng-container>\n    </button>\n\n    <ng-template ngbNavContent>\n      <div class=\"nav-content\">\n        <my-input-text\n          inputId=\"subtitle-url\" i18n-ariaLabel ariaLabel=\"Subtitle URL\"\n          [show]=\"true\" [readonly]=\"true\" [withCopy]=\"true\" [withToggle]=\"false\" [value]=\"getCaptionLink()\"\n        ></my-input-text>\n      </div>\n    </ng-template>\n  </li>\n</ul>\n\n<div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\n\n<div class=\"modal-footer inputs\">\n  <ng-content select=\"cancel-button\"></ng-content>\n\n  <input type=\"submit\" i18n-value value=\"Download\" class=\"peertube-button primary-button\" (click)=\"download()\" />\n</div>\n","import { NgFor, NgIf } from '@angular/common'\nimport { Component, OnInit, input, output } from '@angular/core'\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap'\nimport { VideoCaption } from '@peertube/peertube-models'\nimport { logger } from '@root-helpers/logger'\nimport { InputTextComponent } from '../../shared-forms/input-text.component'\n\n@Component({\n  selector: 'my-subtitle-files-download',\n  templateUrl: './subtitle-files-download.component.html',\n  imports: [\n    NgIf,\n    NgFor,\n    InputTextComponent,\n    NgbNavModule\n  ]\n})\nexport class SubtitleFilesDownloadComponent implements OnInit {\n  readonly videoCaptions = input.required<VideoCaption[]>()\n\n  readonly downloaded = output()\n\n  activeNavId: string\n\n  getCaptions () {\n    const videoCaptions = this.videoCaptions()\n    if (!videoCaptions) return []\n\n    return videoCaptions\n  }\n\n  ngOnInit () {\n    if (this.hasCaptions()) {\n      this.activeNavId = this.videoCaptions()[0].language.id\n    }\n  }\n\n  download () {\n    window.location.assign(this.getCaptionLink())\n\n    this.downloaded.emit()\n  }\n\n  hasCaptions () {\n    return this.getCaptions().length !== 0\n  }\n\n  getCaption () {\n    const caption = this.getCaptions()\n      .find(c => c.language.id === this.activeNavId)\n\n    if (!caption) {\n      logger.error(`Cannot find caption ${this.activeNavId}`)\n      return undefined\n    }\n\n    return caption\n  }\n\n  getCaptionLink () {\n    const caption = this.getCaption()\n    if (!caption) return ''\n\n    return caption.fileUrl\n  }\n}\n","<my-alert type=\"warning\" *ngIf=\"isConfidentialVideo()\" i18n>\n  The following link contains a private token and should not be shared with anyone.\n</my-alert>\n\n<div ngbNav #resolutionNav=\"ngbNav\" class=\"nav-tabs\" [activeId]=\"activeResolutionId\" (activeIdChange)=\"onResolutionIdChange($event)\">\n\n  <ng-template #rootNavContent>\n    <div class=\"nav-content\">\n      <my-input-text\n        inputId=\"video-file-link\"\n        i18n-ariaLabel ariaLabel=\"Video file link\"\n        [show]=\"true\" [readonly]=\"true\" [withCopy]=\"true\" [withToggle]=\"false\" [value]=\"getVideoFileLink()\"\n      ></my-input-text>\n    </div>\n  </ng-template>\n\n  <ng-container *ngIf=\"originalVideoFile()\" ngbNavItem=\"original\">\n    <a ngbNavLink>\n      <ng-container i18n>Original file</ng-container>\n\n      <my-global-icon i18n-ngbTooltip ngbTooltip=\"Other users cannot download the original file\" iconName=\"shield\"></my-global-icon>\n    </a>\n\n    <ng-template ngbNavContent>\n      <ng-template [ngTemplateOutlet]=\"rootNavContent\"></ng-template>\n    </ng-template>\n  </ng-container>\n\n  <ng-container *ngFor=\"let file of getVideoFiles()\" [ngbNavItem]=\"file.resolution.id\">\n    <a ngbNavLink>{{ file.resolution.label }}</a>\n\n    <ng-template ngbNavContent>\n      <ng-template [ngTemplateOutlet]=\"rootNavContent\"></ng-template>\n    </ng-template>\n  </ng-container>\n</div>\n\n<div [ngbNavOutlet]=\"resolutionNav\"></div>\n\n<div class=\"advanced-filters\" [ngbCollapse]=\"isAdvancedCustomizationCollapsed\" [animation]=\"true\">\n  <div ngbNav #navMetadata=\"ngbNav\" class=\"nav-tabs nav-metadata\">\n\n    <ng-template #metadataInfo let-item>\n      <div class=\"metadata-attribute\">\n        <span>{{ item.value.label }}</span>\n\n        @if (item.value.value) {\n          <span>{{ item.value.value }}</span>\n        } @else {\n          <span i18n>Unknown</span>\n        }\n      </div>\n    </ng-template>\n\n    <ng-container ngbNavItem>\n      <a ngbNavLink i18n>Format</a>\n\n      <ng-template ngbNavContent>\n        <div class=\"file-metadata\">\n          @for (item of videoFileMetadataFormat | keyvalue; track item.key) {\n            <ng-template [ngTemplateOutlet]=\"metadataInfo\" [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-template>\n          }\n        </div>\n      </ng-template>\n    </ng-container>\n\n    <ng-container ngbNavItem *ngIf=\"videoFileMetadataVideoStream !== undefined\">\n      <a ngbNavLink i18n>Video stream</a>\n\n      <ng-template ngbNavContent>\n        <div class=\"file-metadata\">\n          @for (item of videoFileMetadataVideoStream | keyvalue; track item.key) {\n            <ng-template [ngTemplateOutlet]=\"metadataInfo\" [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-template>\n          }\n        </div>\n      </ng-template>\n    </ng-container>\n\n    <ng-container ngbNavItem *ngIf=\"videoFileMetadataAudioStream !== undefined\">\n      <a ngbNavLink i18n>Audio stream</a>\n\n      <ng-template ngbNavContent>\n        <div class=\"file-metadata\">\n          @for (item of videoFileMetadataAudioStream | keyvalue; track item.key) {\n            <ng-template [ngTemplateOutlet]=\"metadataInfo\" [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-template>\n          }\n        </div>\n      </ng-template>\n    </ng-container>\n  </div>\n\n  <div *ngIf=\"hasMetadata()\" [ngbNavOutlet]=\"navMetadata\"></div>\n\n  <div [hidden]=\"originalVideoFile() || !getVideoFile()?.torrentDownloadUrl\" class=\"download-type\">\n    <div class=\"peertube-radio-container\">\n      <input type=\"radio\" name=\"download\" id=\"download-direct\" [(ngModel)]=\"downloadType\" value=\"direct\">\n      <label i18n for=\"download-direct\">Direct download</label>\n    </div>\n\n    <div class=\"peertube-radio-container\">\n      <input type=\"radio\" name=\"download\" id=\"download-torrent\" [(ngModel)]=\"downloadType\" value=\"torrent\">\n      <label i18n for=\"download-torrent\">Torrent (.torrent file)</label>\n    </div>\n  </div>\n</div>\n\n<button\n  (click)=\"isAdvancedCustomizationCollapsed = !isAdvancedCustomizationCollapsed\"\n  class=\"advanced-filters-button button-unstyle\"\n  [attr.aria-expanded]=\"!isAdvancedCustomizationCollapsed\" aria-controls=\"collapseBasic\"\n>\n  @if (isAdvancedCustomizationCollapsed) {\n    <span class=\"chevron-down\"></span>\n\n    <ng-container i18n>More information/options</ng-container>\n  } @else {\n    <span class=\"chevron-up\"></span>\n\n    <ng-container i18n>Less information/options</ng-container>\n  }\n</button>\n\n<div class=\"modal-footer inputs\">\n  <ng-content select=\"cancel-button\"></ng-content>\n\n  <input type=\"submit\" i18n-value value=\"Download\" class=\"peertube-button primary-button\" (click)=\"download()\" />\n</div>\n","import { KeyValuePipe, NgFor, NgIf, NgTemplateOutlet } from '@angular/common'\nimport { Component, LOCALE_ID, OnInit, inject, input, output } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport {\n  NgbCollapse,\n  NgbNavModule,\n  NgbTooltip\n} from '@ng-bootstrap/ng-bootstrap'\nimport { objectKeysTyped, pick } from '@peertube/peertube-core-utils'\nimport { VideoFile, VideoFileMetadata, VideoSource } from '@peertube/peertube-models'\nimport { logger } from '@root-helpers/logger'\nimport { videoRequiresFileToken } from '@root-helpers/video'\nimport { mapValues } from 'lodash-es'\nimport { firstValueFrom } from 'rxjs'\nimport { tap } from 'rxjs/operators'\nimport { InputTextComponent } from '../../shared-forms/input-text.component'\nimport { GlobalIconComponent } from '../../shared-icons/global-icon.component'\nimport { BytesPipe } from '../../shared-main/common/bytes.pipe'\nimport { NumberFormatterPipe } from '../../shared-main/common/number-formatter.pipe'\nimport { VideoDetails } from '../../shared-main/video/video-details.model'\nimport { VideoService } from '../../shared-main/video/video.service'\n\ntype FileMetadata = { [key: string]: { label: string, value: string | number } }\n\n@Component({\n  selector: 'my-video-files-download',\n  templateUrl: './video-files-download.component.html',\n  styleUrls: [ './video-files-download.component.scss' ],\n  imports: [\n    NgIf,\n    FormsModule,\n    GlobalIconComponent,\n    NgFor,\n    NgbNavModule,\n    InputTextComponent,\n    NgbCollapse,\n    KeyValuePipe,\n    NgbTooltip,\n    NgTemplateOutlet,\n    AlertComponent\n  ]\n})\nexport class VideoFilesDownloadComponent implements OnInit {\n  private localeId = inject(LOCALE_ID)\n  private videoService = inject(VideoService)\n\n  readonly video = input.required<VideoDetails>()\n  readonly originalVideoFile = input<VideoSource>(undefined)\n  readonly videoFileToken = input<string>(undefined)\n\n  readonly downloaded = output()\n\n  downloadType: 'direct' | 'torrent' = 'direct'\n\n  activeResolutionId: number | 'original' = -1\n\n  videoFileMetadataFormat: FileMetadata\n  videoFileMetadataVideoStream: FileMetadata | undefined\n  videoFileMetadataAudioStream: FileMetadata | undefined\n\n  isAdvancedCustomizationCollapsed = true\n\n  private bytesPipe: BytesPipe\n  private numbersPipe: NumberFormatterPipe\n\n  constructor () {\n    this.bytesPipe = new BytesPipe()\n    this.numbersPipe = new NumberFormatterPipe(this.localeId)\n  }\n\n  ngOnInit () {\n    if (this.hasFiles()) {\n      this.onResolutionIdChange(this.getVideoFiles()[0].resolution.id)\n    }\n  }\n\n  getVideoFiles () {\n    const video = this.video()\n    if (!video) return []\n    if (video.files.length !== 0) return video.files\n\n    const hls = video.getHlsPlaylist()\n    if (hls) return hls.files\n\n    return []\n  }\n\n  // ---------------------------------------------------------------------------\n\n  download () {\n    window.location.assign(this.getVideoFileLink())\n\n    this.downloaded.emit()\n  }\n\n  // ---------------------------------------------------------------------------\n\n  async onResolutionIdChange (resolutionId: number | 'original') {\n    this.activeResolutionId = resolutionId\n\n    let metadata: VideoFileMetadata\n\n    if (this.activeResolutionId === 'original') {\n      metadata = this.originalVideoFile().metadata\n    } else {\n      const videoFile = this.getVideoFile()\n      if (!videoFile) return\n\n      if (!videoFile.metadata && videoFile.metadataUrl) {\n        await this.hydrateMetadataFromMetadataUrl(videoFile)\n      }\n\n      metadata = videoFile.metadata\n    }\n\n    if (!metadata) return\n\n    this.videoFileMetadataFormat = this.getMetadataFormat(metadata.format)\n    this.videoFileMetadataVideoStream = this.getMetadataStream(metadata.streams, 'video')\n    this.videoFileMetadataAudioStream = this.getMetadataStream(metadata.streams, 'audio')\n  }\n\n  // ---------------------------------------------------------------------------\n\n  hasFiles () {\n    return this.getVideoFiles().length !== 0\n  }\n\n  getVideoFile () {\n    if (this.activeResolutionId === 'original') return undefined\n\n    const file = this.getVideoFiles()\n      .find(f => f.resolution.id === this.activeResolutionId)\n\n    if (!file) {\n      logger.error(`Could not find file with resolution ${this.activeResolutionId}`)\n      return undefined\n    }\n\n    return file\n  }\n\n  getVideoFileLink () {\n    const suffix = this.activeResolutionId === 'original' || this.isConfidentialVideo()\n      ? '?videoFileToken=' + this.videoFileToken()\n      : ''\n\n    if (this.activeResolutionId === 'original') {\n      return this.originalVideoFile().fileDownloadUrl + suffix\n    }\n\n    const file = this.getVideoFile()\n    if (!file) return ''\n\n    switch (this.downloadType) {\n      case 'direct':\n        return file.fileDownloadUrl + suffix\n\n      case 'torrent':\n        return file.torrentDownloadUrl + suffix\n    }\n  }\n\n  // ---------------------------------------------------------------------------\n\n  isConfidentialVideo () {\n    return this.activeResolutionId === 'original' || videoRequiresFileToken(this.video())\n  }\n\n  // ---------------------------------------------------------------------------\n\n  hasMetadata () {\n    return !!this.videoFileMetadataFormat\n  }\n\n  private getMetadataFormat (format: any) {\n    const keyToTranslateFunction = {\n      encoder: (value: string) => ({ label: $localize`Encoder`, value }),\n      format_long_name: (value: string) => ({ label: $localize`Format name`, value }),\n      size: (value: number | string) => ({ label: $localize`Size`, value: this.bytesPipe.transform(+value, 2) }),\n      bit_rate: (value: number | string) => ({\n        label: $localize`Bitrate`,\n        value: `${this.numbersPipe.transform(+value)}bps`\n      })\n    }\n\n    // flattening format\n    const sanitizedFormat = Object.assign(format, format.tags)\n    delete sanitizedFormat.tags\n\n    return mapValues(\n      pick(sanitizedFormat, objectKeysTyped(keyToTranslateFunction)),\n      (val: string, key: keyof typeof keyToTranslateFunction) => keyToTranslateFunction[key](val)\n    )\n  }\n\n  private getMetadataStream (streams: any[], type: 'video' | 'audio') {\n    const stream = streams.find(s => s.codec_type === type)\n    if (!stream) return undefined\n\n    let keyToTranslateFunction = {\n      codec_long_name: (value: string) => ({ label: $localize`Codec`, value }),\n      profile: (value: string) => ({ label: $localize`Profile`, value }),\n      bit_rate: (value: number | string) => ({\n        label: $localize`Bitrate`,\n        value: isNaN(+value)\n          ? undefined\n          : `${this.numbersPipe.transform(+value)}bps`\n      })\n    }\n\n    if (type === 'video') {\n      keyToTranslateFunction = Object.assign(keyToTranslateFunction, {\n        width: (value: string | number) => ({ label: $localize`Resolution`, value: `${value}x${stream.height}` }),\n        display_aspect_ratio: (value: string) => ({ label: $localize`Aspect ratio`, value }),\n        avg_frame_rate: (value: string) => ({ label: $localize`Average frame rate`, value }),\n        pix_fmt: (value: string) => ({ label: $localize`Pixel format`, value })\n      })\n    } else {\n      keyToTranslateFunction = Object.assign(keyToTranslateFunction, {\n        sample_rate: (value: string | number) => ({ label: $localize`Sample rate`, value }),\n        channel_layout: (value: string | number) => ({ label: $localize`Channel Layout`, value })\n      })\n    }\n\n    return mapValues(\n      pick(stream, Object.keys(keyToTranslateFunction)),\n      (val: string, key: keyof typeof keyToTranslateFunction) => keyToTranslateFunction[key](val)\n    )\n  }\n\n  private hydrateMetadataFromMetadataUrl (file: VideoFile) {\n    const observable = this.videoService.getVideoFileMetadata(file.metadataUrl)\n      .pipe(tap(res => file.metadata = res))\n\n    return firstValueFrom(observable)\n  }\n}\n","<div class=\"form-group\">\n\n  <div *ngIf=\"originalVideoFile()\" class=\"peertube-radio-container\">\n    <input type=\"radio\" name=\"video-file\" id=\"original-file\" [(ngModel)]=\"videoFileChosen\" value=\"file-original\">\n\n    <label for=\"original-file\">\n      <strong i18n>Original file</strong>\n\n      <span class=\"muted\">{{ originalVideoFile().size | bytes: 1 }} | {{ originalVideoFile().width }}x{{ originalVideoFile().height }}</span>\n\n      <my-global-icon i18n-ngbTooltip ngbTooltip=\"Other users cannot download the original file\" iconName=\"shield\"></my-global-icon>\n    </label>\n  </div>\n\n  @for (file of videoFiles; track file.id) {\n    <div class=\"peertube-radio-container\">\n      <input type=\"radio\" name=\"video-file\" [id]=\"'file-' + file.id\" [(ngModel)]=\"videoFileChosen\" [value]=\"'file-' + file.id\">\n\n      <label [for]=\"'file-' + file.id\">\n        <strong>{{ getLabel(file) }}</strong>\n\n        <span class=\"muted\">\n          {{ getFileSize(file) | bytes: 1 }}\n\n          @if (file.width) { | {{ file.width }}x{{ file.height }} }\n\n          @if (file.fps && file.fps >= 50) { | <ng-container i18n>{{ file.fps }}fps</ng-container> }\n      </span>\n      </label>\n    </div>\n  }\n\n</div>\n\n<div class=\"form-group\" *ngIf=\"hasAudioSplitted()\">\n  <my-peertube-checkbox inputName=\"includeAudio\" [(ngModel)]=\"includeAudio\" i18n-labelText labelText=\"Include audio\"></my-peertube-checkbox>\n</div>\n\n<div class=\"modal-footer inputs\">\n  <ng-content select=\"cancel-button\"></ng-content>\n\n  <input type=\"submit\" i18n-value value=\"Download\" class=\"peertube-button primary-button\" (click)=\"download()\" />\n</div>\n","import { NgIf } from '@angular/common'\nimport { Component, OnInit, inject, input, output } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { PeertubeCheckboxComponent } from '@app/shared/shared-forms/peertube-checkbox.component'\nimport { VideoService } from '@app/shared/shared-main/video/video.service'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { getResolutionAndFPSLabel, maxBy } from '@peertube/peertube-core-utils'\nimport { VideoFile, VideoResolution, VideoSource } from '@peertube/peertube-models'\nimport { videoRequiresFileToken } from '@root-helpers/video'\nimport { GlobalIconComponent } from '../../shared-icons/global-icon.component'\nimport { BytesPipe } from '../../shared-main/common/bytes.pipe'\nimport { VideoDetails } from '../../shared-main/video/video-details.model'\n\n@Component({\n  selector: 'my-video-generate-download',\n  templateUrl: './video-generate-download.component.html',\n  styleUrls: [ './video-generate-download.component.scss' ],\n  imports: [\n    NgIf,\n    FormsModule,\n    GlobalIconComponent,\n    PeertubeCheckboxComponent,\n    NgbTooltip,\n    BytesPipe\n  ]\n})\nexport class VideoGenerateDownloadComponent implements OnInit {\n  private videoService = inject(VideoService)\n\n  readonly video = input.required<VideoDetails>()\n  readonly originalVideoFile = input<VideoSource>(undefined)\n  readonly videoFileToken = input<string>(undefined)\n\n  readonly downloaded = output()\n\n  includeAudio = true\n  videoFileChosen = ''\n  videoFiles: VideoFile[]\n\n  ngOnInit () {\n    this.videoFiles = this.buildVideoFiles()\n    if (this.videoFiles.length === 0) return\n\n    this.videoFileChosen = 'file-' + maxBy(this.videoFiles, 'resolution').id\n  }\n\n  getLabel (file: VideoFile) {\n    return getResolutionAndFPSLabel(file.resolution.label, file.fps)\n  }\n\n  getFileSize (file: VideoFile) {\n    if (file.hasAudio && file.hasVideo) return file.size\n    if (file.hasAudio) return file.size\n\n    if (this.includeAudio) {\n      const audio = this.findAudioFileOnly()\n\n      return file.size + (audio?.size || 0)\n    }\n\n    return file.size\n  }\n\n  hasAudioSplitted () {\n    if (this.videoFileChosen === 'file-original') return false\n\n    return this.findCurrentFile().hasAudio === false &&\n      this.videoFiles.some(f => f.hasVideo === false && f.hasAudio === true)\n  }\n\n  // ---------------------------------------------------------------------------\n\n  download () {\n    window.location.assign(this.getVideoFileLink())\n\n    this.downloaded.emit()\n  }\n\n  // ---------------------------------------------------------------------------\n\n  getVideoFileLink () {\n    const suffix = this.videoFileChosen === 'file-original' || this.isConfidentialVideo()\n      ? '?videoFileToken=' + this.videoFileToken()\n      : ''\n\n    if (this.videoFileChosen === 'file-original') {\n      return this.originalVideoFile().fileDownloadUrl + suffix\n    }\n\n    const file = this.findCurrentFile()\n    if (!file) return ''\n\n    const files = [ file ]\n\n    if (this.hasAudioSplitted() && this.includeAudio) {\n      files.push(this.findAudioFileOnly())\n    }\n\n    return this.videoService.generateDownloadUrl({ video: this.video(), videoFileToken: this.videoFileToken(), files })\n  }\n\n  // ---------------------------------------------------------------------------\n\n  isConfidentialVideo () {\n    return this.videoFileChosen === 'file-original' || videoRequiresFileToken(this.video())\n  }\n\n  // ---------------------------------------------------------------------------\n\n  private buildVideoFiles () {\n    const video = this.video()\n    if (!video) return []\n\n    const hls = video.getHlsPlaylist()\n    if (hls) return hls.files\n\n    return video.files\n  }\n\n  private findCurrentFile () {\n    return this.videoFiles.find(f => this.videoFileChosen === 'file-' + f.id)\n  }\n\n  private findAudioFileOnly () {\n    return this.videoFiles.find(f => f.resolution.id === VideoResolution.H_NOVIDEO)\n  }\n}\n","<ng-template #modal let-hide=\"close\">\n  <div class=\"modal-header\">\n    <div class=\"d-flex align-items-center me-auto\">\n      <h4 class=\"modal-title\" i18n>Download</h4>\n\n      <div class=\"peertube-select-container title-select ms-2\">\n        <select id=\"type\" name=\"type\" [(ngModel)]=\"type\" class=\"form-control\">\n          <option value=\"video-generate\" i18n>Video</option>\n          <option value=\"video-files\" i18n>Video files</option>\n          <option *ngIf=\"hasCaptions()\" value=\"subtitle-files\" i18n>Subtitle files</option>\n        </select>\n      </div>\n    </div>\n\n    <button class=\"border-0 p-0 align-self-start\" title=\"Close this modal\" i18n-title (click)=\"hide()\">\n      <my-global-icon iconName=\"cross\"></my-global-icon>\n    </button>\n  </div>\n\n  <div class=\"modal-body\" [ngClass]=\"{ 'opacity-0': !loaded }\">\n    <ng-template #cancelBlock>\n      <input\n        type=\"button\" role=\"button\" i18n-value value=\"Cancel\" class=\"peertube-button secondary-button\"\n        (click)=\"hide()\" (key.enter)=\"hide()\"\n      >\n    </ng-template>\n\n    @switch (type) {\n      @case ('video-generate') {\n        <my-video-generate-download [video]=\"video\" [originalVideoFile]=\"originalVideoFile\" [videoFileToken]=\"videoFileToken\" (downloaded)=\"onDownloaded()\">\n          <ng-container ngProjectAs=\"cancel-button\">\n            <ng-template [ngTemplateOutlet]=\"cancelBlock\"></ng-template>\n          </ng-container>\n        </my-video-generate-download>\n      }\n\n      @case ('video-files') {\n        <my-video-files-download [video]=\"video\" [originalVideoFile]=\"originalVideoFile\" [videoFileToken]=\"videoFileToken\" (downloaded)=\"onDownloaded()\">\n          <ng-container ngProjectAs=\"cancel-button\">\n            <ng-template [ngTemplateOutlet]=\"cancelBlock\"></ng-template>\n          </ng-container>\n        </my-video-files-download>\n      }\n\n      @case ('subtitle-files') {\n        <my-subtitle-files-download [videoCaptions]=\"getCaptions()\" (downloaded)=\"onDownloaded()\">\n          <ng-container ngProjectAs=\"cancel-button\">\n            <ng-template [ngTemplateOutlet]=\"cancelBlock\"></ng-template>\n          </ng-container>\n        </my-subtitle-files-download>\n      }\n    }\n  </div>\n</ng-template>\n","import { NgClass, NgIf, NgTemplateOutlet } from '@angular/common'\nimport { Component, ElementRef, inject, input, viewChild } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { AuthService, HooksService } from '@app/core'\nimport { GlobalIconComponent } from '@app/shared/shared-icons/global-icon.component'\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap'\nimport { VideoCaption, VideoSource } from '@peertube/peertube-models'\nimport { videoRequiresFileToken } from '@root-helpers/video'\nimport { of } from 'rxjs'\nimport { catchError } from 'rxjs/operators'\nimport { VideoDetails } from '../../shared-main/video/video-details.model'\nimport { VideoFileTokenService } from '../../shared-main/video/video-file-token.service'\nimport { VideoService } from '../../shared-main/video/video.service'\nimport { SubtitleFilesDownloadComponent } from './subtitle-files-download.component'\nimport { VideoFilesDownloadComponent } from './video-files-download.component'\nimport { VideoGenerateDownloadComponent } from './video-generate-download.component'\n\ntype DownloadType = 'video-generate' | 'video-files' | 'subtitle-files'\n\n@Component({\n  selector: 'my-video-download',\n  templateUrl: './video-download.component.html',\n  styleUrls: [ './video-download.component.scss' ],\n  imports: [\n    SubtitleFilesDownloadComponent,\n    VideoFilesDownloadComponent,\n    VideoGenerateDownloadComponent,\n    GlobalIconComponent,\n    NgIf,\n    FormsModule,\n    NgClass,\n    NgTemplateOutlet\n  ]\n})\nexport class VideoDownloadComponent {\n  private modalService = inject(NgbModal)\n  private authService = inject(AuthService)\n  private videoService = inject(VideoService)\n  private videoFileTokenService = inject(VideoFileTokenService)\n  private hooks = inject(HooksService)\n\n  readonly modal = viewChild<ElementRef>('modal')\n\n  readonly videoPassword = input<string>(undefined)\n\n  video: VideoDetails\n  type: DownloadType = 'video-generate'\n\n  videoFileToken: string\n  originalVideoFile: VideoSource\n\n  loaded = false\n\n  private videoCaptions: VideoCaption[]\n  private activeModal: NgbModalRef\n\n  getCaptions () {\n    if (!this.videoCaptions) return []\n\n    return this.videoCaptions\n  }\n\n  show (video: VideoDetails, videoCaptions?: VideoCaption[]) {\n    this.loaded = false\n\n    this.videoFileToken = undefined\n    this.originalVideoFile = undefined\n\n    this.video = video\n    this.videoCaptions = videoCaptions\n\n    this.activeModal = this.modalService.open(this.modal(), { centered: true })\n\n    this.getOriginalVideoFileObs()\n      .subscribe(source => {\n        if (source?.fileDownloadUrl) {\n          this.originalVideoFile = source\n        }\n\n        if (this.originalVideoFile || videoRequiresFileToken(this.video)) {\n          this.videoFileTokenService.getVideoFileToken({ videoUUID: this.video.uuid, videoPassword: this.videoPassword() })\n            .subscribe(({ token }) => {\n              this.videoFileToken = token\n\n              this.loaded = true\n            })\n        } else {\n          this.loaded = true\n        }\n      })\n\n    this.activeModal.shown.subscribe(() => {\n      this.hooks.runAction('action:modal.video-download.shown', 'common')\n    })\n  }\n\n  private getOriginalVideoFileObs () {\n    if (!this.video.isLocal || !this.authService.isLoggedIn()) return of(undefined)\n\n    const user = this.authService.getUser()\n    if (!this.video.isOwnerOrHasSeeAllVideosRight(user)) return of(undefined)\n\n    return this.videoService.getSource(this.video.id)\n      .pipe(catchError(err => {\n        console.error('Cannot get source file', err)\n\n        return of(undefined)\n      }))\n  }\n\n  // ---------------------------------------------------------------------------\n\n  onDownloaded () {\n    this.activeModal.close()\n  }\n\n  hasCaptions () {\n    return this.getCaptions().length !== 0\n  }\n}\n","<ng-container *ngIf=\"videoActions.length !== 0\">\n\n  <div\n    *ngIf=\"isUserLoggedIn() && displayOptions().playlist\"\n    role=\"button\" aria-label=\"Open video actions\" i18n-aria-label\n    class=\"playlist-dropdown\" ngbDropdown #playlistDropdown=\"ngbDropdown\" autoClose=\"outside\"\n    container=\"body\" [placement]=\"getPlaylistDropdownPlacement()\"\n  >\n    <span class=\"anchor\" ngbDropdownAnchor></span>\n\n    <div ngbDropdownMenu>\n      @defer (when dropdownOpened) {\n        <my-video-add-to-playlist #playlistAdd [video]=\"video()\" (videoExistsInPlaylistChange)=\"videoExistsInPlaylistChange.emit()\"></my-video-add-to-playlist>\n      }\n    </div>\n  </div>\n\n  <my-action-dropdown\n    [actions]=\"videoActions\" [label]=\"label()\" [entry]=\"{ video: video() }\"\n    [buttonSize]=\"buttonSize()\" [placement]=\"placement()\" [buttonDirection]=\"buttonDirection()\" [buttonStyled]=\"buttonStyled()\"\n    container=\"body\" (openChange)=\"dropdownOpened = true\"\n  ></my-action-dropdown>\n\n  <my-video-download #videoDownloadModal></my-video-download>\n  <my-video-report #videoReportModal [video]=\"video()\"></my-video-report>\n  <my-video-block #videoBlockModal (videoBlocked)=\"onVideoBlocked()\"></my-video-block>\n</ng-container>\n","import { NgIf } from '@angular/common'\nimport { Component, OnChanges, booleanAttribute, inject, input, output, viewChild } from '@angular/core'\nimport { AuthService, ConfirmService, Notifier, ScreenService, ServerService } from '@app/core'\nimport { NgbDropdown, NgbDropdownAnchor, NgbDropdownMenu } from '@ng-bootstrap/ng-bootstrap'\nimport { VideoCaption } from '@peertube/peertube-models'\nimport { of } from 'rxjs'\nimport { Actor } from '../shared-main/account/actor.model'\nimport {\n  ActionDropdownComponent,\n  DropdownAction,\n  DropdownButtonSize,\n  DropdownDirection\n} from '../shared-main/buttons/action-dropdown.component'\nimport { VideoCaptionService } from '../shared-main/video-caption/video-caption.service'\nimport { RedundancyService } from '../shared-main/video/redundancy.service'\nimport { VideoDetails } from '../shared-main/video/video-details.model'\nimport { Video } from '../shared-main/video/video.model'\nimport { VideoService } from '../shared-main/video/video.service'\nimport { BlocklistService } from '../shared-moderation/blocklist.service'\nimport { VideoReportComponent } from '../shared-moderation/report-modals'\nimport { VideoBlockComponent } from '../shared-moderation/video-block.component'\nimport { VideoBlockService } from '../shared-moderation/video-block.service'\nimport { VideoAddToPlaylistComponent } from '../shared-video-playlist/video-add-to-playlist.component'\nimport { VideoDownloadComponent } from './download/video-download.component'\n\nexport type VideoActionsDisplayType = {\n  playlist?: boolean\n  download?: boolean\n  update?: boolean\n  blacklist?: boolean\n  delete?: boolean\n  report?: boolean\n  duplicate?: boolean\n  mute?: boolean\n  liveInfo?: boolean\n  removeFiles?: boolean\n  transcoding?: boolean\n  generateTranscription?: boolean\n  transcriptionWidget?: boolean\n}\n\n@Component({\n  selector: 'my-video-actions-dropdown',\n  templateUrl: './video-actions-dropdown.component.html',\n  styleUrls: [ './video-actions-dropdown.component.scss' ],\n  imports: [\n    NgIf,\n    NgbDropdown,\n    NgbDropdownAnchor,\n    NgbDropdownMenu,\n    VideoAddToPlaylistComponent,\n    ActionDropdownComponent,\n    VideoDownloadComponent,\n    VideoReportComponent,\n    VideoBlockComponent\n  ]\n})\nexport class VideoActionsDropdownComponent implements OnChanges {\n  private authService = inject(AuthService)\n  private notifier = inject(Notifier)\n  private confirmService = inject(ConfirmService)\n  private blocklistService = inject(BlocklistService)\n  private videoBlocklistService = inject(VideoBlockService)\n  private screenService = inject(ScreenService)\n  private videoService = inject(VideoService)\n  private videoCaptionService = inject(VideoCaptionService)\n  private redundancyService = inject(RedundancyService)\n  private serverService = inject(ServerService)\n\n  readonly playlistDropdown = viewChild<NgbDropdown>('playlistDropdown')\n  readonly playlistAdd = viewChild<VideoAddToPlaylistComponent>('playlistAdd')\n\n  readonly videoDownloadModal = viewChild<VideoDownloadComponent>('videoDownloadModal')\n  readonly videoReportModal = viewChild<VideoReportComponent>('videoReportModal')\n  readonly videoBlockModal = viewChild<VideoBlockComponent>('videoBlockModal')\n\n  readonly video = input<Video | VideoDetails>(undefined)\n  readonly videoCaptions = input<VideoCaption[]>([])\n\n  readonly displayOptions = input<VideoActionsDisplayType>({\n    playlist: false,\n    download: true,\n    update: true,\n    blacklist: true,\n    delete: true,\n    report: true,\n    duplicate: true,\n    mute: true,\n    liveInfo: false,\n    removeFiles: false,\n    transcoding: false,\n    generateTranscription: false,\n    transcriptionWidget: false\n  })\n  readonly placement = input('auto')\n  readonly moreActions = input<DropdownAction<{\n    video: Video\n  }>[][]>([])\n  readonly actionAvailabilityHint = input(false, { transform: booleanAttribute })\n\n  readonly label = input<string>(undefined)\n\n  readonly buttonStyled = input(false, { transform: booleanAttribute })\n  readonly buttonSize = input<DropdownButtonSize>('normal')\n  readonly buttonDirection = input<DropdownDirection>('vertical')\n\n  readonly transcriptionWidgetOpened = input<boolean>(undefined)\n\n  readonly videoFilesRemoved = output()\n  readonly videoRemoved = output()\n  readonly videoUnblocked = output()\n  readonly videoBlocked = output()\n  readonly videoAccountMuted = output()\n  readonly transcodingCreated = output()\n  readonly modalOpened = output()\n  readonly videoExistsInPlaylistChange = output()\n\n  readonly showTranscriptionWidget = output()\n  readonly hideTranscriptionWidget = output()\n\n  videoActions: DropdownAction<{ video: Video }>[][] = []\n\n  dropdownOpened = false\n\n  private hasMutedAccount = false\n\n  get user () {\n    return this.authService.getUser()\n  }\n\n  ngOnChanges () {\n    const playlistAdd = this.playlistAdd()\n    if (playlistAdd) playlistAdd.reload()\n\n    this.buildActions()\n  }\n\n  isUserLoggedIn () {\n    return this.authService.isLoggedIn()\n  }\n\n  // ---------------------------------------------------------------------------\n  // Show modals\n  // ---------------------------------------------------------------------------\n\n  showDownloadModal () {\n    this.modalOpened.emit()\n\n    const video = this.video()\n    const obs = video instanceof VideoDetails\n      ? of(video)\n      : this.videoService.getVideo({ videoId: video.uuid })\n\n    obs.subscribe((videoDetails: VideoDetails) => {\n      this.videoDownloadModal().show(videoDetails, this.videoCaptions())\n    })\n  }\n\n  showReportModal () {\n    this.modalOpened.emit()\n\n    this.videoReportModal().show()\n  }\n\n  showBlockModal () {\n    this.modalOpened.emit()\n\n    this.videoBlockModal().show([ this.video() ])\n  }\n\n  // ---------------------------------------------------------------------------\n  // Actions checker\n  // ---------------------------------------------------------------------------\n\n  isVideoUpdatable () {\n    if (!this.user) return false\n\n    return this.video().isUpdatableBy(this.user)\n  }\n\n  isVideoEditable () {\n    if (!this.user) return false\n\n    return this.video().isEditableBy(this.user, this.serverService.getHTMLConfig().videoStudio.enabled)\n  }\n\n  isVideoStatsAvailable () {\n    if (!this.user) return false\n\n    const video = this.video()\n    return video.isLocal && video.isOwnerOrHasSeeAllVideosRight(this.user)\n  }\n\n  isVideoRemovable () {\n    if (!this.user) return false\n\n    return this.video().isRemovableBy(this.user)\n  }\n\n  isVideoBlockable () {\n    if (!this.user) return false\n\n    return this.video().isBlockableBy(this.user)\n  }\n\n  isVideoUnblockable () {\n    if (!this.user) return false\n\n    return this.video().isUnblockableBy(this.user)\n  }\n\n  isVideoLiveInfoAvailable () {\n    if (!this.user) return false\n\n    return this.video().isLiveInfoAvailableBy(this.user)\n  }\n\n  canGenerateTranscription () {\n    if (!this.user) return false\n\n    return this.video().canGenerateTranscription(this.user, this.serverService.getHTMLConfig().videoTranscription.enabled)\n  }\n\n  // ---------------------------------------------------------------------------\n\n  isVideoDownloadableByAnonymous () {\n    const video = this.video()\n    return (\n      video &&\n      video.isLive !== true &&\n      video instanceof VideoDetails &&\n      video.downloadEnabled\n    )\n  }\n\n  isVideoDownloadableByUser () {\n    if (!this.user) return false\n\n    const video = this.video()\n    return (\n      video &&\n      video.isLive !== true &&\n      video.isOwnerOrHasSeeAllVideosRight(this.user)\n    )\n  }\n\n  // ---------------------------------------------------------------------------\n\n  canVideoBeDuplicated () {\n    if (!this.user) return false\n\n    const video = this.video()\n    return !video.isLive && video.canBeDuplicatedBy(this.user)\n  }\n\n  isVideoAccountMutable () {\n    if (!this.user) return false\n\n    return this.video().account.id !== this.user.account.id\n  }\n\n  canRemoveVideoFiles () {\n    if (!this.user) return false\n\n    return this.video().canRemoveAllHLSOrWebFiles(this.user)\n  }\n\n  canRunTranscoding () {\n    if (!this.user) return false\n\n    return this.video().canRunTranscoding(this.user)\n  }\n\n  // ---------------------------------------------------------------------------\n  // Action handlers\n  // ---------------------------------------------------------------------------\n\n  async unblockVideo () {\n    const confirmMessage = $localize`Do you really want to unblock ${this.video().name}? It will be available again in the videos list.`\n\n    const res = await this.confirmService.confirm(confirmMessage, $localize`Unblock ${this.video().name}`)\n    if (res === false) return\n\n    this.videoBlocklistService.unblockVideo(this.video().id)\n      .subscribe({\n        next: () => {\n          const video = this.video()\n          this.notifier.success($localize`Video ${video.name} unblocked.`)\n\n          video.blacklisted = false\n          video.blacklistedReason = null\n\n          this.videoUnblocked.emit()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  async removeVideo () {\n    this.modalOpened.emit()\n\n    let message = $localize`Do you really want to delete ${this.video().name}?`\n    const video = this.video()\n    if (video.isLive) {\n      message += ' ' + $localize`The live stream will be automatically terminated and replays won't be saved.`\n    }\n\n    const res = await this.confirmService.confirm(message, $localize`Delete ${video.name}`)\n    if (res === false) return\n\n    this.videoService.removeVideo(video.id)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Video ${this.video().name} deleted.`)\n          this.videoRemoved.emit()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  duplicateVideo () {\n    this.redundancyService.addVideoRedundancy(this.video())\n      .subscribe({\n        next: () => {\n          const message = $localize`${this.video().name} will be duplicated by your platform.`\n          this.notifier.success(message)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  muteVideoAccount () {\n    const params = { nameWithHost: Actor.CREATE_BY_STRING(this.video().account.name, this.video().account.host) }\n\n    this.blocklistService.blockAccountByUser(params)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Account ${params.nameWithHost} muted.`)\n          this.hasMutedAccount = true\n          this.videoAccountMuted.emit()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  unmuteVideoAccount () {\n    const params = { nameWithHost: Actor.CREATE_BY_STRING(this.video().account.name, this.video().account.host) }\n\n    this.blocklistService.unblockAccountByUser(params)\n      .subscribe({\n        next: () => {\n          this.hasMutedAccount = false\n          this.notifier.success($localize`Account ${params.nameWithHost} unmuted.`)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  async removeVideoFiles (video: Video, type: 'hls' | 'web-videos') {\n    const confirmMessage = $localize`Do you really want to remove \"${this.video().name}\" files?`\n\n    const res = await this.confirmService.confirm(confirmMessage, $localize`Remove \"${this.video().name}\" files`)\n    if (res === false) return\n\n    this.videoService.removeVideoFiles([ video.id ], type)\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Removed files of ${video.name}.`)\n          this.videoFilesRemoved.emit()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  runTranscoding (video: Video, type: 'hls' | 'web-video') {\n    this.videoService.runTranscoding({ videos: [ video ], type })\n      .subscribe({\n        next: () => {\n          this.notifier.success($localize`Transcoding job created for \"${video.name}\".`)\n          this.transcodingCreated.emit()\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  generateCaption (video: Video) {\n    this.videoCaptionService.generateCaption({ videos: [ video ] })\n      .subscribe({\n        next: result => {\n          if (result.success) this.notifier.success($localize`Transcription job created for \"${video.name}\".`)\n          else if (result.alreadyBeingTranscribed) this.notifier.info($localize`This video is already being transcribed.`)\n          else if (result.alreadyHasCaptions) this.notifier.info($localize`This video already has captions.`)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  onVideoBlocked () {\n    this.videoBlocked.emit()\n  }\n\n  getPlaylistDropdownPlacement () {\n    if (this.screenService.isInSmallView()) {\n      return 'bottom-right auto'\n    }\n\n    return 'bottom-left bottom-right auto'\n  }\n\n  private buildActions () {\n    this.videoActions = [\n      [\n        {\n          label: $localize`Save to playlist`,\n          handler: () => this.playlistDropdown().toggle(),\n          isDisplayed: () => this.authService.isLoggedIn() && this.displayOptions().playlist,\n          iconName: 'playlist-add'\n        }\n      ],\n      [ // public actions regarding the video\n        {\n          label: $localize`Download`,\n          handler: () => this.showDownloadModal(),\n          isDisplayed: () => {\n            if (!this.displayOptions().download) return false\n\n            return this.isVideoDownloadableByAnonymous() || this.isVideoDownloadableByUser()\n          },\n          iconName: 'download',\n          ownerOrModeratorPrivilege: () => {\n            if (!this.actionAvailabilityHint()) return undefined\n            if (this.isVideoDownloadableByAnonymous()) return undefined\n\n            return $localize`This option is visible only to you`\n          }\n        },\n        {\n          label: $localize`Show transcription`,\n          handler: () => this.showTranscriptionWidget.emit(),\n          isDisplayed: () => {\n            if (!this.displayOptions().transcriptionWidget) return false\n            if (this.transcriptionWidgetOpened()) return false\n\n            const videoCaptions = this.videoCaptions()\n            return Array.isArray(videoCaptions) && videoCaptions.length !== 0\n          },\n          iconName: 'video-lang'\n        },\n        {\n          label: $localize`Hide transcription`,\n          handler: () => this.hideTranscriptionWidget.emit(),\n          isDisplayed: () => {\n            if (!this.displayOptions().transcriptionWidget) return false\n\n            return this.transcriptionWidgetOpened() === true\n          },\n          iconName: 'video-lang'\n        }\n      ],\n      [ // private actions regarding the video\n        {\n          label: $localize`Live information`,\n          linkBuilder: ({ video }) => [ '/videos/manage', video.shortUUID, 'live-settings' ],\n          isDisplayed: () => this.displayOptions().liveInfo && this.isVideoLiveInfoAvailable(),\n          iconName: 'live'\n        },\n        {\n          label: $localize`Manage`,\n          linkBuilder: ({ video }) => [ '/videos/manage', video.shortUUID ],\n          iconName: 'film',\n          isDisplayed: () => this.authService.isLoggedIn() && this.displayOptions().update && this.isVideoUpdatable()\n        },\n        {\n          label: $localize`Block`,\n          handler: () => this.showBlockModal(),\n          iconName: 'no',\n          isDisplayed: () => this.authService.isLoggedIn() && this.displayOptions().blacklist && this.isVideoBlockable()\n        },\n        {\n          label: $localize`Unblock`,\n          handler: () => this.unblockVideo(),\n          iconName: 'undo',\n          isDisplayed: () => this.authService.isLoggedIn() && this.displayOptions().blacklist && this.isVideoUnblockable()\n        },\n        {\n          label: $localize`Mirror`,\n          handler: () => this.duplicateVideo(),\n          isDisplayed: () => this.authService.isLoggedIn() && this.displayOptions().duplicate && this.canVideoBeDuplicated(),\n          iconName: 'cloud-download'\n        },\n        {\n          label: $localize`Delete`,\n          handler: () => this.removeVideo(),\n          isDisplayed: () => this.authService.isLoggedIn() && this.displayOptions().delete && this.isVideoRemovable(),\n          iconName: 'delete'\n        },\n        {\n          label: $localize`Report`,\n          handler: () => this.showReportModal(),\n          isDisplayed: () => this.authService.isLoggedIn() && this.displayOptions().report,\n          iconName: 'flag'\n        }\n      ],\n      [\n        {\n          label: $localize`Run HLS transcoding`,\n          handler: ({ video }) => this.runTranscoding(video, 'hls'),\n          isDisplayed: () => this.displayOptions().transcoding && this.canRunTranscoding(),\n          iconName: 'cog'\n        },\n        {\n          label: $localize`Run Web Video transcoding`,\n          handler: ({ video }) => this.runTranscoding(video, 'web-video'),\n          isDisplayed: () => this.displayOptions().transcoding && this.canRunTranscoding(),\n          iconName: 'cog'\n        },\n        {\n          label: $localize`Delete HLS files`,\n          handler: ({ video }) => this.removeVideoFiles(video, 'hls'),\n          isDisplayed: () => this.displayOptions().removeFiles && this.canRemoveVideoFiles(),\n          iconName: 'delete'\n        },\n        {\n          label: $localize`Delete Web Video files`,\n          handler: ({ video }) => this.removeVideoFiles(video, 'web-videos'),\n          isDisplayed: () => this.displayOptions().removeFiles && this.canRemoveVideoFiles(),\n          iconName: 'delete'\n        }\n      ],\n      [\n        {\n          label: $localize`Generate caption`,\n          handler: ({ video }) => this.generateCaption(video),\n          isDisplayed: () => this.displayOptions().generateTranscription && this.canGenerateTranscription(),\n          iconName: 'video-lang'\n        }\n      ],\n      [ // actions regarding the account/its server\n        {\n          label: $localize`Mute account`,\n          handler: () => this.muteVideoAccount(),\n          isDisplayed: () => this.authService.isLoggedIn() && this.displayOptions().mute && this.isVideoAccountMutable(),\n          iconName: 'no'\n        },\n        {\n          label: $localize`Unmute account`,\n          handler: () => this.unmuteVideoAccount(),\n          isDisplayed: () => {\n            return this.authService.isLoggedIn() && this.displayOptions().mute && this.isVideoAccountMutable() && this.hasMutedAccount\n          },\n          iconName: 'undo'\n        }\n      ]\n    ]\n\n    this.videoActions = this.videoActions.concat(this.moreActions())\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { Component, OnChanges, inject, input, viewChild } from '@angular/core'\nimport { RouterLink } from '@angular/router'\nimport { AuthService, ServerService } from '@app/core'\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap'\nimport { SearchTargetType } from '@peertube/peertube-models'\nimport { GlobalIconComponent } from '../shared-icons/global-icon.component'\nimport { ButtonComponent } from '../shared-main/buttons/button.component'\n\n@Component({\n  selector: 'my-actor-host',\n  templateUrl: 'actor-host.component.html',\n  styleUrls: [ 'actor-host.component.scss' ],\n  imports: [ CommonModule, NgbDropdownModule, GlobalIconComponent, ButtonComponent, RouterLink ]\n})\nexport class ActorHostComponent implements OnChanges {\n  readonly auth = inject(AuthService)\n  readonly server = inject(ServerService)\n\n  readonly dropdown = viewChild('dropdown')\n\n  readonly host = input.required<string>()\n\n  title: string\n  searchTarget: SearchTargetType\n\n  ngOnChanges () {\n    this.title = $localize`Get more information on ${this.host()}`\n\n    const config = this.server.getHTMLConfig()\n\n    const useSearchIndex = this.auth.isLoggedIn()\n      ? config.search.remoteUri.users\n      : config.search.remoteUri.anonymous\n\n    this.searchTarget = useSearchIndex\n      ? 'search-index'\n      : 'local'\n  }\n}\n","<div\n  ngbDropdown autoClose=\"outside\" placement=\"bottom-end auto\" container=\"body\"\n  #dropdown=\"ngbDropdown\"\n>\n  <button class=\"host button-unstyle ellipsis\" ngbDropdownToggle [title]=\"title\" type=\"button\">\n    <svg class=\"left\" width=\"8\" height=\"19\" viewBox=\"0 0 8 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M0 19V0L7.45757 8.85586C7.77102 9.22809 7.77102 9.77191 7.45757 10.1441L0 19Z\"/>\n    </svg>\n\n    {{ host() }}\n\n    <svg class=\"right\" width=\"9\" height=\"19\" viewBox=\"0 0 9 19\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"m 8.0900763,0 h -7.08835 C 0.19446632,0 -0.28009268,0.907181 0.18029632,1.5703 L 5.4485063,9.15841 c 0.24316,0.35023 0.23751,0.81611 -0.01406,1.16039 L 0.25209632,17.41 c -0.482855,0.6607 -0.01097,1.59 0.80737998,1.59 h 7.0306 z\"/>\n    </svg>\n  </button>\n\n  <div ngbDropdownMenu class=\"content\">\n    <strong class=\"question mb-3\" i18n>What is it?</strong>\n\n    <div class=\"answer mb-3\">\n      This video comes from <a [href]=\"'https://' + host()\" target=\"_blank\" rel=\"noopener noreferrer\">{{ host() }} <my-global-icon iconName=\"external-link\"></my-global-icon></a> platform, to which we have subscribed.\n    </div>\n\n    <a (click)=\"dropdown.close()\" i18n class=\"mt-3 mb-3 d-block peertube-button-link secondary-button\" routerLink=\"/about/follows\">Show all our subscriptions</a>\n\n    <my-button (click)=\"dropdown.close()\" i18n class=\"d-block\" theme=\"primary\" ptRouterLink=\"/search\" [ptQueryParams]=\"{ 'host': host(), 'searchTarget': searchTarget }\">More {{ host() }} content</my-button>\n  </div>\n</div>\n","<div class=\"video-miniature\" [ngClass]=\"getClasses()\" (mouseenter)=\"loadActions()\" (focusin)=\"loadActions()\">\n\n  <my-video-thumbnail\n    [ariaLabel]=\"getAriaLabel()\" [blur]=\"hasNSFWBlur()\"\n    [video]=\"video()\" [videoRouterLink]=\"videoRouterLink\" [videoHref]=\"videoHref\" [videoTarget]=\"videoTarget\"\n    [displayWatchLaterPlaylist]=\"isWatchLaterPlaylistDisplayed()\" [inWatchLaterPlaylist]=\"inWatchLaterPlaylist\" (watchLaterClick)=\"onWatchLaterClick($event)\"\n  >\n    <!-- Don't use @if that seems broken with content projection (Angular 19.1) -->\n    <ng-container ngProjectAs=\"label-warning\" *ngIf=\"displayOptions().privacyLabel && isUnlistedVideo()\" i18n>Unlisted</ng-container>\n    <ng-container ngProjectAs=\"label-danger\" *ngIf=\"displayOptions().privacyLabel && isPrivateVideo()\" i18n>Private</ng-container>\n    <ng-container ngProjectAs=\"label-danger\" *ngIf=\"displayOptions().privacyLabel && isPasswordProtectedVideo()\" i18n>Password protected</ng-container>\n  </my-video-thumbnail>\n\n  <ng-template #nsfwWarningButton>\n    <button\n      type=\"button\" class=\"nsfw-warning button-unstyle ms-auto ps-1\"\n      *ngIf=\"hasNSFWWarning()\" [attr.aria-label]=\"nsfwTooltip\" [ngbTooltip]=\"nsfwTooltip\"\n    >\n      <my-global-icon iconName=\"eye-close\"></my-global-icon>\n    </button>\n  </ng-template>\n\n  <div class=\"video-info\">\n    <div *ngIf=\"displayOptions().avatar || displayOptions().by\" class=\"owner min-width-0\">\n      @if (displayOptions().avatar) {\n\n        @if (displayOwnerVideoChannel()) {\n          <my-actor-avatar\n            [title]=\"channelLinkTitle\" actorType=\"channel\" [size]=\"actorImageSize()\"\n            [actor]=\"video().channel\" [internalHref]=\"[ '/c', video().byVideoChannel ]\"\n          ></my-actor-avatar>\n        } @else if (displayOwnerAccount()) {\n          <my-actor-avatar\n            [title]=\"channelLinkTitle\" actorType=\"account\" [size]=\"actorImageSize()\"\n            [actor]=\"video().account\"  [internalHref]=\"[ '/c', video().byVideoChannel ]\"\n          ></my-actor-avatar>\n        }\n      }\n\n      <div class=\"owner-container\" *ngIf=\"displayOptions().by\">\n        <my-link\n          class=\"owner-label ellipsis\"\n          [internalLink]=\"ownerRouterLink\" [href]=\"ownerHref\" [target]=\"ownerTarget\" inheritParentStyle=\"true\"\n          [ariaLabel]=\"getAriaLabel()\"\n          [title]=\"displayOwnerAccount() ? authorAccount : authorChannel\"\n        >\n          @if (displayOwnerAccount()) {\n            {{ authorAccount }}\n          } @else if (displayOwnerVideoChannel()) {\n            {{ authorChannel }}\n          }\n        </my-link>\n\n        <my-actor-host *ngIf=\"!video().isLocal\" [host]=\"video().account.host\"></my-actor-host>\n\n        @if (!displayAsRow()) {\n          <ng-container *ngTemplateOutlet=\"nsfwWarningButton\"></ng-container>\n        }\n      </div>\n    </div>\n\n    <div class=\"video-name-container\">\n      <my-link\n        [internalLink]=\"videoRouterLink\" [href]=\"videoHref\" [target]=\"videoTarget\" inheritParentStyle=\"true\"\n        [ariaLabel]=\"getAriaLabel()\"\n        [title]=\"video().name\" class=\"video-name\" className=\"ellipsis-multiline-2\"\n      >\n        {{ video().name }}\n      </my-link>\n\n      <div class=\"video-actions\">\n        <my-video-actions-dropdown\n          *ngIf=\"showActions\" [video]=\"video()\" [displayOptions]=\"videoActionsDisplayOptions()\" placement=\"bottom-left bottom-right left auto\"\n          (videoRemoved)=\"onVideoRemoved()\" (videoBlocked)=\"onVideoBlocked()\" (videoUnblocked)=\"onVideoUnblocked()\" (videoAccountMuted)=\"onVideoAccountMuted()\"\n        ></my-video-actions-dropdown>\n      </div>\n\n      @if (displayAsRow() || (!displayOptions().avatar && !displayOptions().by)) {\n        <ng-container *ngTemplateOutlet=\"nsfwWarningButton\"></ng-container>\n      }\n    </div>\n\n    <div class=\"date-and-views\">\n      <my-date-toggle *ngIf=\"displayOptions().date\" [date]=\"video().publishedAt\"></my-date-toggle>\n\n      <span class=\"views\">\n        <ng-container *ngIf=\"displayOptions().date && displayOptions().views\"> • </ng-container>\n\n        <my-video-views-counter *ngIf=\"displayOptions().views\" [isLive]=\"video().isLive\" [viewers]=\"video().viewers\" [views]=\"video().views\"></my-video-views-counter>\n      </span>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common'\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n  booleanAttribute,\n  inject,\n  input,\n  numberAttribute,\n  output\n} from '@angular/core'\nimport { AuthService, ScreenService, ServerService, User } from '@app/core'\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap'\nimport { HTMLServerConfig, VideoPlaylistType, VideoPrivacy } from '@peertube/peertube-models'\nimport { switchMap } from 'rxjs/operators'\nimport { LinkType } from '../../../types/link.type'\nimport { ActorAvatarComponent } from '../shared-actor-image/actor-avatar.component'\nimport { GlobalIconComponent } from '../shared-icons/global-icon.component'\nimport { LinkComponent } from '../shared-main/common/link.component'\nimport { DateToggleComponent } from '../shared-main/date/date-toggle.component'\nimport { Video } from '../shared-main/video/video.model'\nimport { VideoService } from '../shared-main/video/video.service'\nimport { VideoThumbnailComponent } from '../shared-thumbnail/video-thumbnail.component'\nimport { VideoPlaylistService } from '../shared-video-playlist/video-playlist.service'\nimport { VideoViewsCounterComponent } from '../shared-video/video-views-counter.component'\nimport { ActorHostComponent } from '../standalone-actor/actor-host.component'\nimport { VideoActionsDisplayType, VideoActionsDropdownComponent } from './video-actions-dropdown.component'\n\nexport type MiniatureDisplayOptions = {\n  date?: boolean\n  views?: boolean\n  avatar?: boolean\n  privacyLabel?: boolean\n\n  by?: boolean\n  forceChannelInBy?: boolean\n}\n\n@Component({\n  selector: 'my-video-miniature',\n  styleUrls: [ './video-miniature.component.scss' ],\n  templateUrl: './video-miniature.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    VideoThumbnailComponent,\n    ActorAvatarComponent,\n    LinkComponent,\n    DateToggleComponent,\n    VideoViewsCounterComponent,\n    VideoActionsDropdownComponent,\n    ActorHostComponent,\n    GlobalIconComponent,\n    NgbTooltipModule\n  ]\n})\nexport class VideoMiniatureComponent implements OnInit {\n  private screenService = inject(ScreenService)\n  private serverService = inject(ServerService)\n  private authService = inject(AuthService)\n  private videoPlaylistService = inject(VideoPlaylistService)\n  private videoService = inject(VideoService)\n  private cd = inject(ChangeDetectorRef)\n\n  readonly user = input.required<User>()\n  readonly video = input.required<Video>()\n\n  readonly displayOptions = input<MiniatureDisplayOptions>({\n    date: true,\n    views: true,\n    by: true,\n    avatar: true,\n    privacyLabel: false,\n    forceChannelInBy: false\n  })\n\n  readonly displayVideoActions = input(true)\n  readonly videoActionsDisplayOptions = input<VideoActionsDisplayType>({\n    playlist: true,\n    download: false,\n    update: true,\n    blacklist: true,\n    delete: true,\n    report: true,\n    duplicate: true,\n    mute: true\n  })\n\n  readonly actorImageSize = input(34, { transform: numberAttribute })\n\n  readonly displayAsRow = input(false, { transform: booleanAttribute })\n\n  readonly videoLinkType = input<LinkType>('internal')\n\n  readonly videoBlocked = output()\n  readonly videoUnblocked = output()\n  readonly videoRemoved = output()\n  readonly videoAccountMuted = output()\n\n  showActions = false\n  serverConfig: HTMLServerConfig\n\n  addToWatchLaterText: string\n  addedToWatchLaterText: string\n  inWatchLaterPlaylist: boolean\n  channelLinkTitle = ''\n\n  watchLaterPlaylist: {\n    id: number\n    playlistElementId?: number\n  }\n\n  videoRouterLink: string | any[] = []\n  videoHref: string\n  videoTarget: string\n\n  ownerRouterLink: string | any[] = []\n  ownerHref: string\n  ownerTarget: string\n\n  nsfwTooltip: string\n\n  private ownerDisplayType: 'account' | 'videoChannel'\n  private actionsLoaded = false\n\n  get preferAuthorDisplayName () {\n    return this.serverConfig.client.videos.miniature.preferAuthorDisplayName\n  }\n\n  get authorAccount () {\n    return this.preferAuthorDisplayName\n      ? this.video().account.displayName\n      : this.video().account.name\n  }\n\n  get authorChannel () {\n    return this.preferAuthorDisplayName\n      ? this.video().channel.displayName\n      : this.video().channel.name\n  }\n\n  ngOnInit () {\n    this.serverConfig = this.serverService.getHTMLConfig()\n\n    this.buildVideoLink()\n    this.buildOwnerLink()\n\n    this.setUpBy()\n\n    this.nsfwTooltip = this.videoService.buildNSFWTooltip(this.video())\n    this.channelLinkTitle = $localize`${this.video().channel.name} (channel page)`\n\n    // We rely on mouseenter to lazy load actions\n    if (this.screenService.isInTouchScreen()) {\n      this.loadActions()\n    }\n  }\n\n  private buildVideoLink () {\n    const videoLinkType = this.videoLinkType()\n    const video = this.video()\n    if (videoLinkType === 'internal' || !video.url) {\n      this.videoRouterLink = Video.buildWatchUrl(video)\n      return\n    }\n\n    if (videoLinkType === 'external') {\n      this.videoRouterLink = null\n      this.videoHref = video.url\n      this.videoTarget = '_blank'\n      return\n    }\n\n    // Lazy load\n    this.videoRouterLink = [ '/search/lazy-load-video', { url: video.url } ]\n  }\n\n  private buildOwnerLink () {\n    const video = this.video()\n\n    const linkType = this.videoLinkType()\n\n    if (linkType === 'internal' || !video.channel.url) {\n      this.ownerRouterLink = `/c/${video.byVideoChannel}`\n      return\n    }\n\n    if (linkType === 'external') {\n      this.ownerRouterLink = null\n      this.ownerHref = video.channel.url\n      this.ownerTarget = '_blank'\n      return\n    }\n\n    // Lazy load\n    this.ownerRouterLink = [ '/search/lazy-load-channel', { url: video.channel.url } ]\n  }\n\n  // ---------------------------------------------------------------------------\n\n  displayOwnerAccount () {\n    return this.ownerDisplayType === 'account'\n  }\n\n  displayOwnerVideoChannel () {\n    return this.ownerDisplayType === 'videoChannel'\n  }\n\n  isUnlistedVideo () {\n    return this.video().privacy.id === VideoPrivacy.UNLISTED\n  }\n\n  isPrivateVideo () {\n    return this.video().privacy.id === VideoPrivacy.PRIVATE\n  }\n\n  isPasswordProtectedVideo () {\n    return this.video().privacy.id === VideoPrivacy.PASSWORD_PROTECTED\n  }\n\n  getAriaLabel () {\n    return $localize`Watch video ${this.video().name}`\n  }\n\n  loadActions () {\n    if (this.actionsLoaded) return\n    if (this.displayVideoActions()) this.showActions = true\n\n    this.loadWatchLater()\n\n    this.actionsLoaded = true\n  }\n\n  onVideoBlocked () {\n    this.videoBlocked.emit()\n  }\n\n  onVideoUnblocked () {\n    this.videoUnblocked.emit()\n  }\n\n  onVideoRemoved () {\n    this.videoRemoved.emit()\n  }\n\n  onVideoAccountMuted () {\n    this.videoAccountMuted.emit()\n  }\n\n  isUserLoggedIn () {\n    return this.authService.isLoggedIn()\n  }\n\n  onWatchLaterClick (currentState: boolean) {\n    if (currentState === true) this.removeFromWatchLater()\n    else this.addToWatchLater()\n\n    this.inWatchLaterPlaylist = !currentState\n  }\n\n  addToWatchLater () {\n    const body = { videoId: this.video().id }\n\n    this.videoPlaylistService.addVideoInPlaylist(this.watchLaterPlaylist.id, body)\n      .subscribe(\n        res => {\n          this.watchLaterPlaylist.playlistElementId = res.videoPlaylistElement.id\n        }\n      )\n  }\n\n  removeFromWatchLater () {\n    this.videoPlaylistService.removeVideoFromPlaylist(\n      this.watchLaterPlaylist.id,\n      this.watchLaterPlaylist.playlistElementId,\n      this.video().id\n    )\n      .subscribe(\n        _ => {\n          // empty\n        }\n      )\n  }\n\n  isWatchLaterPlaylistDisplayed () {\n    return !this.screenService.isInTouchScreen() &&\n      this.displayVideoActions() &&\n      this.isUserLoggedIn() &&\n      this.inWatchLaterPlaylist !== undefined\n  }\n\n  getClasses () {\n    return {\n      'display-as-row': this.displayAsRow(),\n      'has-avatar': this.displayOptions().avatar\n    }\n  }\n\n  // ---------------------------------------------------------------------------\n\n  hasNSFWWarning () {\n    return this.video().isNSFWWarnedForUser(this.user(), this.serverConfig)\n  }\n\n  hasNSFWBlur () {\n    return this.video().isNSFWBlurForUser(this.user(), this.serverConfig)\n  }\n\n  // ---------------------------------------------------------------------------\n\n  private setUpBy () {\n    if (this.displayOptions().forceChannelInBy) {\n      this.ownerDisplayType = 'videoChannel'\n      return\n    }\n\n    this.ownerDisplayType = this.videoService.buildDefaultOwnerDisplayType(this.video())\n  }\n\n  private loadWatchLater () {\n    if (this.screenService.isInTouchScreen() || !this.displayVideoActions() || !this.isUserLoggedIn()) return\n\n    this.authService.userInformationLoaded\n      .pipe(switchMap(() => this.videoPlaylistService.listenToVideoPlaylistChange(this.video().id)))\n      .subscribe(existResult => {\n        const watchLaterPlaylist = this.authService.getUser().specialPlaylists.find(p => p.type === VideoPlaylistType.WATCH_LATER)\n        const existsInWatchLater = existResult.find(r => r.playlistId === watchLaterPlaylist.id)\n        this.inWatchLaterPlaylist = false\n\n        this.watchLaterPlaylist = {\n          id: watchLaterPlaylist.id\n        }\n\n        if (existsInWatchLater) {\n          this.inWatchLaterPlaylist = true\n          this.watchLaterPlaylist.playlistElementId = existsInWatchLater.playlistElementId\n        }\n\n        this.cd.markForCheck()\n      })\n\n    this.videoPlaylistService.runVideoExistsInPlaylistCheck(this.video().id)\n  }\n}\n"]}