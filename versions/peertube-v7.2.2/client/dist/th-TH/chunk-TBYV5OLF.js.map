{"version":3,"mappings":"8gBA+BA,GAAaA,KAAsB,KAA7B,GAAOA,GAAP,KAAOA,EAAsB,CACxBC,QAAUC,EAAMC,SAAQ,EACxBC,MAAQF,EAA2B,EAAE,EAE9CG,SACAC,WAEAC,aAAW,CACT,KAAKF,SAAW,KAAKD,MAAK,EAAGI,IAAIC,GAAI,CACnC,GAAMC,GAAaD,EAAEC,WACjBD,EAAEC,WACFC,EAAaC,uBAAuB,EAAE,EAE1C,MAAOC,QAAOC,OAAO,GAAIL,EAAG,CAAEM,SAAUL,CAAU,CAAE,CACtD,EAAC,CACH,EAEAM,gBAAmBC,GAAU,CAC3B,EAGFC,WAAYC,EAAmB,CAC7B,KAAKb,WAAa,MAAOa,IAAO,SAC5BC,SAASD,EAAI,EAAE,EACfA,CACN,EAEAE,iBAAkBC,EAAoB,CACpC,KAAKN,gBAAkBM,CACzB,EAEAC,mBAAiB,CACf,CAGFC,eAAa,CACX,KAAKR,gBAAgB,KAAKV,UAAU,CACtC,EAEAmB,oBAAkB,CAChB,OAAQ,KAAKpB,UAAY,IAAIqB,KAAKjB,GAAKA,EAAEU,GAAK,IAAO,KAAKb,WAAa,EAAE,CAC3E,IAAAqB,CAAA,CAzCW3B,4CAAsB,IAAA2B,CAAA,CAAtB3B,wBAAsB4B,UAAA,wBAAAC,OAAA,CAAA5B,QAAA,cAAAG,MAAA,aAAA0B,SAAA,CAAAC,EATtB,CACT,CACEC,QAASC,EACTC,YAAaC,EAAW,IAAMnC,CAAsB,EACpDoC,MAAO,GACR,CACF,EAAAC,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,2DAAAC,SAAA,QAAAA,CAAAC,EAAAC,EAAA,CAAAD,EAAA,IAjBDE,EAAA,yBAKEC,EAAA,yBAAAC,EAAA,CAAAC,MAAAC,GAAAL,EAAArC,WAAAwC,CAAA,IAAAH,EAAArC,WAAAwC,IAAA,IACAG,EAAA,iCAAiBN,GAAAnB,cAAA,CAAe,IAGjC0B,EAAA,GAAAC,CAAA,KARCC,EAAA,UAAAT,EAAA1C,QAAA,GAAqB,QAAA0C,EAAAtC,QAAA,EAIrBgD,EAAA,UAAAV,EAAArC,UAAA,EAGA8C,EAAA,SAAAT,EAAAtC,UAAAsC,EAAAtC,SAAAiD,OAAA,MAAAC,YAAA,EAUSC,EAAgBC,EAAWC,EAAAC,EAAEC,EAAcC,CAAsB,EAAAC,cAAA,KAExE,GAAO9D,GAAP+D,QAAO/D,EAAsB,eAAAgE,EAAAC,CAAA,CAAAC,CAAA,KAAAD,CAAA,IC7B/BE,EAAA,sBAAAF,CAAA,QAAAG,CAAA,CAAAnD,CAAA,GAA+BmC,EAAA,WAAAiB,EAAAC,KAAA,cAAAC,EAAAN,CAAA,CAAAC,CAAA,KAAAD,CAAA,KAWjCrB,EAAA,WAAqE4B,EAAA,GAActB,EAAA,GAAAe,CAAA,QAAAG,CAAA,CAAAnD,CAAA,GAAdwD,EAAA,EAAAC,EAAAL,EAAAM,QAAA,aAAAC,EAAAX,CAAA,CAAAC,CAAA,KAAAD,CAAA,QAAAG,CAAA,CAAAS,CAAA,GAErEjC,EAAA,cAA6FK,EAAA,mBAAA6B,EAAAC,CAAA,KAAAV,GAAAW,EAAA,QAAAC,GAASZ,EAAAa,MAAA,CAAO,KAA7GC,EAAA,KAEAjC,EAAA,ICIF,GAAakC,KAAqB,KAA5B,GAAOA,GAAP,KAAOA,EAAqB,CACxBC,SAAWC,EAAOC,CAAQ,EAEzBC,MAAQtF,EAA+B,WAAW,EAClDuF,WAAavF,EAAcwF,MAAS,EACpCC,UAAYzF,EAAcwF,MAAS,EACnCE,WAAa1F,EAAgB,EAAE,EAC/B2F,YAAc3F,EAAcwF,MAAS,EAErCI,gBAAkB5F,EAAM,EAAK,EAC7B6F,aAAe7F,EAAM,EAAK,EAE1BoE,KAAOpE,EAAsBwF,MAAS,EACtCM,cAAgB9F,EAAcwF,MAAS,EAEvCO,YAAcC,EAAM,EAE7BC,QAAqC,GACrCC,yBAA2B,GAC3BC,eAEQC,KAER,GAAI3B,WAAQ,CACV,MAAK,MAAK2B,KAEH,KAAKA,KAAKC,KAFM,EAGzB,EAEAC,UAAQ,CACN,KAAKJ,yBAA2B,KAAKR,WAAU,EAAGa,KAAK,IAAI,EAE3D,KAAKC,aAAY,CACnB,EAEAnG,aAAW,CACT,KAAKmG,aAAY,CACnB,EAEAA,cAAY,CACV,KAAKP,QAAU,CACb,YAAa,CAAC,CAAC,KAAK7B,KAAI,EACxB,iBAAkB,KAAKkB,MAAK,IAAO,UACnC,mBAAoB,KAAKA,MAAK,IAAO,YAEzC,EAEAmB,WAAYC,EAAU,CACpB,GAAIA,EAAMC,OAAOC,OAAOxD,OAAQ,CAC9B,GAAM,CAAEgD,CAAI,EAAKM,EAAMC,OAAOC,MAE9B,GAAIR,EAAKS,KAAO,KAAKlB,YAAW,EAAI,CAClC,KAAKR,SAAS2B,oHAAwC,EACtD,OACF,CAEA,GAAMC,GAAY,IAAMX,EAAKC,KAAKW,MAAM,GAAG,EAAEC,IAAG,EAChD,GAAI,KAAKvB,WAAU,EAAGwB,SAASH,EAAUI,YAAW,CAAE,IAAM,GAAO,CACjE,GAAMC,uQAAwF,KAAKlB,wBAAwB,IAC3H,KAAKf,SAAS2B,MAAMM,CAAO,EAE3B,OACF,CAEA,KAAKhB,KAAOA,EAEZ,KAAKtF,gBAAgB,KAAKsF,IAAI,CAChC,EACA,KAAKL,YAAYsB,KAAK,KAAKjB,IAAI,CACjC,EAEApB,OAAK,CACH,KAAKhE,WAAWwE,MAAS,EACzB,KAAK1E,gBAAgB0E,MAAS,EAC9B,KAAKO,YAAYsB,KAAK7B,MAAS,CACjC,EAEA1E,gBAAmBC,GAAU,CAC3B,EAGFC,WAAYoF,EAAS,CACnB,KAAKA,KAAOA,EAEP,KAAKA,OAAM,KAAKD,eAAiB,KACxC,EAEAhF,iBAAkBC,EAAoB,CACpC,KAAKN,gBAAkBM,CACzB,EAEAC,mBAAiB,CACf,GAAAI,CAAA,CA5FSyD,4CAAqB,IAAAzD,CAAA,CAArByD,wBAAqBxD,UAAA,uBAAAC,OAAA,CAAA2D,MAAA,YAAAC,WAAA,iBAAAE,UAAA,gBAAAC,WAAA,iBAAAC,YAAA,kBAAAC,gBAAA,sBAAAC,aAAA,mBAAAzB,KAAA,WAAA0B,cAAA,qBAAAwB,QAAA,CAAAvB,YAAA,eAAAnE,SAAA,CAAAC,EATrB,CACT,CACEC,QAASC,EACTC,YAAaC,EAAW,IAAMiD,CAAqB,EACnDhD,MAAO,GACR,CACF,EAAAC,CAAA,EAAAC,MAAA,EAAAC,KAAA,GAAAC,WAAA,IAAAiF,kDDH8GC,qXAfjH9E,EAAA,WAAkB,WAEd+E,EAAA,EAAAC,EAAA,wBAEAhF,EAAA,UAAM4B,EAAA,GAAkBtB,EAAA,EAExBN,EAAA,aAGEK,EAAA,kBAAAH,EAAA,OAAUH,GAAAgE,WAAA7D,CAAA,CAAkB,IAAED,EAAA,yBAAAC,EAAA,CAAAC,MAAAC,GAAAL,EAAA0D,eAAAvD,CAAA,IAAAH,EAAA0D,eAAAvD,IAAA,IAHhCI,EAAA,EAIE,EAGJyE,EAAA,EAAAE,EAAA,aAAqE,EAAAC,EAAA,gBAKvE5E,EAAA,GAAAC,CAAA,KAjB2BsB,EAAA,EAAArB,EAAA,UAAAT,EAAAwD,OAAA,EAAmB,aAAAxD,EAAAqD,cAAA,GACzBvB,EAAA,EAAArB,EAAA,OAAAT,EAAA2B,KAAA,GAEXG,EAAA,GAAAC,EAAA/B,EAAA8C,WAAA,GAIJhB,EAAA,EAAArB,EAAA,OAAAT,EAAAgD,UAAA,GAAoB,KAAAhD,EAAAgD,UAAA,GAAmB,SAAAhD,EAAAiD,WAAA,GACTvC,EAAA,UAAAV,EAAA0D,cAAA,EAIX5B,EAAA,EAAArB,EAAA,OAAAT,EAAAmD,gBAAA,QAAAnD,EAAAgC,QAAA,EAEdF,EAAA,EAAArB,EAAA,OAAAT,EAAAoD,aAAA,GAAApD,EAAAgC,QAAA,KAAApB,YAAA,ECIEwE,EAASC,EAAYC,EAAMC,EAAqBzE,EAAW0E,EAAAzE,EAAAC,CAAA,EAAAyE,OAAA;iEAAA,KAElE,GAAOhD,GAAPiD,QAAOjD,EAAqB,aAAAkD,EAAA,IAAAC,CAAA,CAAAC,EAAA,IAAAC,CAAA","names":["SelectChannelComponent","inputId","input","required","items","channels","selectedId","ngOnChanges","map","c","avatarPath","VideoChannel","GET_DEFAULT_AVATAR_URL","Object","assign","imageUrl","propagateChange","_","writeValue","id","parseInt","registerOnChange","fn","registerOnTouched","onModelChange","getSelectedChannel","find","d","selectors","inputs","features","ɵɵProvidersFeature","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtwoWayListener","$event","i0","ɵɵtwoWayBindingSet","ɵɵlistener","ɵɵelementEnd","i","ɵɵproperty","ɵɵtwoWayProperty","length","dependencies","DropdownModule","FormsModule","NgControlStatus","NgModel","CommonModule","SelectOptionsComponent","encapsulation","_SelectChannelComponent","J","o","n","ɵɵelement","u","ctx_r0","icon","K","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","filename","Q","V","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","reset","ɵɵi18n","ReactiveFileComponent","notifier","inject","Notifier","theme","inputLabel","undefined","inputName","extensions","maxFileSize","displayFilename","displayReset","buttonTooltip","fileChanged","output","classes","allowedExtensionsMessage","fileInputValue","file","name","ngOnInit","join","buildClasses","fileChange","event","target","files","size","error","extension","split","pop","includes","toLowerCase","message","emit","outputs","i18n_0","$localize","ɵɵtemplate","ReactiveFileComponent_my_global_icon_2_Template","ReactiveFileComponent_div_6_Template","ReactiveFileComponent_button_7_Template","NgClass","NgbTooltip","NgIf","GlobalIconComponent","DefaultValueAccessor","styles","_ReactiveFileComponent","ae","a","fe","b"],"ignoreList":[],"sources":["src/app/shared/shared-forms/select/select-channel.component.ts","src/app/shared/shared-forms/reactive-file.component.html","src/app/shared/shared-forms/reactive-file.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common'\nimport { Component, forwardRef, OnChanges, input } from '@angular/core'\nimport { ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms'\nimport { VideoChannel } from '@app/shared/shared-main/channel/video-channel.model'\nimport { DropdownModule } from 'primeng/dropdown'\nimport { SelectChannelItem, SelectOptionsItem } from '../../../../types/select-options-item.model'\nimport { SelectOptionsComponent } from './select-options.component'\n\n@Component({\n  selector: 'my-select-channel',\n  template: `\n  <my-select-options\n    [inputId]=\"inputId()\"\n\n    [items]=\"channels\"\n\n    [(ngModel)]=\"selectedId\"\n    (ngModelChange)=\"onModelChange()\"\n\n    [filter]=\"channels && channels.length > 5\"\n  ></my-select-options>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => SelectChannelComponent),\n      multi: true\n    }\n  ],\n  imports: [ DropdownModule, FormsModule, CommonModule, SelectOptionsComponent ]\n})\nexport class SelectChannelComponent implements ControlValueAccessor, OnChanges {\n  readonly inputId = input.required<string>()\n  readonly items = input<SelectChannelItem[]>([])\n\n  channels: SelectOptionsItem[]\n  selectedId: number\n\n  ngOnChanges () {\n    this.channels = this.items().map(c => {\n      const avatarPath = c.avatarPath\n        ? c.avatarPath\n        : VideoChannel.GET_DEFAULT_AVATAR_URL(21)\n\n      return Object.assign({}, c, { imageUrl: avatarPath })\n    })\n  }\n\n  propagateChange = (_: any) => {\n    // empty\n  }\n\n  writeValue (id: number | string) {\n    this.selectedId = typeof id === 'string'\n      ? parseInt(id, 10)\n      : id\n  }\n\n  registerOnChange (fn: (_: any) => void) {\n    this.propagateChange = fn\n  }\n\n  registerOnTouched () {\n    // Unused\n  }\n\n  onModelChange () {\n    this.propagateChange(this.selectedId)\n  }\n\n  getSelectedChannel () {\n    return (this.channels || []).find(c => c.id + '' === this.selectedId + '')\n  }\n}\n","<div class=\"root\">\n  <div class=\"button-file\" [ngClass]=\"classes\" [ngbTooltip]=\"buttonTooltip()\">\n    <my-global-icon *ngIf=\"icon()\" [iconName]=\"icon()\"></my-global-icon>\n\n    <span>{{ inputLabel() }}</span>\n\n    <input\n      type=\"file\"\n      [name]=\"inputName()\" [id]=\"inputName()\" [accept]=\"extensions()\"\n      (change)=\"fileChange($event)\" [(ngModel)]=\"fileInputValue\"\n    />\n  </div>\n\n  <div class=\"filename\" *ngIf=\"displayFilename() === true && filename\">{{ filename }}</div>\n\n  <button *ngIf=\"displayReset() && filename\" i18n class=\"reset-button reset-button-small ms-2\" (click)=\"reset()\">\n    Reset\n  </button>\n</div>\n","import { Component, forwardRef, OnChanges, OnInit, inject, input, output } from '@angular/core'\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms'\nimport { Notifier } from '@app/core'\nimport { GlobalIconName } from '@app/shared/shared-icons/global-icon.component'\nimport { GlobalIconComponent } from '../shared-icons/global-icon.component'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { NgClass, NgIf } from '@angular/common'\n\n@Component({\n  selector: 'my-reactive-file',\n  styleUrls: [ './reactive-file.component.scss' ],\n  templateUrl: './reactive-file.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ReactiveFileComponent),\n      multi: true\n    }\n  ],\n  imports: [ NgClass, NgbTooltip, NgIf, GlobalIconComponent, FormsModule ]\n})\nexport class ReactiveFileComponent implements OnInit, OnChanges, ControlValueAccessor {\n  private notifier = inject(Notifier)\n\n  readonly theme = input<'primary' | 'secondary'>('secondary')\n  readonly inputLabel = input<string>(undefined)\n  readonly inputName = input<string>(undefined)\n  readonly extensions = input<string[]>([])\n  readonly maxFileSize = input<number>(undefined)\n\n  readonly displayFilename = input(false)\n  readonly displayReset = input(false)\n\n  readonly icon = input<GlobalIconName>(undefined)\n  readonly buttonTooltip = input<string>(undefined)\n\n  readonly fileChanged = output<Blob>()\n\n  classes: { [id: string]: boolean } = {}\n  allowedExtensionsMessage = ''\n  fileInputValue: any\n\n  private file: File\n\n  get filename () {\n    if (!this.file) return ''\n\n    return this.file.name\n  }\n\n  ngOnInit () {\n    this.allowedExtensionsMessage = this.extensions().join(', ')\n\n    this.buildClasses()\n  }\n\n  ngOnChanges () {\n    this.buildClasses()\n  }\n\n  buildClasses () {\n    this.classes = {\n      'with-icon': !!this.icon(),\n      'primary-button': this.theme() === 'primary',\n      'secondary-button': this.theme() === 'secondary'\n    }\n  }\n\n  fileChange (event: any) {\n    if (event.target.files?.length) {\n      const [ file ] = event.target.files\n\n      if (file.size > this.maxFileSize()) {\n        this.notifier.error($localize`This file is too large.`)\n        return\n      }\n\n      const extension = '.' + file.name.split('.').pop()\n      if (this.extensions().includes(extension.toLowerCase()) === false) {\n        const message = $localize`PeerTube cannot handle this kind of file. Accepted extensions are ${this.allowedExtensionsMessage}.`\n        this.notifier.error(message)\n\n        return\n      }\n\n      this.file = file\n\n      this.propagateChange(this.file)\n    }\n    this.fileChanged.emit(this.file)\n  }\n\n  reset () {\n    this.writeValue(undefined)\n    this.propagateChange(undefined)\n    this.fileChanged.emit(undefined)\n  }\n\n  propagateChange = (_: any) => {\n    // empty\n  }\n\n  writeValue (file: any) {\n    this.file = file\n\n    if (!this.file) this.fileInputValue = null\n  }\n\n  registerOnChange (fn: (_: any) => void) {\n    this.propagateChange = fn\n  }\n\n  registerOnTouched () {\n    // Unused\n  }\n}\n"]}