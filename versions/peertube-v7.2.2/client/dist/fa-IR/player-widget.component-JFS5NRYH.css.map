{
  "version": 3,
  "sources": ["src/sass/include/_mixins.scss", "src/app/+video-watch/shared/player-widgets/player-widget.component.scss", "src/sass/include/_variables.scss", "node_modules/bootstrap/scss/vendor/_rfs.scss"],
  "sourcesContent": ["@use 'sass:math';\n@use 'sass:color';\n@use '_variables' as *;\n@import '_bootstrap-mixins';\n\n@mixin underline-primary {\n  text-decoration: underline !important;\n  text-decoration-color: pvar(--border-primary) !important;\n  text-underline-offset: 0.25em !important;\n  text-decoration-thickness: 0.15em !important;\n}\n\n@mixin section-label {\n  color: pvar(--fg-300);\n  font-size: 14px;\n  margin-bottom: 15px;\n  font-weight: $font-bold;\n  letter-spacing: 1px;\n\n  @media screen and (max-width: $mobile-view) {\n    font-size: 12px;\n    margin-bottom: 5px;\n  }\n}\n\n@mixin disable-default-a-behaviour {\n  &,\n  &:hover,\n  &:focus,\n  &:active {\n    text-decoration: none;\n  }\n\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n}\n\n@mixin disable-outline {\n  &:focus:not(:focus-visible) {\n    outline: none !important;\n  }\n}\n\n@mixin ellipsis {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n@mixin muted-1 {\n  color: pvar(--fg-300) !important;\n}\n\n@mixin muted-2 {\n  color: pvar(--fg-200) !important;\n\n  a,\n  .fake-link {\n    color: pvar(--fg);\n    text-decoration: underline;\n  }\n}\n\n@mixin fade-text ($fade-after, $background-color) {\n  position: relative;\n  overflow: hidden;\n\n  &::after {\n    content: '';\n    pointer-events: none;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    background: linear-gradient(transparent $fade-after, $background-color);\n  }\n}\n\n@mixin peertube-word-wrap ($with-hyphen: true) {\n  word-break: break-word;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n\n  @if $with-hyphen {\n    hyphens: auto;\n  }\n}\n\n@mixin apply-svg-color ($color) {\n  ::ng-deep .feather,\n  ::ng-deep .material,\n  ::ng-deep .misc {\n    color: $color;\n  }\n}\n\n@mixin fill-path-svg-color ($color) {\n  ::ng-deep svg {\n    path {\n      fill: $color;\n    }\n  }\n}\n\n@mixin fill-svg-color ($color) {\n  ::ng-deep svg {\n    fill: $color;\n  }\n}\n\n@mixin rounded-line-height-1-5 ($font-size) {\n  line-height: calc(#{$font-size} + #{math.round(math.div($font-size, 2))});\n}\n\n@mixin icon ($size) {\n  display: inline-block;\n  background-repeat: no-repeat;\n  background-size: contain;\n  width: $size;\n  height: $size;\n  vertical-align: middle;\n  cursor: pointer;\n}\n\n@mixin global-icon-size ($size) {\n  display: inline-block;\n  width: $size;\n  height: $size;\n  line-height: $size;\n}\n\n@mixin responsive-width ($width) {\n  width: $width;\n\n  @media screen and (max-width: #{$width - 30px}) {\n    width: 100%;\n  }\n}\n\n@mixin actor-counters ($separator-margin: 10px) {\n  color: pvar(--fg-300);\n  display: flex;\n  align-items: center;\n\n  > *:not(:last-child)::after {\n    content: 'â€¢';\n    margin: 0 $separator-margin;\n    color: pvar(--primary);\n  }\n}\n\n@mixin row-blocks ($column-responsive: true, $min-height: 130px, $separator: true) {\n  display: flex;\n  min-height: $min-height;\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n\n  @if $separator {\n    border-bottom: 1px solid pvar(--input-border-color);\n  }\n\n  @media screen and (max-width: $small-view) {\n    @if $column-responsive {\n      flex-direction: column;\n      height: auto;\n      align-items: center;\n    } @else {\n      min-height: initial;\n      padding-bottom: 10px;\n      margin-bottom: 10px;\n    }\n  }\n}\n\n@mixin dropdown-with-icon-item {\n  padding: pvar(--input-y-padding) 15px;\n\n  my-global-icon {\n    width: 22px;\n    opacity: .7;\n    position: relative;\n    top: -2px;\n\n    @include margin-right(10px);\n  }\n}\n\n@mixin divider($color: pvar(--bg-secondary-400), $background: pvar(--bg)) {\n  width: 95%;\n  border-top: .05rem solid $color;\n  height: .05rem;\n  text-align: center;\n  display: block;\n  position: relative;\n\n  &[data-content] {\n    margin: .8rem 0;\n\n    &::after {\n      background: $background;\n      color: $color;\n      content: attr(data-content);\n      display: inline-block;\n      font-size: .7rem;\n      padding: 0 .4rem;\n      transform: translateY(-.65rem);\n    }\n  }\n}\n\n// applies ratio (default to 16:9) to a child element (using $selector) only using\n// an immediate's parent size. This allows to set a ratio without explicit\n// dimensions, as width/height cannot be computed from each other.\n@mixin block-ratio ($selector: 'div', $inverted-ratio: math.div(9, 16)) {\n  $padding-percent: math.percentage($inverted-ratio);\n\n  position: relative;\n  height: 0;\n  width: 100%;\n  padding-top: $padding-percent;\n\n  #{$selector} {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n\n    @content;\n  }\n}\n\n@mixin play-icon ($width, $height) {\n  width: 0;\n  height: 0;\n\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%) scale(0.5);\n\n  border-top: #{math.div($height, 2)} solid transparent;\n  border-bottom: #{math.div($height, 2)} solid transparent;\n\n  border-left: $width solid #F4F4F5;\n}\n\n@mixin on-small-main-col () {\n  @media screen and (max-width: $small-view) {\n    @content;\n  }\n}\n\n@mixin on-mobile-main-col () {\n  @media screen and (max-width: $mobile-view) {\n    @content;\n  }\n}\n\n// ---------------------------------------------------------------------------\n\n@mixin margin ($arg1: null, $arg2: null, $arg3: null, $arg4: null) {\n  @if $arg2 == null and $arg3 == null and $arg4 == null {\n    @include margin-original($arg1, $arg1, $arg1, $arg1);\n  } @else if $arg3 == null and $arg4 == null {\n    @include margin-original($arg1, $arg2, $arg1, $arg2);\n  } @else if $arg4 == null {\n    @include margin-original($arg1, $arg2, $arg3, $arg2);\n  } @else {\n    @include margin-original($arg1, $arg2, $arg3, $arg4);\n  }\n}\n\n@mixin margin-original ($block-start, $inline-end, $block-end, $inline-start) {\n  @include margin-left($inline-start);\n  @include margin-right($inline-end);\n  @include margin-top($block-start);\n  @include margin-bottom($block-end);\n}\n\n@mixin margin-left ($value) {\n  @include rfs($value, margin-inline-start);\n}\n\n@mixin margin-right ($value) {\n  @include rfs($value, margin-inline-end);\n}\n\n// ---------------------------------------------------------------------------\n\n@mixin padding-original ($block-start, $inline-end, $block-end, $inline-start) {\n  @include padding-left($inline-start);\n  @include padding-right($inline-end);\n  @include padding-top($block-start);\n  @include padding-bottom($block-end);\n}\n\n@mixin padding ($arg1: null, $arg2: null, $arg3: null, $arg4: null) {\n  @if $arg2 == null and $arg3 == null and $arg4 == null {\n    @include padding-original($arg1, $arg1, $arg1, $arg1);\n  } @else if $arg3 == null and $arg4 == null {\n    @include padding-original($arg1, $arg2, $arg1, $arg2);\n  } @else if $arg4 == null {\n    @include padding-original($arg1, $arg2, $arg3, $arg2);\n  } @else {\n    @include padding-original($arg1, $arg2, $arg3, $arg4);\n  }\n}\n\n@mixin padding-left ($value) {\n  @include rfs($value, padding-inline-start);\n}\n\n@mixin padding-right ($value) {\n  @include rfs($value, padding-inline-end);\n}\n\n// ---------------------------------------------------------------------------\n\n\n/**\n *\n * inset-inline properties are not supported by iOS < 14.5\n *\n */\n\n@mixin right ($value) {\n  @supports (inset-inline-end: $value) {\n    inset-inline-end: $value;\n  }\n\n  @supports not (inset-inline-end: $value) {\n    right: $value;\n  }\n}\n\n\n@mixin left ($value) {\n  @supports (inset-inline-start: $value) {\n    inset-inline-start: $value;\n  }\n\n  @supports not (inset-inline-start: $value) {\n    left: $value;\n  }\n}\n\n", "@use '_variables' as *;\n@use '_mixins' as *;\n\n.widget-root {\n  position: relative;\n  min-width: 200px;\n  width: 25vw;\n  max-width: 470px;\n  height: 66vh;\n  background-color: pvar(--bg);\n  overflow-y: auto;\n  border-bottom: 1px solid $separator-border-color;\n\n  .widget-header {\n    background-color: pvar(--bg-secondary-400);\n    padding: 1rem 2rem;\n  }\n\n  .widget-content-padded {\n    padding: 0 2rem;\n  }\n\n  .widget-title {\n    font-size: 18px;\n    font-weight: $font-semibold;\n\n    .pt-badge {\n      @include margin-left(5px);\n    }\n  }\n\n  .widget-content {\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n  }\n}\n\n", "@use 'sass:math';\n@use 'sass:color';\n@use 'sass:map';\n\n$medium-view: 1000px;\n$small-view: 800px;\n$mobile-view: 500px;\n\n$main-fonts: 'Source Sans Pro', sans-serif;\n$font-regular: 400;\n$font-semibold: 600;\n$font-bold: 700;\n$line-height-normal: 1.2;\n\n$support-button: inherit;\n$support-button-heart: #e83e8c;\n\n$red: #dc3545;\n$green: #198754;\n$white: #fff;\n\n$button-font-size: 1rem;\n\n$header-height: 94px;\n$header-height-small-view: 78px;\n$header-height-mobile-view: 128px;\n$header-height-mobile-view-without-search: 80px;\n$header-mobile-msg-height: 48px;\n\n$menu-width: 248px;\n$menu-collapsed-width: 50px;\n$menu-margin-left: 2rem;\n$menu-overlay-view: 1200px;\n\n$banner-inverted-ratio: math.div(1, 6);\n\n$max-channels-width: 1200px;\n\n$footer-height: 30px;\n$footer-margin: 30px;\n\n// ---------------------------------------------------------------------------\n\n$miniature-fs-small: 0.75rem;\n$miniature-fs-medium: 0.875rem;\n$miniature-fs-big: 1rem;\n\n$miniature-fs-row-small: 0.875rem;\n$miniature-fs-row-medium: 1rem;\n$miniature-fs-row-big: 1.25rem;\n\n$miniature-fs-mobile-small: 0.875rem;\n$miniature-fs-mobile-medium: 0.875rem;\n$miniature-fs-mobile-big: 1rem;\n\n$video-thumbnail-height: 153px;\n$video-thumbnail-width: 280px;\n$video-thumbnail-medium-height: 114px;\n$video-thumbnail-medium-width: 201px;\n$video-thumbnail-small-height: 71px;\n$video-thumbnail-small-width: 125px;\n\n// ---------------------------------------------------------------------------\n\n$instance-img-radius: 31%;\n$channel-avatar-radius: 5px;\n$account-avatar-radius: 50%;\n\n// ---------------------------------------------------------------------------\n\n$theater-bottom-space: 115px;\n$player-portrait-bottom-space: 50px;\n\n$sub-menu-margin-bottom: 30px;\n$sub-menu-margin-bottom-small-view: 10px;\n\n$focus-box-shadow-dimensions: 0 0 0 .2rem;\n\n$form-input-font-size: 16px;\n\n$video-watch-info-margin-left: 44px;\n\n// ---------------------------------------------------------------------------\n// Theme variables with key check using pvar() function\n// ---------------------------------------------------------------------------\n\n$variables: (\n  --x-margin-content: var(--x-margin-content),\n  --tmp-header-height: var(--tmp-header-height),\n  --header-height: var(--header-height),\n\n  --fg: var(--fg),\n  --bg: var(--bg),\n\n  --red: var(--red),\n  --green: var(--green),\n\n  --input-fg: var(--input-fg),\n\n  --input-bg: var(--input-bg),\n  --input-bg-550: var(--input-bg-550),\n  --input-bg-600: var(--input-bg-600),\n  --input-bg-in-secondary: var(--input-bg-in-secondary),\n\n  --input-danger-fg: var(--input-danger-fg),\n  --input-danger-bg: var(--input-danger-bg),\n\n  --input-placeholder: var(--input-placeholder),\n  --input-border-color: var(--input-border-color),\n  --input-border-radius: var(--input-border-radius),\n\n  --input-check-active-fg: var(--input-check-active-fg),\n  --input-check-active-bg: var(--input-check-active-bg),\n\n  --input-x-padding: var(--input-x-padding),\n  --input-y-padding: var(--input-y-padding),\n\n  --textarea-x-padding: var(--textarea-x-padding),\n  --textarea-y-padding: var(--textarea-y-padding),\n  --textarea-fg: var(--textarea-fg),\n  --textarea-bg: var(--textarea-bg),\n\n  --support-btn-bg: var(--support-btn-bg),\n  --support-btn-fg: var(--support-btn-fg),\n  --support-btn-heart-bg: var(--support-btn-heart-bg),\n\n  --secondary-icon-color: var(--secondary-icon-color),\n  --active-icon-color: var(--active-icon-color),\n  --active-icon-bg: var(--active-icon-bg),\n\n  --fg-500: var(--fg-500),\n  --fg-450: var(--fg-450),\n  --fg-400: var(--fg-400),\n  --fg-350: var(--fg-350),\n  --fg-300: var(--fg-300),\n  --fg-250: var(--fg-250),\n  --fg-200: var(--fg-200),\n  --fg-150: var(--fg-150),\n  --fg-100: var(--fg-100),\n  --fg-50: var(--fg-50),\n\n  --bg-secondary-600: var(--bg-secondary-600),\n  --bg-secondary-550: var(--bg-secondary-550),\n  --bg-secondary-500: var(--bg-secondary-500),\n  --bg-secondary-450: var(--bg-secondary-450),\n  --bg-secondary-400: var(--bg-secondary-400),\n  --bg-secondary-350: var(--bg-secondary-350),\n  --bg-secondary-300: var(--bg-secondary-300),\n  --bg-secondary-250: var(--bg-secondary-250),\n  --bg-secondary-200: var(--bg-secondary-200),\n\n  --menu-fg: var(--menu-fg),\n  --menu-fg-600: var(--menu-fg-600),\n  --menu-fg-550: var(--menu-fg-550),\n  --menu-fg-500: var(--menu-fg-500),\n  --menu-fg-450: var(--menu-fg-450),\n  --menu-fg-400: var(--menu-fg-400),\n  --menu-fg-350: var(--menu-fg-350),\n  --menu-fg-300: var(--menu-fg-300),\n  --menu-fg-250: var(--menu-fg-250),\n  --menu-fg-200: var(--menu-fg-200),\n  --menu-fg-150: var(--menu-fg-150),\n  --menu-fg-100: var(--menu-fg-100),\n  --menu-fg-50: var(--menu-fg-50),\n\n  --menu-bg: var(--menu-bg),\n  --menu-bg-600: var(--menu-bg-600),\n  --menu-bg-550: var(--menu-bg-550),\n  --menu-bg-500: var(--menu-bg-500),\n  --menu-bg-450: var(--menu-bg-450),\n  --menu-bg-400: var(--menu-bg-400),\n  --menu-bg-350: var(--menu-bg-350),\n  --menu-bg-300: var(--menu-bg-300),\n  --menu-bg-250: var(--menu-bg-250),\n  --menu-bg-200: var(--menu-bg-200),\n\n  --menu-margin-left: var(--menu-margin-left),\n  --menu-width: var(--menu-width),\n\n  --on-primary: var(--on-primary),\n  --on-primary-700: var(--on-primary-700),\n  --on-primary-650: var(--on-primary-650),\n  --on-primary-600: var(--on-primary-600),\n  --on-primary-550: var(--on-primary-550),\n  --on-primary-500: var(--on-primary-500),\n  --on-primary-450: var(--on-primary-450),\n  --on-primary-400: var(--on-primary-400),\n  --on-primary-350: var(--on-primary-350),\n  --on-primary-300: var(--on-primary-300),\n  --on-primary-250: var(--on-primary-250),\n  --on-primary-200: var(--on-primary-200),\n  --on-primary-150: var(--on-primary-150),\n  --on-primary-100: var(--on-primary-100),\n  --on-primary-50: var(--on-primary-50),\n\n  --primary: var(--primary),\n  --primary-700: var(--primary-700),\n  --primary-650: var(--primary-650),\n  --primary-600: var(--primary-600),\n  --primary-550: var(--primary-550),\n  --primary-500: var(--primary-500),\n  --primary-450: var(--primary-450),\n  --primary-400: var(--primary-400),\n  --primary-350: var(--primary-350),\n  --primary-300: var(--primary-300),\n  --primary-250: var(--primary-250),\n  --primary-200: var(--primary-200),\n  --primary-150: var(--primary-150),\n  --primary-100: var(--primary-100),\n  --primary-50: var(--primary-50),\n\n  --border-primary: var(--border-primary),\n  --border-secondary: var(--border-secondary),\n\n  --alert-primary-fg: var(--alert-primary-fg),\n  --alert-primary-bg: var(--alert-primary-bg),\n  --alert-primary-border-color: var(--alert-primary-border-color),\n\n  --embed-fg: var(--embed-fg),\n  --embed-big-play-bg: var(--embed-big-play-bg),\n);\n\n// SASS type check our CSS variables\n@function pvar($variable) {\n  @if map.has-key($variables, $variable) {\n    @return map.get($variables, $variable);\n  } @else {\n    @error 'ERROR: Variable #{$variable} does not exist';\n  }\n}\n\n@function pvar-fallback($variable, $fallback) {\n  @if map.has-key($variables, $variable) and map.has-key($variables, $fallback) {\n    @return var($variable, map.get($variables, $fallback));\n  } @else {\n    @error 'ERROR: Variable #{$variable} or #{$fallback} does not exist';\n  }\n}\n\n// ---------------------------------------------------------------------------\n// z-index groups\n// ---------------------------------------------------------------------------\n\n$zindex: (\n  miniature       :    10,\n  overlay         : 12550,\n  menu            : 12600,\n  search-typeahead: 12650,\n  popover         : 13000,\n  tooltip         : 14000,\n  loadbar         : 15000,\n  privacymsg      : 17500,\n  root-header     : 17500,\n  help-popover    : 17600,\n  dropdown        : 17600,\n  modal           : 19000,\n  hotkeys         : 19000,\n  notification    : 20000\n);\n\n@function z($label) {\n  @return map.get($zindex, $label);\n}\n\n// ---------------------------------------------------------------------------\n// Other variables that use pvar()\n// ---------------------------------------------------------------------------\n\n$separator-border-color: pvar(--bg-secondary-400);\n$separator-border-color-on-secondary: pvar(--bg-secondary-450);\n$focus-box-shadow-form: #{$focus-box-shadow-dimensions} #{pvar(--fg-100)};\n", "// stylelint-disable scss/dimension-no-non-numeric-values\n\n// SCSS RFS mixin\n//\n// Automated responsive values for font sizes, paddings, margins and much more\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/main/LICENSE)\n\n// Configuration\n\n// Base value\n$rfs-base-value: 1.25rem !default;\n$rfs-unit: rem !default;\n\n@if $rfs-unit != rem and $rfs-unit != px {\n  @error \"`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where values start decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize values based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != number or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Mode. Possibilities: \"min-media-query\", \"max-media-query\"\n$rfs-mode: min-media-query !default;\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-rfs to false\n$enable-rfs: true !default;\n\n// Cache $rfs-base-value unit\n$rfs-base-value-unit: unit($rfs-base-value);\n\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  @if $dividend == 0 {\n    @return 0;\n  }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\";\n  }\n  $remainder: $dividend;\n  $result: 0;\n  $factor: 10;\n  @while ($remainder > 0 and $precision >= 0) {\n    $quotient: 0;\n    @while ($remainder >= $divisor) {\n      $remainder: $remainder - $divisor;\n      $quotient: $quotient + 1;\n    }\n    $result: $result * 10 + $quotient;\n    $factor: $factor * .1;\n    $remainder: $remainder * 10;\n    $precision: $precision - 1;\n    @if ($precision < 0 and $remainder >= $divisor * 5) {\n      $result: $result + 1;\n    }\n  }\n  $result: $result * $factor * $sign;\n  $dividend-unit: unit($dividend);\n  $divisor-unit: unit($divisor);\n  $unit-map: (\n    \"px\": 1px,\n    \"rem\": 1rem,\n    \"em\": 1em,\n    \"%\": 1%\n  );\n  @if ($dividend-unit != $divisor-unit and map-has-key($unit-map, $dividend-unit)) {\n    $result: $result * map-get($unit-map, $dividend-unit);\n  }\n  @return $result;\n}\n\n// Remove px-unit from $rfs-base-value for calculations\n@if $rfs-base-value-unit == px {\n  $rfs-base-value: divide($rfs-base-value, $rfs-base-value * 0 + 1);\n}\n@else if $rfs-base-value-unit == rem {\n  $rfs-base-value: divide($rfs-base-value, divide($rfs-base-value * 0 + 1, $rfs-rem-value));\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == px {\n  $rfs-breakpoint: divide($rfs-breakpoint, $rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == rem or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: divide($rfs-breakpoint, divide($rfs-breakpoint * 0 + 1, $rfs-rem-value));\n}\n\n// Calculate the media query value\n$rfs-mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{divide($rfs-breakpoint, $rfs-rem-value)}#{$rfs-breakpoint-unit});\n$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);\n$rfs-mq-property-height: if($rfs-mode == max-media-query, max-height, min-height);\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query {\n  @if $rfs-two-dimensional {\n    @if $rfs-mode == max-media-query {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n    @else {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n  }\n  @else {\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-rule {\n  @if $rfs-class == disable and $rfs-mode == max-media-query {\n    // Adding an extra class increases specificity, which prevents the media query to override the property\n    &,\n    .disable-rfs &,\n    &.disable-rfs {\n      @content;\n    }\n  }\n  @else if $rfs-class == enable and $rfs-mode == min-media-query {\n    .enable-rfs &,\n    &.enable-rfs {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-media-query-rule {\n\n  @if $rfs-class == enable {\n    @if $rfs-mode == min-media-query {\n      @content;\n    }\n\n    @include _rfs-media-query () {\n      .enable-rfs &,\n      &.enable-rfs {\n        @content;\n      }\n    }\n  }\n  @else {\n    @if $rfs-class == disable and $rfs-mode == min-media-query {\n      .disable-rfs &,\n      &.disable-rfs {\n        @content;\n      }\n    }\n    @include _rfs-media-query () {\n      @content;\n    }\n  }\n}\n\n// Helper function to get the formatted non-responsive value\n@function rfs-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: \"\";\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + \" 0\";\n    }\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      @if $unit == px {\n        // Convert to rem if needed\n        $val: $val + \" \" + if($rfs-unit == rem, #{divide($value, $value * 0 + $rfs-rem-value)}rem, $value);\n      }\n      @else if $unit == rem {\n        // Convert to px if needed\n        $val: $val + \" \" + if($rfs-unit == px, #{divide($value, $value * 0 + 1) * $rfs-rem-value}px, $value);\n      } @else {\n        // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n        $val: $val + \" \" + $value;\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// Helper function to get the responsive value calculated by RFS\n@function rfs-fluid-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: \"\";\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + \" 0\";\n    } @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n      @if not $unit or $unit != px and $unit != rem {\n        $val: $val + \" \" + $value;\n      } @else {\n        // Remove unit from $value for calculations\n        $value: divide($value, $value * 0 + if($unit == px, 1, divide(1, $rfs-rem-value)));\n\n        // Only add the media query if the value is greater than the minimum value\n        @if abs($value) <= $rfs-base-value or not $enable-rfs {\n          $val: $val + \" \" + if($rfs-unit == rem, #{divide($value, $rfs-rem-value)}rem, #{$value}px);\n        }\n        @else {\n          // Calculate the minimum value\n          $value-min: $rfs-base-value + divide(abs($value) - $rfs-base-value, $rfs-factor);\n\n          // Calculate difference between $value and the minimum value\n          $value-diff: abs($value) - $value-min;\n\n          // Base value formatting\n          $min-width: if($rfs-unit == rem, #{divide($value-min, $rfs-rem-value)}rem, #{$value-min}px);\n\n          // Use negative value if needed\n          $min-width: if($value < 0, -$min-width, $min-width);\n\n          // Use `vmin` if two-dimensional is enabled\n          $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n          // Calculate the variable width between 0 and $rfs-breakpoint\n          $variable-width: #{divide($value-diff * 100, $rfs-breakpoint)}#{$variable-unit};\n\n          // Return the calculated value\n          $val: $val + \" calc(\" + $min-width + if($value < 0, \" - \", \" + \") + $variable-width + \")\";\n        }\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// RFS mixin\n@mixin rfs($values, $property: font-size) {\n  @if $values != null {\n    $val: rfs-value($values);\n    $fluid-val: rfs-fluid-value($values);\n\n    // Do not print the media query if responsive & non-responsive values are the same\n    @if $val == $fluid-val {\n      #{$property}: $val;\n    }\n    @else {\n      @include _rfs-rule () {\n        #{$property}: if($rfs-mode == max-media-query, $val, $fluid-val);\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n\n      @include _rfs-media-query-rule () {\n        #{$property}: if($rfs-mode == max-media-query, $fluid-val, $val);\n      }\n    }\n  }\n}\n\n// Shorthand helper mixins\n@mixin font-size($value) {\n  @include rfs($value);\n}\n\n@mixin padding($value) {\n  @include rfs($value, padding);\n}\n\n@mixin padding-top($value) {\n  @include rfs($value, padding-top);\n}\n\n@mixin padding-right($value) {\n  @include rfs($value, padding-right);\n}\n\n@mixin padding-bottom($value) {\n  @include rfs($value, padding-bottom);\n}\n\n@mixin padding-left($value) {\n  @include rfs($value, padding-left);\n}\n\n@mixin margin($value) {\n  @include rfs($value, margin);\n}\n\n@mixin margin-top($value) {\n  @include rfs($value, margin-top);\n}\n\n@mixin margin-right($value) {\n  @include rfs($value, margin-right);\n}\n\n@mixin margin-bottom($value) {\n  @include rfs($value, margin-bottom);\n}\n\n@mixin margin-left($value) {\n  @include rfs($value, margin-left);\n}\n"],
  "mappings": "ACGA,CAAA,YACE,SAAA,SACA,UAAA,MACA,MAAA,KACA,UAAA,MACA,OAAA,KACA,iBAAA,IAAA,MACA,WAAA,KACA,cAAA,IAAA,MAAA,IAAA,oBAEA,CAVF,YAUE,CAAA,cACE,iBAAA,IAAA,oBDmTJ,QClTI,KAAA,KAGF,CAfF,YAeE,CAAA,sBD+SF,QC9SI,EAAA,KAGF,CAnBF,YAmBE,CAAA,aACE,UAAA,KACA,YCdY,IDgBZ,CAvBJ,YAuBI,CAJF,aAIE,CAAA,SEqQE,oBALI,SF3PR,CA5BF,YA4BE,CAAA,eACE,YAAA,MACA,eAAA",
  "names": []
}
