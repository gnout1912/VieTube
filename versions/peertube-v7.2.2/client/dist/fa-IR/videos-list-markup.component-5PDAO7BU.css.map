{
  "version": 3,
  "sources": ["src/sass/include/_mixins.scss", "src/sass/include/_miniature.scss"],
  "sourcesContent": ["@use 'sass:math';\n@use 'sass:color';\n@use '_variables' as *;\n@import '_bootstrap-mixins';\n\n@mixin underline-primary {\n  text-decoration: underline !important;\n  text-decoration-color: pvar(--border-primary) !important;\n  text-underline-offset: 0.25em !important;\n  text-decoration-thickness: 0.15em !important;\n}\n\n@mixin section-label {\n  color: pvar(--fg-300);\n  font-size: 14px;\n  margin-bottom: 15px;\n  font-weight: $font-bold;\n  letter-spacing: 1px;\n\n  @media screen and (max-width: $mobile-view) {\n    font-size: 12px;\n    margin-bottom: 5px;\n  }\n}\n\n@mixin disable-default-a-behaviour {\n  &,\n  &:hover,\n  &:focus,\n  &:active {\n    text-decoration: none;\n  }\n\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n}\n\n@mixin disable-outline {\n  &:focus:not(:focus-visible) {\n    outline: none !important;\n  }\n}\n\n@mixin ellipsis {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n@mixin muted-1 {\n  color: pvar(--fg-300) !important;\n}\n\n@mixin muted-2 {\n  color: pvar(--fg-200) !important;\n\n  a,\n  .fake-link {\n    color: pvar(--fg);\n    text-decoration: underline;\n  }\n}\n\n@mixin fade-text ($fade-after, $background-color) {\n  position: relative;\n  overflow: hidden;\n\n  &::after {\n    content: '';\n    pointer-events: none;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    background: linear-gradient(transparent $fade-after, $background-color);\n  }\n}\n\n@mixin peertube-word-wrap ($with-hyphen: true) {\n  word-break: break-word;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n\n  @if $with-hyphen {\n    hyphens: auto;\n  }\n}\n\n@mixin apply-svg-color ($color) {\n  ::ng-deep .feather,\n  ::ng-deep .material,\n  ::ng-deep .misc {\n    color: $color;\n  }\n}\n\n@mixin fill-path-svg-color ($color) {\n  ::ng-deep svg {\n    path {\n      fill: $color;\n    }\n  }\n}\n\n@mixin fill-svg-color ($color) {\n  ::ng-deep svg {\n    fill: $color;\n  }\n}\n\n@mixin rounded-line-height-1-5 ($font-size) {\n  line-height: calc(#{$font-size} + #{math.round(math.div($font-size, 2))});\n}\n\n@mixin icon ($size) {\n  display: inline-block;\n  background-repeat: no-repeat;\n  background-size: contain;\n  width: $size;\n  height: $size;\n  vertical-align: middle;\n  cursor: pointer;\n}\n\n@mixin global-icon-size ($size) {\n  display: inline-block;\n  width: $size;\n  height: $size;\n  line-height: $size;\n}\n\n@mixin responsive-width ($width) {\n  width: $width;\n\n  @media screen and (max-width: #{$width - 30px}) {\n    width: 100%;\n  }\n}\n\n@mixin actor-counters ($separator-margin: 10px) {\n  color: pvar(--fg-300);\n  display: flex;\n  align-items: center;\n\n  > *:not(:last-child)::after {\n    content: 'â€¢';\n    margin: 0 $separator-margin;\n    color: pvar(--primary);\n  }\n}\n\n@mixin row-blocks ($column-responsive: true, $min-height: 130px, $separator: true) {\n  display: flex;\n  min-height: $min-height;\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n\n  @if $separator {\n    border-bottom: 1px solid pvar(--input-border-color);\n  }\n\n  @media screen and (max-width: $small-view) {\n    @if $column-responsive {\n      flex-direction: column;\n      height: auto;\n      align-items: center;\n    } @else {\n      min-height: initial;\n      padding-bottom: 10px;\n      margin-bottom: 10px;\n    }\n  }\n}\n\n@mixin dropdown-with-icon-item {\n  padding: pvar(--input-y-padding) 15px;\n\n  my-global-icon {\n    width: 22px;\n    opacity: .7;\n    position: relative;\n    top: -2px;\n\n    @include margin-right(10px);\n  }\n}\n\n@mixin divider($color: pvar(--bg-secondary-400), $background: pvar(--bg)) {\n  width: 95%;\n  border-top: .05rem solid $color;\n  height: .05rem;\n  text-align: center;\n  display: block;\n  position: relative;\n\n  &[data-content] {\n    margin: .8rem 0;\n\n    &::after {\n      background: $background;\n      color: $color;\n      content: attr(data-content);\n      display: inline-block;\n      font-size: .7rem;\n      padding: 0 .4rem;\n      transform: translateY(-.65rem);\n    }\n  }\n}\n\n// applies ratio (default to 16:9) to a child element (using $selector) only using\n// an immediate's parent size. This allows to set a ratio without explicit\n// dimensions, as width/height cannot be computed from each other.\n@mixin block-ratio ($selector: 'div', $inverted-ratio: math.div(9, 16)) {\n  $padding-percent: math.percentage($inverted-ratio);\n\n  position: relative;\n  height: 0;\n  width: 100%;\n  padding-top: $padding-percent;\n\n  #{$selector} {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n\n    @content;\n  }\n}\n\n@mixin play-icon ($width, $height) {\n  width: 0;\n  height: 0;\n\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%) scale(0.5);\n\n  border-top: #{math.div($height, 2)} solid transparent;\n  border-bottom: #{math.div($height, 2)} solid transparent;\n\n  border-left: $width solid #F4F4F5;\n}\n\n@mixin on-small-main-col () {\n  @media screen and (max-width: $small-view) {\n    @content;\n  }\n}\n\n@mixin on-mobile-main-col () {\n  @media screen and (max-width: $mobile-view) {\n    @content;\n  }\n}\n\n// ---------------------------------------------------------------------------\n\n@mixin margin ($arg1: null, $arg2: null, $arg3: null, $arg4: null) {\n  @if $arg2 == null and $arg3 == null and $arg4 == null {\n    @include margin-original($arg1, $arg1, $arg1, $arg1);\n  } @else if $arg3 == null and $arg4 == null {\n    @include margin-original($arg1, $arg2, $arg1, $arg2);\n  } @else if $arg4 == null {\n    @include margin-original($arg1, $arg2, $arg3, $arg2);\n  } @else {\n    @include margin-original($arg1, $arg2, $arg3, $arg4);\n  }\n}\n\n@mixin margin-original ($block-start, $inline-end, $block-end, $inline-start) {\n  @include margin-left($inline-start);\n  @include margin-right($inline-end);\n  @include margin-top($block-start);\n  @include margin-bottom($block-end);\n}\n\n@mixin margin-left ($value) {\n  @include rfs($value, margin-inline-start);\n}\n\n@mixin margin-right ($value) {\n  @include rfs($value, margin-inline-end);\n}\n\n// ---------------------------------------------------------------------------\n\n@mixin padding-original ($block-start, $inline-end, $block-end, $inline-start) {\n  @include padding-left($inline-start);\n  @include padding-right($inline-end);\n  @include padding-top($block-start);\n  @include padding-bottom($block-end);\n}\n\n@mixin padding ($arg1: null, $arg2: null, $arg3: null, $arg4: null) {\n  @if $arg2 == null and $arg3 == null and $arg4 == null {\n    @include padding-original($arg1, $arg1, $arg1, $arg1);\n  } @else if $arg3 == null and $arg4 == null {\n    @include padding-original($arg1, $arg2, $arg1, $arg2);\n  } @else if $arg4 == null {\n    @include padding-original($arg1, $arg2, $arg3, $arg2);\n  } @else {\n    @include padding-original($arg1, $arg2, $arg3, $arg4);\n  }\n}\n\n@mixin padding-left ($value) {\n  @include rfs($value, padding-inline-start);\n}\n\n@mixin padding-right ($value) {\n  @include rfs($value, padding-inline-end);\n}\n\n// ---------------------------------------------------------------------------\n\n\n/**\n *\n * inset-inline properties are not supported by iOS < 14.5\n *\n */\n\n@mixin right ($value) {\n  @supports (inset-inline-end: $value) {\n    inset-inline-end: $value;\n  }\n\n  @supports not (inset-inline-end: $value) {\n    right: $value;\n  }\n}\n\n\n@mixin left ($value) {\n  @supports (inset-inline-start: $value) {\n    inset-inline-start: $value;\n  }\n\n  @supports not (inset-inline-start: $value) {\n    left: $value;\n  }\n}\n\n", "@use 'sass:math';\n@use '_variables' as *;\n@use '_mixins' as *;\n@use '_bootstrap-variables' as *;\n\n@mixin miniature-name {\n  transition: color 0.2s;\n  font-weight: $font-bold;\n  color: pvar(--fg);\n\n  @include peertube-word-wrap(false);\n\n  &:hover {\n    text-decoration: none;\n  }\n}\n\n@mixin miniature-thumbnail {\n  $play-overlay-transition: 0.2s ease;\n  $play-overlay-height: 26px;\n  $play-overlay-width: 18px;\n\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  border-radius: 4px;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background-color: #ececec;\n  transition: filter $play-overlay-transition;\n\n  @include disable-outline;\n\n  .play-overlay {\n    position: absolute;\n    right: 0;\n    bottom: 0;\n\n    width: inherit;\n    height: inherit;\n    opacity: 0;\n    background-color: rgba(46, 35, 35, 0.80);\n\n    &,\n    .icon {\n      transition: all $play-overlay-transition;\n    }\n\n    .icon {\n      @include play-icon($play-overlay-width, $play-overlay-height);\n\n      &::before {\n        $background-play-size: 49px;\n\n        display: block;\n        content: '';\n        width: $background-play-size;\n        height: $background-play-size;\n\n        top: math.round(math.div($background-play-size, 2)) * -1;\n        // Add some pixels at the end because it's visually better\n        right: #{math.round(math.div($background-play-size - $play-overlay-width, 2)) * -1 + 3};\n\n        border-radius: 100%;\n        position: absolute;\n        background-color: pvar(--primary-450);\n        opacity: 0.3;\n      }\n    }\n  }\n\n  &:hover {\n    text-decoration: none !important;\n\n    .play-overlay {\n      opacity: 1;\n\n      .icon {\n        transform: translate(-50%, -50%) scale(1);\n      }\n    }\n  }\n\n  img {\n    width: inherit;\n    height: inherit;\n\n    &.blur-filter {\n      filter: blur(20px);\n    }\n  }\n}\n\n@mixin thumbnail-size-component ($width, $height) {\n  ::ng-deep .video-thumbnail {\n    width: $width;\n    height: $height;\n  }\n}\n\n@mixin static-thumbnail-overlay {\n  display: inline-block;\n  background-color: rgba(17, 17, 17, 0.8);\n  color: #E9DFDF;\n}\n\n@mixin grid-videos-miniature-margins {\n  --grid-videos-miniature-margins: #{pvar(--x-margin-content)};\n\n  @include margin-left(var(--grid-videos-miniature-margins) !important);\n  @include margin-right(var(--grid-videos-miniature-margins) !important);\n\n  @media screen and (max-width: $mobile-view) {\n    --grid-videos-miniature-margins: 0;\n\n    width: auto;\n  }\n}\n\n@mixin grid-videos-miniature-layout ($rows-limit: 0) {\n  @media screen and (min-width: $mobile-view) {\n    .videos,\n    .playlists {\n      --co-miniature-min-width: #{$video-thumbnail-width - 25px};\n      --co-miniature-max-width: #{$video-thumbnail-width};\n\n      display: grid;\n      column-gap: 30px;\n      grid-template-columns: repeat(\n        auto-fill,\n        minmax(var(--co-miniature-min-width), 1fr)\n      );\n\n      @if ($rows-limit != 0) {\n        grid-template-rows: repeat($rows-limit, auto);\n        overflow: hidden;\n        grid-auto-rows: 0;\n      }\n\n      .video-wrapper,\n      .playlist-wrapper {\n        margin: 0 auto;\n        width: 100%;\n\n        my-video-miniature,\n        my-video-playlist-miniature {\n          display: block;\n          min-width: var(--co-miniature-min-width);\n          max-width: var(--co-miniature-max-width);\n        }\n      }\n\n      @media screen and (min-width: #{breakpoint(fhd)}) {\n        column-gap: 2%;\n      }\n    }\n  }\n}\n\n@mixin grid-videos-miniature-layout-with-margins ($rows-limit: 0) {\n  @include grid-videos-miniature-margins;\n  @include grid-videos-miniature-layout($rows-limit);\n}\n"],
  "mappings": "ACyHE,OAAA,OAAA,IAAA,CAAA,SAAA,EAAA,OACE,CAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,UAEE,0BAAA,MACA,0BAAA,MAEA,QAAA,KACA,WAAA,KACA,sBAAA,OAAA,SAAA,CAAA,OAAA,IAAA,yBAAA,CAAA,MAWA,CAlBF,KAkBE,CAlBF,OAkBE,CAAA,cAAA,CAlBF,KAkBE,CAlBF,OAkBE,CAAA,iBAAA,CAlBF,KAkBE,CAlBF,UAkBE,CAAA,cAAA,CAlBF,KAkBE,CAlBF,UAkBE,CAAA,iBDqLN,OCnLQ,EAAA,KACA,MAAA,KAEA,CAvBJ,KAuBI,CAvBJ,OAuBI,CALF,cAKE,mBAAA,CAvBJ,KAuBI,CAvBJ,OAuBI,CALF,cAKE,4BAAA,CAvBJ,KAuBI,CAvBJ,OAuBI,CALF,iBAKE,mBAAA,CAvBJ,KAuBI,CAvBJ,OAuBI,CALF,iBAKE,4BAAA,CAvBJ,KAuBI,CAvBJ,UAuBI,CALF,cAKE,mBAAA,CAvBJ,KAuBI,CAvBJ,UAuBI,CALF,cAKE,4BAAA,CAvBJ,KAuBI,CAvBJ,UAuBI,CALF,iBAKE,mBAAA,CAvBJ,KAuBI,CAvBJ,UAuBI,CALF,iBAKE,4BAEE,QAAA,MACA,UAAA,IAAA,0BACA,UAAA,IAAA,2BAIJ,OAAA,OAAA,IAAA,CAAA,SAAA,EAAA,OAAA,IAAA,CAAA,SAAA,EAAA,QA/BF,CAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,UAgCI,WAAA",
  "names": []
}
