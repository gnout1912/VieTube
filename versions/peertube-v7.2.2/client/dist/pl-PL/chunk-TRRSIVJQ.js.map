{"version":3,"mappings":"6hBACEA,EAAA,gBAAsCC,EAAA,GAAWC,EAAA,GAAAC,CAAA,QAAAC,CAAA,CAAAC,CAAA,GAAXC,EAAA,EAAAC,EAAAC,EAAAC,KAAA,ICaxC,GAAaC,IAA0B,KAAjC,GAAOA,GAAP,KAAOA,EAA0B,CAC7BC,MAAQC,EAAOC,CAAc,EAC7BC,OAASF,EAAOG,CAAM,EACtBC,OAASJ,EAAOK,CAAa,EAErCR,MAAQ,GAERS,UAAQ,CACN,GAAMC,GAAM,KAAKR,MAAMS,SAASC,YAAYF,GAAA,CAE5C,GAAI,CAACA,EAAK,CACR,KAAKV,0DAAQa,CACb,OACF,CAEA,KAAKC,QAAQJ,CAAG,CAClB,EAEQI,QAASJ,EAAW,CAC1BK,EAAS,CACP,KAAKR,OAAOS,aAAa,CAAET,OAAQG,CAAG,CAAE,EACxC,KAAKH,OAAOU,oBAAoB,CAAEV,OAAQG,CAAG,CAAE,CAAC,CACjD,EAAEQ,UAAU,CAAC,CAAEC,EAAaC,CAAa,IAAM,CAC9C,GAAIC,GAEJ,GAAIF,EAAYG,KAAKC,SAAW,EAAG,CACjC,GAAMC,GAAQL,EAAYG,KAAK,CAAC,EAEhCD,EAAcI,EAAMC,cAAcF,CAAK,CACzC,UAAWJ,EAAcE,KAAKC,SAAW,EAGvCF,EAAc,MAFE,GAAIM,GAAaP,EAAcE,KAAK,CAAC,CAAC,EAExBM,iBACzB,CACL,KAAK5B,mEAAQa,CACb,OACF,CAEA,KAAKR,OAAOwB,cAAcR,CAAW,CACvC,EAAC,CACH,IAAAS,CAAA,CAxCW7B,4CAA0B,IAAA6B,CAAA,CAA1B7B,wBAA0B8B,UAAA,4BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,0DAAAC,SAAA,QAAAA,CAAAC,EAAAC,EAAA,CAAAD,EAAA,IDdvC7C,EAAA,WACE+C,EAAA,EAAAC,EAAA,kBACF9C,EAAA,GAAA+C,CAAA,KAD2B3C,EAAA,EAAA4C,EAAA,OAAAJ,EAAArC,KAAA,KAAA0C,YAAA,ECWdC,EAAMC,CAAc,EAAAC,cAAA,KAE3B,GAAO5C,GAAP6C,QAAO7C,EAA0B,MCPvC,GAAA8C,GAAe,CACb,CACEC,KAAM,GACNC,UAAWhD,EACXiD,UAAW,CACTC,EACA3C,EACA4C,CAAoB,EAEtBC,YAAa,CAAEC,CAAU,EACzBhC,KAAM,CACJiC,KAAM,CACJC,yBAAO3C,GAGZ,SAAA4C,CAAA,IAAAC,OAAA","names":["ɵɵelementStart","ɵɵtext","ɵɵelementEnd","o","_","g","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","error","RemoteInteractionComponent","route","inject","ActivatedRoute","router","Router","search","SearchService","ngOnInit","uri","snapshot","queryParams","$localize","loadUrl","forkJoin","searchVideos","searchVideoChannels","subscribe","videoResult","channelResult","redirectUrl","data","length","video","Video","buildWatchUrl","VideoChannel","nameWithHost","navigateByUrl","c","selectors","decls","vars","consts","template","rf","ctx","ɵɵtemplate","RemoteInteractionComponent_my_alert_1_Template","r","ɵɵproperty","dependencies","NgIf","AlertComponent","encapsulation","_RemoteInteractionComponent","routes_default","path","component","providers","FindInBulkService","VideoPlaylistService","canActivate","LoginGuard","meta","title","K","default"],"ignoreList":[],"sources":["src/app/+remote-interaction/remote-interaction.component.html","src/app/+remote-interaction/remote-interaction.component.ts","src/app/+remote-interaction/routes.ts"],"sourcesContent":["<div class=\"root\">\n  <my-alert type=\"danger\" *ngIf=\"error\">{{ error }}</my-alert>\n</div>\n","import { NgIf } from '@angular/common'\nimport { Component, OnInit, inject } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { VideoChannel } from '@app/shared/shared-main/channel/video-channel.model'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport { Video } from '@app/shared/shared-main/video/video.model'\nimport { SearchService } from '@app/shared/shared-search/search.service'\nimport { forkJoin } from 'rxjs'\n\n@Component({\n  selector: 'my-remote-interaction',\n  templateUrl: './remote-interaction.component.html',\n  imports: [ NgIf, AlertComponent ]\n})\nexport class RemoteInteractionComponent implements OnInit {\n  private route = inject(ActivatedRoute)\n  private router = inject(Router)\n  private search = inject(SearchService)\n\n  error = ''\n\n  ngOnInit () {\n    const uri = this.route.snapshot.queryParams['uri']\n\n    if (!uri) {\n      this.error = $localize`URL parameter is missing in URL parameters`\n      return\n    }\n\n    this.loadUrl(uri)\n  }\n\n  private loadUrl (uri: string) {\n    forkJoin([\n      this.search.searchVideos({ search: uri }),\n      this.search.searchVideoChannels({ search: uri })\n    ]).subscribe(([ videoResult, channelResult ]) => {\n      let redirectUrl: string\n\n      if (videoResult.data.length !== 0) {\n        const video = videoResult.data[0]\n\n        redirectUrl = Video.buildWatchUrl(video)\n      } else if (channelResult.data.length !== 0) {\n        const channel = new VideoChannel(channelResult.data[0])\n\n        redirectUrl = '/c/' + channel.nameWithHost\n      } else {\n        this.error = $localize`Cannot access to the remote resource`\n        return\n      }\n\n      this.router.navigateByUrl(redirectUrl)\n    })\n  }\n}\n","import { Routes } from '@angular/router'\nimport { LoginGuard } from '@app/core'\nimport { RemoteInteractionComponent } from './remote-interaction.component'\nimport { FindInBulkService } from '@app/shared/shared-search/find-in-bulk.service'\nimport { SearchService } from '@app/shared/shared-search/search.service'\nimport { VideoPlaylistService } from '@app/shared/shared-video-playlist/video-playlist.service'\n\nexport default [\n  {\n    path: '',\n    component: RemoteInteractionComponent,\n    providers: [\n      FindInBulkService,\n      SearchService,\n      VideoPlaylistService\n    ],\n    canActivate: [ LoginGuard ],\n    data: {\n      meta: {\n        title: $localize`Remote interaction`\n      }\n    }\n  }\n] satisfies Routes\n"]}