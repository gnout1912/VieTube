{"version":3,"mappings":"ivBAaM,GAAOA,GAAP,KAAOA,EAAe,CAClBC,SAAWC,EAAOC,EAAU,EAC5BC,cAAgBF,EAAOG,EAAa,EACpCC,cAAgBJ,EAAOK,CAAY,EACnCC,cAAgBN,EAAOO,EAAa,EAI5CC,kBAAmBC,EAAY,CAC7B,GAAIC,GAAS,GAAIC,KACjBD,SAASA,EAAOE,OAAO,OAAQH,EAAO,EAAE,EAEjC,KAAKV,SACTc,IAA0Bf,EAAgBgB,kBAAoB,SAAU,CAAEJ,QAAM,CAAE,EAClFK,KACCC,EAAUC,GAAwB,KAAKC,qBAAqBD,CAAoB,CAAC,EACjFE,EAAWC,GAAO,KAAKlB,cAAcmB,YAAYD,CAAG,CAAC,CAAC,CAE5D,EAEQF,qBAAsBD,EAA0C,CACtE,GAAMK,GAAiC,GACjCC,EAAuC,CAC3CC,KAAM,GACNC,WAAY,GACZC,SAAU,IAIZ,OAAWC,KAAOC,IAAgBX,CAAoB,EACpD,OAAWY,KAAUZ,GAAqBU,CAAG,EAC3CL,EAAYQ,KACVC,EAAGF,EAAOG,MAAM,EACbjB,KACCC,EAAUgB,GAAU,KAAK5B,cAAc6B,cAAc,CAAEC,MAAO,EAAGC,KAAMH,CAAM,CAAE,CAAC,EAChFI,EAAIC,GAAUA,EAAOF,IAAI,EACzBG,EAAIN,GAAS,CACXT,EAAqBI,CAAG,EAAEG,KAAKS,GAAgBV,EAAQ,CAAEG,QAAM,CAAE,CAAQ,CAC3E,EAAC,CAAC,CACH,EAKT,MAAIV,GAAYkB,SAAW,EAAUT,EAAGR,CAAoB,EAErDkB,EAASnB,CAAW,EACxBP,KAECC,EAAU,IACD,KAAKV,cAAcoC,gBAAe,EACtC3B,KACCuB,EAAIK,GAAe,CACjB,OAAWC,KAAKrB,GAAqBE,WACnCmB,EAAEC,SAASC,MAAQC,GAAkBH,EAAEC,SAASC,MAAOH,CAAY,CAEvE,EAAC,CAAC,CAEP,EACDP,EAAI,IAAMb,CAAoB,CAAC,CAErC,IAvDAyB,EANWlD,EAMJgB,oBAAoBmC,GAAYC,OAAS,sBAAAC,CAAA,CANrCrD,4CAAe,IAAAqD,CAAA,CAAfrD,0BAAesD,QAAftD,EAAeuD,IAAA,IAAtB,GAAOvD,GAAPwD,2GCVJC,EAAA,WAAAC,EAAA,KAAuDC,EAAA,aAAAC,GAAAC,CAAA,CAAAC,CAAA,KAAAD,CAAA,KAOjDJ,EAAA,UAA8FM,EAAA,GAAuBJ,EAAA,GAAAE,CAAA,QAAAG,CAAA,CAAAF,CAAA,CAAAG,SAAA,CAArGC,EAAA,aAAAC,EAAAC,UAAA,EAAqC,cAAAD,EAAAE,WAAA,EAAyCC,EAAA,EAAAC,EAAAJ,EAAAnB,KAAA,aAAAwB,GAAAX,CAAA,CAAAC,CAAA,KAAAD,CAAA,QAAAG,CAAA,CAAAS,CAAA,GAIlGhB,EAAA,eAA+GiB,EAAA,mBAAAC,EAAAC,CAAA,KAAAC,GAAAC,EAAA,SAAAC,GAAAF,EAAAG,iBAA4B,EAAI,KAA/ItB,EAAA,KAA0JC,EAAA,aAAAsB,GAAApB,CAAA,CAAAC,CAAA,KAAAD,CAAA,IAYpJqB,EAAA,wBAAArB,CAAA,QAAAG,CAAA,CAAAmB,CAAA,GAAAlB,SAAA,CAAwEC,EAAA,QAAAkB,EAAAC,OAAA,aAAAC,GAAAzB,CAAA,CAAAC,CAAA,KAAAD,CAAA,KAW5EJ,EAAA,YACEyB,EAAA,2BACFvB,EAAA,GAAAE,CAAA,QAAAG,CAAA,CAAAF,CAAA,CAAAG,SAAA,CAAAsB,CAAA,CAAAJ,CAAA,IADsBb,EAAA,EAAAJ,EAAA,QAAAsB,CAAA,EAAe,OAAAX,EAAAY,aAAA,EAAuB,qCAAAC,GAAA7B,CAAA,CAAAC,CAAA,KAAAD,CAAA,KAhB9DJ,EAAA,YAA2D,YAEmC,WAExFkC,EAAA,EAAAC,GAAA,0BAEAnC,EAAA,UAAiHM,EAAA,GAAkBJ,EAAA,EAEnIF,EAAA,aAA+BM,EAAA,UAACJ,EAAA,EAChCF,EAAA,aAAAC,EAAA,KAAgDC,EAAA,EAAO,EAGzDF,EAAA,mBAAsHM,EAAA,IAAwBJ,EAAA,EAAY,EAG5JgC,EAAA,GAAAE,GAAA,cAGFlC,EAAA,GAAAE,CAAA,QAAAG,CAAA,CAAAF,CAAA,CAAAG,SAAA,CAdwBK,EAAA,GAAAJ,EAAA,OAAAkB,EAAAC,OAAA,EAE4Df,EAAA,EAAAJ,EAAA,cAAAkB,EAAAf,WAAA,EAAmCC,EAAA,EAAAC,EAAAa,EAAApC,KAAA,EAGlFsB,EAAA,GAAAwB,EAAAV,EAAAW,IAAA,EAAAC,CAAA,IAGiB1B,EAAA,EAAAJ,EAAA,aAAAkB,EAAAhB,UAAA,EAAgC,cAAAgB,EAAAf,WAAA,EAAoCC,EAAA,EAAAC,EAAAa,EAAAa,WAAA,EAG3E3B,EAAA,EAAAJ,EAAA,UAAAkB,EAAAlD,MAAA,aAAAgE,GAAArC,CAAA,CAAAC,CAAA,KAAAD,CAAA,QAAAG,CAAA,CAAAS,CAAA,GAhCjDhB,EAAA,WAA8C,aACgE,aAC1GC,EAAA,KAA4CC,EAAA,EAE5CwC,EAAA,EAAAC,GAAA,WAAAC,EAAA,EAGF1C,EAAA,EAEAgC,EAAA,EAAAW,GAAA,iBACF3C,EAAA,EAEAF,EAAA,YAEqBiB,EAAA,0BAAAC,EAAA4B,CAAA,KAAA1B,GAAAC,EAAA,QAAAC,GAAgBF,EAAA2B,eAAA,CAAgB,KAGnDb,EAAA,EAAAc,GAAA,eAmBF9C,EAAA,MAAAE,CAAA,QAAAG,CAAA,CAAAmB,CAAA,GAnCsDb,EAAA,EAAAJ,EAAA,UAAAwC,EAAA,EAAAC,GAAA9B,EAAAG,gBAAA,GAGlDV,EAAA,GAAAsC,EAAA/B,EAAAgC,gBAAA,EAKOvC,EAAA,GAAAJ,EAAA,QAAAW,EAAAG,kBAAAH,EAAAiC,mBAAA,EAMTxC,EAAA,EAAAJ,EAAA,iBAAAW,EAAAkC,cAAAC,aAAA,GAE+C1C,EAAA,EAAAJ,EAAA,UAAAW,EAAAoC,OAAA,ICGnD,GAAaC,KAAsB,KAA7B,GAAOA,GAAP,KAAOA,EAAsB,CACzBC,SAAWjH,EAAOkH,EAAQ,EAC1BC,YAAcnH,EAAOoH,EAAW,EAChCC,gBAAkBrH,EAAOF,CAAe,EACxCwH,GAAKtH,EAAOuH,CAAiB,EAE5BC,mBAAqBC,EAAsB,oBAAoB,EAExEZ,cAAgB,GAAIa,KAEpBC,WAAa,GAEbpC,cAEAwB,QAWM,GAENJ,iBAAwC,GACxC7B,iBAAmB,GACnB8B,oBAAsB,GAEtBgB,SAAW,GAEHC,OAAS,GACTC,YAAc,EACdC,QAAU,GACVC,aAAe,GACfC,UAAY,GACZC,yBAA2B,GAE3BC,QAERC,UAAQ,CACN,KAAKC,gBAAe,EAEpB,KAAKlB,YAAYmB,yBAAwB,EACtCC,UAAUC,GAAQ,KAAKjD,cAAgBiD,CAAI,EAE9C,KAAKL,QAAU,KAAKhB,YAAYsB,sBAAqB,EAClD1H,KAAKC,EAAU,IAAM,KAAKmG,YAAYmB,yBAAwB,CAAE,CAAC,EACjEC,UAAUC,GAAO,CAChB,KAAKjD,cAAgBiD,EAErB,KAAKzB,QAAU,GACf,KAAKsB,gBAAe,CACtB,EAAC,CACL,EAEAK,aAAW,CACL,KAAKP,SAAS,KAAKA,QAAQQ,YAAW,CAC5C,EAEAC,oBAAkB,CAEhB,GADI,KAAKhC,qBACL,CAAC,KAAKsB,yBAA0B,OAEpC,KAAKA,yBAA2B,GAEhC,GAAMW,GAAK,KAAKrB,mBAAkB,EAAGsB,cACrC,KAAKlC,oBAAsBiC,EAAGE,YAAcF,EAAGG,YAC/C,KAAK1B,GAAG2B,cAAa,CACvB,EAEAC,iBAAe,CACb,KAAKtB,SAAW,EAClB,EAEAuB,iBAAe,CACb,KAAKvB,SAAW,EAClB,EAEAtB,gBAAc,CACR,KAAKwB,aAAe,KAAKC,SACzB,KAAKC,cACL,KAAKC,WACL,KAAKL,WAET,KAAKE,cACL,KAAKO,gBAAe,EACtB,EAEQA,iBAAe,CACrB,KAAKJ,UAAY,GAEjB,KAAKZ,gBAAgB7G,kBAAkB,KAAKsH,WAAW,EACpDS,UAAU,CACTa,KAAMC,GAAW,CAGf,GAFA,KAAKpB,UAAY,GAEboB,EAAS7H,KAAKgB,SAAW,GAAK6G,EAAS3H,SAASc,SAAW,GAAK6G,EAAS5H,WAAWe,SAAW,EAAG,CACpG,KAAKwF,aAAe,GAChB,KAAKH,SAAW,KAAO,KAAKF,WAAa,IAE7C,OACF,CAEA,KAAKE,OAAS,GACd,KAAKhB,cAAcuC,KAAKC,CAAQ,EAEhC,OAAWC,KAASD,GAAS5H,WAC3B,KAAKsF,QAAQjF,KAAK,CAChBiE,yBAAiCuD,EAAMzG,SAASC,KAAK,cACrDA,MAAOwG,EAAMzG,SAASC,MACtBoB,WAAY,CAAE,SAAS,EACvBC,YAAa,CAAEoF,cAAe,CAAED,EAAMzG,SAAS2G,EAAE,CAAE,EACnDxH,OAAQsH,EAAMtH,OACd6D,gBAAM4D,CACP,EAGH,OAAWH,KAASD,GAAS7H,KAC3B,KAAKuF,QAAQjF,KAAK,CAChBiE,0BAAkCuD,EAAMI,GAAG,cAC3C5G,MAAO,IAAIwG,EAAMI,GAAG,GACpBxF,WAAY,CAAE,SAAS,EACvBC,YAAa,CAAEwF,UAAW,CAAEL,EAAMI,GAAG,CAAE,EACvC1H,OAAQsH,EAAMtH,OACd6D,cAAM4D,CACP,EAGH,OAAWH,KAASD,GAAS3H,SAC3B,KAAKqF,QAAQjF,KAAK,CAChBiE,0BAAa0D,CACb3G,MAAOwG,EAAMtH,OAAO,CAAC,EAAE4H,eACvB1F,WAAY,CAAE,KAAMoF,EAAMtH,OAAO,CAAC,EAAE4H,cAAc,EAClDzF,YAAa,GACbnC,OAAQsH,EAAMtH,OACdmD,QAASmE,EAAMnE,QACfU,aAAM4D,CACP,EAGH,KAAK9C,iBAAmB,KAAKI,QAAQ3E,IAAIuB,GAAKA,CAAC,EAC/C,KAAKuE,yBAA2B,EAClC,GAEA2B,MAAOzI,GAAM,CACX,KAAK6F,SAAS4C,MAAMzI,EAAI0I,OAAO,EAC/B,KAAK7B,UAAY,EACnB,GACD,CACL,IAAA9E,CAAA,CAxJW6D,4CAAsB,IAAA7D,CAAA,CAAtB6D,wBAAsB+C,UAAA,wBAAAC,UAAA,QAAAA,CAAAC,EAAAC,EAAA,CAAAD,EAAA,GAAAE,CAAA,CAAAC,CAAA,CAAA5C,kBAAA,CAAA6C,EAAA,IAAAC,CAAA,IAAAC,CAAA,KAAAC,KAAA,GAAAC,IAAA,GAAAC,MAAA,CAAAA,CAAA,QAAArF,CAAA,CAAAA,CAAA,UDzBFoE,yBAGaA,2BAITA,kBAOqHA,+BAiBjH,eAAiB,yCAAApE,CAAA,CAAAiF,CAAA,CAAAF,CAAA,CAAAO,CAAA,CAAAC,CAAA,iiCAAAC,QAAA,SAAAA,CAAAP,CAAA,CAAAF,CAAA,EAAAE,CAAA,KA/B1D/G,EAAA,UAAAC,EAAA,KAAyCC,EAAA,EAEzCgC,EAAA,EAAAqF,GAAA,aAAkB,EAAAC,GAAA,OAAAT,CAAA,KAAlBlG,EAAA,GAAA4G,EAAAd,EAAAvC,WAAA,QAAAsD,YAAA,ECeIC,GACAC,GACAC,GACAC,GACAC,EAAYC,EAAAC,EAAAC,EACZC,EAAoB,EAAAC,OAAA;kEAAA,KAGlB,GAAO3E,GAAP4E,QAAO5E,EAAsB,MCTnC,GAAa6E,KAAsB,KAA7B,GAAOA,GAAP,KAAOA,EAAsB,CACzBC,MAAQ9L,EAAO+L,EAAc,EAC7BC,aAAehM,EAAOK,CAAY,EAClC4L,MAAQjM,EAAOkM,EAAY,EAC3BC,KAAOnM,EAAOoM,EAAW,EAEjCC,4BAA8B,KAAKC,oBAAoBC,KAAK,IAAI,EAChEC,4BAA8B,KAAKC,oBAAoBF,KAAK,IAAI,EAEhEG,MAEAC,YAEAC,YACAC,aAEAC,yBAA2B,GAE3BC,eAAiB,GAEjBnF,SAAW,GAEHoF,SAER5E,UAAQ,CACN,KAAKwE,YAAc,eACnB,KAAKC,aAAe,YAEpB,KAAKG,SAAW,KAAKlB,MAAMpL,OAAO6H,UAAU,IAAM,KAAK0E,OAAM,CAAE,CACjE,EAEAvE,aAAW,CACL,KAAKsE,UAAU,KAAKA,SAASrE,YAAW,CAC9C,EAEA2D,oBAAqBY,EAAsCC,EAAqB,CAC9E,GAAMzM,GAAS0M,EAAAC,EAAA,GACVF,EAAQG,kBAAiB,GADf,CAGbC,gBAAiBF,EAAA,GAAKH,GACtBM,UAAW,KAGb,MAAO,MAAKvB,MAAMwB,WAChB,KAAKzB,aAAa0B,WAAWnB,KAAK,KAAKP,YAAY,EACnDtL,EACA,SACA,8CACA,6CAA6C,CAEjD,EAEA+L,oBAAqBU,EAAqB,CACxC,GAAM9K,GAAS8K,EAAQG,kBAAiB,EAExC,MAAO,MAAKtB,aAAa2B,iBAAiBtL,EAAOuL,KAAMvL,EAAOwL,OAAO,CACvE,EAEAC,iBAAkBX,EAAqB,CACrC,KAAKY,WAAWZ,EAAQa,MAAOb,EAAQS,IAAI,EAC3C,KAAKK,kBAAkBd,EAAQS,IAAI,EACnC,KAAKzB,KAAK+B,SAAS,KAAKxB,KAAK,CAC/B,EAEAxD,iBAAe,CACb,KAAKtB,SAAW,EAClB,EAEAuB,iBAAe,CACb,KAAKvB,SAAW,GAGhB,KAAKqF,OAAM,CACb,EAEAA,QAAM,CACJ,KAAKc,WAAU,EACf,KAAKE,kBAAkB,KAAKrB,WAAW,EACvC,KAAKT,KAAK+B,SAAS,KAAKxB,KAAK,CAC/B,EAEQuB,kBAAmBL,EAAoB,CAC7C,KAAKjB,YAAciB,IAAS,gBAAkBA,IAAS,aACzD,EAEQG,WAAYC,EAA0B,KAAKnB,aAAce,EAAuB,KAAKhB,YAAW,CACtG,GAAMuB,GAAgB,KAAKC,iBAAiBR,CAAI,EAEhD,GAAII,IAAU,QAAS,CACrB,KAAKtB,qBAAQjD,CACb,OACF,CAEA,GAAI0E,IAAkB,cAAe,CACnC,KAAKzB,wBAAQjD,CACb,OACF,CAEA,GAAI,CAAE,MAAO,WAAY,QAAS,OAAO,EAAG4E,SAASF,CAAa,EAAG,CACnE,KAAKzB,cAAQjD,CACb,OACF,CACF,CAEQ2E,iBAAkBR,EAAoB,CAC5C,MAAOA,GAAKU,QAAQ,KAAM,EAAE,CAC9B,IAAAnL,CAAA,CA1GW0I,4CAAsB,IAAA1I,CAAA,CAAtB0I,wBAAsB9B,UAAA,mBAAAS,MAAA,EAAAC,KAAA,EAAAC,WAAA,IAAA6D,6BChBF9E,mRAAjClG,EAAA,UAAAC,EAAA,KAA8CC,EAAA,EAE9CF,EAAA,sBAgBEiB,EAAA,0BAAAgK,EAAA,OAAkBtE,GAAA4D,iBAAAU,CAAA,CAAwB,IAE5C/K,EAAA,GAAA6G,CAAA,KAjBElG,EAAA,GAAAJ,EAAA,8BAAAkG,EAAAmC,2BAAA,EAA2D,8BAAAnC,EAAAsC,2BAAA,EACA,cAAAtC,EAAA0C,WAAA,EAEhC,eAAA1C,EAAA2C,YAAA,EACE,cAAA3C,EAAAyC,WAAA,EAKF,WAAAzC,EAAAtC,QAAA,KAAAqD,YAAA,EDCzBwD,EAAmB,EAAAC,cAAA,KAGjB,GAAO7C,GAAP8C,QAAO9C,EAAsB,aAAA+C,CAAA,IAAAC,CAAA,CAAAC,EAAA,IAAAF,CAAA,CAAAG,EAAA,IAAAnM,CAAA","names":["OverviewService","authHttp","inject","HttpClient","restExtractor","RestExtractor","videosService","VideoService","serverService","ServerService","getVideosOverview","page","params","HttpParams","append","get","BASE_OVERVIEW_URL","pipe","switchMap","serverVideosOverview","updateVideosOverview","catchError","err","handleError","observables","videosOverviewResult","tags","categories","channels","key","objectKeysTyped","object","push","of","videos","extractVideos","total","data","map","result","tap","immutableAssign","length","forkJoin","getServerLocale","translations","c","category","label","peertubeTranslate","__publicField","environment","apiUrl","m","factory","ɵfac","_OverviewService","ɵɵelementStart","ɵɵi18n","ɵɵelementEnd","Pe","o","i","ɵɵtext","n","$implicit","ɵɵproperty","quickAccess_r2","routerLink","queryParams","ɵɵadvance","ɵɵtextInterpolate","Ee","A","ɵɵlistener","ɵɵrestoreView","_r3","ctx_r3","ɵɵnextContext","ɵɵresetView","seeAllQuickLinks","be","ɵɵelement","f","object_r5","channel","Se","e","video_r6","userMiniature","Ve","ɵɵtemplate","VideoOverviewComponent_Conditional_3_div_9_my_actor_avatar_3_Template","VideoOverviewComponent_Conditional_3_div_9_div_12_Template","ɵɵi18nExp","type","B","buttonLabel","Ie","ɵɵrepeaterCreate","VideoOverviewComponent_Conditional_3_For_6_Template","_forTrack0","VideoOverviewComponent_Conditional_3_button_7_Template","_r1","onNearOfBottom","VideoOverviewComponent_Conditional_3_div_9_Template","ɵɵpureFunction1","_c1","ɵɵrepeater","quickAccessLinks","quickAccessOverflow","onDataSubject","asObservable","objects","VideoOverviewComponent","notifier","Notifier","userService","UserService","overviewService","cd","ChangeDetectorRef","quickAccessContent","viewChild","Subject","notResults","disabled","loaded","currentPage","maxPage","lastWasEmpty","isLoading","checkQuickAccessOverflow","userSub","ngOnInit","loadMoreResults","getAnonymousOrLoggedUser","subscribe","user","listenAnonymousUpdate","ngOnDestroy","unsubscribe","ngAfterViewChecked","el","nativeElement","scrollWidth","clientWidth","detectChanges","disableForReuse","enabledForReuse","next","overview","value","categoryOneOf","id","$localize","tag","tagsOneOf","byVideoChannel","error","message","selectors","viewQuery","rf","ctx","G","r","he","t","Q","decls","vars","consts","u","C","template","VideoOverviewComponent_Conditional_2_Template","VideoOverviewComponent_Conditional_3_Template","ɵɵconditional","dependencies","InfiniteScrollerDirective","RouterLink","VideoMiniatureComponent","ButtonComponent","CommonModule","NgClass","NgForOf","NgIf","ActorAvatarComponent","styles","_VideoOverviewComponent","VideosListAllComponent","route","ActivatedRoute","videoService","hooks","HooksService","meta","MetaService","getVideosObservableFunction","getVideosObservable","bind","getSyndicationItemsFunction","getSyndicationItems","title","groupByDate","defaultSort","defaultScope","loadUserVideoPreferences","displayFilters","routeSub","update","pagination","filters","__spreadProps","__spreadValues","toVideosAPIObject","videoPagination","skipCount","wrapObsFun","listVideos","getVideoFeedUrls","sort","isLocal","onFiltersChanged","buildTitle","scope","updateGroupByDate","setTitle","sanitizedSort","getSanitizedSort","includes","replace","i18n_0","$event","VideosListComponent","encapsulation","_VideosListAllComponent","b","a","Ze","lt"],"ignoreList":[],"sources":["src/app/+video-list/overview/overview.service.ts","src/app/+video-list/overview/video-overview.component.html","src/app/+video-list/overview/video-overview.component.ts","src/app/+video-list/videos-list-all.component.ts","src/app/+video-list/videos-list-all.component.html"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http'\nimport { inject, Injectable } from '@angular/core'\nimport { RestExtractor, ServerService } from '@app/core'\nimport { immutableAssign } from '@app/helpers'\nimport { VideoService } from '@app/shared/shared-main/video/video.service'\nimport { objectKeysTyped, peertubeTranslate } from '@peertube/peertube-core-utils'\nimport { VideosOverview as VideosOverviewServer } from '@peertube/peertube-models'\nimport { forkJoin, Observable, of } from 'rxjs'\nimport { catchError, map, switchMap, tap } from 'rxjs/operators'\nimport { environment } from '../../../environments/environment'\nimport { VideosOverview } from './videos-overview.model'\n\n@Injectable()\nexport class OverviewService {\n  private authHttp = inject(HttpClient)\n  private restExtractor = inject(RestExtractor)\n  private videosService = inject(VideoService)\n  private serverService = inject(ServerService)\n\n  static BASE_OVERVIEW_URL = environment.apiUrl + '/api/v1/overviews/'\n\n  getVideosOverview (page: number): Observable<VideosOverview> {\n    let params = new HttpParams()\n    params = params.append('page', page + '')\n\n    return this.authHttp\n      .get<VideosOverviewServer>(OverviewService.BASE_OVERVIEW_URL + 'videos', { params })\n      .pipe(\n        switchMap(serverVideosOverview => this.updateVideosOverview(serverVideosOverview)),\n        catchError(err => this.restExtractor.handleError(err))\n      )\n  }\n\n  private updateVideosOverview (serverVideosOverview: VideosOverviewServer): Observable<VideosOverview> {\n    const observables: Observable<any>[] = []\n    const videosOverviewResult: VideosOverview = {\n      tags: [],\n      categories: [],\n      channels: []\n    }\n\n    // Build videos objects\n    for (const key of objectKeysTyped(serverVideosOverview)) {\n      for (const object of serverVideosOverview[key]) {\n        observables.push(\n          of(object.videos)\n            .pipe(\n              switchMap(videos => this.videosService.extractVideos({ total: 0, data: videos })),\n              map(result => result.data),\n              tap(videos => {\n                videosOverviewResult[key].push(immutableAssign(object, { videos }) as any)\n              })\n            )\n        )\n      }\n    }\n\n    if (observables.length === 0) return of(videosOverviewResult)\n\n    return forkJoin(observables)\n      .pipe(\n        // Translate categories\n        switchMap(() => {\n          return this.serverService.getServerLocale()\n            .pipe(\n              tap(translations => {\n                for (const c of videosOverviewResult.categories) {\n                  c.category.label = peertubeTranslate(c.category.label, translations)\n                }\n              })\n            )\n        }),\n        map(() => videosOverviewResult)\n      )\n  }\n}\n","<h1 class=\"visually-hidden\" i18n>Discover</h1>\n\n@if (notResults) {\n  <div class=\"margin-content no-results\" i18n>No results.</div>\n} @else {\n  <div class=\"margin-content quick-access mt-3\">\n    <div #quickAccessContent class=\"quick-access-links\" [ngClass]=\"{ 'see-all-quick-links': seeAllQuickLinks }\">\n      <span i18n class=\"me-2 fg-100\">Quick access:</span>\n\n      @for (quickAccess of quickAccessLinks; track quickAccess.label) {\n        <a class=\"me-2\" [routerLink]=\"quickAccess.routerLink\" [queryParams]=\"quickAccess.queryParams\">{{ quickAccess.label }}</a>\n      }\n    </div>\n\n    <button *ngIf=\"!seeAllQuickLinks && quickAccessOverflow\" type=\"button\" class=\"peertube-button tertiary-button\" (click)=\"seeAllQuickLinks = true\" i18n>More</button>\n  </div>\n\n  <div\n    class=\"margin-content videos-margin-content\"\n    myInfiniteScroller (nearOfBottom)=\"onNearOfBottom()\"\n    [dataObservable]=\"onDataSubject.asObservable()\"\n  >\n    <div class=\"section videos\" *ngFor=\"let object of objects\">\n\n      <div class=\"section-header d-flex flex-wrap justify-content-between align-items-start mb-3\">\n        <h1 class=\"section-title\">\n          <my-actor-avatar *ngIf=\"object.channel\" size=\"40px\" actorType=\"channel\" [actor]=\"object.channel\"></my-actor-avatar>\n\n          <a class=\"text-fg border-highlight text-decoration-none\" routerLink=\"/search\" [queryParams]=\"object.queryParams\">{{ object.label }}</a>\n\n          <span class=\"fg-100 fs-7 mx-2\">·</span>\n          <span i18n class=\"fg-100 fs-7\">{{ object.type }}</span>\n        </h1>\n\n        <my-button class=\"ms-2 d-none-mw\" theme=\"primary\" [routerLink]=\"object.routerLink\" [queryParams]=\"object.queryParams\">{{ object.buttonLabel }}</my-button>\n      </div>\n\n      <div class=\"video-wrapper\" *ngFor=\"let video of object.videos\">\n        <my-video-miniature [video]=\"video\" [user]=\"userMiniature\" [displayVideoActions]=\"true\"></my-video-miniature>\n      </div>\n    </div>\n  </div>\n}\n","import { CommonModule } from '@angular/common'\nimport { AfterViewChecked, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, inject, viewChild } from '@angular/core'\nimport { RouterLink } from '@angular/router'\nimport { DisableForReuseHook, Notifier, User, UserService } from '@app/core'\nimport { ActorAvatarComponent, ActorAvatarInput } from '@app/shared/shared-actor-image/actor-avatar.component'\nimport { ButtonComponent } from '@app/shared/shared-main/buttons/button.component'\nimport { InfiniteScrollerDirective } from '@app/shared/shared-main/common/infinite-scroller.directive'\nimport { Video } from '@app/shared/shared-main/video/video.model'\nimport { VideoMiniatureComponent } from '@app/shared/shared-video-miniature/video-miniature.component'\nimport { Subject, Subscription, switchMap } from 'rxjs'\nimport { OverviewService } from './overview.service'\n\n@Component({\n  selector: 'my-video-overview',\n  templateUrl: './video-overview.component.html',\n  styleUrls: [ './video-overview.component.scss' ],\n  imports: [\n    InfiniteScrollerDirective,\n    RouterLink,\n    VideoMiniatureComponent,\n    ButtonComponent,\n    CommonModule,\n    ActorAvatarComponent\n  ]\n})\nexport class VideoOverviewComponent implements OnInit, OnDestroy, AfterViewChecked, DisableForReuseHook {\n  private notifier = inject(Notifier)\n  private userService = inject(UserService)\n  private overviewService = inject(OverviewService)\n  private cd = inject(ChangeDetectorRef)\n\n  readonly quickAccessContent = viewChild<ElementRef>('quickAccessContent')\n\n  onDataSubject = new Subject<any>()\n\n  notResults = false\n\n  userMiniature: User\n\n  objects: {\n    label: string\n\n    type: string\n    buttonLabel: string\n    videos: Video[]\n\n    channel?: ActorAvatarInput\n\n    queryParams: Record<string, any>\n    routerLink: string[]\n  }[] = []\n\n  quickAccessLinks: typeof this.objects = []\n  seeAllQuickLinks = false\n  quickAccessOverflow = false\n\n  disabled = false\n\n  private loaded = false\n  private currentPage = 1\n  private maxPage = 20\n  private lastWasEmpty = false\n  private isLoading = false\n  private checkQuickAccessOverflow = false\n\n  private userSub: Subscription\n\n  ngOnInit () {\n    this.loadMoreResults()\n\n    this.userService.getAnonymousOrLoggedUser()\n      .subscribe(user => this.userMiniature = user)\n\n    this.userSub = this.userService.listenAnonymousUpdate()\n      .pipe(switchMap(() => this.userService.getAnonymousOrLoggedUser()))\n      .subscribe(user => {\n        this.userMiniature = user\n\n        this.objects = []\n        this.loadMoreResults()\n      })\n  }\n\n  ngOnDestroy () {\n    if (this.userSub) this.userSub.unsubscribe()\n  }\n\n  ngAfterViewChecked () {\n    if (this.quickAccessOverflow) return\n    if (!this.checkQuickAccessOverflow) return\n\n    this.checkQuickAccessOverflow = false\n\n    const el = this.quickAccessContent().nativeElement as HTMLElement\n    this.quickAccessOverflow = el.scrollWidth > el.clientWidth\n    this.cd.detectChanges()\n  }\n\n  disableForReuse () {\n    this.disabled = true\n  }\n\n  enabledForReuse () {\n    this.disabled = false\n  }\n\n  onNearOfBottom () {\n    if (this.currentPage >= this.maxPage) return\n    if (this.lastWasEmpty) return\n    if (this.isLoading) return\n    if (this.disabled) return\n\n    this.currentPage++\n    this.loadMoreResults()\n  }\n\n  private loadMoreResults () {\n    this.isLoading = true\n\n    this.overviewService.getVideosOverview(this.currentPage)\n      .subscribe({\n        next: overview => {\n          this.isLoading = false\n\n          if (overview.tags.length === 0 && overview.channels.length === 0 && overview.categories.length === 0) {\n            this.lastWasEmpty = true\n            if (this.loaded === false) this.notResults = true\n\n            return\n          }\n\n          this.loaded = true\n          this.onDataSubject.next(overview)\n\n          for (const value of overview.categories) {\n            this.objects.push({\n              buttonLabel: $localize`Browse \"${value.category.label}\" videos`,\n              label: value.category.label,\n              routerLink: [ '/search' ],\n              queryParams: { categoryOneOf: [ value.category.id ] },\n              videos: value.videos,\n              type: $localize`category`\n            })\n          }\n\n          for (const value of overview.tags) {\n            this.objects.push({\n              buttonLabel: $localize`Browse \"#${value.tag}\" videos`,\n              label: `#${value.tag}`,\n              routerLink: [ '/search' ],\n              queryParams: { tagsOneOf: [ value.tag ] },\n              videos: value.videos,\n              type: $localize`tag`\n            })\n          }\n\n          for (const value of overview.channels) {\n            this.objects.push({\n              buttonLabel: $localize`View the channel`,\n              label: value.videos[0].byVideoChannel,\n              routerLink: [ '/c', value.videos[0].byVideoChannel ],\n              queryParams: {},\n              videos: value.videos,\n              channel: value.channel,\n              type: $localize`channel`\n            })\n          }\n\n          this.quickAccessLinks = this.objects.map(o => o)\n          this.checkQuickAccessOverflow = true\n        },\n\n        error: err => {\n          this.notifier.error(err.message)\n          this.isLoading = false\n        }\n      })\n  }\n}\n","import { Component, OnDestroy, OnInit, inject } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { ComponentPaginationLight, DisableForReuseHook, MetaService } from '@app/core'\nimport { HooksService } from '@app/core/plugins/hooks.service'\nimport { VideoService } from '@app/shared/shared-main/video/video.service'\nimport { VideoFilterScope, VideoFilters } from '@app/shared/shared-video-miniature/video-filters.model'\nimport { VideosListComponent } from '@app/shared/shared-video-miniature/videos-list.component'\nimport { VideoSortField } from '@peertube/peertube-models'\nimport { Subscription } from 'rxjs'\n\n@Component({\n  templateUrl: './videos-list-all.component.html',\n  imports: [\n    VideosListComponent\n  ]\n})\nexport class VideosListAllComponent implements OnInit, OnDestroy, DisableForReuseHook {\n  private route = inject(ActivatedRoute)\n  private videoService = inject(VideoService)\n  private hooks = inject(HooksService)\n  private meta = inject(MetaService)\n\n  getVideosObservableFunction = this.getVideosObservable.bind(this)\n  getSyndicationItemsFunction = this.getSyndicationItems.bind(this)\n\n  title: string\n\n  groupByDate: boolean\n\n  defaultSort: VideoSortField\n  defaultScope: VideoFilterScope\n\n  loadUserVideoPreferences = true\n\n  displayFilters = true\n\n  disabled = false\n\n  private routeSub: Subscription\n\n  ngOnInit () {\n    this.defaultSort = '-publishedAt'\n    this.defaultScope = 'federated'\n\n    this.routeSub = this.route.params.subscribe(() => this.update())\n  }\n\n  ngOnDestroy () {\n    if (this.routeSub) this.routeSub.unsubscribe()\n  }\n\n  getVideosObservable (pagination: ComponentPaginationLight, filters: VideoFilters) {\n    const params = {\n      ...filters.toVideosAPIObject(),\n\n      videoPagination: { ...pagination },\n      skipCount: true\n    }\n\n    return this.hooks.wrapObsFun(\n      this.videoService.listVideos.bind(this.videoService),\n      params,\n      'common',\n      'filter:api.browse-videos.videos.list.params',\n      'filter:api.browse-videos.videos.list.result'\n    )\n  }\n\n  getSyndicationItems (filters: VideoFilters) {\n    const result = filters.toVideosAPIObject()\n\n    return this.videoService.getVideoFeedUrls(result.sort, result.isLocal)\n  }\n\n  onFiltersChanged (filters: VideoFilters) {\n    this.buildTitle(filters.scope, filters.sort)\n    this.updateGroupByDate(filters.sort)\n    this.meta.setTitle(this.title)\n  }\n\n  disableForReuse () {\n    this.disabled = true\n  }\n\n  enabledForReuse () {\n    this.disabled = false\n\n    // Rebuild the title\n    this.update()\n  }\n\n  update () {\n    this.buildTitle()\n    this.updateGroupByDate(this.defaultSort)\n    this.meta.setTitle(this.title)\n  }\n\n  private updateGroupByDate (sort: VideoSortField) {\n    this.groupByDate = sort === '-publishedAt' || sort === 'publishedAt'\n  }\n\n  private buildTitle (scope: VideoFilterScope = this.defaultScope, sort: VideoSortField = this.defaultSort) {\n    const sanitizedSort = this.getSanitizedSort(sort)\n\n    if (scope === 'local') {\n      this.title = $localize`Local videos`\n      return\n    }\n\n    if (sanitizedSort === 'publishedAt') {\n      this.title = $localize`Recently added`\n      return\n    }\n\n    if ([ 'hot', 'trending', 'likes', 'views' ].includes(sanitizedSort)) {\n      this.title = $localize`Trending`\n      return\n    }\n  }\n\n  private getSanitizedSort (sort: VideoSortField) {\n    return sort.replace(/^-/, '') as VideoSortField\n  }\n}\n","<h1 class=\"visually-hidden\" i18n>Browse videos</h1>\n\n<my-videos-list\n  [getVideosObservableFunction]=\"getVideosObservableFunction\"\n  [getSyndicationItemsFunction]=\"getSyndicationItemsFunction\"\n\n  [defaultSort]=\"defaultSort\"\n  [defaultScope]=\"defaultScope\"\n\n  displayFilters=\"true\"\n\n  loadUserVideoPreferences=\"true\"\n  [groupByDate]=\"groupByDate\"\n\n  highlightLives=\"true\"\n\n  [disabled]=\"disabled\"\n\n  (filtersChanged)=\"onFiltersChanged($event)\"\n>\n</my-videos-list>\n"]}