{"version":3,"mappings":"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","names":["ɵɵelement","o","n","c","ɵɵproperty","ctx_r1","getRatePopoverText","ɵɵsanitizeHtml","Xo","s","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","video","likes","Yo","dislikes","VideoRateComponent","videoService","inject","VideoService","notifier","Notifier","hotkeysService","HotkeysService","screenService","ScreenService","input","undefined","videoPassword","isUserLoggedIn","userRatingLoaded","output","rateUpdated","userRating","tooltipLike","tooltipDislike","hotkeys","ngOnInit","isInMobileView","$localize","Hotkey","setLike","setDislike","add","ngOnChanges","checkUserRating","ngOnDestroy","remove","setRating","getUserVideoRating","uuid","subscribe","next","ratingObject","rating","emit","error","err","message","nextRating","like","setVideoLike","bind","dislike","setVideoDislike","none","unsetVideoLike","updateVideoRating","oldRating","newRating","likesToIncrement","dislikesToIncrement","buildLikeAndDislikePercents","b","selectors","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","p","x","ɵɵtemplate","VideoRateComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","ɵɵlistener","i0","ɵɵrestoreView","_r1","ɵɵresetView","VideoRateComponent_span_4_Template","VideoRateComponent_span_7_Template","t","re","ratePopoverText_r3","ɵɵpureFunction1","_c0","le","i","dependencies","NgbPopover","NgClass","NgbTooltip","GlobalIconComponent","NgIf","styles","_VideoRateComponent","Qo","Jo","qo","Zo","liked","Ko","en","ɵɵnextContext","showSupportModal","ɵɵi18n","tooltipSupport","tn","tooltipSaveToPlaylist","on","_r3","showDownloadModal","nn","ActionButtonsComponent_Conditional_9_button_0_Template","isVideoDownloadable","sn","likesBarTooltipText","_c3","_c4","likesPercent","rn","ɵɵelementContainerStart","H","channel","displayName","support","videoCaptions","playlist","ActionButtonsComponent","redirectService","RedirectService","videoShareModal","viewChild","supportModal","videoDownloadModal","isUserOwner","transcriptionWidgetOpened","currentTime","currentPlaylistPosition","showTranscriptionWidget","hideTranscriptionWidget","videoActionsOptions","download","update","blacklist","delete","report","duplicate","mute","liveInfo","generateTranscription","transcriptionWidget","transcoding","setVideoLikesBarTooltipText","show","VideoDetails","downloadEnabled","isLive","showShareModal","onRateUpdated","onVideoRemoved","redirectToHomepage","isVideoAddableToPlaylist","isPasswordProtected","privacy","id","VideoPrivacy","PASSWORD_PROTECTED","viewQuery","V","Q","F","e","$event","ActionButtonsComponent_button_3_Template","ActionButtonsComponent_div_8_Template","ActionButtonsComponent_Conditional_9_Template","ActionButtonsComponent_div_12_Template","ActionButtonsComponent_ng_container_13_Template","ɵɵconditional","NgbDropdown","NgbDropdownToggle","NgbDropdownMenu","VideoAddToPlaylistComponent","VideoDownloadComponent","VideoActionsDropdownComponent","NgStyle","SupportModalComponent","VideoShareComponent","_ActionButtonsComponent","VIDEO_COMMENT_TEXT_VALIDATOR","VALIDATORS","Validators","required","minLength","maxLength","MESSAGES","minlength","maxlength","TextareaAutoResizeDirective","elem","ElementRef","rows","overflow","ngAfterViewInit","resize","textarea","nativeElement","style","height","scrollHeight","hostVars","hostBindings","ɵɵstyleProp","_TextareaAutoResizeDirective","an","ln","dn","cn","pn","mn","ɵɵtextInterpolate1","formErrors","text","vn","cancelCommentReply","form","valid","addingComment","addingCommentButtonValue","un","_r4","hideModals","getUri","_n","$implicit","emojiMarkup_r6","emoji","name","gn","_r5","VideoCommentAddComponent_ng_template_49_div_7_Template","getEmojiMarkupList","VideoCommentAddComponent","FormReactive","formReactiveService","FormReactiveService","videoCommentService","VideoCommentService","modalService","NgbModal","localeId","LOCALE_ID","user","parentComment","parentComments","focusOnInit","textValue","commentCreated","cancelEdit","visitorModal","emojiModal","textareaElement","emojiMarkupList","buildForm","initTextValue","changes","currentValue","previousValue","patchTextValue","emojiMarkupObjectList","require","default","Object","keys","push","onValidKey","forceCheck","formValidated","openVisitorModal","event","srcElement","blur","preventDefault","open","openEmojiModal","backdrop","size","dismissAll","commentCreate","value","obs","addCommentReply","addCommentThread","comment","reset","isAddButtonDisplayed","window","location","href","isRTL","getLocaleDirection","getAvatarActorType","videoId","inReplyToCommentId","mentions","filter","account","map","by","mentionsSet","Set","mentionsText","Array","from","join","focus","setTimeout","scrollIntoView","behavior","block","inline","dispatchEvent","Event","patchValue","__ngFactoryType__","Ft","VideoCommentAddComponent_div_44_Template","VideoCommentAddComponent_Conditional_46_Template","VideoCommentAddComponent_ng_template_47_Template","VideoCommentAddComponent_ng_template_49_Template","tmp_4_0","FormsModule","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","ReactiveFormsModule","FormGroupDirective","FormControlName","ActorAvatarComponent","HelpComponent","RemoteSubscribeComponent","LoginLinkComponent","NgFor","_VideoCommentAddComponent","TimestampRouteTransformerDirective","timestampClicked","onClick","target","hasAttribute","classList","contains","ngxLink","document","createElement","getAttribute","ngxLinkParams","URLSearchParams","search","has","separators","start","get","match","RegExp","includes","parseInt","reduce","acc","_TimestampRouteTransformerDirective","fn","hn","jn","bn","Cn","yn","Eo","threadId","Mo","Tn","ctx_r0","url","isChild","En","Mn","An","VideoCommentComponent_div_0_ng_container_6_div_1_Template","ie","VideoCommentComponent_div_0_ng_container_6_span_12_Template","_r2","handleTimestampClicked","onWantToReply","highlightedComment","_c5","ɵɵpureFunction2","_c7","shortUUID","_c6","createdAt","ɵɵpipeBind1","heldForReview","sanitizedCommentHTML","prependModerationActions","commentAccount","commentUser","On","xn","onCommentReplyCreated","onResetReply","newParentComments","redraftValue","wn","onWantToDelete","onWantToRedraft","onWantToApprove","commentChild_r5","Sn","VideoCommentComponent_div_0_div_9_div_1_Template","commentTree","children","Pn","VideoCommentComponent_div_0_my_actor_avatar_2_Template","VideoCommentComponent_div_0_ng_container_6_Template","VideoCommentComponent_div_0_ng_container_7_Template","VideoCommentComponent_div_0_my_video_comment_add_8_Template","VideoCommentComponent_div_0_div_9_Template","ɵɵprojection","_c2","isDeleted","firstInThread","kn","VideoCommentComponent","markdownService","MarkdownService","authService","AuthService","userService","UserService","commentReportModal","model","wantedToReply","wantedToDelete","wantedToApprove","wantedToRedraft","threadCreated","resetReply","getUser","init","createdComment","set","hasDisplayedChildren","unshift","isLoggedIn","timestamp","canBeRemovedUser","hasRight","UserRight","MANAGE_ANY_VIDEO_COMMENT","canBeApprovedByUser","isRedraftableByUser","totalReplies","isReportableByUser","isCommentDisplayed","length","getUserIfNeeded","userId","MANAGE_USERS","getUserWithCache","__async","commentText","replace","html","textMarkdownToHTML","markdown","withHtml","withEmoji","processVideoTimestamps","concat","Account","label","iconName","handler","showReportModal","isHeader","ngContentSelectors","VideoCommentComponent_div_0_Template","VideoCommentComponent_ng_container_1_Template","RouterLink","UserModerationDropdownComponent","CommentReportComponent","FromNowPipe","_VideoCommentComponent","In","Nn","item_r1","ɵɵsanitizeUrl","Rn","FeedComponent_button_0_ng_template_3_a_0_Template","syndicationItems","Vn","FeedComponent_button_0_ng_template_3_Template","feedsList_r3","getTitle","FeedComponent","popover","isOpen","FeedComponent_button_0_Template","_FeedComponent","Dn","Ln","Hn","onWantedToReply","onWantedToDelete","onWantedToRedraft","onThreadCreated","highlightedThread","threadComments","commentReplyRedraftValue","$n","ɵɵelementContainer","zn","ɵɵi18nExp","comment_r6","tmp_14_0","se","Wn","Fn","VideoCommentsComponent_Conditional_15_div_7_my_video_comment_1_button_1_ng_template_3_ng_container_0_Template","VideoCommentsComponent_Conditional_15_div_7_my_video_comment_1_button_1_ng_template_3_ng_template_1_Template","totalRepliesFromVideoAuthor","onlyAuthorComments_r7","Un","Gn","viewReplies","VideoCommentsComponent_Conditional_15_div_7_my_video_comment_1_button_1_ng_container_2_Template","VideoCommentsComponent_Conditional_15_div_7_my_video_comment_1_button_1_ng_template_3_Template","VideoCommentsComponent_Conditional_15_div_7_my_video_comment_1_button_1_ng_template_5_Template","hasAuthorComments_r8","noAuthorComments_r9","threadLoading","Bn","VideoCommentsComponent_Conditional_15_div_7_my_video_comment_1_button_1_Template","index","i_r11","comments","Xn","VideoCommentsComponent_Conditional_15_div_7_my_video_comment_1_Template","Yn","onCommentThreadCreated","VideoCommentsComponent_Conditional_15_div_1_Template","onNearOfBottom","VideoCommentsComponent_Conditional_15_my_video_comment_6_Template","VideoCommentsComponent_Conditional_15_div_7_Template","commentThreadRedraftValue","totalNotDeletedComments","onDataSubject","asObservable","Qn","VideoCommentsComponent","confirmService","ConfirmService","activatedRoute","ActivatedRoute","hooks","HooksService","pluginService","PluginService","commentHighlightBlock","sort","componentPagination","currentPage","itemsPerPage","totalItems","commentsEnabled","Subject","sub","addAction","loadMoreThreads","params","highlightedThreadId","processHighlightedThread","resetVideo","removeAction","unsubscribe","commentId","highlightThread","wrapObsFun","getVideoThreadComments","res","runAction","data","VideoComment","errorBody","body","code","ServerErrorCode","COMMENT_NOT_ASSOCIATED_TO_VIDEO","getVideoCommentThreads","lastValueFrom","total","handleSortChange","commentToDelete","arguments","title","isLocal","confirm","deleteVideoComment","find","softDeleteComment","commentToRedraft","commentToRedraftText","approveComments","success","hasMoreItems","deletedAt","Date","commentsPolicy","VideoCommentPolicy","DISABLED","getVideoCommentsFeeds","snapshot","i18n_5","M","i18n_7","k","i18n_9","B","g","VideoCommentsComponent_Conditional_15_Template","VideoCommentsComponent_Conditional_16_Template","NgbDropdownButtonItem","NgbDropdownItem","InfiniteScrollerDirective","LoaderComponent","_VideoCommentsComponent","Jn","acceptedPrivacyConcern","PrivacyConcernsComponent","serverService","ServerService","display","serverConfig","getHTMLConfig","getAnonymousOrLoggedUser","updateDisplay","peertubeLocalStorage","setItem","LS_PRIVACY_CONCERN_KEY","isP2PEnabled","p2pEnabled","alreadyAccepted","getItem","__publicField","i18n_0","PrivacyConcernsComponent_div_0_Template","_PrivacyConcernsComponent","qn","ɵɵpipeBind2","scheduledUpdate","updateAt","Zn","Kn","es","getAlertWarning","watchSecondary","ts","VideoAlertComponent_my_alert_3_Conditional_3_Template","tmp_1_0","canSeeMoreInfo","watchMain","is","os","blacklistedReason","ns","VideoAlertComponent","noPlaylistVideoFound","videoStateMessage","VideoStateMessageService","UPDATE_ANY_VIDEO","buildWarn","state","hasVideoScheduledPublication","isWaitingForLive","VideoState","WAITING_FOR_LIVE","isLiveEnded","LIVE_ENDED","isVideoPasswordProtected","VideoAlertComponent_my_alert_0_Template","VideoAlertComponent_my_alert_1_Template","VideoAlertComponent_my_alert_2_Template","VideoAlertComponent_my_alert_3_Template","VideoAlertComponent_my_alert_4_Template","VideoAlertComponent_my_alert_5_Template","VideoAlertComponent_my_alert_6_Template","m","h","tmp_3_0","tmp_5_0","blacklisted","tmp_6_0","canBypassPassword","PTDatePipe","AlertComponent","_VideoAlertComponent","ss","host","ht","jt","rs","categoryOneOf","as","licenceOneOf","ls","languageOneOf","ds","tagsOneOf","cs","getVideoHost","originInstanceHost","ps","inputFileUpdatedAt","ms","originallyPublishedAt","vs","category","us","ɵɵpureFunction0","_c1","_s","licence","gs","fs","language","hs","js","tag_r2","bs","duration","Cs","metadata_r3","ys","safeHTML","Ts","VideoAttributesComponent_div_28_span_3_Template","VideoAttributesComponent_div_28_span_4_Template","VideoAttributesComponent","pluginMetadata","wrapObject","getVideoTags","isArray","tags","VideoAttributesComponent_div_5_Template","VideoAttributesComponent_div_6_Template","VideoAttributesComponent_div_7_Template","VideoAttributesComponent_span_11_Template","VideoAttributesComponent_a_12_Template","VideoAttributesComponent_span_16_Template","VideoAttributesComponent_a_17_Template","VideoAttributesComponent_span_21_Template","VideoAttributesComponent_a_22_Template","VideoAttributesComponent_a_26_Template","VideoAttributesComponent_div_27_Template","VideoAttributesComponent_div_28_Template","TimeDurationFormatterPipe","_VideoAttributesComponent","Es","Ms","As","byVideoChannel","channelLinkTitle","Os","ɵɵclassProp","showChannel","byAccount","accountLinkTitle","VideoAvatarChannelComponent","showAccount","VideoAvatarChannelComponent_my_actor_avatar_1_Template","VideoAvatarChannelComponent_my_actor_avatar_2_Template","_VideoAvatarChannelComponent","xs","ws","Ss","Ps","ks","ctx_r2","completeDescriptionShown","VideoDescriptionComponent_button_3_Conditional_1_Template","VideoDescriptionComponent_button_3_Conditional_2_Template","VideoDescriptionComponent","descriptionHTML","videoHTMLDescription","setVideoDescriptionHTML","hasEllipsis","el","offsetHeight","showMoreDescription","showLessDescription","onTimestampClicked","description","VideoDescriptionComponent_button_3_Template","_VideoDescriptionComponent","VideoRecommendationService","videos","searchService","SearchService","config","videoIdsHistory","constructor","getRecommendationHistory","getRecommendations","currentVideo","exceptions","totalVideos","internalTotalVideos","Math","min","fetchPage","pipe","otherVideos","v","slice","pagination","switchMap","defaultSubscription","listVideos","skipCount","videoPagination","searchIndexConfig","searchIndex","enabled","disableLocalSearch","searchVideos","advancedSearch","AdvancedSearch","searchTarget","excludeAlreadyWatched","of","factory","ɵfac","_VideoRecommendationService","Is","Ns","ɵɵtwoWayListener","ɵɵtwoWayBindingSet","autoPlayNextVideo","switchAutoPlayNextVideo","autoPlayNextVideoTooltip","ɵɵtwoWayProperty","Rs","Vs","Ds","RecommendedVideosComponent_Conditional_1_ng_container_4_span_1_Template","RecommendedVideosComponent_Conditional_1_ng_container_4_hr_3_Template","count","i_r5","length_r6","displayOptions","video_r4","displayAsRow","Ls","RecommendedVideosComponent_Conditional_1_div_3_Template","RecommendedVideosComponent_Conditional_1_ng_container_4_Template","RecommendedVideosComponent","videoRecommendation","gotRecommendations","date","views","avatar","userSub","listenAnonymousUpdate","startWith","loadRecommendations","details","updateMyProfile","refreshUserInformation","updateMyAnonymousProfile","RecommendedVideosComponent_Conditional_1_Template","InputSwitchComponent","NgModel","VideoMiniatureComponent","_RecommendedVideosComponent","import_debug","Pt","Ei","PlayerStylesComponent","encapsulation","_PlayerStylesComponent","Nl2BrPipe","htmlRenderer","HtmlRendererService","transform","allowFormatting","convertToBr","pure","_Nl2BrPipe","Hs","$s","zs","segment_r3","ctx_r3","onSegmentClick","getSegmentClasses","startFormatted","debugLogger","debug","VideoTranscriptionComponent","captionService","VideoCaptionService","settingsPanel","captions","segmentClicked","closeTranscription","currentCaption","segments","activeSegment","currentLanguage","languagesOptions","isSettingsPanelCollapsed","settingsPanelShown","segmentsStore","searchSubject","clickout","debounceTime","distinctUntilChanged","filterSegments","load","findActiveSegment","segment","active","updateCurrentCaption","parseCurrentCaption","some","automaticallyGenerated","getCaptionContent","fileUrl","content","entries","parse","to","round","end","durationToString","onSearchChange","searchLowercase","toLocaleLowerCase","lastActiveSegment","isNaN","current","element","querySelector","container","isInViewport","scrollTop","offsetTop","ɵɵresolveDocument","VideoTranscriptionComponent_Conditional_20_Template","VideoTranscriptionComponent_div_21_Template","NgbCollapse","SelectOptionsComponent","_VideoTranscriptionComponent","Ho","Fs","Us","Gs","Bs","onElementRemoved","playlistElement_r4","position","isPlaylistOwned","Xs","onPlaylistVideosNearOfBottom","VideoWatchPlaylistComponent_div_0_span_4_Template","VideoWatchPlaylistComponent_div_0_span_5_Template","VideoWatchPlaylistComponent_div_0_span_6_Template","switchAutoPlayNextVideoPlaylist","switchLoopPlaylist","VideoWatchPlaylistComponent_div_0_div_20_Template","isUnlistedPlaylist","isPrivatePlaylist","isPublicPlaylist","ownerBy","playlistPagination","autoPlayNextVideoPlaylist","autoPlayNextVideoPlaylistSwitchText","loopPlaylist","loopPlaylistSwitchText","playlistElements","VideoWatchPlaylistComponent","auth","videoPlaylist","VideoPlaylistService","sessionStorage","SessionStorageService","router","Router","videoFound","noVideoFound","noPlaylistVideos","setAutoPlayNextVideoPlaylistSwitchText","getBoolOrDefault","SESSION_STORAGE_LOOP_PLAYLIST","setLoopPlaylistSwitchText","loadPlaylistElements","redirectToFirst","playlistElement","updatePaginationOnDelete","ownerAccount","username","VideoPlaylistPrivacy","UNLISTED","PRIVATE","PUBLIC","options","getPlaylistVideos","videoPlaylistId","firstAvailableVideo","updatePlaylistIndex","extras","queryParams","startTimestamp","stop","stopTimestamp","playlistPosition","replaceUrl","navigate","videosLength","hasPreviousVideo","getPreviousVideo","findPlaylistVideo","hasNextVideo","getNextVideo","navigateToPreviousPlaylistVideo","previous","type","found","newPosition","navigateToNextPlaylistVideo","peertubeSessionStorage","toString","VideoWatchPlaylistComponent_div_0_Template","VideoPlaylistElementMiniatureComponent","_VideoWatchPlaylistComponent","Ys","Qs","Js","qs","Zs","Ks","Wo","er","tr","getCurrentTime","ir","ɵɵi18nStart","ɵɵi18nEnd","publishedAt","viewers","or","nr","VideoWatchComponent_div_13_10_ng_template_0_Template","sr","rr","VideoWatchComponent_div_13_17_ng_template_0_Template","ar","lr","dr","VideoWatchComponent_div_13_ng_template_4_Template","VideoWatchComponent_div_13_10_Template","VideoWatchComponent_div_13_17_Template","VideoWatchComponent_div_13_ng_container_23_Template","VideoWatchComponent_div_13_ng_container_24_Template","onRecommendations","publishedTemplate_r5","getCurrentPlaylistPosition","isChannelDisplayNameGeneric","authUser","displayOtherVideosAsRow","cr","VideoWatchComponent","route","playlistService","liveVideoService","LiveVideoService","restExtractor","RestExtractor","zone","NgZone","videoCaptionService","videoChapterService","VideoChapterService","peertubeSocket","PeerTubeSocket","videoFileTokenService","VideoFileTokenService","PlatformLocation","metaService","MetaService","videoWatchPlaylist","subscribeButton","playerElement","peertubePlayer","theaterEnabled","videoChapters","liveVideo","storyboards","remoteServerDown","nextRecommendedVideoId","nextRecommendedVideoTitle","videoFileToken","paramsSub","queryParamsSub","configSub","liveVideosSub","anonymousUser","getAnonymousUser","loadRouteParams","loadRouteQuery","getStoredTheater","cleanupVideoWatch","constructorOptions","wrapFun","buildPeerTubePlayerConstructorOptions","urlOptions","getUrlOptions","PeerTubePlayer","destroy","revertMetaTags","getPlayer","setCurrentTime","scrollToTop","onPlaylistVideoFound","loadVideo","forceAutoplay","onPlaylistNoVideoFound","getWindowInnerWidth","routeParams","playlistId","loadPlaylist","parsePlaylistPosition","positionParam","logger","liveRefresh","isSameElement","videoAndLiveObs","getVideo","getVideoLive","live","videoRequiresFileToken","getVideoFileToken","videoUUID","token","forkJoin","listCaptions","getChapters","getStoryboards","captionsResult","chaptersResult","loggedInOrAnonymousUser","onVideoFetched","chapters","catch","handleGlobalError","VIDEO_REQUIRES_PASSWORD","INCORRECT_VIDEO_PASSWORD","confirmed","password","handleVideoPasswordError","back","__spreadProps","__spreadValues","handleRequestError","getVideoPlaylist","newId","DOES_NOT_RESPECT_FOLLOW_CONSTRAINTS","originUrl","instance","redirectTo404IfNotFound","HttpStatusCode","BAD_REQUEST_400","FORBIDDEN_403","NOT_FOUND_404","errorMessage","isIncorrectPassword","confirmWithPassword","subscribeToLiveEventsIfNeeded","isNSFWHiddenForUser","confirmButtonText","cancelButtonText","moreInfo","nsfwSummary","buildHotkeysHelp","setMetaTags","loadPlayer","hookOptions","videojs","videoState","updatePlayerOnNoLive","hasPlayed","enable","loadOptions","buildPeerTubePlayerLoadOptions","runOutsideAngular","player","newTime","floor","abs","run","one","endLive","_","getNextVideoTitle","playNextVideoInAngularZone","isAutoplay","isNSFWHiddenOrWarned","autoPlayVideo","Error","enableHotkeys","inactivityTimeout","theaterButton","controls","controlBar","muted","loop","playbackRate","instanceName","metricsUrl","openTelemetry","metrics","environment","apiUrl","metricsInterval","playbackStatsInterval","videoViewIntervalMs","watchingInterval","users","anonymous","authorizationHeader","getRequestHeaderValue","serverUrl","getAPIUrl","stunServers","webrtc","errorNotifier","peertubeLink","pluginsManager","getPluginsManager","autoPlayerRatio","cssRatioVariable","cssPlayerPortraitModeVariable","mode","playerMode","hasHlsPlaylist","hlsOptions","hlsPlaylist","getHlsPlaylist","playlistUrl","segmentsSha256Url","redundancyBaseUrls","redundancies","r","baseUrl","trackerAnnounce","trackerUrls","videoFiles","files","startTime","getStartTime","byUrl","byHistory","userHistory","resume","byLocalStorage","getStoredVideoWatchHistory","timeToInt","playerCaptions","src","storyboard","spriteHeight","width","spriteWidth","interval","spriteDuration","liveOptions","latencyMode","autoplay","stopTime","subtitle","embedUrl","embedTitle","videoViewUrl","getVideoViewUrl","requiresUserAuth","videoRequiresUserAuth","requiresPassword","poster","isNSFWBlurForUser","previewUrl","nsfwWarning","flags","nsfwFlags","summary","videoShortUUID","videoRatio","aspectRatio","previousVideo","displayControlBarButton","nextVideo","getVideoTitle","upnext","isEnabled","isSuspended","isXPercentInViewport","timeout","hls","webVideo","oldVideo","newVideo","buildLiveEventsSubscription","unsubscribeLiveVideos","subscribeToLiveVideosSocket","getLiveVideosObservable","payload","handleLiveStateChange","handleLiveViewsChange","newState","PUBLISHED","info","newViewers","unload","disable","setPoster","previewPath","isSubscribedToAll","setTitle","setDescription","setRSSFeeds","getVideoWatchRSSFeeds","getOriginUrl","toBoolean","j","VideoWatchComponent_div_3_Template","VideoWatchComponent_Conditional_10_Template","VideoWatchComponent_div_13_Template","VideoWatchComponent_my_privacy_concerns_14_Template","PluginPlaceholderComponent","DateToggleComponent","VideoViewsCounterComponent","NgTemplateOutlet","SubscribeButtonComponent","_VideoWatchComponent","routes_default","path","providers","OverviewService","UserSubscriptionService","BlocklistService","VideoBlockService","AbuseService","UserAdminService","BulkService","component","redirectTo","Sp"],"ignoreList":[],"sources":["src/app/+video-watch/shared/action-buttons/video-rate.component.html","src/app/+video-watch/shared/action-buttons/video-rate.component.ts","src/app/+video-watch/shared/action-buttons/action-buttons.component.html","src/app/+video-watch/shared/action-buttons/action-buttons.component.ts","src/app/shared/form-validators/video-comment-validators.ts","src/app/shared/shared-forms/textarea-autoresize.directive.ts","src/app/+video-watch/shared/comment/video-comment-add.component.html","src/app/+video-watch/shared/comment/video-comment-add.component.ts","src/app/+video-watch/shared/timestamp-route-transformer.directive.ts","src/app/+video-watch/shared/comment/video-comment.component.html","src/app/+video-watch/shared/comment/video-comment.component.ts","src/app/shared/shared-main/feeds/feed.component.html","src/app/shared/shared-main/feeds/feed.component.ts","src/app/+video-watch/shared/comment/video-comments.component.html","src/app/+video-watch/shared/comment/video-comments.component.ts","src/app/+video-watch/shared/information/privacy-concerns.component.html","src/app/+video-watch/shared/information/privacy-concerns.component.ts","src/app/+video-watch/shared/information/video-alert.component.html","src/app/+video-watch/shared/information/video-alert.component.ts","src/app/+video-watch/shared/metadata/video-attributes.component.html","src/app/+video-watch/shared/metadata/video-attributes.component.ts","src/app/+video-watch/shared/metadata/video-avatar-channel.component.html","src/app/+video-watch/shared/metadata/video-avatar-channel.component.ts","src/app/+video-watch/shared/metadata/video-description.component.html","src/app/+video-watch/shared/metadata/video-description.component.ts","src/app/+video-watch/shared/recommendations/video-recommendation.service.ts","src/app/+video-watch/shared/recommendations/recommended-videos.component.html","src/app/+video-watch/shared/recommendations/recommended-videos.component.ts","src/app/+video-watch/video-watch.component.ts","src/app/+video-watch/player-styles.component.ts","src/app/shared/shared-main/common/nl2br.pipe.ts","src/app/+video-watch/shared/player-widgets/video-transcription.component.ts","src/app/+video-watch/shared/player-widgets/video-transcription.component.html","src/app/+video-watch/shared/player-widgets/video-watch-playlist.component.html","src/app/+video-watch/shared/player-widgets/video-watch-playlist.component.ts","src/app/+video-watch/video-watch.component.html","src/app/+video-watch/routes.ts"],"sourcesContent":["<ng-template #ratePopoverText>\n  <span [innerHTML]=\"getRatePopoverText()\"></span>\n</ng-template>\n\n<button\n  [ngbPopover]=\"getRatePopoverText() && ratePopoverText\" [ngClass]=\"{ 'activated': userRating === 'like' }\" (click)=\"setLike()\" (keyup.enter)=\"setLike()\"\n  class=\"action-button action-button-like\" [attr.aria-pressed]=\"userRating === 'like'\" [attr.aria-label]=\"tooltipLike\"\n  [ngbTooltip]=\"tooltipLike\"\n  placement=\"bottom auto\"\n>\n  <my-global-icon iconName=\"like\"></my-global-icon>\n  <span *ngIf=\"video().likes\" class=\"count\">{{ video().likes }}</span>\n</button>\n\n<button\n  [ngbPopover]=\"getRatePopoverText() && ratePopoverText\" [ngClass]=\"{ 'activated': userRating === 'dislike' }\" (click)=\"setDislike()\" (keyup.enter)=\"setDislike()\"\n  class=\"action-button action-button-dislike\" [attr.aria-pressed]=\"userRating === 'dislike'\" [attr.aria-label]=\"tooltipDislike\"\n  [ngbTooltip]=\"tooltipDislike\"\n  placement=\"bottom auto\"\n>\n  <my-global-icon iconName=\"dislike\"></my-global-icon>\n  <span *ngIf=\"video().dislikes\" class=\"count\">{{ video().dislikes }}</span>\n</button>\n","import { NgClass, NgIf } from '@angular/common'\nimport { Component, OnChanges, OnDestroy, OnInit, inject, input, output } from '@angular/core'\nimport { Hotkey, HotkeysService, Notifier, ScreenService } from '@app/core'\nimport { GlobalIconComponent } from '@app/shared/shared-icons/global-icon.component'\nimport { VideoDetails } from '@app/shared/shared-main/video/video-details.model'\nimport { VideoService } from '@app/shared/shared-main/video/video.service'\nimport { NgbPopover, NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { UserVideoRateType } from '@peertube/peertube-models'\nimport { Observable } from 'rxjs'\n\n@Component({\n  selector: 'my-video-rate',\n  templateUrl: './video-rate.component.html',\n  styleUrls: [ './video-rate.component.scss' ],\n  imports: [ NgbPopover, NgClass, NgbTooltip, GlobalIconComponent, NgIf ]\n})\nexport class VideoRateComponent implements OnInit, OnChanges, OnDestroy {\n  private videoService = inject(VideoService)\n  private notifier = inject(Notifier)\n  private hotkeysService = inject(HotkeysService)\n  private screenService = inject(ScreenService)\n\n  readonly video = input<VideoDetails>(undefined)\n  readonly videoPassword = input<string>(undefined)\n  readonly isUserLoggedIn = input<boolean>(undefined)\n\n  readonly userRatingLoaded = output<UserVideoRateType>()\n  readonly rateUpdated = output<UserVideoRateType>()\n\n  userRating: UserVideoRateType\n\n  tooltipLike = ''\n  tooltipDislike = ''\n\n  private hotkeys: Hotkey[]\n\n  ngOnInit () {\n    // Hide the tooltips for unlogged users in mobile view, this adds confusion with the popover\n    const isUserLoggedIn = this.isUserLoggedIn()\n    if (isUserLoggedIn || !this.screenService.isInMobileView()) {\n      this.tooltipLike = $localize`Like this video`\n      this.tooltipDislike = $localize`Dislike this video`\n    }\n\n    if (isUserLoggedIn) {\n      this.hotkeys = [\n        new Hotkey('Shift+l', () => {\n          this.setLike()\n          return false\n        }, $localize`Like the video`),\n\n        new Hotkey('Shift+d', () => {\n          this.setDislike()\n          return false\n        }, $localize`Dislike the video`)\n      ]\n\n      this.hotkeysService.add(this.hotkeys)\n    }\n  }\n\n  ngOnChanges () {\n    this.checkUserRating()\n  }\n\n  ngOnDestroy () {\n    this.hotkeysService.remove(this.hotkeys)\n  }\n\n  setLike () {\n    if (this.isUserLoggedIn() === false) return\n\n    // Already liked this video\n    if (this.userRating === 'like') this.setRating('none')\n    else this.setRating('like')\n  }\n\n  setDislike () {\n    if (this.isUserLoggedIn() === false) return\n\n    // Already disliked this video\n    if (this.userRating === 'dislike') this.setRating('none')\n    else this.setRating('dislike')\n  }\n\n  getRatePopoverText () {\n    if (this.isUserLoggedIn()) return undefined\n\n    return $localize`You need to be logged in to rate this video.`\n  }\n\n  private checkUserRating () {\n    // Unlogged users do not have ratings\n    if (this.isUserLoggedIn() === false) return\n\n    this.videoService.getUserVideoRating(this.video().uuid)\n      .subscribe({\n        next: ratingObject => {\n          if (!ratingObject) return\n\n          this.userRating = ratingObject.rating\n          this.userRatingLoaded.emit(this.userRating)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  private setRating (nextRating: UserVideoRateType) {\n    const ratingMethods: { [id in UserVideoRateType]: (id: string, videoPassword: string) => Observable<any> } = {\n      like: this.videoService.setVideoLike.bind(this.videoService),\n      dislike: this.videoService.setVideoDislike.bind(this.videoService),\n      none: this.videoService.unsetVideoLike.bind(this.videoService)\n    }\n\n    ratingMethods[nextRating](this.video().uuid, this.videoPassword())\n      .subscribe({\n        next: () => {\n          // Update the video like attribute\n          this.updateVideoRating(this.userRating, nextRating)\n          this.userRating = nextRating\n          this.rateUpdated.emit(this.userRating)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  private updateVideoRating (oldRating: UserVideoRateType, newRating: UserVideoRateType) {\n    let likesToIncrement = 0\n    let dislikesToIncrement = 0\n\n    if (oldRating) {\n      if (oldRating === 'like') likesToIncrement--\n      if (oldRating === 'dislike') dislikesToIncrement--\n    }\n\n    if (newRating === 'like') likesToIncrement++\n    if (newRating === 'dislike') dislikesToIncrement++\n\n    const video = this.video()\n    video.likes += likesToIncrement\n    video.dislikes += dislikesToIncrement\n\n    video.buildLikeAndDislikePercents()\n  }\n}\n","<div class=\"video-actions-rates\">\n  <div class=\"video-actions justify-content-end\">\n    <my-video-rate\n      [video]=\"video()\" [videoPassword]=\"videoPassword()\" [isUserLoggedIn]=\"isUserLoggedIn()\"\n      (rateUpdated)=\"onRateUpdated($event)\" (userRatingLoaded)=\"onRateUpdated($event)\"\n    ></my-video-rate>\n\n    <button\n      *ngIf=\"video().support\" (click)=\"showSupportModal()\" (keyup.enter)=\"showSupportModal()\" class=\"action-button support-button\"\n      [attr.aria-label]=\"tooltipSupport\" [ngbTooltip]=\"tooltipSupport\" placement=\"bottom auto\"\n    >\n      <my-global-icon iconName=\"support\" aria-hidden=\"true\"></my-global-icon>\n      <span class=\"icon-text\" i18n>SUPPORT</span>\n    </button>\n\n    <button (click)=\"showShareModal()\" (keyup.enter)=\"showShareModal()\" class=\"action-button\" aria-label=\"Open the modal to share this video\" i18n-ariaLabel>\n      <my-global-icon iconName=\"share\" aria-hidden=\"true\"></my-global-icon>\n      <span class=\"icon-text\" i18n>SHARE</span>\n    </button>\n\n    <div\n      *ngIf=\"isVideoAddableToPlaylist()\"\n      class=\"action-dropdown\" ngbDropdown placement=\"top\" role=\"button\" autoClose=\"outside\"\n      [ngbTooltip]=\"tooltipSaveToPlaylist\" placement=\"bottom auto\"\n    >\n      <button class=\"action-button action-button-save\" ngbDropdownToggle>\n        <my-global-icon iconName=\"playlist-add\" aria-hidden=\"true\"></my-global-icon>\n        <span class=\"icon-text\" i18n>SAVE</span>\n      </button>\n\n      <div ngbDropdownMenu>\n        <my-video-add-to-playlist [video]=\"video()\"></my-video-add-to-playlist>\n      </div>\n    </div>\n\n    @if (!isUserLoggedIn() && !video().isLive) {\n      <button\n        *ngIf=\"isVideoDownloadable()\" class=\"action-button action-button-download\"\n        (click)=\"showDownloadModal()\" (keydown.enter)=\"showDownloadModal()\"\n        aria-label=\"Open the modal to download this video\" i18n-ariaLabel\n      >\n        <my-global-icon iconName=\"download\" aria-hidden=\"true\"></my-global-icon>\n        <span class=\"icon-text d-none d-sm-inline\" i18n>DOWNLOAD</span>\n      </button>\n\n      <my-video-download #videoDownloadModal [videoPassword]=\"videoPassword()\"></my-video-download>\n    }\n\n    <my-video-actions-dropdown\n      [video]=\"video()\" [videoCaptions]=\"videoCaptions()\" [transcriptionWidgetOpened]=\"transcriptionWidgetOpened()\"\n      [displayOptions]=\"videoActionsOptions\" (videoRemoved)=\"onVideoRemoved()\"\n      (showTranscriptionWidget)=\"showTranscriptionWidget.emit()\" (hideTranscriptionWidget)=\"hideTranscriptionWidget.emit()\"\n      placement=\"bottom auto\" buttonDirection=\"horizontal\" buttonStyled=\"true\"\n      actionAvailabilityHint=\"true\"\n    ></my-video-actions-dropdown>\n  </div>\n\n  <div class=\"likes-dislikes-bar-outer-container\">\n    <div\n      *ngIf=\"video().likes !== 0 || video().dislikes !== 0\" class=\"likes-dislikes-bar-inner-container\"\n      [ngbTooltip]=\"likesBarTooltipText\" placement=\"bottom\" tabindex=\"0\"\n    >\n      <div class=\"likes-dislikes-bar\">\n        <div class=\"likes-bar\" [ngClass]=\"{ 'liked': userRating !== 'none' }\" [ngStyle]=\"{ 'width.%': video().likesPercent }\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-container *ngIf=\"video()\">\n  <my-support-modal #supportModal [name]=\"video().channel.displayName\" [content]=\"video().support\"></my-support-modal>\n  <my-video-share #videoShareModal [video]=\"video()\" [videoCaptions]=\"videoCaptions()\" [playlist]=\"playlist()\"></my-video-share>\n</ng-container>\n","import { NgClass, NgIf, NgStyle } from '@angular/common'\nimport { Component, OnChanges, inject, input, output, viewChild } from '@angular/core'\nimport { RedirectService, ScreenService } from '@app/core'\nimport { GlobalIconComponent } from '@app/shared/shared-icons/global-icon.component'\nimport { VideoDetails } from '@app/shared/shared-main/video/video-details.model'\nimport { VideoShareComponent } from '@app/shared/shared-share-modal/video-share.component'\nimport { SupportModalComponent } from '@app/shared/shared-support-modal/support-modal.component'\nimport { VideoDownloadComponent } from '@app/shared/shared-video-miniature/download/video-download.component'\nimport { VideoActionsDisplayType, VideoActionsDropdownComponent } from '@app/shared/shared-video-miniature/video-actions-dropdown.component'\nimport { VideoAddToPlaylistComponent } from '@app/shared/shared-video-playlist/video-add-to-playlist.component'\nimport { VideoPlaylist } from '@app/shared/shared-video-playlist/video-playlist.model'\nimport { NgbDropdown, NgbDropdownMenu, NgbDropdownToggle, NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { UserVideoRateType, VideoCaption, VideoPrivacy } from '@peertube/peertube-models'\nimport { VideoRateComponent } from './video-rate.component'\n\n@Component({\n  selector: 'my-action-buttons',\n  templateUrl: './action-buttons.component.html',\n  styleUrls: [ './action-buttons.component.scss' ],\n  imports: [\n    VideoRateComponent,\n    NgIf,\n    NgbTooltip,\n    GlobalIconComponent,\n    NgbDropdown,\n    NgbDropdownToggle,\n    NgbDropdownMenu,\n    VideoAddToPlaylistComponent,\n    VideoDownloadComponent,\n    VideoActionsDropdownComponent,\n    NgClass,\n    NgStyle,\n    SupportModalComponent,\n    VideoShareComponent\n  ]\n})\nexport class ActionButtonsComponent implements OnChanges {\n  private screenService = inject(ScreenService)\n  private redirectService = inject(RedirectService)\n\n  readonly videoShareModal = viewChild<VideoShareComponent>('videoShareModal')\n  readonly supportModal = viewChild<SupportModalComponent>('supportModal')\n  readonly videoDownloadModal = viewChild<VideoDownloadComponent>('videoDownloadModal')\n\n  readonly video = input<VideoDetails>(undefined)\n  readonly videoPassword = input<string>(undefined)\n  readonly videoCaptions = input<VideoCaption[]>(undefined)\n  readonly playlist = input<VideoPlaylist>(undefined)\n\n  readonly isUserLoggedIn = input<boolean>(undefined)\n  readonly isUserOwner = input<boolean>(undefined)\n\n  readonly transcriptionWidgetOpened = input<boolean>(undefined)\n\n  readonly currentTime = input<number>(undefined)\n  readonly currentPlaylistPosition = input<number>(undefined)\n\n  readonly showTranscriptionWidget = output()\n  readonly hideTranscriptionWidget = output()\n\n  likesBarTooltipText = ''\n\n  tooltipSupport = ''\n  tooltipSaveToPlaylist = ''\n\n  videoActionsOptions: VideoActionsDisplayType = {\n    playlist: false,\n    download: true,\n    update: true,\n    blacklist: true,\n    delete: true,\n    report: true,\n    duplicate: true,\n    mute: true,\n    liveInfo: true,\n    generateTranscription: true,\n    transcriptionWidget: true,\n    transcoding: true\n  }\n\n  userRating: UserVideoRateType\n\n  ngOnChanges () {\n    this.setVideoLikesBarTooltipText()\n\n    if (this.isUserLoggedIn()) {\n      this.videoActionsOptions.download = true\n\n      // Hide the tooltips for unlogged users in mobile view, this adds confusion with the popover\n      if (!this.screenService.isInMobileView()) {\n        this.tooltipSupport = $localize`Open the modal to support the video uploader`\n        this.tooltipSaveToPlaylist = $localize`Save to playlist`\n      }\n    } else {\n      this.videoActionsOptions.download = false\n    }\n  }\n\n  showDownloadModal () {\n    this.videoDownloadModal().show(this.video(), this.videoCaptions())\n  }\n\n  isVideoDownloadable () {\n    const video = this.video()\n    return video && video instanceof VideoDetails && video.downloadEnabled && !video.isLive\n  }\n\n  showSupportModal () {\n    this.supportModal().show()\n  }\n\n  showShareModal () {\n    this.videoShareModal().show(this.currentTime(), this.currentPlaylistPosition())\n  }\n\n  onRateUpdated (userRating: UserVideoRateType) {\n    this.userRating = userRating\n    this.setVideoLikesBarTooltipText()\n  }\n\n  onVideoRemoved () {\n    this.redirectService.redirectToHomepage()\n  }\n\n  private setVideoLikesBarTooltipText () {\n    this.likesBarTooltipText = `${this.video().likes} likes / ${this.video().dislikes} dislikes`\n  }\n\n  isVideoAddableToPlaylist () {\n    const isPasswordProtected = this.video().privacy.id === VideoPrivacy.PASSWORD_PROTECTED\n\n    if (!this.isUserLoggedIn()) return false\n\n    if (isPasswordProtected) return this.isUserOwner()\n\n    return true\n  }\n}\n","import { Validators } from '@angular/forms'\nimport { BuildFormValidator } from './form-validator.model'\n\nexport const VIDEO_COMMENT_TEXT_VALIDATOR: BuildFormValidator = {\n  VALIDATORS: [ Validators.required, Validators.minLength(1), Validators.maxLength(3000) ],\n  MESSAGES: {\n    required: $localize`Comment is required.`,\n    minlength: $localize`Comment must be at least 2 characters long.`,\n    maxlength: $localize`Comment cannot be more than 3000 characters long.`\n  }\n}\n","// Thanks: https://github.com/evseevdev/ngx-textarea-autosize\nimport { AfterViewInit, Directive, ElementRef, HostBinding, HostListener, inject } from '@angular/core'\n\n@Directive({\n  selector: 'textarea[myAutoResize]',\n  standalone: true\n})\nexport class TextareaAutoResizeDirective implements AfterViewInit {\n  private elem = inject(ElementRef)\n\n  @HostBinding('attr.rows')\n  rows = '1'\n  @HostBinding('style.overflow')\n  overflow = 'hidden'\n\n  public ngAfterViewInit () {\n    this.resize()\n  }\n\n  @HostListener('input')\n  resize () {\n    const textarea = this.elem.nativeElement as HTMLTextAreaElement\n    // Reset textarea height to auto that correctly calculate the new height\n    textarea.style.height = 'auto'\n    // Set new height\n    textarea.style.height = `${textarea.scrollHeight}px`\n  }\n}\n","<form novalidate [formGroup]=\"form\" (ngSubmit)=\"formValidated()\">\n  <div class=\"avatar-and-textarea\">\n    <my-actor-avatar [actor]=\"user()?.account\" [actorType]=\"getAvatarActorType()\" size=\"25\"></my-actor-avatar>\n\n    <div class=\"textarea-wrapper\">\n      <textarea\n        i18n-placeholder placeholder=\"Add comment...\" myAutoResize\n        [readonly]=\"(user() === null) ? true : false\"\n        (click)=\"openVisitorModal($event)\"\n        formControlName=\"text\" [ngClass]=\"{ 'input-error': formErrors['text'] }\"\n        (keyup.control.enter)=\"onValidKey()\" (keyup.meta.enter)=\"onValidKey()\" #textarea\n      >\n      </textarea>\n\n      <my-help\n        [ngClass]=\"{ 'is-rtl': isRTL() }\" class=\"markdown-guide\" helpType=\"custom\" iconName=\"markdown\"\n        tooltipPlacement=\"left auto\" autoClose=\"true\" i18n-title title=\"Markdown compatible\"\n      >\n        <span i18n>Markdown compatible that supports:</span>\n\n        <ul>\n          <li><span i18n>Auto generated links</span></li>\n          <li><span i18n>Break lines</span></li>\n          <li><span i18n>Lists</span></li>\n          <li>\n            <span i18n>Emphasis</span>\n            <code>**<strong i18n>bold</strong>** _<i i18n>italic</i>_</code>\n          </li>\n          <li>\n            <span i18n>Emoji shortcuts</span>\n            <code>:) &lt;3</code>\n          </li>\n          <li>\n            <span i18n>Emoji markup</span>\n            <code>:smile:</code>\n            <div><a href=\"\" (click)=\"openEmojiModal($event)\" i18n>See complete list</a></div>\n          </li>\n        </ul>\n      </my-help>\n      <div *ngIf=\"formErrors.text\" class=\"form-error\" role=\"alert\">\n        {{ formErrors.text }}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"comment-buttons\">\n    @if (isAddButtonDisplayed()) {\n      <button class=\"peertube-button tertiary-button cancel-button me-2\" (click)=\"cancelCommentReply()\" type=\"button\" i18n>\n        Cancel\n      </button>\n\n      <button class=\"peertube-button primary-button\" [disabled]=\"!form.valid || addingComment\">\n        {{ addingCommentButtonValue }}\n      </button>\n    }\n  </div>\n</form>\n\n<ng-template #visitorModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\" i18n>You are one step away from commenting</h4>\n\n    <button class=\"border-0 p-0\" title=\"Close this modal\" i18n-title (click)=\"hideModals()\">\n      <my-global-icon iconName=\"cross\"></my-global-icon>\n    </button>\n  </div>\n\n  <div class=\"modal-body\">\n    <span i18n>\n      You can comment using an account on any ActivityPub-compatible instance (PeerTube/Mastodon/Pleroma account for example).\n    </span>\n\n    <my-remote-subscribe [interact]=\"true\" [uri]=\"getUri()\"></my-remote-subscribe>\n  </div>\n\n  <div class=\"modal-footer inputs\">\n    <input\n      type=\"button\" role=\"button\" i18n-value value=\"Cancel\" class=\"peertube-button secondary-button\"\n      (click)=\"hideModals()\" (key.enter)=\"hideModals()\"\n    >\n\n    <my-login-link i18n-label label=\"Login to comment\" className=\"peertube-button-link primary-button\"></my-login-link>\n  </div>\n</ng-template>\n\n<ng-template #emojiModal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\" i18n>Markdown Emoji List</h4>\n\n    <button class=\"border-0 p-0\" title=\"Close this modal\" i18n-title (click)=\"hideModals()\">\n      <my-global-icon iconName=\"cross\"></my-global-icon>\n    </button>\n  </div>\n\n  <div class=\"modal-body\">\n    <div class=\"emoji-flex\">\n      <div class=\"emoji-flex-item\" *ngFor=\"let emojiMarkup of getEmojiMarkupList()\">\n        {{ emojiMarkup.emoji }} <code>:{{ emojiMarkup.name }}:</code>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { getLocaleDirection, NgClass, NgFor, NgIf } from '@angular/common'\nimport { Component, ElementRef, inject, input, LOCALE_ID, OnChanges, OnInit, output, SimpleChanges, viewChild } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { Notifier, User } from '@app/core'\nimport { VIDEO_COMMENT_TEXT_VALIDATOR } from '@app/shared/form-validators/video-comment-validators'\nimport { ActorAvatarComponent } from '@app/shared/shared-actor-image/actor-avatar.component'\nimport { FormReactive } from '@app/shared/shared-forms/form-reactive'\nimport { FormReactiveService } from '@app/shared/shared-forms/form-reactive.service'\nimport { TextareaAutoResizeDirective } from '@app/shared/shared-forms/textarea-autoresize.directive'\nimport { GlobalIconComponent } from '@app/shared/shared-icons/global-icon.component'\nimport { HelpComponent } from '@app/shared/shared-main/buttons/help.component'\nimport { LoginLinkComponent } from '@app/shared/shared-main/users/login-link.component'\nimport { Video } from '@app/shared/shared-main/video/video.model'\nimport { RemoteSubscribeComponent } from '@app/shared/shared-user-subscription/remote-subscribe.component'\nimport { VideoComment } from '@app/shared/shared-video-comment/video-comment.model'\nimport { VideoCommentService } from '@app/shared/shared-video-comment/video-comment.service'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { VideoCommentCreate } from '@peertube/peertube-models'\nimport { Observable } from 'rxjs'\n\n@Component({\n  selector: 'my-video-comment-add',\n  templateUrl: './video-comment-add.component.html',\n  styleUrls: [ './video-comment-add.component.scss' ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    ActorAvatarComponent,\n    TextareaAutoResizeDirective,\n    NgClass,\n    HelpComponent,\n    NgIf,\n    GlobalIconComponent,\n    RemoteSubscribeComponent,\n    LoginLinkComponent,\n    NgFor\n  ]\n})\nexport class VideoCommentAddComponent extends FormReactive implements OnChanges, OnInit {\n  protected formReactiveService = inject(FormReactiveService)\n  private notifier = inject(Notifier)\n  private videoCommentService = inject(VideoCommentService)\n  private modalService = inject(NgbModal)\n  private localeId = inject(LOCALE_ID)\n\n  readonly user = input<User>(undefined)\n  readonly video = input<Video>(undefined)\n  readonly videoPassword = input<string>(undefined)\n  readonly parentComment = input<VideoComment>(undefined)\n  readonly parentComments = input<VideoComment[]>(undefined)\n  readonly focusOnInit = input(false)\n  readonly textValue = input<string>(undefined)\n\n  readonly commentCreated = output<VideoComment>()\n  readonly cancelEdit = output()\n\n  readonly visitorModal = viewChild<NgbModal>('visitorModal')\n  readonly emojiModal = viewChild<NgbModal>('emojiModal')\n  readonly textareaElement = viewChild<ElementRef>('textarea')\n\n  addingComment = false\n  addingCommentButtonValue: string\n\n  private emojiMarkupList: { emoji: string, name: string }[]\n\n  ngOnInit () {\n    this.buildForm({\n      text: VIDEO_COMMENT_TEXT_VALIDATOR\n    })\n\n    if (this.user()) {\n      if (!this.parentComment()) {\n        this.addingCommentButtonValue = $localize`Comment`\n      } else {\n        this.addingCommentButtonValue = $localize`Reply`\n      }\n\n      this.initTextValue()\n    }\n  }\n\n  ngOnChanges (changes: SimpleChanges) {\n    // Not initialized yet\n    if (!this.form) return\n\n    if (changes.textValue?.currentValue && changes.textValue.currentValue !== changes.textValue.previousValue) {\n      this.patchTextValue(changes.textValue.currentValue, true)\n    }\n  }\n\n  getEmojiMarkupList () {\n    if (this.emojiMarkupList) return this.emojiMarkupList\n\n    const emojiMarkupObjectList = require('markdown-it-emoji/lib/data/light.mjs').default\n\n    this.emojiMarkupList = []\n    for (const name of Object.keys(emojiMarkupObjectList)) {\n      const emoji = emojiMarkupObjectList[name]\n      this.emojiMarkupList.push({ emoji, name })\n    }\n\n    return this.emojiMarkupList\n  }\n\n  onValidKey () {\n    this.forceCheck()\n    if (!this.form.valid) return\n\n    this.formValidated()\n  }\n\n  openVisitorModal (event: any) {\n    if (this.user() === null) { // we only open it for visitors\n      // fixing ng-bootstrap ModalService and the \"Expression Changed After It Has Been Checked\" Error\n      event.srcElement.blur()\n      event.preventDefault()\n\n      this.modalService.open(this.visitorModal())\n    }\n  }\n\n  openEmojiModal (event: any) {\n    event.preventDefault()\n    this.modalService.open(this.emojiModal(), { backdrop: true, size: 'lg' })\n  }\n\n  hideModals () {\n    this.modalService.dismissAll()\n  }\n\n  formValidated () {\n    // If we validate very quickly the comment form, we might comment twice\n    if (this.addingComment) return\n\n    this.addingComment = true\n\n    const commentCreate: VideoCommentCreate = this.form.value\n    let obs: Observable<VideoComment>\n\n    if (this.parentComment()) {\n      obs = this.addCommentReply(commentCreate)\n    } else {\n      obs = this.addCommentThread(commentCreate)\n    }\n\n    obs.subscribe({\n      next: comment => {\n        this.addingComment = false\n        this.commentCreated.emit(comment)\n        this.form.reset()\n      },\n\n      error: err => {\n        this.addingComment = false\n\n        this.notifier.error(err.message)\n      }\n    })\n  }\n\n  isAddButtonDisplayed () {\n    return this.form.value['text']\n  }\n\n  getUri () {\n    return window.location.href\n  }\n\n  cancelCommentReply () {\n    this.cancelEdit.emit(null)\n    this.form.value['text'] = this.textareaElement().nativeElement.value = ''\n  }\n\n  isRTL () {\n    return getLocaleDirection(this.localeId) === 'rtl'\n  }\n\n  getAvatarActorType () {\n    if (this.user()) return 'account'\n\n    return 'unlogged'\n  }\n\n  private addCommentReply (commentCreate: VideoCommentCreate) {\n    return this.videoCommentService\n      .addCommentReply({\n        videoId: this.video().uuid,\n        inReplyToCommentId: this.parentComment().id,\n        comment: commentCreate,\n        videoPassword: this.videoPassword()\n      })\n  }\n\n  private addCommentThread (commentCreate: VideoCommentCreate) {\n    return this.videoCommentService\n      .addCommentThread(this.video().uuid, commentCreate, this.videoPassword())\n  }\n\n  private initTextValue () {\n    const textValue = this.textValue()\n    if (textValue) {\n      this.patchTextValue(textValue, this.focusOnInit())\n      return\n    }\n\n    if (this.parentComment()) {\n      const mentions = this.parentComments()\n        .filter(c => c.account && c.account.id !== this.user().account.id) // Don't add mention of ourselves\n        .map(c => '@' + c.by)\n\n      const mentionsSet = new Set(mentions)\n      const mentionsText = Array.from(mentionsSet).join(' ') + ' '\n\n      this.patchTextValue(mentionsText, this.focusOnInit())\n    }\n  }\n\n  private patchTextValue (text: string, focus: boolean) {\n    setTimeout(() => {\n      if (focus) {\n        this.textareaElement().nativeElement.focus()\n      }\n\n      // Scroll to textarea\n      this.textareaElement().nativeElement.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'nearest' })\n\n      // Use the native textarea autosize according to the text's break lines\n      this.textareaElement().nativeElement.dispatchEvent(new Event('input'))\n    })\n\n    this.form.patchValue({ text })\n  }\n}\n","import { Directive, HostListener, output } from '@angular/core'\n\n@Directive({\n  selector: '[myTimestampRouteTransformer]',\n  standalone: true\n})\nexport class TimestampRouteTransformerDirective {\n  readonly timestampClicked = output<number>()\n\n  @HostListener('click', [ '$event' ])\n  public onClick ($event: Event) {\n    const target = $event.target as HTMLLinkElement\n\n    if (target.hasAttribute('href') !== true) return\n    if (!target.classList.contains('video-timestamp')) return\n\n    const ngxLink = document.createElement('a')\n    ngxLink.href = target.getAttribute('href')\n\n    const ngxLinkParams = new URLSearchParams(ngxLink.search)\n    if (ngxLinkParams.has('start') !== true) return\n\n    const separators = [ 'h', 'm', 's' ]\n    const start = ngxLinkParams\n      .get('start')\n      .match(new RegExp('(\\\\d{1,9}[' + separators.join('') + '])', 'g')) // match digits before any given separator\n      .map(t => {\n        if (t.includes('h')) return parseInt(t, 10) * 3600\n        if (t.includes('m')) return parseInt(t, 10) * 60\n        return parseInt(t, 10)\n      })\n      .reduce((acc, t) => acc + t)\n\n    this.timestampClicked.emit(start)\n\n    $event.preventDefault()\n  }\n}\n","<div *ngIf=\"isCommentDisplayed()\" class=\"root-comment\" [ngClass]=\"{ 'is-child': isChild() }\">\n  <div class=\"left\">\n    <my-actor-avatar\n      *ngIf=\"!comment().isDeleted\" [href]=\"comment().account.url\"\n      [actor]=\"comment().account\" actorType=\"account\" [size]=\"isChild() ? '25' : '36'\"\n    ></my-actor-avatar>\n\n    <div class=\"vertical-border\"></div>\n  </div>\n\n  <div class=\"right\" [ngClass]=\"{ 'mb-3': firstInThread() }\">\n    <div class=\"comment\">\n      <ng-container *ngIf=\"!comment().isDeleted\">\n        <div *ngIf=\"highlightedComment() === true\" class=\"highlighted-comment\" i18n>Highlighted comment</div>\n\n        <div class=\"comment-account-date\">\n          <div class=\"comment-account\">\n            <a [routerLink]=\"[ '/a', comment().by ]\">\n              <span class=\"comment-account-name\" [ngClass]=\"{ 'video-author': video().account.id === comment().account.id }\">\n                {{ comment().account.displayName }}\n              </span>\n\n              <span class=\"comment-account-fid ms-1\">{{ comment().by }}</span>\n            </a>\n          </div>\n\n          <a [routerLink]=\"['/w', video().shortUUID, { 'threadId': comment().threadId }]\" class=\"comment-date\" [title]=\"comment().createdAt\">\n            {{ comment().createdAt | myFromNow }}\n          </a>\n\n          <span *ngIf=\"comment().heldForReview\" class=\"pt-badge badge-red ms-2\" i18n>Pending review</span>\n        </div>\n\n        <div\n          class=\"comment-html\"\n          [innerHTML]=\"sanitizedCommentHTML\"\n          (timestampClicked)=\"handleTimestampClicked($event)\"\n          myTimestampRouteTransformer\n        ></div>\n\n        <div class=\"comment-actions\">\n          <button (click)=\"onWantToReply()\" class=\"comment-action-reply border-0 p-0\" i18n>Reply</button>\n\n          <my-user-moderation-dropdown\n            [prependActions]=\"prependModerationActions\" [buttonStyled]=\"false\"\n            buttonSize=\"small\" [account]=\"commentAccount\" [user]=\"commentUser\" i18n-label label=\"Options\" placement=\"bottom-left auto\"\n          ></my-user-moderation-dropdown>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"comment().isDeleted\">\n        <div class=\"comment-account-date\">\n          <span class=\"comment-account\" i18n>Deleted</span>\n          <a [routerLink]=\"['/w', video().shortUUID, { 'threadId': comment().threadId }]\"\n             class=\"comment-date\">{{ comment().createdAt | myFromNow }}</a>\n        </div>\n\n        <div class=\"comment-html comment-html-deleted\">\n          <i i18n>This comment has been deleted</i>\n        </div>\n      </ng-container>\n\n      <my-video-comment-add\n        *ngIf=\"!comment().isDeleted && inReplyToCommentId() === comment().id\"\n        [user]=\"user\"\n        [video]=\"video()\"\n        [videoPassword]=\"videoPassword()\"\n        [parentComment]=\"comment()\"\n        [parentComments]=\"newParentComments\"\n        [focusOnInit]=\"true\"\n        (commentCreated)=\"onCommentReplyCreated($event)\"\n        (cancelEdit)=\"onResetReply()\"\n        [textValue]=\"redraftValue()\"\n      ></my-video-comment-add>\n\n      <div *ngIf=\"commentTree()\">\n        <div *ngFor=\"let commentChild of commentTree().children\">\n          <my-video-comment\n            [comment]=\"commentChild.comment\"\n            [video]=\"video()\"\n            [videoPassword]=\"videoPassword()\"\n            [inReplyToCommentId]=\"inReplyToCommentId()\"\n            [commentTree]=\"commentChild\"\n            [parentComments]=\"newParentComments\"\n            (wantedToReply)=\"onWantToReply($event)\"\n            (wantedToDelete)=\"onWantToDelete($event)\"\n            (wantedToRedraft)=\"onWantToRedraft($event)\"\n            (wantedToApprove)=\"onWantToApprove($event)\"\n            (resetReply)=\"onResetReply()\"\n            (timestampClicked)=\"handleTimestampClicked($event)\"\n            [redraftValue]=\"redraftValue()\"\n          ></my-video-comment>\n        </div>\n      </div>\n\n      <ng-content></ng-content>\n    </div>\n  </div>\n</div>\n\n<ng-container *ngIf=\"prependModerationActions\">\n  <my-comment-report #commentReportModal [comment]=\"comment()\"></my-comment-report>\n</ng-container>\n","import { NgClass, NgFor, NgIf } from '@angular/common'\nimport { Component, OnChanges, OnInit, inject, input, model, output, viewChild } from '@angular/core'\nimport { RouterLink } from '@angular/router'\nimport { MarkdownService, Notifier, UserService } from '@app/core'\nimport { AuthService } from '@app/core/auth'\nimport { ActorAvatarComponent } from '@app/shared/shared-actor-image/actor-avatar.component'\nimport { Account } from '@app/shared/shared-main/account/account.model'\nimport { DropdownAction } from '@app/shared/shared-main/buttons/action-dropdown.component'\nimport { FromNowPipe } from '@app/shared/shared-main/date/from-now.pipe'\nimport { Video } from '@app/shared/shared-main/video/video.model'\nimport { CommentReportComponent } from '@app/shared/shared-moderation/report-modals/comment-report.component'\nimport { UserModerationDropdownComponent } from '@app/shared/shared-moderation/user-moderation-dropdown.component'\nimport { VideoCommentThreadTree } from '@app/shared/shared-video-comment/video-comment-thread-tree.model'\nimport { VideoComment } from '@app/shared/shared-video-comment/video-comment.model'\nimport { User, UserRight } from '@peertube/peertube-models'\nimport { TimestampRouteTransformerDirective } from '../timestamp-route-transformer.directive'\nimport { VideoCommentAddComponent } from './video-comment-add.component'\n\n@Component({\n  selector: 'my-video-comment',\n  templateUrl: './video-comment.component.html',\n  styleUrls: [ './video-comment.component.scss' ],\n  imports: [\n    NgIf,\n    NgClass,\n    ActorAvatarComponent,\n    RouterLink,\n    TimestampRouteTransformerDirective,\n    UserModerationDropdownComponent,\n    VideoCommentAddComponent,\n    NgFor,\n    CommentReportComponent,\n    FromNowPipe\n  ]\n})\nexport class VideoCommentComponent implements OnInit, OnChanges {\n  private markdownService = inject(MarkdownService)\n  private authService = inject(AuthService)\n  private userService = inject(UserService)\n  private notifier = inject(Notifier)\n\n  readonly commentReportModal = viewChild<CommentReportComponent>('commentReportModal')\n\n  readonly video = input<Video>(undefined)\n  readonly videoPassword = input<string>(undefined)\n  readonly comment = input<VideoComment>(undefined)\n  readonly parentComments = input<VideoComment[]>([])\n  readonly inReplyToCommentId = input<number>(undefined)\n  readonly highlightedComment = input(false)\n  readonly firstInThread = input(false)\n  readonly commentTree = model<VideoCommentThreadTree>(undefined)\n  readonly redraftValue = model<string>(undefined)\n\n  readonly wantedToReply = output<VideoComment>()\n  readonly wantedToDelete = output<VideoComment>()\n  readonly wantedToApprove = output<VideoComment>()\n  readonly wantedToRedraft = output<VideoComment>()\n  readonly threadCreated = output<VideoCommentThreadTree>()\n  readonly resetReply = output()\n  readonly timestampClicked = output<number>()\n\n  prependModerationActions: DropdownAction<any>[]\n\n  sanitizedCommentHTML = ''\n  newParentComments: VideoComment[] = []\n\n  commentAccount: Account\n  commentUser: User\n\n  get user () {\n    return this.authService.getUser()\n  }\n\n  ngOnInit () {\n    this.init()\n  }\n\n  ngOnChanges () {\n    this.init()\n  }\n\n  onCommentReplyCreated (createdComment: VideoComment) {\n    if (!this.commentTree()) {\n      this.commentTree.set({\n        comment: this.comment(),\n        hasDisplayedChildren: false,\n        children: []\n      })\n\n      this.threadCreated.emit(this.commentTree())\n    }\n\n    this.commentTree().children.unshift({\n      comment: createdComment,\n      hasDisplayedChildren: false,\n      children: []\n    })\n\n    this.resetReply.emit()\n\n    this.redraftValue.set(undefined)\n  }\n\n  onWantToReply (comment?: VideoComment) {\n    this.wantedToReply.emit(comment || this.comment())\n  }\n\n  onWantToDelete (comment?: VideoComment) {\n    this.wantedToDelete.emit(comment || this.comment())\n  }\n\n  onWantToRedraft (comment?: VideoComment) {\n    this.wantedToRedraft.emit(comment || this.comment())\n  }\n\n  onWantToApprove (comment?: VideoComment) {\n    this.wantedToApprove.emit(comment || this.comment())\n  }\n\n  isUserLoggedIn () {\n    return this.authService.isLoggedIn()\n  }\n\n  onResetReply () {\n    this.resetReply.emit()\n  }\n\n  handleTimestampClicked (timestamp: number) {\n    this.timestampClicked.emit(timestamp)\n  }\n\n  canBeRemovedUser () {\n    const comment = this.comment()\n    return comment.account && this.isUserLoggedIn() &&\n      (\n        this.user.account.id === comment.account.id ||\n        this.user.account.id === this.video().account.id ||\n        this.user.hasRight(UserRight.MANAGE_ANY_VIDEO_COMMENT)\n      )\n  }\n\n  canBeApprovedByUser () {\n    return this.comment().account && this.isUserLoggedIn() &&\n      (\n        this.user.account.id === this.video().account.id ||\n        this.user.hasRight(UserRight.MANAGE_ANY_VIDEO_COMMENT)\n      )\n  }\n\n  isRedraftableByUser () {\n    const comment = this.comment()\n    return (\n      comment.account &&\n      this.isUserLoggedIn() &&\n      this.user.account.id === comment.account.id &&\n      comment.totalReplies === 0\n    )\n  }\n\n  isReportableByUser () {\n    const comment = this.comment()\n    return (\n      comment.account &&\n      this.isUserLoggedIn() &&\n      comment.isDeleted === false &&\n      this.user.account.id !== comment.account.id\n    )\n  }\n\n  isCommentDisplayed () {\n    // Not deleted\n    const comment = this.comment()\n    return !comment.isDeleted ||\n      comment.totalReplies !== 0 || // Or root comment thread has replies\n      (this.commentTree()?.hasDisplayedChildren) // Or this is a reply that have other replies\n  }\n\n  isChild () {\n    return this.parentComments().length !== 0\n  }\n\n  private getUserIfNeeded (account: Account) {\n    if (!account.userId) return\n    if (!this.authService.isLoggedIn()) return\n\n    const user = this.authService.getUser()\n    if (user.hasRight(UserRight.MANAGE_USERS)) {\n      this.userService.getUserWithCache(account.userId)\n        .subscribe({\n          next: user => this.commentUser = user,\n\n          error: err => this.notifier.error(err.message)\n        })\n    }\n  }\n\n  private async init () {\n    // Before HTML rendering restore line feed for markdown list compatibility\n    const commentText = this.comment().text.replace(/<br.?\\/?>/g, '\\r\\n')\n    const html = await this.markdownService.textMarkdownToHTML({ markdown: commentText, withHtml: true, withEmoji: true })\n    this.sanitizedCommentHTML = this.markdownService.processVideoTimestamps(this.video().shortUUID, html)\n    this.newParentComments = this.parentComments().concat([ this.comment() ])\n\n    const comment = this.comment()\n    if (comment.account) {\n      this.commentAccount = new Account(comment.account)\n      this.getUserIfNeeded(this.commentAccount)\n    } else {\n      comment.account = null\n    }\n\n    this.prependModerationActions = []\n\n    if (this.canBeApprovedByUser() && comment.heldForReview) {\n      this.prependModerationActions.push({\n        label: $localize`Approve`,\n        iconName: 'tick',\n        handler: () => this.onWantToApprove()\n      })\n    }\n\n    if (this.isReportableByUser()) {\n      this.prependModerationActions.push({\n        label: $localize`Report this comment`,\n        iconName: 'flag',\n        handler: () => this.showReportModal()\n      })\n    }\n\n    if (this.canBeRemovedUser()) {\n      this.prependModerationActions.push({\n        label: $localize`Remove`,\n        iconName: 'delete',\n        handler: () => this.onWantToDelete()\n      })\n    }\n\n    if (this.isRedraftableByUser()) {\n      this.prependModerationActions.push({\n        label: $localize`Remove & re-draft`,\n        iconName: 'edit',\n        handler: () => this.onWantToRedraft()\n      })\n    }\n\n    if (this.prependModerationActions.length !== 0) {\n      this.prependModerationActions.unshift({\n        label: $localize`Actions on comment`,\n        isHeader: true\n      })\n    }\n  }\n\n  private showReportModal () {\n    this.commentReportModal().show()\n  }\n}\n","<button\n  *ngIf=\"syndicationItems() && syndicationItems().length !== 0\"\n  #popover=\"ngbPopover\"\n  [ngbPopover]=\"feedsList\" [autoClose]=\"true\" placement=\"bottom left auto\"\n  class=\"feed border-0 p-0\" [title]=\"getTitle()\"\n>\n  <my-global-icon iconName=\"syndication\"></my-global-icon>\n\n  <ng-template #feedsList>\n    <a *ngFor=\"let item of syndicationItems()\" class=\"feed-link\" [href]=\"item.url\" target=\"_blank\" rel=\"noopener noreferrer\">{{ item.label }}</a>\n  </ng-template>\n</button>\n","import { NgFor, NgIf } from '@angular/common'\nimport { Component, input, viewChild } from '@angular/core'\nimport { NgbPopover } from '@ng-bootstrap/ng-bootstrap'\nimport { GlobalIconComponent } from '../../shared-icons/global-icon.component'\nimport { Syndication } from './syndication.model'\n\n@Component({\n  selector: 'my-feed',\n  styleUrls: [ './feed.component.scss' ],\n  templateUrl: './feed.component.html',\n  imports: [ NgIf, NgbPopover, GlobalIconComponent, NgFor ]\n})\nexport class FeedComponent {\n  readonly popover = viewChild<NgbPopover>('popover')\n\n  readonly syndicationItems = input<Syndication[]>(undefined)\n\n  getTitle () {\n    if (this.popover()?.isOpen()) {\n      return $localize`Close syndication dropdown`\n    }\n\n    return $localize`Open syndication dropdown`\n  }\n}\n","<div>\n  <div class=\"title-block\">\n    <h2>\n      {totalNotDeletedComments, plural, =0 {Comments} =1 {1 Comment} other {{{totalNotDeletedComments}} Comments}}\n    </h2>\n\n    <my-feed [syndicationItems]=\"syndicationItems\"></my-feed>\n\n    <div ngbDropdown class=\"d-inline-block ms-auto dropdown-root\">\n      <button class=\"peertube-button tertiary-button\" id=\"dropdown-sort-comments\" ngbDropdownToggle i18n>\n        SORT BY\n      </button>\n\n      <div ngbDropdownMenu aria-labelledby=\"dropdown-sort-comments\">\n        <button (click)=\"handleSortChange('-createdAt')\" ngbDropdownItem i18n>Most recent first (default)</button>\n        <button (click)=\"handleSortChange('-totalReplies')\" ngbDropdownItem i18n>Most replies first</button>\n      </div>\n    </div>\n  </div>\n\n  @if (commentsEnabled) {\n    <my-video-comment-add\n      [video]=\"video()\"\n      [videoPassword]=\"videoPassword()\"\n      [user]=\"user()\"\n      (commentCreated)=\"onCommentThreadCreated($event)\"\n      [textValue]=\"commentThreadRedraftValue\"\n    ></my-video-comment-add>\n\n    <div *ngIf=\"totalNotDeletedComments === 0 && comments.length === 0\" i18n>No comments.</div>\n\n    <div class=\"comment-threads\" myInfiniteScroller (nearOfBottom)=\"onNearOfBottom()\" [dataObservable]=\"onDataSubject.asObservable()\">\n      <div>\n        <div class=\"anchor\" #commentHighlightBlock id=\"highlighted-comment\"></div>\n        <my-video-comment\n          *ngIf=\"highlightedThread\"\n          [comment]=\"highlightedThread\"\n          [video]=\"video()\"\n          [videoPassword]=\"videoPassword()\"\n          [inReplyToCommentId]=\"inReplyToCommentId\"\n          [commentTree]=\"threadComments[highlightedThread.id]\"\n          [highlightedComment]=\"true\"\n          [firstInThread]=\"true\"\n          (wantedToReply)=\"onWantedToReply($event)\"\n          (wantedToDelete)=\"onWantedToDelete($event)\"\n          (wantedToRedraft)=\"onWantedToRedraft($event)\"\n          (wantedToApprove)=\"onWantToApprove($event)\"\n          (threadCreated)=\"onThreadCreated($event)\"\n          (resetReply)=\"onResetReply()\"\n          (timestampClicked)=\"handleTimestampClicked($event)\"\n          [redraftValue]=\"commentReplyRedraftValue\"\n        ></my-video-comment>\n      </div>\n\n      <div *ngFor=\"let comment of comments; index as i\">\n        <my-video-comment\n          *ngIf=\"!highlightedThread || comment.id !== highlightedThread.id\"\n          [comment]=\"comment\"\n          [video]=\"video()\"\n          [videoPassword]=\"videoPassword()\"\n          [inReplyToCommentId]=\"inReplyToCommentId\"\n          [commentTree]=\"threadComments[comment.id]\"\n          [firstInThread]=\"i + 1 !== comments.length\"\n          (wantedToReply)=\"onWantedToReply($event)\"\n          (wantedToDelete)=\"onWantedToDelete($event)\"\n          (wantedToRedraft)=\"onWantedToRedraft($event)\"\n          (wantedToApprove)=\"onWantToApprove($event)\"\n          (threadCreated)=\"onThreadCreated($event)\"\n          (resetReply)=\"onResetReply()\"\n          (timestampClicked)=\"handleTimestampClicked($event)\"\n          [redraftValue]=\"commentReplyRedraftValue\"\n        >\n          <button *ngIf=\"comment.totalReplies !== 0 && !threadComments[comment.id]\" (click)=\"viewReplies(comment.id)\" class=\"view-replies mb-2 button-unstyle\">\n            <span class=\"chevron-down\"></span>\n\n            <ng-container *ngIf=\"comment.totalRepliesFromVideoAuthor > 0; then hasAuthorComments; else noAuthorComments\"></ng-container>\n\n            <ng-template #hasAuthorComments>\n              <ng-container *ngIf=\"comment.totalReplies !== comment.totalRepliesFromVideoAuthor; else onlyAuthorComments\" i18n>\n                View {comment.totalReplies, plural, =1 {1 reply} other {{{ comment.totalReplies }} replies}} from {{ video()?.account?.displayName || 'the author' }} and others\n              </ng-container>\n              <ng-template i18n #onlyAuthorComments>\n                View {comment.totalReplies, plural, =1 {1 reply} other {{{ comment.totalReplies }} replies}} from {{ video()?.account?.displayName || 'the author' }}\n              </ng-template>\n            </ng-template>\n\n            <ng-template i18n #noAuthorComments>View {comment.totalReplies, plural, =1 {1 reply} other {{{ comment.totalReplies }} replies}}</ng-template>\n\n            <my-loader size=\"sm\" class=\"ms-1\" [loading]=\"threadLoading[comment.id]\"></my-loader>\n          </button>\n        </my-video-comment>\n\n      </div>\n    </div>\n  } @else {\n    <div i18n>Comments are disabled.</div>\n  }\n</div>\n","import { NgFor, NgIf } from '@angular/common'\nimport { Component, ElementRef, inject, input, OnChanges, OnDestroy, OnInit, output, SimpleChanges, viewChild } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { AuthService, ComponentPagination, ConfirmService, hasMoreItems, Notifier, PluginService, User } from '@app/core'\nimport { HooksService } from '@app/core/plugins/hooks.service'\nimport { InfiniteScrollerDirective } from '@app/shared/shared-main/common/infinite-scroller.directive'\nimport { LoaderComponent } from '@app/shared/shared-main/common/loader.component'\nimport { FeedComponent } from '@app/shared/shared-main/feeds/feed.component'\nimport { Syndication } from '@app/shared/shared-main/feeds/syndication.model'\nimport { VideoDetails } from '@app/shared/shared-main/video/video-details.model'\nimport { VideoCommentThreadTree } from '@app/shared/shared-video-comment/video-comment-thread-tree.model'\nimport { VideoComment } from '@app/shared/shared-video-comment/video-comment.model'\nimport { VideoCommentService } from '@app/shared/shared-video-comment/video-comment.service'\nimport { NgbDropdown, NgbDropdownButtonItem, NgbDropdownItem, NgbDropdownMenu, NgbDropdownToggle } from '@ng-bootstrap/ng-bootstrap'\nimport { PeerTubeProblemDocument, ServerErrorCode, VideoCommentPolicy } from '@peertube/peertube-models'\nimport { lastValueFrom, Subject, Subscription } from 'rxjs'\nimport { VideoCommentAddComponent } from './video-comment-add.component'\nimport { VideoCommentComponent } from './video-comment.component'\n\n@Component({\n  selector: 'my-video-comments',\n  templateUrl: './video-comments.component.html',\n  styleUrls: [ './video-comments.component.scss' ],\n  imports: [\n    FeedComponent,\n    NgbDropdown,\n    NgbDropdownToggle,\n    NgbDropdownMenu,\n    NgbDropdownButtonItem,\n    NgbDropdownItem,\n    NgIf,\n    VideoCommentAddComponent,\n    InfiniteScrollerDirective,\n    VideoCommentComponent,\n    NgFor,\n    LoaderComponent\n  ]\n})\nexport class VideoCommentsComponent implements OnInit, OnChanges, OnDestroy {\n  private authService = inject(AuthService)\n  private notifier = inject(Notifier)\n  private confirmService = inject(ConfirmService)\n  private videoCommentService = inject(VideoCommentService)\n  private activatedRoute = inject(ActivatedRoute)\n  private hooks = inject(HooksService)\n  private pluginService = inject(PluginService)\n\n  readonly commentHighlightBlock = viewChild<ElementRef>('commentHighlightBlock')\n  readonly video = input<VideoDetails>(undefined)\n  readonly videoPassword = input<string>(undefined)\n  readonly user = input<User>(undefined)\n\n  readonly timestampClicked = output<number>()\n\n  comments: VideoComment[] = []\n  highlightedThread: VideoComment\n\n  sort = '-createdAt'\n\n  componentPagination: ComponentPagination = {\n    currentPage: 1,\n    itemsPerPage: 10,\n    totalItems: null\n  }\n  totalNotDeletedComments: number\n\n  inReplyToCommentId: number\n  commentReplyRedraftValue: string\n  commentThreadRedraftValue: string\n\n  commentsEnabled: boolean\n\n  threadComments: { [id: number]: VideoCommentThreadTree } = {}\n  threadLoading: { [id: number]: boolean } = {}\n\n  syndicationItems: Syndication[] = []\n\n  onDataSubject = new Subject<any[]>()\n\n  private sub: Subscription\n\n  ngOnInit () {\n    this.pluginService.addAction('video-watch-comment-list:load-data', () => this.loadMoreThreads(true))\n\n    // Find highlighted comment in params\n    this.sub = this.activatedRoute.params.subscribe(\n      params => {\n        if (params['threadId']) {\n          const highlightedThreadId = +params['threadId']\n          this.processHighlightedThread(highlightedThreadId)\n        }\n      }\n    )\n  }\n\n  ngOnChanges (changes: SimpleChanges) {\n    if (changes['video']) {\n      this.resetVideo()\n    }\n  }\n\n  ngOnDestroy () {\n    this.pluginService.removeAction('video-watch-comment-list:load-data')\n\n    if (this.sub) this.sub.unsubscribe()\n  }\n\n  viewReplies (commentId: number, highlightThread = false) {\n    this.threadLoading[commentId] = true\n\n    const params = {\n      videoId: this.video().uuid,\n      threadId: commentId,\n      videoPassword: this.videoPassword()\n    }\n\n    const obs = this.hooks.wrapObsFun(\n      this.videoCommentService.getVideoThreadComments.bind(this.videoCommentService),\n      params,\n      'video-watch',\n      'filter:api.video-watch.video-thread-replies.list.params',\n      'filter:api.video-watch.video-thread-replies.list.result'\n    )\n\n    obs.subscribe({\n      next: res => {\n        this.threadComments[commentId] = res\n        this.threadLoading[commentId] = false\n        this.hooks.runAction('action:video-watch.video-thread-replies.loaded', 'video-watch', { data: res })\n\n        if (highlightThread) {\n          this.highlightedThread = new VideoComment(res.comment)\n\n          // Scroll to the highlighted thread\n          setTimeout(() => this.commentHighlightBlock().nativeElement.scrollIntoView(), 0)\n        }\n      },\n\n      error: err => {\n        // We may try to fetch highlighted thread of another video, skip the error if it is the case\n        // We'll retry the request on video Input() change\n        const errorBody = err.body as PeerTubeProblemDocument\n        if (highlightThread && errorBody?.code === ServerErrorCode.COMMENT_NOT_ASSOCIATED_TO_VIDEO) return\n\n        this.notifier.error(err.message)\n      }\n    })\n  }\n\n  async loadMoreThreads (reset = false) {\n    if (reset === true) {\n      this.componentPagination.currentPage = 1\n    }\n\n    const params = {\n      videoId: this.video().uuid,\n      videoPassword: this.videoPassword(),\n      componentPagination: this.componentPagination,\n      sort: this.sort\n    }\n\n    const obs = this.hooks.wrapObsFun(\n      this.videoCommentService.getVideoCommentThreads.bind(this.videoCommentService),\n      params,\n      'video-watch',\n      'filter:api.video-watch.video-threads.list.params',\n      'filter:api.video-watch.video-threads.list.result'\n    )\n\n    try {\n      const res = await lastValueFrom(obs)\n\n      if (reset) this.comments = []\n      this.comments = this.comments.concat(res.data)\n      this.componentPagination.totalItems = res.total\n      this.totalNotDeletedComments = res.totalNotDeletedComments\n\n      this.onDataSubject.next(res.data)\n\n      this.hooks.runAction('action:video-watch.video-threads.loaded', 'video-watch', { data: this.componentPagination })\n    } catch (err) {\n      this.notifier.error(err.message)\n    }\n  }\n\n  onCommentThreadCreated (comment: VideoComment) {\n    this.comments.unshift(comment)\n    this.commentThreadRedraftValue = undefined\n  }\n\n  onWantedToReply (comment: VideoComment) {\n    this.inReplyToCommentId = comment.id\n  }\n\n  onResetReply () {\n    this.inReplyToCommentId = undefined\n    this.commentReplyRedraftValue = undefined\n  }\n\n  onThreadCreated (commentTree: VideoCommentThreadTree) {\n    this.viewReplies(commentTree.comment.id)\n  }\n\n  handleSortChange (sort: string) {\n    if (this.sort === sort) return\n\n    this.sort = sort\n    this.resetVideo()\n  }\n\n  handleTimestampClicked (timestamp: number) {\n    this.timestampClicked.emit(timestamp)\n  }\n\n  async onWantedToDelete (\n    commentToDelete: VideoComment,\n    title = $localize`Delete`,\n    message = $localize`Do you really want to delete this comment?`\n  ): Promise<boolean> {\n    if (commentToDelete.isLocal || this.video().isLocal) {\n      message += $localize` The deletion will be sent to remote platforms so they can reflect the change.`\n    } else {\n      message += $localize` It is a remote comment, so the deletion will only be effective on your platform.`\n    }\n\n    const res = await this.confirmService.confirm(message, title)\n    if (res === false) return false\n\n    this.videoCommentService.deleteVideoComment(commentToDelete.videoId, commentToDelete.id)\n      .subscribe({\n        next: () => {\n          if (this.highlightedThread?.id === commentToDelete.id) {\n            commentToDelete = this.comments.find(c => c.id === commentToDelete.id)\n\n            this.highlightedThread = undefined\n          }\n\n          // Mark the comment as deleted\n          this.softDeleteComment(commentToDelete)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n\n    return true\n  }\n\n  async onWantedToRedraft (commentToRedraft: VideoComment) {\n    const confirm = await this.onWantedToDelete(\n      commentToRedraft,\n      $localize`Delete and re-draft`,\n      $localize`Do you really want to delete and re-draft this comment?`\n    )\n\n    if (confirm) {\n      this.inReplyToCommentId = commentToRedraft.inReplyToCommentId\n\n      // Restore line feed for editing\n      const commentToRedraftText = commentToRedraft.text.replace(/<br.?\\/?>/g, '\\r\\n')\n\n      if (commentToRedraft.threadId === commentToRedraft.id) {\n        this.commentThreadRedraftValue = commentToRedraftText\n      } else {\n        this.commentReplyRedraftValue = commentToRedraftText\n      }\n    }\n  }\n\n  onWantToApprove (comment: VideoComment) {\n    this.videoCommentService.approveComments([ { commentId: comment.id, videoId: comment.videoId } ])\n      .subscribe({\n        next: () => {\n          comment.heldForReview = false\n\n          this.notifier.success($localize`Comment approved`)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  isUserLoggedIn () {\n    return this.authService.isLoggedIn()\n  }\n\n  onNearOfBottom () {\n    if (hasMoreItems(this.componentPagination)) {\n      this.componentPagination.currentPage++\n      this.loadMoreThreads()\n    }\n  }\n\n  private softDeleteComment (comment: VideoComment) {\n    comment.isDeleted = true\n    comment.deletedAt = new Date()\n    comment.text = ''\n    comment.account = null\n  }\n\n  private resetVideo () {\n    const video = this.video()\n    if (video.commentsPolicy.id === VideoCommentPolicy.DISABLED) return\n\n    // Reset all our fields\n    this.highlightedThread = null\n    this.comments = []\n    this.threadComments = {}\n    this.threadLoading = {}\n    this.inReplyToCommentId = undefined\n    this.componentPagination.currentPage = 1\n    this.componentPagination.totalItems = null\n    this.totalNotDeletedComments = null\n\n    this.commentsEnabled = true\n\n    this.syndicationItems = this.videoCommentService.getVideoCommentsFeeds(video)\n    this.loadMoreThreads()\n\n    if (this.activatedRoute.snapshot.params['threadId']) {\n      this.processHighlightedThread(+this.activatedRoute.snapshot.params['threadId'])\n    }\n  }\n\n  private processHighlightedThread (highlightedThreadId: number) {\n    this.highlightedThread = this.comments.find(c => c.id === highlightedThreadId)\n\n    const highlightThread = true\n    this.viewReplies(highlightedThreadId, highlightThread)\n  }\n}\n","<div class=\"privacy-concerns\" *ngIf=\"display\">\n  <div class=\"privacy-concerns-text\">\n    <span class=\"me-2\">\n      <strong i18n>Friendly Reminder:</strong>&#32;\n      <ng-container i18n>\n        the sharing system used for this video implies that some technical information about your system (such as a public IP address) can be sent to other peers.\n      </ng-container>\n    </span>\n\n    <a class=\"link-primary\" i18n i18n-title title=\"Get more information\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.joinpeertube.org/admin/privacy-guide#peertube-p2p-privacy\">More information</a>\n  </div>\n\n  <button i18n class=\"ms-2 peertube-button primary-button\" (click)=\"acceptedPrivacyConcern()\">\n    OK\n  </button>\n</div>\n","import { Component, OnInit, inject, input } from '@angular/core'\nimport { ServerService, User, UserService } from '@app/core'\nimport { peertubeLocalStorage } from '@root-helpers/peertube-web-storage'\nimport { isP2PEnabled } from '@root-helpers/video'\nimport { HTMLServerConfig, Video } from '@peertube/peertube-models'\nimport { NgIf } from '@angular/common'\n\n@Component({\n  selector: 'my-privacy-concerns',\n  templateUrl: './privacy-concerns.component.html',\n  styleUrls: [ './privacy-concerns.component.scss' ],\n  imports: [ NgIf ]\n})\nexport class PrivacyConcernsComponent implements OnInit {\n  private serverService = inject(ServerService)\n  private userService = inject(UserService)\n\n  private static LS_PRIVACY_CONCERN_KEY = 'video-watch-privacy-concern'\n\n  readonly video = input<Video>(undefined)\n\n  display = false\n\n  private serverConfig: HTMLServerConfig\n\n  ngOnInit () {\n    this.serverConfig = this.serverService.getHTMLConfig()\n\n    this.userService.getAnonymousOrLoggedUser()\n      .subscribe(user => this.updateDisplay(user))\n  }\n\n  acceptedPrivacyConcern () {\n    peertubeLocalStorage.setItem(PrivacyConcernsComponent.LS_PRIVACY_CONCERN_KEY, 'true')\n\n    this.display = false\n  }\n\n  private updateDisplay (user: User) {\n    if (isP2PEnabled(this.video(), this.serverConfig, user.p2pEnabled) && !this.alreadyAccepted()) {\n      this.display = true\n    }\n  }\n\n  private alreadyAccepted () {\n    return peertubeLocalStorage.getItem(PrivacyConcernsComponent.LS_PRIVACY_CONCERN_KEY) === 'true'\n  }\n}\n","<my-alert rounded=\"false\" type=\"primary\" i18n *ngIf=\"hasVideoScheduledPublication()\">\n  This video will be published on {{ video().scheduledUpdate.updateAt | ptDate: 'full' }}.\n</my-alert>\n\n<my-alert rounded=\"false\" type=\"primary\" i18n *ngIf=\"isWaitingForLive()\">\n  This live is not currently streaming.\n</my-alert>\n\n<my-alert rounded=\"false\" type=\"primary\" i18n *ngIf=\"isLiveEnded()\">\n  This live has ended.\n</my-alert>\n\n<my-alert rounded=\"false\" type=\"warning\" *ngIf=\"getAlertWarning()?.title\">\n  <div class=\"alert-title\">{{ getAlertWarning()?.title }}</div>\n\n  @if (canSeeMoreInfo()) {\n    {{ getAlertWarning().watchSecondary }}\n  }\n\n  {{ getAlertWarning().watchMain }}\n</my-alert>\n\n<my-alert rounded=\"false\" i18n type=\"warning\" *ngIf=\"noPlaylistVideoFound()\">\n  There are no videos available in this playlist.\n</my-alert>\n\n<my-alert rounded=\"false\" type=\"danger\" *ngIf=\"video()?.blacklisted\">\n  <div class=\"blocked-label\" i18n>This video is blocked.</div>\n\n  {{ video().blacklistedReason }}\n</my-alert>\n\n<my-alert rounded=\"false\" i18n type=\"warning\" *ngIf=\"video()?.canBypassPassword(user())\">\n  This video is password protected.\n</my-alert>\n","import { NgIf } from '@angular/common'\nimport { Component, inject, input } from '@angular/core'\nimport { AuthUser } from '@app/core'\nimport { AlertComponent } from '@app/shared/shared-main/common/alert.component'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { VideoDetails } from '@app/shared/shared-main/video/video-details.model'\nimport { VideoStateMessageService } from '@app/shared/shared-video/video-state-message.service'\nimport { UserRight, VideoPrivacy, VideoState } from '@peertube/peertube-models'\n\n@Component({\n  selector: 'my-video-alert',\n  templateUrl: './video-alert.component.html',\n  styles: `my-alert { text-align: center }`,\n  imports: [ NgIf, PTDatePipe, AlertComponent ]\n})\nexport class VideoAlertComponent {\n  readonly user = input<AuthUser>(undefined)\n  readonly video = input<VideoDetails>(undefined)\n  readonly noPlaylistVideoFound = input<boolean>(undefined)\n\n  private readonly videoStateMessage = inject(VideoStateMessageService)\n\n  canSeeMoreInfo () {\n    return !!(this.user()?.hasRight(UserRight.UPDATE_ANY_VIDEO))\n  }\n\n  getAlertWarning () {\n    const video = this.video()\n    if (!video) return undefined\n\n    return this.videoStateMessage.buildWarn(video.state.id)\n  }\n\n  hasVideoScheduledPublication () {\n    return this.video()?.scheduledUpdate !== undefined\n  }\n\n  isWaitingForLive () {\n    return this.video()?.state.id === VideoState.WAITING_FOR_LIVE\n  }\n\n  isLiveEnded () {\n    return this.video()?.state.id === VideoState.LIVE_ENDED\n  }\n\n  isVideoPasswordProtected () {\n    return this.video()?.privacy.id === VideoPrivacy.PASSWORD_PROTECTED\n  }\n}\n","<div class=\"attribute attribute-privacy\">\n  <span i18n class=\"attribute-label\">Privacy</span>\n  <span class=\"attribute-value\">{{ video().privacy.label }}</span>\n</div>\n\n<div *ngIf=\"video().isLocal === false\" class=\"attribute attribute-origin\">\n  <span i18n class=\"attribute-label\">Origin</span>\n  <a\n    class=\"attribute-value\" target=\"_blank\" rel=\"noopener noreferrer\"\n    routerLink=\"/search\" [queryParams]=\"{ host: getVideoHost() }\"\n  >{{ video().originInstanceHost }}</a>\n\n  <a\n    i18n-title title=\"Open the video on the origin instance\"\n    target=\"_blank\" rel=\"noopener noreferrer\" [href]=\"video().url\"\n  >\n    <my-global-icon iconName=\"external-link\"></my-global-icon>\n  </a>\n</div>\n\n<div *ngIf=\"!!video().inputFileUpdatedAt\" class=\"attribute attribute-re-uploaded-on\">\n  <span i18n class=\"attribute-label\">Video re-upload</span>\n  <span class=\"attribute-value\">{{ video().inputFileUpdatedAt | ptDate: 'short' }}</span>\n</div>\n\n<div *ngIf=\"!!video().originallyPublishedAt\" class=\"attribute attribute-originally-published-at\">\n  <span i18n class=\"attribute-label\">Originally published</span>\n  <span class=\"attribute-value\">{{ video().originallyPublishedAt | ptDate: 'shortDate' }}</span>\n</div>\n\n<div class=\"attribute attribute-category\">\n  <span i18n class=\"attribute-label\">Category</span>\n  <span *ngIf=\"!video().category.id\" class=\"attribute-value\">{{ video().category.label }}</span>\n  <a\n    *ngIf=\"video().category.id\" class=\"attribute-value\"\n    [routerLink]=\"[ '/search' ]\" [queryParams]=\"{ categoryOneOf: [ video().category.id ] }\"\n  >{{ video().category.label }}</a>\n</div>\n\n<div class=\"attribute attribute-licence\">\n  <span i18n class=\"attribute-label\">Licence</span>\n  <span *ngIf=\"!video().licence.id\" class=\"attribute-value\">{{ video().licence.label }}</span>\n  <a\n    *ngIf=\"video().licence.id\" class=\"attribute-value\"\n    [routerLink]=\"[ '/search' ]\" [queryParams]=\"{ licenceOneOf: [ video().licence.id ] }\"\n  >{{ video().licence.label }}</a>\n</div>\n\n<div class=\"attribute attribute-language\">\n  <span i18n class=\"attribute-label\">Language</span>\n  <span *ngIf=\"!video().language.id\" class=\"attribute-value\">{{ video().language.label }}</span>\n  <a\n    *ngIf=\"video().language.id\" class=\"attribute-value\"\n    [routerLink]=\"[ '/search' ]\" [queryParams]=\"{ languageOneOf: [ video().language.id ] }\"\n  >{{ video().language.label }}</a>\n</div>\n\n<div class=\"attribute attribute-tags\">\n  <span i18n class=\"attribute-label\">Tags</span>\n  <a\n    *ngFor=\"let tag of getVideoTags()\"\n    class=\"attribute-value pt-badge badge-secondary me-1\" [routerLink]=\"[ '/search' ]\" [queryParams]=\"{ tagsOneOf: [ tag ] }\"\n  >{{ tag }}</a>\n</div>\n\n<div class=\"attribute attribute-duration\" *ngIf=\"!video().isLive\">\n  <span i18n class=\"attribute-label\">Duration</span>\n  <span class=\"attribute-value\">{{ video().duration | myTimeDurationFormatter }}</span>\n</div>\n\n<div class=\"attribute attribute-plugin\" *ngFor=\"let metadata of pluginMetadata\">\n  <span class=\"attribute-label\">{{ metadata.label }}</span>\n\n  <span *ngIf=\"metadata.value\" class=\"attribute-value\">{{ metadata.value }}</span>\n  <span *ngIf=\"metadata.safeHTML\" class=\"attribute-value\" [innerHTML]=\"metadata.safeHTML\"></span>\n</div>\n","import { NgFor, NgIf } from '@angular/common'\nimport { Component, OnChanges, inject, input } from '@angular/core'\nimport { RouterLink } from '@angular/router'\nimport { HooksService } from '@app/core'\nimport { GlobalIconComponent } from '@app/shared/shared-icons/global-icon.component'\nimport { PTDatePipe } from '@app/shared/shared-main/common/date.pipe'\nimport { TimeDurationFormatterPipe } from '@app/shared/shared-main/date/time-duration-formatter.pipe'\nimport { VideoDetails } from '@app/shared/shared-main/video/video-details.model'\n\ntype PluginMetadata = {\n  label: string\n\n  value?: string\n  safeHTML?: string\n}\n\n@Component({\n  selector: 'my-video-attributes',\n  templateUrl: './video-attributes.component.html',\n  styleUrls: [ './video-attributes.component.scss' ],\n  imports: [ NgIf, RouterLink, GlobalIconComponent, NgFor, TimeDurationFormatterPipe, PTDatePipe ]\n})\nexport class VideoAttributesComponent implements OnChanges {\n  private hooks = inject(HooksService)\n\n  readonly video = input<VideoDetails>(undefined)\n\n  pluginMetadata: PluginMetadata[] = []\n\n  async ngOnChanges () {\n    this.pluginMetadata = await this.hooks.wrapObject(\n      this.pluginMetadata,\n      'video-watch',\n      'filter:video-watch.video-plugin-metadata.result',\n      { video: this.video() }\n    )\n  }\n\n  getVideoHost () {\n    return this.video().channel.host\n  }\n\n  getVideoTags () {\n    const video = this.video()\n    if (!video || Array.isArray(video.tags) === false) return []\n\n    return video.tags\n  }\n}\n","<div class=\"wrapper\">\n  <my-actor-avatar\n    *ngIf=\"showChannel()\"\n    class=\"channel\"\n    [actor]=\"video().channel\" actorType=\"channel\"\n    [internalHref]=\"[ '/c', video().byVideoChannel ]\"\n    [title]=\"channelLinkTitle\"\n    size=\"35\"\n  ></my-actor-avatar>\n\n  <my-actor-avatar\n    *ngIf=\"showAccount()\"\n    class=\"account\"\n    [class.second-avatar]=\"showChannel()\"\n    [actor]=\"video().account\" actorType=\"account\"\n    [internalHref]=\"[ '/a', video().byAccount ]\"\n    [title]=\"accountLinkTitle\"\n    size=\"35\">\n  </my-actor-avatar>\n</div>\n","import { NgIf } from '@angular/common'\nimport { Component, OnInit, input } from '@angular/core'\nimport { ActorAvatarComponent } from '@app/shared/shared-actor-image/actor-avatar.component'\nimport { Video } from '@app/shared/shared-main/video/video.model'\n\n@Component({\n  selector: 'my-video-avatar-channel',\n  templateUrl: './video-avatar-channel.component.html',\n  styleUrls: [ './video-avatar-channel.component.scss' ],\n  imports: [ NgIf, ActorAvatarComponent ]\n})\nexport class VideoAvatarChannelComponent implements OnInit {\n  readonly video = input<Video>(undefined)\n  readonly byAccount = input<string>(undefined)\n\n  readonly showAccount = input<boolean>(undefined)\n  readonly showChannel = input<boolean>(undefined)\n\n  channelLinkTitle = ''\n  accountLinkTitle = ''\n\n  ngOnInit () {\n    this.channelLinkTitle = $localize`${this.video().account.name} (channel page)`\n    this.accountLinkTitle = $localize`${this.video().byAccount} (account page)`\n  }\n}\n","<div class=\"video-info-description\">\n  <div\n    #descriptionHTML\n    class=\"video-info-description-html\"\n    [ngClass]=\"{ 'ellipsis-multiline-3': !completeDescriptionShown }\"\n    [innerHTML]=\"videoHTMLDescription\"\n    (timestampClicked)=\"onTimestampClicked($event)\"\n    myTimestampRouteTransformer\n  ></div>\n\n  <button\n    *ngIf=\"(hasEllipsis() && !completeDescriptionShown) || completeDescriptionShown\"\n    (click)=\"completeDescriptionShown = !completeDescriptionShown\"\n    class=\"video-info-description-more button-unstyle\"\n  >\n    @if (completeDescriptionShown) {\n      <ng-container i18n>Show less</ng-container>\n      <span class=\"chevron-up\"></span>\n    } @else {\n      <ng-container i18n>Show more</ng-container>\n      <span class=\"chevron-down\"></span>\n    }\n\n  </button>\n</div>\n","import { Component, OnChanges, ElementRef, inject, input, output, viewChild } from '@angular/core'\nimport { MarkdownService } from '@app/core'\nimport { NgClass, NgIf } from '@angular/common'\nimport { TimestampRouteTransformerDirective } from '../timestamp-route-transformer.directive'\nimport { VideoDetails } from '@app/shared/shared-main/video/video-details.model'\n\n@Component({\n  selector: 'my-video-description',\n  templateUrl: './video-description.component.html',\n  styleUrls: [ './video-description.component.scss' ],\n  imports: [ TimestampRouteTransformerDirective, NgClass, NgIf ]\n})\nexport class VideoDescriptionComponent implements OnChanges {\n  private markdownService = inject(MarkdownService)\n\n  readonly descriptionHTML = viewChild<ElementRef<HTMLElement>>('descriptionHTML')\n\n  readonly video = input<VideoDetails>(undefined)\n\n  readonly timestampClicked = output<number>()\n\n  completeDescriptionShown = false\n\n  videoHTMLDescription = ''\n\n  ngOnChanges () {\n    this.completeDescriptionShown = false\n\n    this.setVideoDescriptionHTML()\n  }\n\n  hasEllipsis () {\n    const el = this.descriptionHTML()?.nativeElement\n    if (!el) return false\n\n    return el.offsetHeight < el.scrollHeight\n  }\n\n  showMoreDescription () {\n    this.completeDescriptionShown = true\n  }\n\n  showLessDescription () {\n    this.completeDescriptionShown = false\n  }\n\n  onTimestampClicked (timestamp: number) {\n    this.timestampClicked.emit(timestamp)\n  }\n\n  private async setVideoDescriptionHTML () {\n    const html = await this.markdownService.textMarkdownToHTML({ markdown: this.video().description, withHtml: true, withEmoji: true })\n\n    this.videoHTMLDescription = this.markdownService.processVideoTimestamps(this.video().shortUUID, html)\n  }\n}\n","import { Injectable, inject } from '@angular/core'\nimport { ServerService, UserService } from '@app/core'\nimport { VideoDetails } from '@app/shared/shared-main/video/video-details.model'\nimport { Video } from '@app/shared/shared-main/video/video.model'\nimport { VideoService } from '@app/shared/shared-main/video/video.service'\nimport { AdvancedSearch } from '@app/shared/shared-search/advanced-search.model'\nimport { SearchService } from '@app/shared/shared-search/search.service'\nimport { HTMLServerConfig } from '@peertube/peertube-models'\nimport { Observable, of } from 'rxjs'\nimport { map, switchMap } from 'rxjs/operators'\n\n@Injectable()\nexport class VideoRecommendationService {\n  private videos = inject(VideoService)\n  private searchService = inject(SearchService)\n  private userService = inject(UserService)\n  private serverService = inject(ServerService)\n\n  private config: HTMLServerConfig\n\n  private readonly videoIdsHistory = new Set<number>()\n\n  constructor () {\n    this.config = this.serverService.getHTMLConfig()\n  }\n\n  getRecommendationHistory () {\n    return this.videoIdsHistory\n  }\n\n  getRecommendations (currentVideo: VideoDetails, exceptions = new Set<number>()): Observable<Video[]> {\n    this.videoIdsHistory.add(currentVideo.id)\n\n    // We want 5 results max\n    // +1 to exclude the currentVideo if needed\n    // +exceptions.size to exclude the videos we don't want to include\n    // Cap to 30 results maximum\n    const totalVideos = 5\n    const internalTotalVideos = Math.min(totalVideos + 1 + exceptions.size, 30)\n\n    return this.fetchPage(currentVideo, internalTotalVideos)\n      .pipe(\n        map(videos => {\n          let otherVideos = videos.filter(v => v.uuid !== currentVideo.uuid && !exceptions.has(v.id))\n\n          // Stop using exclude list if we excluded all videos\n          if (otherVideos.length === 0 && videos.length !== 0) {\n            otherVideos = videos.filter(v => v.uuid !== currentVideo.uuid)\n          }\n\n          return otherVideos.slice(0, totalVideos)\n        })\n      )\n  }\n\n  private fetchPage (currentVideo: VideoDetails, totalItems: number): Observable<Video[]> {\n    const pagination = { currentPage: 1, itemsPerPage: totalItems }\n\n    return this.userService.getAnonymousOrLoggedUser()\n      .pipe(\n        switchMap(user => {\n          const defaultSubscription = this.videos.listVideos({\n            skipCount: true,\n            videoPagination: pagination,\n            sort: '-publishedAt'\n          }).pipe(map(v => v.data))\n\n          const searchIndexConfig = this.config.search.searchIndex\n          if (searchIndexConfig.enabled === true && searchIndexConfig.disableLocalSearch === true) {\n            return defaultSubscription\n          }\n\n          return this.searchService.searchVideos({\n            search: '',\n            componentPagination: pagination,\n            skipCount: true,\n            advancedSearch: new AdvancedSearch({\n              tagsOneOf: currentVideo.tags.join(','),\n              sort: '-publishedAt',\n              searchTarget: 'local',\n              excludeAlreadyWatched: user.id\n                ? true\n                : undefined\n            })\n          })\n            .pipe(\n              map(v => v.data),\n              switchMap(videos => {\n                if (videos.length <= 1) return defaultSubscription\n\n                return of(videos)\n              })\n            )\n        })\n      )\n  }\n}\n","<div class=\"other-videos\" [ngClass]=\"{ 'display-as-row': displayAsRow() }\">\n  @if (videos.length !== 0) {\n    <div class=\"title-page-container\">\n      <h2 i18n>Other videos</h2>\n\n      <div\n        *ngIf=\"!playlist()\" class=\"title-page-autoplay\"\n        [ngbTooltip]=\"autoPlayNextVideoTooltip\" placement=\"bottom-right auto\"\n      >\n        <span i18n>AUTOPLAY</span>\n\n        <my-input-switch\n          i18n-label label=\"Toggle autoplay next video\"\n          class=\"small\" inputName=\"autoplay-next-video\"\n          [(ngModel)]=\"autoPlayNextVideo\" (ngModelChange)=\"switchAutoPlayNextVideo()\"\n        ></my-input-switch>\n      </div>\n    </div>\n\n    <ng-container *ngFor=\"let video of videos; let i = index; let length = count\">\n      <span i18n *ngIf=\"!playlist() && i === 0 && length !== 0 && autoPlayNextVideo\" class=\"title-page-next-video-label\">Next video to be played</span>\n\n      <my-video-miniature\n        [displayOptions]=\"displayOptions\" [video]=\"video\" [user]=\"user\" [displayAsRow]=\"displayAsRow()\"\n        (videoBlocked)=\"onVideoRemoved()\" (videoRemoved)=\"onVideoRemoved()\" (videoAccountMuted)=\"onVideoRemoved()\"\n        actorImageSize=\"32\"\n      >\n      </my-video-miniature>\n\n      <hr *ngIf=\"!playlist() && i === 0 && length > 1 && autoPlayNextVideo\" />\n    </ng-container>\n  }\n</div>\n","import { NgClass, NgFor, NgIf } from '@angular/common'\nimport { Component, OnChanges, OnDestroy, OnInit, inject, input, output } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { AuthService, Notifier, User, UserService } from '@app/core'\nimport { InputSwitchComponent } from '@app/shared/shared-forms/input-switch.component'\nimport { VideoDetails } from '@app/shared/shared-main/video/video-details.model'\nimport { Video } from '@app/shared/shared-main/video/video.model'\nimport { MiniatureDisplayOptions, VideoMiniatureComponent } from '@app/shared/shared-video-miniature/video-miniature.component'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { VideoPlaylist } from '@peertube/peertube-models'\nimport { Subscription, startWith, switchMap } from 'rxjs'\nimport { VideoRecommendationService } from './video-recommendation.service'\n\n@Component({\n  selector: 'my-recommended-videos',\n  templateUrl: './recommended-videos.component.html',\n  styleUrls: [ './recommended-videos.component.scss' ],\n  imports: [ NgClass, NgIf, NgbTooltip, InputSwitchComponent, FormsModule, NgFor, VideoMiniatureComponent ]\n})\nexport class RecommendedVideosComponent implements OnInit, OnChanges, OnDestroy {\n  private userService = inject(UserService)\n  private authService = inject(AuthService)\n  private notifier = inject(Notifier)\n  private videoRecommendation = inject(VideoRecommendationService)\n\n  readonly currentVideo = input<VideoDetails>(undefined)\n  readonly playlist = input<VideoPlaylist>(undefined)\n  readonly displayAsRow = input<boolean>(undefined)\n\n  readonly gotRecommendations = output<Video[]>()\n\n  videos: Video[] = []\n\n  autoPlayNextVideo: boolean\n  autoPlayNextVideoTooltip: string\n\n  displayOptions: MiniatureDisplayOptions = {\n    date: true,\n    views: true,\n    by: true,\n    avatar: true\n  }\n\n  user: User\n\n  private userSub: Subscription\n\n  constructor () {\n    this.autoPlayNextVideoTooltip = $localize`When active, the next video is automatically played after the current one.`\n  }\n\n  ngOnInit () {\n    this.userSub = this.userService.listenAnonymousUpdate()\n      .pipe(\n        startWith(true),\n        switchMap(() => this.userService.getAnonymousOrLoggedUser())\n      )\n      .subscribe(user => {\n        this.user = user\n        this.autoPlayNextVideo = user.autoPlayNextVideo\n      })\n  }\n\n  ngOnChanges () {\n    if (this.currentVideo()) {\n      this.loadRecommendations()\n    }\n  }\n\n  ngOnDestroy () {\n    if (this.userSub) this.userSub.unsubscribe()\n  }\n\n  onVideoRemoved () {\n    this.loadRecommendations()\n  }\n\n  switchAutoPlayNextVideo () {\n    const details = { autoPlayNextVideo: this.autoPlayNextVideo }\n\n    if (this.authService.isLoggedIn()) {\n      this.userService.updateMyProfile(details)\n        .subscribe({\n          next: () => {\n            this.authService.refreshUserInformation()\n          },\n\n          error: err => this.notifier.error(err.message)\n        })\n    } else {\n      this.userService.updateMyAnonymousProfile(details)\n    }\n  }\n\n  private loadRecommendations () {\n    this.videoRecommendation.getRecommendations(this.currentVideo(), this.videoRecommendation.getRecommendationHistory())\n      .subscribe({\n        next: videos => {\n          this.videos = videos\n\n          this.gotRecommendations.emit(this.videos)\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n}\n","import { NgClass, NgIf, NgTemplateOutlet, PlatformLocation } from '@angular/common'\nimport { Component, ElementRef, inject, LOCALE_ID, NgZone, OnDestroy, OnInit, viewChild } from '@angular/core'\nimport { ActivatedRoute, Params, Router, RouterLink } from '@angular/router'\nimport {\n  AuthService,\n  AuthUser,\n  ConfirmService,\n  Hotkey,\n  HotkeysService,\n  MetaService,\n  Notifier,\n  PeerTubeSocket,\n  PluginService,\n  RestExtractor,\n  ScreenService,\n  ServerService,\n  User,\n  UserService\n} from '@app/core'\nimport { HooksService } from '@app/core/plugins/hooks.service'\nimport { getAPIUrl, getOriginUrl, isXPercentInViewport, scrollToTop, toBoolean } from '@app/helpers'\nimport { VideoCaptionService } from '@app/shared/shared-main/video-caption/video-caption.service'\nimport { VideoChapterService } from '@app/shared/shared-main/video/video-chapter.service'\nimport { VideoDetails } from '@app/shared/shared-main/video/video-details.model'\nimport { VideoFileTokenService } from '@app/shared/shared-main/video/video-file-token.service'\nimport { Video } from '@app/shared/shared-main/video/video.model'\nimport { VideoService } from '@app/shared/shared-main/video/video.service'\nimport { SubscribeButtonComponent } from '@app/shared/shared-user-subscription/subscribe-button.component'\nimport { LiveVideoService } from '@app/shared/shared-video-live/live-video.service'\nimport { VideoPlaylist } from '@app/shared/shared-video-playlist/video-playlist.model'\nimport { VideoPlaylistService } from '@app/shared/shared-video-playlist/video-playlist.service'\nimport { getVideoWatchRSSFeeds, timeToInt } from '@peertube/peertube-core-utils'\nimport {\n  HTMLServerConfig,\n  HttpStatusCode,\n  LiveVideo,\n  PeerTubeProblemDocument,\n  ServerErrorCode,\n  Storyboard,\n  VideoCaption,\n  VideoChapter,\n  VideoPrivacy,\n  VideoState,\n  VideoStateType\n} from '@peertube/peertube-models'\nimport {\n  cleanupVideoWatch,\n  getStoredTheater,\n  getStoredVideoWatchHistory,\n  HLSOptions,\n  PeerTubePlayer,\n  PeerTubePlayerConstructorOptions,\n  PeerTubePlayerLoadOptions,\n  PlayerMode,\n  videojs\n} from '@peertube/player'\nimport { logger } from '@root-helpers/logger'\nimport { isP2PEnabled, videoRequiresFileToken, videoRequiresUserAuth } from '@root-helpers/video'\nimport debug from 'debug'\nimport { forkJoin, map, Observable, of, Subscription, switchMap } from 'rxjs'\nimport { environment } from '../../environments/environment'\nimport { DateToggleComponent } from '../shared/shared-main/date/date-toggle.component'\nimport { PluginPlaceholderComponent } from '../shared/shared-main/plugins/plugin-placeholder.component'\nimport { VideoViewsCounterComponent } from '../shared/shared-video/video-views-counter.component'\nimport { PlayerStylesComponent } from './player-styles.component'\nimport { ActionButtonsComponent } from './shared/action-buttons/action-buttons.component'\nimport { VideoCommentsComponent } from './shared/comment/video-comments.component'\nimport { PrivacyConcernsComponent } from './shared/information/privacy-concerns.component'\nimport { VideoAlertComponent } from './shared/information/video-alert.component'\nimport { VideoAttributesComponent } from './shared/metadata/video-attributes.component'\nimport { VideoAvatarChannelComponent } from './shared/metadata/video-avatar-channel.component'\nimport { VideoDescriptionComponent } from './shared/metadata/video-description.component'\nimport { VideoTranscriptionComponent } from './shared/player-widgets/video-transcription.component'\nimport { VideoWatchPlaylistComponent } from './shared/player-widgets/video-watch-playlist.component'\nimport { RecommendedVideosComponent } from './shared/recommendations/recommended-videos.component'\n\nconst debugLogger = debug('peertube:watch:VideoWatchComponent')\n\ntype URLOptions = {\n  playerMode: PlayerMode\n\n  startTime: number | string\n  stopTime: number | string\n\n  controls?: boolean\n  controlBar?: boolean\n\n  muted?: boolean\n  loop?: boolean\n  subtitle?: string\n  resume?: string\n\n  peertubeLink: boolean\n\n  playbackRate?: number | string\n}\n\n@Component({\n  selector: 'my-video-watch',\n  templateUrl: './video-watch.component.html',\n  styleUrls: [ './video-watch.component.scss' ],\n  imports: [\n    NgClass,\n    NgIf,\n    VideoWatchPlaylistComponent,\n    PluginPlaceholderComponent,\n    VideoAlertComponent,\n    DateToggleComponent,\n    VideoViewsCounterComponent,\n    NgTemplateOutlet,\n    ActionButtonsComponent,\n    VideoAvatarChannelComponent,\n    RouterLink,\n    SubscribeButtonComponent,\n    VideoDescriptionComponent,\n    VideoAttributesComponent,\n    VideoCommentsComponent,\n    RecommendedVideosComponent,\n    PrivacyConcernsComponent,\n    PlayerStylesComponent,\n    VideoWatchPlaylistComponent,\n    VideoTranscriptionComponent\n  ]\n})\nexport class VideoWatchComponent implements OnInit, OnDestroy {\n  private route = inject(ActivatedRoute)\n  private router = inject(Router)\n  private videoService = inject(VideoService)\n  private playlistService = inject(VideoPlaylistService)\n  private liveVideoService = inject(LiveVideoService)\n  private confirmService = inject(ConfirmService)\n  private authService = inject(AuthService)\n  private userService = inject(UserService)\n  private serverService = inject(ServerService)\n  private restExtractor = inject(RestExtractor)\n  private notifier = inject(Notifier)\n  private zone = inject(NgZone)\n  private videoCaptionService = inject(VideoCaptionService)\n  private videoChapterService = inject(VideoChapterService)\n  private hotkeysService = inject(HotkeysService)\n  private hooks = inject(HooksService)\n  private pluginService = inject(PluginService)\n  private peertubeSocket = inject(PeerTubeSocket)\n  private screenService = inject(ScreenService)\n  private videoFileTokenService = inject(VideoFileTokenService)\n  private location = inject(PlatformLocation)\n  private metaService = inject(MetaService)\n  private localeId = inject(LOCALE_ID)\n\n  readonly videoWatchPlaylist = viewChild<VideoWatchPlaylistComponent>('videoWatchPlaylist')\n  readonly subscribeButton = viewChild<SubscribeButtonComponent>('subscribeButton')\n  readonly playerElement = viewChild<ElementRef<HTMLVideoElement>>('playerElement')\n\n  peertubePlayer: PeerTubePlayer\n  theaterEnabled = false\n\n  video: VideoDetails = null\n  videoCaptions: VideoCaption[] = []\n  videoChapters: VideoChapter[] = []\n  liveVideo: LiveVideo\n  videoPassword: string\n  storyboards: Storyboard[] = []\n\n  playlistPosition: number\n  playlist: VideoPlaylist = null\n\n  remoteServerDown = false\n  noPlaylistVideoFound = false\n\n  transcriptionWidgetOpened = false\n\n  private nextRecommendedVideoId = ''\n  private nextRecommendedVideoTitle = ''\n\n  private videoFileToken: string\n\n  private currentTime: number\n\n  private paramsSub: Subscription\n  private queryParamsSub: Subscription\n  private configSub: Subscription\n  private liveVideosSub: Subscription\n\n  private serverConfig: HTMLServerConfig\n\n  private hotkeys: Hotkey[] = []\n\n  get authUser () {\n    return this.authService.getUser()\n  }\n\n  get anonymousUser () {\n    return this.userService.getAnonymousUser()\n  }\n\n  async ngOnInit () {\n    this.serverConfig = this.serverService.getHTMLConfig()\n\n    this.loadRouteParams()\n    this.loadRouteQuery()\n\n    this.theaterEnabled = getStoredTheater()\n\n    this.hooks.runAction('action:video-watch.init', 'video-watch')\n\n    setTimeout(cleanupVideoWatch, 1500) // Run in timeout to ensure we're not blocking the UI\n\n    const constructorOptions = await this.hooks.wrapFun(\n      this.buildPeerTubePlayerConstructorOptions.bind(this),\n      { urlOptions: this.getUrlOptions() },\n      'video-watch',\n      'filter:internal.video-watch.player.build-options.params',\n      'filter:internal.video-watch.player.build-options.result'\n    )\n\n    this.peertubePlayer = new PeerTubePlayer(constructorOptions)\n  }\n\n  ngOnDestroy () {\n    if (this.peertubePlayer) this.peertubePlayer.destroy()\n\n    // Unsubscribe subscriptions\n    if (this.paramsSub) this.paramsSub.unsubscribe()\n    if (this.queryParamsSub) this.queryParamsSub.unsubscribe()\n    if (this.configSub) this.configSub.unsubscribe()\n    if (this.liveVideosSub) this.liveVideosSub.unsubscribe()\n\n    // Unbind hotkeys\n    this.hotkeysService.remove(this.hotkeys)\n\n    this.metaService.revertMetaTags()\n  }\n\n  getCurrentTime () {\n    return this.currentTime\n  }\n\n  getCurrentPlaylistPosition () {\n    return this.videoWatchPlaylist().currentPlaylistPosition\n  }\n\n  onRecommendations (videos: Video[]) {\n    if (videos.length === 0) return\n\n    // The recommended videos's first element should be the next video\n    const video = videos[0]\n    this.nextRecommendedVideoId = video.shortUUID\n    this.nextRecommendedVideoTitle = video.name\n  }\n\n  // ---------------------------------------------------------------------------\n\n  handleTimestampClicked (timestamp: number) {\n    if (!this.peertubePlayer || this.video.isLive) return\n\n    const player = this.peertubePlayer.getPlayer()\n    if (!player) return\n\n    this.peertubePlayer.setCurrentTime(timestamp)\n\n    scrollToTop()\n  }\n\n  // ---------------------------------------------------------------------------\n\n  onPlaylistVideoFound (videoId: string) {\n    this.loadVideo({ videoId, forceAutoplay: false })\n  }\n\n  onPlaylistNoVideoFound () {\n    this.noPlaylistVideoFound = true\n  }\n\n  isUserLoggedIn () {\n    return this.authService.isLoggedIn()\n  }\n\n  isUserOwner () {\n    return this.video.isLocal === true && this.video.account.name === this.authUser?.username\n  }\n\n  isChannelDisplayNameGeneric () {\n    const genericChannelDisplayName = [\n      `Main ${this.video.channel.ownerAccount.name} channel`,\n      `Default ${this.video.channel.ownerAccount.name} channel`\n    ]\n\n    return genericChannelDisplayName.includes(this.video.channel.displayName)\n  }\n\n  displayOtherVideosAsRow () {\n    // Use the same value as in the SASS file\n    return this.screenService.getWindowInnerWidth() <= 1100\n  }\n\n  private loadRouteParams () {\n    this.paramsSub = this.route.params.subscribe(routeParams => {\n      const videoId = routeParams['videoId']\n      if (videoId) return this.loadVideo({ videoId, forceAutoplay: false })\n\n      const playlistId = routeParams['playlistId']\n      if (playlistId) return this.loadPlaylist(playlistId)\n    })\n  }\n\n  private loadRouteQuery () {\n    this.queryParamsSub = this.route.queryParams.subscribe(queryParams => {\n      if (!this.parsePlaylistPosition(queryParams)) return\n\n      this.videoWatchPlaylist().updatePlaylistIndex(this.playlistPosition)\n\n      const start = queryParams['start']\n      if (this.peertubePlayer?.getPlayer() && start) {\n        this.peertubePlayer.setCurrentTime(parseInt(start, 10))\n      }\n    })\n  }\n\n  private parsePlaylistPosition (queryParams: Params) {\n    // Handle the ?playlistPosition\n    const positionParam = queryParams['playlistPosition']\n    if (!positionParam) return false\n\n    this.playlistPosition = positionParam === 'last'\n      ? -1 // Handle the \"last\" index\n      : parseInt(positionParam + '', 10)\n\n    if (isNaN(this.playlistPosition)) {\n      logger.error(`playlistPosition query param '${positionParam}' was parsed as NaN, defaulting to 1.`)\n      this.playlistPosition = 1\n    }\n\n    return true\n  }\n\n  private loadVideo (options: {\n    videoId: string\n    forceAutoplay: boolean\n    liveRefresh?: boolean\n    videoPassword?: string\n  }) {\n    const { videoId, liveRefresh, forceAutoplay, videoPassword } = options\n\n    if (!liveRefresh && this.isSameElement(this.video, videoId)) return\n\n    const videoObs = this.hooks.wrapObsFun(\n      this.videoService.getVideo.bind(this.videoService),\n      { videoId, videoPassword },\n      'video-watch',\n      'filter:api.video-watch.video.get.params',\n      'filter:api.video-watch.video.get.result'\n    )\n\n    const videoAndLiveObs: Observable<{ video: VideoDetails, live?: LiveVideo, videoFileToken?: string }> = videoObs.pipe(\n      switchMap(video => {\n        if (!video.isLive) return of({ video, live: undefined })\n\n        return this.liveVideoService.getVideoLive(video.uuid)\n          .pipe(map(live => ({ live, video })))\n      }),\n      switchMap(({ video, live }) => {\n        if (!videoRequiresFileToken(video)) return of({ video, live, videoFileToken: undefined })\n\n        return this.videoFileTokenService.getVideoFileToken({ videoUUID: video.uuid, videoPassword })\n          .pipe(map(({ token }) => ({ video, live, videoFileToken: token })))\n      })\n    )\n\n    forkJoin([\n      videoAndLiveObs,\n      this.videoCaptionService.listCaptions(videoId, videoPassword),\n      this.videoChapterService.getChapters({ videoId, videoPassword }),\n      this.videoService.getStoryboards(videoId, videoPassword),\n      this.userService.getAnonymousOrLoggedUser()\n    ]).subscribe({\n      next: ([ { video, live, videoFileToken }, captionsResult, chaptersResult, storyboards, loggedInOrAnonymousUser ]) => {\n        this.onVideoFetched({\n          video,\n          live,\n          videoCaptions: captionsResult.data,\n          videoChapters: chaptersResult.chapters,\n          storyboards,\n          videoFileToken,\n          videoPassword,\n          loggedInOrAnonymousUser,\n          forceAutoplay\n        }).catch(err => {\n          this.handleGlobalError(err)\n        })\n      },\n      error: async err => {\n        if (err.body.code === ServerErrorCode.VIDEO_REQUIRES_PASSWORD || err.body.code === ServerErrorCode.INCORRECT_VIDEO_PASSWORD) {\n          const { confirmed, password } = await this.handleVideoPasswordError(err)\n\n          if (confirmed === false) return this.location.back()\n\n          this.loadVideo({ ...options, videoPassword: password })\n        } else {\n          this.handleRequestError(err)\n        }\n      }\n    })\n  }\n\n  private loadPlaylist (playlistId: string) {\n    if (this.isSameElement(this.playlist, playlistId)) return\n\n    this.playlistPosition = undefined\n    this.noPlaylistVideoFound = false\n\n    this.playlistService.getVideoPlaylist(playlistId)\n      .subscribe({\n        next: playlist => {\n          this.playlist = playlist\n\n          this.parsePlaylistPosition(this.route.snapshot.queryParams)\n\n          this.videoWatchPlaylist().loadPlaylistElements({\n            playlist,\n            redirectToFirst: !this.playlistPosition,\n            position: this.playlistPosition,\n            reset: true\n          })\n        },\n\n        error: err => this.handleRequestError(err)\n      })\n  }\n\n  private isSameElement (element: VideoDetails | VideoPlaylist, newId: string) {\n    if (!element) return false\n\n    return (element.id + '') === newId || element.uuid === newId || element.shortUUID === newId\n  }\n\n  private async handleRequestError (err: any) {\n    const errorBody = err.body as PeerTubeProblemDocument\n\n    if (errorBody?.code === ServerErrorCode.DOES_NOT_RESPECT_FOLLOW_CONSTRAINTS && errorBody.originUrl) {\n      const originUrl = errorBody.originUrl + (window.location.search ?? '')\n\n      const res = await this.confirmService.confirm(\n        // eslint-disable-next-line max-len\n        $localize`This video is not available on ${this.serverConfig.instance.name}. Do you want to be redirected on the origin platform: <a href=\"${originUrl}\">${originUrl}</a>?`,\n        $localize`Redirection`\n      )\n\n      if (res === true) return window.location.href = originUrl\n    }\n\n    // If 400, 403 or 404, the video is private or blocked so redirect to 404\n    return this.restExtractor.redirectTo404IfNotFound(err, 'video', [\n      HttpStatusCode.BAD_REQUEST_400,\n      HttpStatusCode.FORBIDDEN_403,\n      HttpStatusCode.NOT_FOUND_404\n    ])\n  }\n\n  private handleGlobalError (err: any) {\n    const errorMessage: string = typeof err === 'string' ? err : err.message\n    if (!errorMessage) return\n\n    this.notifier.error(errorMessage)\n  }\n\n  private handleVideoPasswordError (err: any) {\n    let isIncorrectPassword: boolean\n\n    if (err.body.code === ServerErrorCode.VIDEO_REQUIRES_PASSWORD) {\n      isIncorrectPassword = false\n    } else if (err.body.code === ServerErrorCode.INCORRECT_VIDEO_PASSWORD) {\n      this.videoPassword = undefined\n      isIncorrectPassword = true\n    }\n\n    return this.confirmService.confirmWithPassword({\n      message: $localize`You need a password to watch this video`,\n      title: $localize`This video is password protected`,\n      errorMessage: isIncorrectPassword ? $localize`Incorrect password, please enter a correct password` : ''\n    })\n  }\n\n  private async onVideoFetched (options: {\n    video: VideoDetails\n    live: LiveVideo\n    videoCaptions: VideoCaption[]\n    videoChapters: VideoChapter[]\n    storyboards: Storyboard[]\n    videoFileToken: string\n    videoPassword: string\n\n    loggedInOrAnonymousUser: User\n    forceAutoplay: boolean\n  }) {\n    const {\n      video,\n      live,\n      videoCaptions,\n      videoChapters,\n      storyboards,\n      videoFileToken,\n      videoPassword,\n      loggedInOrAnonymousUser,\n      forceAutoplay\n    } = options\n\n    this.subscribeToLiveEventsIfNeeded(this.video, video)\n\n    this.video = video\n    this.videoCaptions = videoCaptions\n    this.videoChapters = videoChapters\n    this.liveVideo = live\n    this.videoFileToken = videoFileToken\n    this.videoPassword = videoPassword\n    this.storyboards = storyboards\n\n    // Re init attributes\n    this.remoteServerDown = false\n    this.currentTime = undefined\n\n    if (this.transcriptionWidgetOpened && this.videoCaptions.length === 0) {\n      this.transcriptionWidgetOpened = false\n    }\n\n    if (this.video.isNSFWHiddenForUser(loggedInOrAnonymousUser, this.serverConfig)) {\n      const res = await this.confirmService.confirm(\n        $localize`This video contains sensitive content. Are you sure you want to display the video page?`,\n        $localize`Sensitive video`,\n        {\n          confirmButtonText: $localize`Display the page`,\n          cancelButtonText: $localize`Quit that page`,\n          moreInfo: video.nsfwSummary\n            ? {\n              title: $localize`Learn more`,\n              content: video.nsfwSummary\n            }\n            : undefined\n        }\n      )\n      if (res === false) return this.location.back()\n    }\n\n    this.buildHotkeysHelp(video)\n    this.setMetaTags(video)\n\n    this.loadPlayer({ loggedInOrAnonymousUser, forceAutoplay })\n      .catch(err => logger.error('Cannot build the player', err))\n\n    const hookOptions = {\n      videojs,\n      video: this.video,\n      playlist: this.playlist\n    }\n    this.hooks.runAction('action:video-watch.video.loaded', 'video-watch', hookOptions)\n  }\n\n  private async loadPlayer (options: {\n    loggedInOrAnonymousUser: User\n    forceAutoplay: boolean\n  }) {\n    const { loggedInOrAnonymousUser, forceAutoplay } = options\n\n    const videoState = this.video.state.id\n    if (videoState === VideoState.LIVE_ENDED || videoState === VideoState.WAITING_FOR_LIVE) {\n      this.updatePlayerOnNoLive({ hasPlayed: false })\n      return\n    }\n\n    this.peertubePlayer?.enable()\n\n    const params = {\n      video: this.video,\n      videoCaptions: this.videoCaptions,\n      videoChapters: this.videoChapters,\n      storyboards: this.storyboards,\n      liveVideo: this.liveVideo,\n      videoFileToken: this.videoFileToken,\n      videoPassword: this.videoPassword,\n      urlOptions: this.getUrlOptions(),\n      loggedInOrAnonymousUser,\n      forceAutoplay,\n      user: this.authUser\n    }\n\n    const loadOptions = await this.hooks.wrapFun(\n      this.buildPeerTubePlayerLoadOptions.bind(this),\n      params,\n      'video-watch',\n      'filter:internal.video-watch.player.load-options.params',\n      'filter:internal.video-watch.player.load-options.result'\n    )\n\n    this.zone.runOutsideAngular(async () => {\n      await this.peertubePlayer.load(loadOptions)\n\n      const player = this.peertubePlayer.getPlayer()\n\n      player.on('timeupdate', () => {\n        const newTime = Math.floor(player.currentTime())\n\n        // Update only if we have at least 1 second difference\n        if (!this.currentTime || Math.abs(newTime - this.currentTime) >= 1) {\n          debugLogger('Updating current time to ' + newTime)\n\n          this.zone.run(() => this.currentTime = newTime)\n        }\n      })\n\n      if (this.video.isLive) {\n        player.one('ended', () => {\n          this.zone.run(() => this.endLive())\n        })\n      }\n\n      player.on('theater-change', (_: any, enabled: boolean) => {\n        this.zone.run(() => this.theaterEnabled = enabled)\n      })\n\n      this.hooks.runAction('action:video-watch.player.loaded', 'video-watch', {\n        player,\n        playlist: this.playlist,\n        playlistPosition: this.playlistPosition,\n        videojs,\n        video: this.video\n      })\n    })\n  }\n\n  private hasNextVideo () {\n    if (this.playlist) {\n      return this.videoWatchPlaylist().hasNextVideo()\n    }\n\n    return true\n  }\n\n  private getNextVideoTitle () {\n    if (this.playlist) {\n      return this.videoWatchPlaylist().getNextVideo()?.video?.name || ''\n    }\n\n    return this.nextRecommendedVideoTitle\n  }\n\n  private playNextVideoInAngularZone () {\n    this.zone.run(() => {\n      if (this.playlist) {\n        this.videoWatchPlaylist().navigateToNextPlaylistVideo()\n        return\n      }\n\n      if (this.nextRecommendedVideoId) {\n        this.router.navigate([ '/w', this.nextRecommendedVideoId ])\n      }\n    })\n  }\n\n  private isAutoplay (video: Video, loggedInOrAnonymousUser: User) {\n    // We'll jump to the thread id, so do not play the video\n    if (this.route.snapshot.params['threadId']) return false\n\n    // Prevent autoplay on NSFW hide/warn\n    if (video.isNSFWHiddenOrWarned(loggedInOrAnonymousUser, this.serverConfig)) return false\n\n    if (loggedInOrAnonymousUser) return loggedInOrAnonymousUser.autoPlayVideo\n\n    throw new Error('Cannot guess autoplay because user and anonymousUser are not defined')\n  }\n\n  private buildPeerTubePlayerConstructorOptions (options: {\n    urlOptions: URLOptions\n  }): PeerTubePlayerConstructorOptions {\n    const { urlOptions } = options\n\n    return {\n      playerElement: () => this.playerElement().nativeElement,\n\n      enableHotkeys: true,\n      inactivityTimeout: 2500,\n\n      theaterButton: true,\n\n      controls: urlOptions.controls,\n      controlBar: urlOptions.controlBar,\n\n      muted: urlOptions.muted,\n      loop: urlOptions.loop,\n\n      playbackRate: urlOptions.playbackRate,\n\n      instanceName: this.serverConfig.instance.name,\n      language: this.localeId,\n\n      metricsUrl: this.serverConfig.openTelemetry.metrics.enabled\n        ? environment.apiUrl + '/api/v1/metrics/playback'\n        : null,\n      metricsInterval: this.serverConfig.openTelemetry.metrics.playbackStatsInterval,\n\n      videoViewIntervalMs: this.isUserLoggedIn()\n        ? this.serverConfig.views.videos.watchingInterval.users\n        : this.serverConfig.views.videos.watchingInterval.anonymous,\n\n      authorizationHeader: () => this.authService.getRequestHeaderValue(),\n\n      serverUrl: getAPIUrl(),\n      stunServers: this.serverConfig.webrtc.stunServers,\n\n      errorNotifier: (message: string) => this.notifier.error(message),\n\n      peertubeLink: () => false,\n\n      pluginsManager: this.pluginService.getPluginsManager(),\n\n      autoPlayerRatio: {\n        cssRatioVariable: '--co-player-ratio',\n        cssPlayerPortraitModeVariable: '--co-player-portrait-mode'\n      }\n    }\n  }\n\n  private buildPeerTubePlayerLoadOptions (options: {\n    video: VideoDetails\n    liveVideo: LiveVideo\n    videoCaptions: VideoCaption[]\n    videoChapters: VideoChapter[]\n    storyboards: Storyboard[]\n\n    videoFileToken: string\n    videoPassword: string\n\n    urlOptions: URLOptions\n\n    loggedInOrAnonymousUser: User\n    forceAutoplay: boolean\n    user?: AuthUser // Keep for plugins\n  }): PeerTubePlayerLoadOptions {\n    const {\n      video,\n      liveVideo,\n      videoCaptions,\n      videoChapters,\n      storyboards,\n      videoFileToken,\n      videoPassword,\n      urlOptions,\n      loggedInOrAnonymousUser,\n      forceAutoplay\n    } = options\n\n    let mode: PlayerMode\n\n    if (urlOptions.playerMode) {\n      if (urlOptions.playerMode === 'p2p-media-loader') mode = 'p2p-media-loader'\n      else mode = 'web-video'\n    } else {\n      if (video.hasHlsPlaylist()) mode = 'p2p-media-loader'\n      else mode = 'web-video'\n    }\n\n    let hlsOptions: HLSOptions\n    if (video.hasHlsPlaylist()) {\n      const hlsPlaylist = video.getHlsPlaylist()\n\n      hlsOptions = {\n        playlistUrl: hlsPlaylist.playlistUrl,\n        segmentsSha256Url: hlsPlaylist.segmentsSha256Url,\n        redundancyBaseUrls: hlsPlaylist.redundancies.map(r => r.baseUrl),\n        trackerAnnounce: video.trackerUrls,\n        videoFiles: hlsPlaylist.files\n      }\n    }\n\n    const getStartTime = () => {\n      if (video.isLive) return undefined\n\n      const byUrl = urlOptions.startTime !== undefined\n      const byHistory = video.userHistory && (!this.playlist || urlOptions.resume !== undefined)\n      const byLocalStorage = getStoredVideoWatchHistory(video.uuid)\n\n      if (byUrl) return timeToInt(urlOptions.startTime)\n\n      let startTime = 0\n      if (byHistory) startTime = video.userHistory.currentTime\n      if (byLocalStorage) startTime = byLocalStorage.duration\n\n      // If we are at the end of the video, reset the timer\n      if (video.duration - startTime <= 1) startTime = 0\n\n      return startTime\n    }\n\n    const startTime = getStartTime()\n\n    const playerCaptions = videoCaptions.map(c => ({\n      label: c.language.label,\n      language: c.language.id,\n      automaticallyGenerated: c.automaticallyGenerated,\n      src: c.fileUrl\n    }))\n\n    const storyboard = storyboards.length !== 0\n      ? {\n        url: storyboards[0].fileUrl,\n        height: storyboards[0].spriteHeight,\n        width: storyboards[0].spriteWidth,\n        interval: storyboards[0].spriteDuration\n      }\n      : undefined\n\n    const liveOptions = video.isLive\n      ? { latencyMode: liveVideo.latencyMode }\n      : undefined\n\n    return {\n      mode,\n\n      autoplay: this.isAutoplay(video, loggedInOrAnonymousUser),\n      forceAutoplay,\n\n      duration: video.duration,\n      p2pEnabled: isP2PEnabled(video, this.serverConfig, loggedInOrAnonymousUser.p2pEnabled),\n\n      startTime,\n      stopTime: urlOptions.stopTime,\n\n      subtitle: urlOptions.subtitle,\n\n      embedUrl: video.embedUrl,\n      embedTitle: video.name,\n\n      isLive: video.isLive,\n      liveOptions,\n\n      videoViewUrl: video.privacy.id !== VideoPrivacy.PRIVATE\n        ? this.videoService.getVideoViewUrl(video.uuid)\n        : null,\n\n      videoFileToken: () => videoFileToken,\n      requiresUserAuth: videoRequiresUserAuth(video, videoPassword),\n      requiresPassword: video.privacy.id === VideoPrivacy.PASSWORD_PROTECTED &&\n        !video.canBypassPassword(this.authUser),\n      videoPassword: () => videoPassword,\n\n      poster: video.isNSFWBlurForUser(loggedInOrAnonymousUser, this.serverConfig)\n        ? null\n        : video.previewUrl,\n\n      nsfwWarning: video.isNSFWHiddenOrWarned(loggedInOrAnonymousUser, this.serverConfig)\n        ? {\n          flags: video.nsfwFlags,\n          summary: video.nsfwSummary\n        }\n        : undefined,\n\n      videoCaptions: playerCaptions,\n      videoChapters,\n      storyboard,\n\n      videoShortUUID: video.shortUUID,\n      videoUUID: video.uuid,\n\n      videoRatio: video.aspectRatio,\n\n      previousVideo: {\n        enabled: this.playlist && this.videoWatchPlaylist().hasPreviousVideo(),\n\n        handler: this.playlist\n          ? () => this.zone.run(() => this.videoWatchPlaylist().navigateToPreviousPlaylistVideo())\n          : undefined,\n\n        displayControlBarButton: !!this.playlist\n      },\n\n      nextVideo: {\n        enabled: this.hasNextVideo(),\n        handler: () => this.playNextVideoInAngularZone(),\n        getVideoTitle: () => this.getNextVideoTitle(),\n        displayControlBarButton: this.hasNextVideo()\n      },\n\n      upnext: {\n        isEnabled: () => {\n          if (this.playlist) return loggedInOrAnonymousUser?.autoPlayNextVideoPlaylist\n\n          return loggedInOrAnonymousUser?.autoPlayNextVideo\n        },\n\n        isSuspended: (player: videojs.Player) => {\n          return !isXPercentInViewport(player.el() as HTMLElement, 80)\n        },\n\n        timeout: this.playlist\n          ? 0 // Don't wait to play next video in playlist\n          : 5000 // 5 seconds for a recommended video\n      },\n\n      hls: hlsOptions,\n\n      webVideo: {\n        videoFiles: video.files\n      }\n    }\n  }\n\n  private async subscribeToLiveEventsIfNeeded (oldVideo: VideoDetails, newVideo: VideoDetails) {\n    if (!this.liveVideosSub) {\n      this.liveVideosSub = this.buildLiveEventsSubscription()\n    }\n\n    if (oldVideo && oldVideo.id !== newVideo.id) {\n      this.peertubeSocket.unsubscribeLiveVideos(oldVideo.id)\n    }\n\n    if (!newVideo.isLive) return\n\n    await this.peertubeSocket.subscribeToLiveVideosSocket(newVideo.id)\n  }\n\n  private buildLiveEventsSubscription () {\n    return this.peertubeSocket.getLiveVideosObservable()\n      .subscribe(({ type, payload }) => {\n        if (type === 'state-change') return this.handleLiveStateChange(payload.state)\n        if (type === 'views-change') return this.handleLiveViewsChange(payload.viewers)\n        if (type === 'force-end') return this.endLive()\n      })\n  }\n\n  private handleLiveStateChange (newState: VideoStateType) {\n    if (newState !== VideoState.PUBLISHED) return\n\n    logger.info('Loading video after live update.')\n\n    const videoUUID = this.video.uuid\n\n    this.loadVideo({ videoId: videoUUID, forceAutoplay: true, liveRefresh: true })\n  }\n\n  private handleLiveViewsChange (newViewers: number) {\n    if (!this.video) {\n      logger.error('Cannot update video live views because video is no defined.')\n      return\n    }\n\n    logger.info('Updating live views.')\n\n    this.video.viewers = newViewers\n  }\n\n  private updatePlayerOnNoLive ({ hasPlayed }: { hasPlayed: boolean }) {\n    this.peertubePlayer.unload()\n    this.peertubePlayer.disable()\n\n    if (hasPlayed || !this.video.isNSFWBlurForUser(this.authUser || this.anonymousUser, this.serverConfig)) {\n      this.peertubePlayer.setPoster(this.video.previewPath)\n    }\n  }\n\n  private buildHotkeysHelp (video: Video) {\n    if (this.hotkeys.length !== 0) {\n      this.hotkeysService.remove(this.hotkeys)\n    }\n\n    this.hotkeys = [\n      // These hotkeys are managed by the player\n      new Hotkey('f', e => e, $localize`Enter/exit fullscreen`),\n      new Hotkey('space', e => e, $localize`Play/Pause the video`),\n      new Hotkey('m', e => e, $localize`Mute/unmute the video`),\n\n      new Hotkey('up', e => e, $localize`Increase the volume`),\n      new Hotkey('down', e => e, $localize`Decrease the volume`),\n\n      new Hotkey('t', e => {\n        this.theaterEnabled = !this.theaterEnabled\n        return false\n      }, $localize`Toggle theater mode`)\n    ]\n\n    if (!video.isLive) {\n      this.hotkeys = this.hotkeys.concat([\n        // These hotkeys are also managed by the player but only for VOD\n\n        new Hotkey('0-9', e => e, $localize`Skip to a percentage of the video: 0 is 0% and 9 is 90%`),\n\n        new Hotkey('right', e => e, $localize`Seek the video forward`),\n        new Hotkey('left', e => e, $localize`Seek the video backward`),\n\n        new Hotkey('>', e => e, $localize`Increase playback rate`),\n        new Hotkey('<', e => e, $localize`Decrease playback rate`),\n\n        new Hotkey(',', e => e, $localize`Navigate in the video to the previous frame`),\n        new Hotkey('.', e => e, $localize`Navigate in the video to the next frame`)\n      ])\n    }\n\n    if (this.isUserLoggedIn()) {\n      this.hotkeys = this.hotkeys.concat([\n        new Hotkey('shift+s', () => {\n          const subscribeButton = this.subscribeButton()\n          if (subscribeButton.isSubscribedToAll()) subscribeButton.unsubscribe()\n          else subscribeButton.subscribe()\n\n          return false\n        }, $localize`Subscribe to the account`)\n      ])\n    }\n\n    this.hotkeysService.add(this.hotkeys)\n  }\n\n  private setMetaTags (video: Video) {\n    this.metaService.setTitle(video.name)\n\n    this.metaService.setDescription(video.description)\n\n    this.metaService.setRSSFeeds(\n      getVideoWatchRSSFeeds(getOriginUrl(), this.serverConfig.instance.name, { ...video, privacy: video.privacy.id })\n    )\n  }\n\n  private getUrlOptions (): URLOptions {\n    const queryParams = this.route.snapshot.queryParams\n\n    return {\n      resume: queryParams.resume,\n\n      startTime: queryParams.start,\n      stopTime: queryParams.stop,\n\n      muted: toBoolean(queryParams.muted),\n      loop: toBoolean(queryParams.loop),\n      subtitle: queryParams.subtitle,\n\n      playerMode: queryParams.mode,\n      playbackRate: queryParams.playbackRate,\n\n      controlBar: toBoolean(queryParams.controlBar),\n\n      peertubeLink: false\n    }\n  }\n\n  private endLive () {\n    // We changed the video, it's not a live anymore\n    if (!this.video.isLive) return\n\n    this.video.state.id = VideoState.LIVE_ENDED\n\n    this.updatePlayerOnNoLive({ hasPlayed: true })\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core'\n\n/*\n * Allows to lazy load global player styles in the watch component\n */\n\n@Component({\n  selector: 'my-player-styles',\n  template: '',\n  styleUrls: [ './player-styles.component.scss' ],\n  // eslint-disable-next-line @angular-eslint/use-component-view-encapsulation\n  encapsulation: ViewEncapsulation.None,\n  standalone: true\n})\nexport class PlayerStylesComponent {\n}\n","import { Pipe, PipeTransform, inject } from '@angular/core'\nimport { HtmlRendererService } from '@app/core'\n\n@Pipe({\n  name: 'nl2br',\n  standalone: true\n})\nexport class Nl2BrPipe implements PipeTransform {\n  private htmlRenderer = inject(HtmlRendererService)\n\n  transform (value: string, allowFormatting = false): string {\n    return this.htmlRenderer.convertToBr(value, allowFormatting)\n  }\n}\n","import { NgClass, NgFor } from '@angular/common'\nimport { Component, ElementRef, HostListener, inject, input, OnChanges, OnInit, output, SimpleChanges, viewChild } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { Notifier } from '@app/core'\nimport { durationToString, isInViewport } from '@app/helpers'\nimport { SelectOptionsComponent } from '@app/shared/shared-forms/select/select-options.component'\nimport { GlobalIconComponent } from '@app/shared/shared-icons/global-icon.component'\nimport { Nl2BrPipe } from '@app/shared/shared-main/common/nl2br.pipe'\nimport { VideoCaptionService } from '@app/shared/shared-main/video-caption/video-caption.service'\nimport { NgbCollapse } from '@ng-bootstrap/ng-bootstrap'\nimport { Video, VideoCaption } from '@peertube/peertube-models'\nimport { parse } from '@plussub/srt-vtt-parser'\nimport debug from 'debug'\nimport { debounceTime, distinctUntilChanged, Subject } from 'rxjs'\nimport { SelectOptionsItem } from 'src/types'\n\nconst debugLogger = debug('peertube:watch:VideoTranscriptionComponent')\n\ntype Segment = {\n  start: number\n  startFormatted: string\n\n  end: number\n\n  text: string\n}\n\n@Component({\n  selector: 'my-video-transcription',\n  templateUrl: './video-transcription.component.html',\n  styleUrls: [ './player-widget.component.scss', './video-transcription.component.scss' ],\n  imports: [\n    NgClass,\n    GlobalIconComponent,\n    NgFor,\n    NgbCollapse,\n    FormsModule,\n    SelectOptionsComponent,\n    Nl2BrPipe\n  ]\n})\nexport class VideoTranscriptionComponent implements OnInit, OnChanges {\n  private notifier = inject(Notifier)\n  private captionService = inject(VideoCaptionService)\n\n  readonly settingsPanel = viewChild<ElementRef>('settingsPanel')\n\n  readonly video = input<Video>(undefined)\n  readonly captions = input<VideoCaption[]>(undefined)\n  // Output the duration clicked\n  readonly currentTime = input<number>(undefined)\n\n  // Output the duration clicked\n  readonly segmentClicked = output<number>()\n  readonly closeTranscription = output()\n\n  currentCaption: VideoCaption\n  segments: Segment[] = []\n  activeSegment: Segment\n\n  search = ''\n\n  currentLanguage: string\n  languagesOptions: SelectOptionsItem[] = []\n\n  isSettingsPanelCollapsed: boolean\n  // true when collapsed has been shown (after the transition)\n  settingsPanelShown: boolean\n\n  private segmentsStore: Segment[] = []\n  private searchSubject = new Subject<string>()\n\n  @HostListener('document:click', [ '$event' ])\n  clickout (event: Event) {\n    if (!this.settingsPanelShown) return\n\n    if (!this.settingsPanel()?.nativeElement.contains(event.target)) {\n      this.isSettingsPanelCollapsed = true\n    }\n  }\n\n  ngOnInit () {\n    this.searchSubject.asObservable()\n      .pipe(\n        debounceTime(100),\n        distinctUntilChanged()\n      )\n      .subscribe(search => this.filterSegments(search))\n  }\n\n  ngOnChanges (changes: SimpleChanges) {\n    if (changes['video'] || changes['captions']) {\n      this.load()\n      return\n    }\n\n    if (changes['currentTime']) {\n      this.findActiveSegment()\n    }\n  }\n\n  getSegmentClasses (segment: Segment) {\n    return { active: this.activeSegment === segment, ['segment-' + segment.start]: true }\n  }\n\n  updateCurrentCaption () {\n    this.currentCaption = this.captions().find(c => c.language.id === this.currentLanguage)\n\n    this.parseCurrentCaption()\n  }\n\n  private load () {\n    this.search = ''\n\n    this.segmentsStore = []\n    this.segments = []\n\n    this.activeSegment = undefined\n    this.currentCaption = undefined\n\n    this.isSettingsPanelCollapsed = true\n    this.settingsPanelShown = false\n\n    this.languagesOptions = []\n\n    const captions = this.captions()\n    const video = this.video()\n    if (!video || !captions || captions.length === 0) return\n\n    this.currentLanguage = captions.some(c => c.language.id === this.video().language.id)\n      ? video.language.id\n      : captions[0].language.id\n\n    this.languagesOptions = captions.map(c => ({\n      id: c.language.id,\n      label: c.automaticallyGenerated\n        ? $localize`${c.language.label} (automatically generated)`\n        : c.language.label\n    }))\n\n    this.updateCurrentCaption()\n  }\n\n  private parseCurrentCaption () {\n    this.captionService.getCaptionContent({ fileUrl: this.currentCaption.fileUrl })\n      .subscribe({\n        next: content => {\n          try {\n            const entries = parse(content).entries\n\n            this.segmentsStore = entries.map(({ from, to, text }) => {\n              const start = Math.round(from / 1000)\n              const end = Math.round(to / 1000)\n\n              return {\n                start,\n                startFormatted: durationToString(start),\n                end,\n                text\n              }\n            })\n\n            this.segments = this.segmentsStore\n          } catch (err) {\n            this.notifier.error($localize`Cannot load transcript: ${err.message}`)\n          }\n        },\n\n        error: err => this.notifier.error(err.message)\n      })\n  }\n\n  // ---------------------------------------------------------------------------\n\n  onSearchChange (event: Event) {\n    const target = event.target as HTMLInputElement\n\n    this.searchSubject.next(target.value)\n  }\n\n  onSegmentClick (event: Event, segment: Segment) {\n    event.preventDefault()\n\n    this.segmentClicked.emit(segment.start)\n  }\n\n  // ---------------------------------------------------------------------------\n\n  private filterSegments (search: string) {\n    this.search = search\n\n    const searchLowercase = search.toLocaleLowerCase()\n\n    this.segments = this.segmentsStore.filter(s => {\n      return s.text.toLocaleLowerCase().includes(searchLowercase)\n    })\n  }\n\n  private findActiveSegment () {\n    const lastActiveSegment = this.activeSegment\n    this.activeSegment = undefined\n\n    const currentTime = this.currentTime()\n    if (isNaN(currentTime)) return\n\n    for (let i = this.segmentsStore.length - 1; i >= 0; i--) {\n      const current = this.segmentsStore[i]\n\n      if (current.start <= currentTime) {\n        this.activeSegment = current\n        break\n      }\n    }\n\n    if (lastActiveSegment !== this.activeSegment) {\n      setTimeout(() => {\n        const element = document.querySelector<HTMLElement>('.segment-' + this.activeSegment.start)\n        if (!element) return // Can happen with a search\n\n        const container = document.querySelector<HTMLElement>('.widget-root')\n\n        if (isInViewport(element, container)) return\n\n        container.scrollTop = element.offsetTop\n\n        debugLogger(`Set transcription segment ${this.activeSegment.start} in viewport`)\n      })\n    }\n  }\n}\n","<div class=\"widget-root\">\n\n  <div class=\"widget-header d-flex justify-content-between\">\n    <div class=\"widget-title\" i18n>Transcription</div>\n\n    <div>\n      <button\n        class=\"border-0 p-0 me-3 settings-button\" title=\"Settings\" i18n-title\n        (click)=\"isSettingsPanelCollapsed = !isSettingsPanelCollapsed\" [attr.aria-expanded]=\"!isSettingsPanelCollapsed\" aria-controls=\"video-transcription-settings-panel\"\n      >\n        <my-global-icon iconName=\"filter\"></my-global-icon>\n      </button>\n\n      <button class=\"border-0 p-0\" title=\"Close transcription widget\" i18n-title (click)=\"closeTranscription.emit()\">\n        <my-global-icon iconName=\"cross\"></my-global-icon>\n      </button>\n    </div>\n  </div>\n\n  <div class=\"widget-content\">\n    <div class=\"widget-content-padded\">\n\n      <div\n        id=\"video-transcription-settings-panel\" class=\"settings-panel\"\n        #settingsPanel #settingsPanelCollapse=\"ngbCollapse\" [ngbCollapse]=\"isSettingsPanelCollapsed\"\n        (shown)=\"settingsPanelShown = true\" (hidden)=\"settingsPanelShown = false\"\n      >\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <label i18n for=\"transcription-language\">Language</label>\n\n            <my-select-options\n              inputId=\"transcription-language\" [items]=\"languagesOptions\"\n              [(ngModel)]=\"currentLanguage\" (ngModelChange)=\"updateCurrentCaption()\"\n            ></my-select-options>\n          </div>\n        </div>\n      </div>\n\n      <input\n        type=\"text\" class=\"mb-3\" name=\"search-transcript\" i18n-placeholder placeholder=\"Search transcript\"\n        (input)=\"onSearchChange($event)\"\n      >\n\n      @if (search && segments.length === 0) {\n        <div i18n>No results for your search</div>\n      }\n    </div>\n\n    <div\n      role=\"button\" tabindex=\"0\" class=\"segment widget-content-padded pt-1 pb-1\"\n      i18n-title title=\"Jump to this segment\"\n      *ngFor=\"let segment of segments\"\n      (keyup.enter)=\"onSegmentClick($event, segment)\" (click)=\"onSegmentClick($event, segment)\"\n      [ngClass]=\"getSegmentClasses(segment)\"\n    >\n      <strong class=\"segment-start me-2\">{{ segment.startFormatted }}</strong>\n      <span class=\"segment-text fs-7\" [innerHTML]=\"segment.text | nl2br: true\"></span>\n    </div>\n  </div>\n\n</div>\n","<div\n  *ngIf=\"playlist() && (currentPlaylistPosition || noPlaylistVideos)\" class=\"widget-root playlist\"\n  myInfiniteScroller [onItself]=\"true\" (nearOfBottom)=\"onPlaylistVideosNearOfBottom()\"\n  >\n  <div class=\"widget-header playlist-info\">\n    <div class=\"widget-title playlist-display-name\">\n      {{ playlist().displayName }}\n\n      <span *ngIf=\"isUnlistedPlaylist()\" class=\"pt-badge badge-warning\" i18n>Unlisted</span>\n      <span *ngIf=\"isPrivatePlaylist()\" class=\"pt-badge badge-danger\" i18n>Private</span>\n      <span *ngIf=\"isPublicPlaylist()\" class=\"pt-badge badge-info\" i18n>Public</span>\n    </div>\n\n    <div class=\"playlist-by-index\">\n      <div class=\"playlist-by\">{{ playlist().ownerBy }}</div>\n      <div class=\"playlist-index\">\n        <span>{{ currentPlaylistPosition }}</span><span>{{ playlistPagination.totalItems }}</span>\n      </div>\n    </div>\n\n    <div class=\"playlist-controls\">\n      <button\n        class=\"border-0 p-0 me-2\" [ngClass]=\"{ active: autoPlayNextVideoPlaylist }\" (click)=\"switchAutoPlayNextVideoPlaylist()\"\n        [ngbTooltip]=\"autoPlayNextVideoPlaylistSwitchText\" [ariaLabel]=\"autoPlayNextVideoPlaylistSwitchText\"\n        placement=\"bottom auto\" container=\"body\"\n      >\n        <my-global-icon iconName=\"videos\"></my-global-icon>\n      </button>\n\n      <button\n        class=\"border-0 p-0\" [ngClass]=\"{ active: loopPlaylist }\" (click)=\"switchLoopPlaylist()\"\n        [ngbTooltip]=\"loopPlaylistSwitchText\" [ariaLabel]=\"loopPlaylistSwitchText\"\n        placement=\"bottom auto\" container=\"body\"\n      >\n        <my-global-icon iconName=\"repeat\"></my-global-icon>\n      </button>\n    </div>\n  </div>\n\n  <div *ngFor=\"let playlistElement of playlistElements\" [ngClass]=\"'element-' + playlistElement.position\">\n    <my-video-playlist-element-miniature\n      [playlistElement]=\"playlistElement\" [playlist]=\"playlist()\" [owned]=\"isPlaylistOwned()\" (elementRemoved)=\"onElementRemoved($event)\"\n      [playing]=\"currentPlaylistPosition === playlistElement.position\" [accountLink]=\"false\" [position]=\"playlistElement.position\"\n    ></my-video-playlist-element-miniature>\n  </div>\n</div>\n","import { NgClass, NgFor, NgIf } from '@angular/common'\nimport { Component, inject, input, output } from '@angular/core'\nimport { Router } from '@angular/router'\nimport {\n  AuthService,\n  ComponentPagination,\n  HooksService,\n  Notifier,\n  SessionStorageService,\n  updatePaginationOnDelete,\n  UserService\n} from '@app/core'\nimport { isInViewport } from '@app/helpers'\nimport { GlobalIconComponent } from '@app/shared/shared-icons/global-icon.component'\nimport { InfiniteScrollerDirective } from '@app/shared/shared-main/common/infinite-scroller.directive'\nimport { VideoPlaylistElementMiniatureComponent } from '@app/shared/shared-video-playlist/video-playlist-element-miniature.component'\nimport { VideoPlaylistElement } from '@app/shared/shared-video-playlist/video-playlist-element.model'\nimport { VideoPlaylist } from '@app/shared/shared-video-playlist/video-playlist.model'\nimport { VideoPlaylistService } from '@app/shared/shared-video-playlist/video-playlist.service'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { VideoPlaylistPrivacy } from '@peertube/peertube-models'\nimport { getBoolOrDefault } from '@root-helpers/local-storage-utils'\nimport { peertubeSessionStorage } from '@root-helpers/peertube-web-storage'\n\n@Component({\n  selector: 'my-video-watch-playlist',\n  templateUrl: './video-watch-playlist.component.html',\n  styleUrls: [ './player-widget.component.scss', './video-watch-playlist.component.scss' ],\n  imports: [ NgIf, InfiniteScrollerDirective, NgClass, NgbTooltip, GlobalIconComponent, NgFor, VideoPlaylistElementMiniatureComponent ]\n})\nexport class VideoWatchPlaylistComponent {\n  private hooks = inject(HooksService)\n  private userService = inject(UserService)\n  private auth = inject(AuthService)\n  private notifier = inject(Notifier)\n  private videoPlaylist = inject(VideoPlaylistService)\n  private sessionStorage = inject(SessionStorageService)\n  private router = inject(Router)\n\n  static SESSION_STORAGE_LOOP_PLAYLIST = 'loop_playlist'\n\n  readonly playlist = input<VideoPlaylist>(undefined)\n\n  readonly videoFound = output<string>()\n  readonly noVideoFound = output()\n\n  playlistElements: VideoPlaylistElement[] = []\n  playlistPagination: ComponentPagination = {\n    currentPage: 1,\n    itemsPerPage: 30,\n    totalItems: null\n  }\n\n  autoPlayNextVideoPlaylist: boolean\n  autoPlayNextVideoPlaylistSwitchText = ''\n\n  loopPlaylist: boolean\n  loopPlaylistSwitchText = ''\n\n  noPlaylistVideos = false\n  currentPlaylistPosition: number\n\n  constructor () {\n    this.userService.getAnonymousOrLoggedUser()\n      .subscribe(user => this.autoPlayNextVideoPlaylist = user.autoPlayNextVideoPlaylist)\n\n    this.setAutoPlayNextVideoPlaylistSwitchText()\n\n    this.loopPlaylist = getBoolOrDefault(this.sessionStorage.getItem(VideoWatchPlaylistComponent.SESSION_STORAGE_LOOP_PLAYLIST), false)\n    this.setLoopPlaylistSwitchText()\n  }\n\n  onPlaylistVideosNearOfBottom (position?: number) {\n    // Last page\n    if (this.playlistPagination.totalItems <= (this.playlistPagination.currentPage * this.playlistPagination.itemsPerPage)) return\n\n    this.playlistPagination.currentPage += 1\n    this.loadPlaylistElements({ playlist: this.playlist(), redirectToFirst: false, position })\n  }\n\n  onElementRemoved (playlistElement: VideoPlaylistElement) {\n    this.playlistElements = this.playlistElements.filter(e => e.id !== playlistElement.id)\n\n    updatePaginationOnDelete(this.playlistPagination)\n  }\n\n  isPlaylistOwned () {\n    const playlist = this.playlist()\n    return playlist.isLocal === true &&\n      this.auth.isLoggedIn() &&\n      playlist.ownerAccount.name === this.auth.getUser().username\n  }\n\n  isUnlistedPlaylist () {\n    return this.playlist().privacy.id === VideoPlaylistPrivacy.UNLISTED\n  }\n\n  isPrivatePlaylist () {\n    return this.playlist().privacy.id === VideoPlaylistPrivacy.PRIVATE\n  }\n\n  isPublicPlaylist () {\n    return this.playlist().privacy.id === VideoPlaylistPrivacy.PUBLIC\n  }\n\n  loadPlaylistElements (options: {\n    playlist: VideoPlaylist\n    redirectToFirst?: boolean // default false\n    reset?: boolean // default false\n    position?: number\n  }) {\n    const { playlist, redirectToFirst = false, reset = false, position } = options\n\n    const obs = this.hooks.wrapObsFun(\n      this.videoPlaylist.getPlaylistVideos.bind(this.videoPlaylist),\n      { videoPlaylistId: playlist.uuid, componentPagination: this.playlistPagination },\n      'video-watch',\n      'filter:api.video-watch.video-playlist-elements.get.params',\n      'filter:api.video-watch.video-playlist-elements.get.result'\n    )\n\n    obs.subscribe(({ total, data: playlistElements }) => {\n      if (reset) this.playlistElements = []\n\n      this.playlistElements = this.playlistElements.concat(playlistElements)\n      this.playlistPagination.totalItems = total\n\n      const firstAvailableVideo = this.playlistElements.find(e => !!e.video)\n      if (!firstAvailableVideo) {\n        this.noPlaylistVideos = true\n        this.noVideoFound.emit()\n        return\n      }\n\n      if (position) this.updatePlaylistIndex(position)\n\n      if (redirectToFirst) {\n        const extras = {\n          queryParams: {\n            start: firstAvailableVideo.startTimestamp,\n            stop: firstAvailableVideo.stopTimestamp,\n            playlistPosition: firstAvailableVideo.position\n          },\n          replaceUrl: true\n        }\n        this.router.navigate([], extras)\n      }\n    })\n  }\n\n  updatePlaylistIndex (position: number) {\n    if (this.playlistElements.length === 0 || !position) return\n\n    // Handle the reverse index\n    if (position < 0) position = this.playlist().videosLength + position + 1\n\n    for (const playlistElement of this.playlistElements) {\n      // >= if the previous videos were not valid\n      if (playlistElement.video && playlistElement.position >= position) {\n        this.currentPlaylistPosition = playlistElement.position\n\n        this.videoFound.emit(playlistElement.video.uuid)\n\n        setTimeout(() => {\n          const element = document.querySelector<HTMLElement>('.element-' + this.currentPlaylistPosition)\n          const container = document.querySelector<HTMLElement>('.playlist')\n\n          if (isInViewport(element, container)) return\n\n          container.scrollTop = element.offsetTop\n        })\n\n        return\n      }\n    }\n\n    // Load more videos to find our video\n    this.onPlaylistVideosNearOfBottom(position)\n  }\n\n  // ---------------------------------------------------------------------------\n\n  hasPreviousVideo () {\n    return !!this.getPreviousVideo()\n  }\n\n  getPreviousVideo () {\n    return this.findPlaylistVideo(this.currentPlaylistPosition - 1, 'previous')\n  }\n\n  // ---------------------------------------------------------------------------\n\n  hasNextVideo () {\n    return !!this.getNextVideo()\n  }\n\n  getNextVideo () {\n    return this.findPlaylistVideo(this.currentPlaylistPosition + 1, 'next')\n  }\n\n  navigateToPreviousPlaylistVideo () {\n    const previous = this.findPlaylistVideo(this.currentPlaylistPosition - 1, 'previous')\n    if (!previous) return\n\n    const start = previous.startTimestamp\n    const stop = previous.stopTimestamp\n    this.router.navigate([], { queryParams: { playlistPosition: previous.position, start, stop } })\n  }\n\n  findPlaylistVideo (position: number, type: 'previous' | 'next'): VideoPlaylistElement {\n    if (\n      (type === 'next' && position > this.playlistPagination.totalItems) ||\n      (type === 'previous' && position < 1)\n    ) {\n      // End of the playlist: end the recursion if we're not in the loop mode\n      if (!this.loopPlaylist) return\n\n      // Loop mode\n      position = type === 'previous'\n        ? this.playlistPagination.totalItems\n        : 1\n    }\n\n    const found = this.playlistElements.find(e => e.position === position)\n    if (found?.video) return found\n\n    const newPosition = type === 'previous'\n      ? position - 1\n      : position + 1\n\n    return this.findPlaylistVideo(newPosition, type)\n  }\n\n  navigateToNextPlaylistVideo () {\n    const next = this.findPlaylistVideo(this.currentPlaylistPosition + 1, 'next')\n    if (!next) return\n\n    const start = next.startTimestamp\n    const stop = next.stopTimestamp\n    this.router.navigate([], { queryParams: { playlistPosition: next.position, start, stop } })\n  }\n\n  switchAutoPlayNextVideoPlaylist () {\n    this.autoPlayNextVideoPlaylist = !this.autoPlayNextVideoPlaylist\n    this.setAutoPlayNextVideoPlaylistSwitchText()\n\n    const details = { autoPlayNextVideoPlaylist: this.autoPlayNextVideoPlaylist }\n\n    if (this.auth.isLoggedIn()) {\n      this.userService.updateMyProfile(details)\n        .subscribe({\n          next: () => {\n            this.auth.refreshUserInformation()\n          },\n\n          error: err => this.notifier.error(err.message)\n        })\n    } else {\n      this.userService.updateMyAnonymousProfile(details)\n    }\n  }\n\n  switchLoopPlaylist () {\n    this.loopPlaylist = !this.loopPlaylist\n    this.setLoopPlaylistSwitchText()\n\n    peertubeSessionStorage.setItem(\n      VideoWatchPlaylistComponent.SESSION_STORAGE_LOOP_PLAYLIST,\n      this.loopPlaylist.toString()\n    )\n  }\n\n  private setAutoPlayNextVideoPlaylistSwitchText () {\n    this.autoPlayNextVideoPlaylistSwitchText = this.autoPlayNextVideoPlaylist\n      ? $localize`Stop autoplaying next video`\n      : $localize`Autoplay next video`\n  }\n\n  private setLoopPlaylistSwitchText () {\n    this.loopPlaylistSwitchText = this.loopPlaylist\n      ? $localize`Stop looping playlist videos`\n      : $localize`Loop playlist videos`\n  }\n}\n","<div class=\"root\" [ngClass]=\"{ 'theater-enabled': theaterEnabled }\" [hidden]=\"!playlist && !video\">\n  <div class=\"margin-content player-margin-content\">\n    <!-- We need the video container for videojs so we just hide it -->\n    <div id=\"video-wrapper\">\n      <div *ngIf=\"remoteServerDown\" class=\"remote-server-down\">\n        <ng-container i18n>Sorry, but this video did not load because the remote instance did not respond.</ng-container>\n\n        <br />\n\n        <ng-container i18n>Please try refreshing the page, or try again later.</ng-container>\n      </div>\n\n      <div id=\"videojs-wrapper\">\n        <video #playerElement class=\"video-js vjs-peertube-skin\" playsinline=\"true\"></video>\n      </div>\n\n      <div class=\"player-widget-component\">\n        <my-video-watch-playlist\n          #videoWatchPlaylist [playlist]=\"playlist\"\n          [hidden]=\"transcriptionWidgetOpened\"\n          (noVideoFound)=\"onPlaylistNoVideoFound()\" (videoFound)=\"onPlaylistVideoFound($event)\"\n        ></my-video-watch-playlist>\n\n        @if (transcriptionWidgetOpened) {\n          <my-video-transcription\n            [video]=\"video\" [captions]=\"videoCaptions\" [currentTime]=\"getCurrentTime()\"\n            (segmentClicked)=\"handleTimestampClicked($event)\" (closeTranscription)=\"transcriptionWidgetOpened = false\"\n          ></my-video-transcription>\n        }\n      </div>\n\n      <my-plugin-placeholder pluginId=\"player-next\"></my-plugin-placeholder>\n    </div>\n\n    <my-video-alert [video]=\"video\" [user]=\"authUser\" [noPlaylistVideoFound]=\"noPlaylistVideoFound\"></my-video-alert>\n  </div>\n\n  <!-- Video information -->\n  <div *ngIf=\"video\" class=\"margin-content video-bottom\">\n    <div class=\"video-info\">\n      <div class=\"video-info-first-row\">\n        <div>\n          <ng-template #publishedTemplate>\n            <ng-container i18n>Published <my-date-toggle [date]=\"video.publishedAt\"></my-date-toggle></ng-container>\n            •\n            <my-video-views-counter [isLive]=\"video.isLive\" [viewers]=\"video.viewers\" [views]=\"video.views\"></my-video-views-counter>\n          </ng-template>\n\n          <div class=\"d-block d-md-none\"> <!-- only shown on medium devices, has its counterpart for larger viewports below -->\n            <h1 class=\"video-info-name\">{{ video.name }}</h1>\n\n            <div class=\"video-info-date-views\">\n              <ng-template *ngTemplateOutlet=\"publishedTemplate\"></ng-template>\n            </div>\n          </div>\n\n          <div class=\"d-flex justify-content-between flex-direction-column\">\n            <div class=\"d-none d-md-block\">\n              <h1 class=\"video-info-name\">{{ video.name }}</h1>\n            </div>\n\n            <div class=\"video-info-first-row-bottom\">\n              <div class=\"d-none d-md-block video-info-date-views\">\n                <ng-template *ngTemplateOutlet=\"publishedTemplate\"></ng-template>\n              </div>\n\n              <my-action-buttons\n                [video]=\"video\" [videoPassword]=\"videoPassword\" [videoCaptions]=\"videoCaptions\"\n                [isUserLoggedIn]=\"isUserLoggedIn()\" [isUserOwner]=\"isUserOwner()\"\n                [transcriptionWidgetOpened]=\"transcriptionWidgetOpened\"\n                [playlist]=\"playlist\" [currentTime]=\"getCurrentTime()\" [currentPlaylistPosition]=\"getCurrentPlaylistPosition()\"\n                (showTranscriptionWidget)=\"transcriptionWidgetOpened = true\" (hideTranscriptionWidget)=\"transcriptionWidgetOpened = false\"\n              ></my-action-buttons>\n            </div>\n          </div>\n\n          <div class=\"pt-3 border-top video-info-channel d-flex\">\n            <div class=\"video-info-channel-left d-flex\">\n              <my-video-avatar-channel [video]=\"video\" [showChannel]=\"!isChannelDisplayNameGeneric()\"></my-video-avatar-channel>\n\n              <div class=\"video-info-channel-left-links ms-1\">\n                <ng-container *ngIf=\"!isChannelDisplayNameGeneric()\">\n                  <a [routerLink]=\"[ '/c', video.byVideoChannel ]\" i18n-title title=\"Channel page\">\n                    {{ video.channel.displayName }}\n                  </a>\n                  <a [routerLink]=\"[ '/a', video.byAccount ]\" i18n-title title=\"Account page\">\n                    <span i18n>By {{ video.byAccount }}</span>\n                  </a>\n                </ng-container>\n\n                <ng-container *ngIf=\"isChannelDisplayNameGeneric()\">\n                  <a [routerLink]=\"[ '/a', video.byAccount ]\" class=\"single-link\" i18n-title title=\"Account page\">\n                    <span i18n>{{ video.byAccount }}</span>\n                  </a>\n                </ng-container>\n              </div>\n            </div>\n\n            <my-subscribe-button #subscribeButton [videoChannels]=\"[video.channel]\" size=\"small\"></my-subscribe-button>\n          </div>\n        </div>\n\n      </div>\n\n      <my-video-description [video]=\"video\" (timestampClicked)=\"handleTimestampClicked($event)\"></my-video-description>\n\n      <my-video-attributes [video]=\"video\"></my-video-attributes>\n\n      <my-video-comments\n        class=\"border-top pt-3\"\n        [video]=\"video\"\n        [videoPassword]=\"videoPassword\"\n        [user]=\"authUser\"\n        (timestampClicked)=\"handleTimestampClicked($event)\"\n      ></my-video-comments>\n    </div>\n\n    <my-recommended-videos\n      [displayAsRow]=\"displayOtherVideosAsRow()\"\n      [currentVideo]=\"video\"\n      [playlist]=\"playlist\"\n      (gotRecommendations)=\"onRecommendations($event)\"\n    ></my-recommended-videos>\n  </div>\n\n  <my-privacy-concerns *ngIf=\"video\" [video]=\"video\"></my-privacy-concerns>\n</div>\n\n<my-player-styles></my-player-styles>\n","import { Routes } from '@angular/router'\nimport { AbuseService } from '@app/shared/shared-moderation/abuse.service'\nimport { BlocklistService } from '@app/shared/shared-moderation/blocklist.service'\nimport { VideoBlockService } from '@app/shared/shared-moderation/video-block.service'\nimport { SearchService } from '@app/shared/shared-search/search.service'\nimport { UserSubscriptionService } from '@app/shared/shared-user-subscription/user-subscription.service'\nimport { UserAdminService } from '@app/shared/shared-users/user-admin.service'\nimport { VideoCommentService } from '@app/shared/shared-video-comment/video-comment.service'\nimport { LiveVideoService } from '@app/shared/shared-video-live/live-video.service'\nimport { VideoPlaylistService } from '@app/shared/shared-video-playlist/video-playlist.service'\nimport { OverviewService } from '../+video-list'\nimport { VideoRecommendationService } from './shared'\nimport { VideoWatchComponent } from './video-watch.component'\nimport { BulkService } from '@app/shared/shared-moderation/bulk.service'\nimport { VideoStateMessageService } from '@app/shared/shared-video/video-state-message.service'\n\nexport default [\n  {\n    path: '',\n    providers: [\n      OverviewService,\n      UserSubscriptionService,\n      VideoPlaylistService,\n      BlocklistService,\n      VideoBlockService,\n      LiveVideoService,\n      VideoCommentService,\n      VideoRecommendationService,\n      SearchService,\n      AbuseService,\n      UserAdminService,\n      BulkService,\n      VideoStateMessageService\n    ],\n    children: [\n      {\n        path: 'p/:playlistId',\n        component: VideoWatchComponent\n      },\n      {\n        path: ':videoId/comments/:commentId',\n        redirectTo: ':videoId'\n      },\n      {\n        path: ':videoId',\n        component: VideoWatchComponent\n      }\n    ]\n  }\n] satisfies Routes\n"]}